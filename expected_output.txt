Switched global version to 0.8.3
'solc --version' running
'solc HourlyBondSubscriptionLending.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/MarginSwap/contracts' running

 typecheck error: Var name: TMP_57 Func name: updateHourlyBondAmount in NEW VARIABLE deltaAmount = bond.amount - oldAmount
Reference: ScType
HourlyBondSubscriptionLending.sol analyzed (2 contracts with 1 detectors), 1 result(s) found
Error with TMP_57 in function updateHourlyBondAmount
Error with: TMP_57 in function updateHourlyBondAmount
Executing Group 1
[*] Tested 1 warning for MarginSwap
Group 1 complete
Switched global version to 0.8.3
'solc --version' running
'solc Utils.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p1/vader-protocol/contracts' running

 typecheck error: Var name: TMP_169 Func name: calcShare in IF part > total
 typecheck error: Var name: TMP_232 Func name: calcCoverage in NEW VARIABLE _depositValue = B0 + (T0 * B1) / T1
 typecheck error: Var name: TMP_222 Func name: calcAsymmetricShare in NEW VARIABLE numerator = ((part1 * part2) - part3) + part4
 typecheck error: Var name: TMP_195 Func name: calcLiquidityUnits in NEW VARIABLE _units = (((P * part1) + part2) / part3)
Reference: ScType
Utils.sol analyzed (8 contracts with 1 detectors), 4 result(s) found
Error with TMP_169 in function calcShare
Error with: TMP_169 in function calcShare
Error with TMP_232 in function calcCoverage
Error with: TMP_232 in function calcCoverage
Error with TMP_222 in function calcAsymmetricShare
Error with: TMP_222 in function calcAsymmetricShare
Error with TMP_195 in function calcLiquidityUnits
Error with: TMP_195 in function calcLiquidityUnits
Executing Group 2
[*] Tested 4 warnings for Vader Protocol P1
Group 2 complete
Switched global version to 0.8.4
'solc --version' running
'solc ./IIdleToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/PoolTogether/contracts/yield-source' running
Compilation warnings/errors on ./IIdleToken.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> ./IIdleToken.sol

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 --> ./IIdleToken.sol:7:24:
  |
7 |     function balanceOf(address a) external view returns (uint256){
  |                        ^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> ./IIdleToken.sol:10:32:
   |
10 |     function tokenPriceWithFee(address a) external view returns (uint256){
   |                                ^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> ./IIdleToken.sol:13:41:
   |
13 |     function mintIdleToken(uint256 amt, bool b, address a) external returns(uint256){
   |                                         ^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> ./IIdleToken.sol:13:49:
   |
13 |     function mintIdleToken(uint256 amt, bool b, address a) external returns(uint256){
   |                                                 ^^^^^^^^^

Warning: Function state mutability can be restricted to pure
  --> ./IIdleToken.sol:13:5:
   |
13 |     function mintIdleToken(uint256 amt, bool b, address a) external returns(uint256){
   |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to view
  --> ./IIdleToken.sol:16:5:
   |
16 |     function redeemIdleToken(uint256 share) external returns(uint256){
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./IdleYieldSource.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/PoolTogether/contracts/yield-source' running
Compilation warnings/errors on ./IdleYieldSource.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> ./interfaces/idle/IIdleToken.sol

Warning: Unused local variable.
   --> ./IdleYieldSource.sol:129:2:
    |
129 | 	int a = 1+1;
    | 	^^^^^

Warning: Function state mutability can be restricted to view
  --> ./IdleYieldSource.sol:70:5:
   |
70 |     function depositToken() external returns (address) {
   |     ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: redeemedUnderlyingAsset Func name: redeemToken in EXPRESSION redeemedUnderlyingAsset += redeemedShare
Reference: ScType
. analyzed (3 contracts with 1 detectors), 1 result(s) found
Error with redeemedUnderlyingAsset in function redeemToken
Error with: redeemedUnderlyingAsset in function redeemToken
Executing Group 3
[*] Tested 1 warning for PoolTogether
Group 3 complete
Switched global version to 0.8.4
'solc --version' running
'solc ./LibMath.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./LibBalances.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./LibLiquidation.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./LibPerpetuals.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./SafetyWithdraw.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./LibPrices.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running
'solc --version' running
'solc ./LibInsurance.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tracer/src/contracts/lib' running

 typecheck error: Var name: TMP_33 Func name: applyTrade in EXPRESSION newQuote = position.quote - quoteChange + fee
Reference: ScType
. analyzed (37 contracts with 1 detectors), 1 result(s) found
Error with TMP_33 in function applyTrade
Error with: TMP_33 in function applyTrade
Executing Group 4
[*] Tested 1 warning for Tracer
Group 4 complete
Switched global version to 0.8.1
'solc --version' running
'solc CompositeMultiOracle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Yield_Micro/contracts/oracles/composite' running

 typecheck error: Var name: TMP_74 Func name: _peek in EXPRESSION priceOut = priceIn * priceOut / (10 ** source.decimals)
 typecheck error: Var name: TMP_83 Func name: _get in EXPRESSION priceOut = priceIn * priceOut / (10 ** source.decimals)
Reference: ScType
CompositeMultiOracle.sol analyzed (4 contracts with 1 detectors), 2 result(s) found
Error with TMP_74 in function _peek
Error with: TMP_74 in function _peek
Error with TMP_83 in function _get
Error with: TMP_83 in function _get
Executing Group 5
[*] Tested 1 warning for Yield Micro
Group 5 complete
Switched global version to 0.8.1
'solc --version' running
'solc HybridPool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Sushi_Trident/trident/contracts/pool' running
HybridPool.sol analyzed (7 contracts with 1 detectors), 0 result(s) found
Executing Group 6
[*] Tested 0 warnings for Sushi Tridnet
Group 6 complete
Switched global version to 0.6.12
'solc --version' running
'solc Vault.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/yAxis/contracts/v3' running

 typecheck error: Var name: TMP_182 Func name: balance in RETURN balanceOfThis().add(IController(manager.controllers(address(this))).balanceOf())
 typecheck error: Var name: _totalSupply Func name: _mint in EXPRESSION _totalSupply = _totalSupply.add(amount)
 typecheck error: Var name: TMP_157 Func name: withdraw in NEW VARIABLE _toWithdraw = _amount.sub(_balance)
 typecheck error: Var name: TMP_164 Func name: withdraw in NEW VARIABLE _diff = _after.sub(_balance)
Reference: ScType
Vault.sol analyzed (17 contracts with 1 detectors), 4 result(s) found
Error with TMP_182 in function balance
Error with: TMP_182 in function balance
Error with _totalSupply in function _mint
Error with: _totalSupply in function _mint
Error with TMP_157 in function withdraw
Error with: TMP_157 in function withdraw
Error with TMP_164 in function withdraw
Error with: TMP_164 in function withdraw
Executing Group 7
[*] Tested 4 warnings for yAxis
Group 7 complete
Switched global version to 0.6.12
'solc --version' running
'solc veCVXStrategy.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/BadgerDao/veCVX/contracts' running
Compilation warnings/errors on veCVXStrategy.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> deps/BaseStrategy.sol:187:18:
    |
187 |         returns (uint256 balance)
    |                  ^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> veCVXStrategy.sol:203:28:
    |
203 |     function setKeepReward(uint256 _setKeepReward) external {
    |                            ^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> veCVXStrategy.sol:302:10:
    |
302 |         (uint256 governancePerformanceFee, uint256 strategistPerformanceFee) =
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> veCVXStrategy.sol:302:44:
    |
302 |         (uint256 governancePerformanceFee, uint256 strategistPerformanceFee) =
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> veCVXStrategy.sol:400:57:
    |
400 |     function reinvest() external whenNotPaused returns (uint256 reinvested) {
    |                                                         ^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> veCVXStrategy.sol:473:9:
    |
473 |         uint256 toWantRatio =
    |         ^^^^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
   --> deps/BaseStrategy.sol:101:5:
    |
101 |     function baseStrategyVersion() public view returns (string memory) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> deps/BaseStrategy.sol:115:5:
    |
115 |     function isTendable() public view virtual returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to view
   --> veCVXStrategy.sol:203:5:
    |
203 |     function setKeepReward(uint256 _setKeepReward) external {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to view
   --> veCVXStrategy.sol:319:5:
    |
319 |     function tend() external whenNotPaused {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> veCVXStrategy.sol:20:1:
   |
20 | contract MyStrategy is BaseStrategy {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_637 Func name: manualRebalance in IF newLockRatio <= currentLockRatio
 typecheck error: Var name: TMP_643 Func name: manualRebalance in NEW VARIABLE cvxToLock = newLockRatio.sub(currentLockRatio)
Reference: ScType
veCVXStrategy.sol analyzed (17 contracts with 1 detectors), 2 result(s) found
Error with TMP_637 in function manualRebalance
Error with: TMP_637 in function manualRebalance
Error with TMP_643 in function manualRebalance
Error with: TMP_643 in function manualRebalance
Executing Group 8
[*] Tested 2 warnings for BadgerDao
Group 8 complete
Switched global version to 0.8.6
'solc --version' running
'solc LendingPair.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Wild_Credit/contracts' running
Compilation warnings/errors on LendingPair.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> external/ERC721Receivable.sol:11:5:
   |
11 |     address _operator,
   |     ^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> external/ERC721Receivable.sol:12:5:
   |
12 |     address _user,
   |     ^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> external/ERC721Receivable.sol:13:5:
   |
13 |     uint _tokenId,
   |     ^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> external/ERC721Receivable.sol:14:5:
   |
14 |     bytes memory _data
   |     ^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> LendingPair.sol:728:47:
    |
728 |   function _checkBorrowLimits(address _token, address _account) internal view {
    |                                               ^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
  --> external/ERC721Receivable.sol:10:3:
   |
10 |   function onERC721Received(
   |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> LendingPair.sol:572:3:
    |
572 |   function _amountToShares(uint _totalShares, uint _totalAmount, uint _inputSupply) internal view returns(uint) {
    |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> LendingPair.sol:580:3:
    |
580 |   function _sharesToAmount(uint _totalShares, uint _totalAmount, uint _inputShares) internal view returns(uint) {
    |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> LendingPair.sol:24:1:
   |
24 | contract LendingPair is ILendingPair, ReentrancyGuard, TransferHelper, ERC721Receivable {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_339 Func name: _supplyCreditUni in RETURN (creditA + creditB)
 typecheck error: Var name: TMP_204 Func name: accountHealth in NEW VARIABLE totalAccountSupply = creditA + creditB + creditUni
 typecheck error: Var name: TMP_208 Func name: accountHealth in NEW VARIABLE totalAccountBorrow = _borrowBalanceConverted(_account,tokenA,tokenA,priceA,priceA) + _borrowBalanceConverted(_account,tokenB,tokenA,priceB,priceA)
 typecheck error: Var name: REF_75 Func name: _burnSupplyShares in EXPRESSION supplySharesOf[_token][_account] -= _shares
Reference: ScType
LendingPair.sol analyzed (18 contracts with 1 detectors), 4 result(s) found
Error with TMP_339 in function _supplyCreditUni
Error with: TMP_339 in function _supplyCreditUni
Error with TMP_204 in function accountHealth
Error with: TMP_204 in function accountHealth
Error with TMP_208 in function accountHealth
Error with: TMP_208 in function accountHealth
Error with REF_75 in function _burnSupplyShares
Error with: REF_75 in function _burnSupplyShares
Executing Group 9
[*] Tested 4 warnings for Wild Credit
Group 9 complete
Switched global version to 0.8.6
'solc --version' running
'solc DrawCalculator.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/PoolTogether_v4/v4-core/contracts' running
DrawCalculator.sol analyzed (23 contracts with 1 detectors), 0 result(s) found
Executing Group 10
[*] Tested 0 warnings for Pool Together v4
Group 10 complete
Switched global version to 0.8.4
'solc --version' running
'solc ConcentratedLiquidityPool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Sushi_Trident_p2/trident/contracts/pool/concentrated' running
Compilation warnings/errors on ConcentratedLiquidityPool.sol:
Warning: Function state mutability can be restricted to pure
   --> ConcentratedLiquidityPool.sol:274:5:
    |
274 |     function burnSingle(bytes calldata) public override returns (uint256) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> ConcentratedLiquidityPool.sol:439:5:
    |
439 |     function flashSwap(bytes calldata) public override returns (uint256) {
    |     ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: reserve1 Func name: mint in EXPRESSION reserve1 -= uint128(amount1fees)
 typecheck error: Var name: reserve0 Func name: mint in EXPRESSION reserve0 -= uint128(amount0fees)
 typecheck error: Var name: amount0 Func name: burn in EXPRESSION amount0 += amount0fees
 typecheck error: Var name: amount1 Func name: burn in EXPRESSION amount1 += amount1fees
 typecheck error: Var name: reserve0 Func name: burn in EXPRESSION reserve0 -= uint128(amount0fees)
 typecheck error: Var name: reserve1 Func name: burn in EXPRESSION reserve1 -= uint128(amount1fees)
 typecheck error: Var name: reserve0 Func name: collect in EXPRESSION reserve0 -= uint128(amount0fees)
 typecheck error: Var name: reserve1 Func name: collect in EXPRESSION reserve1 -= uint128(amount1fees)
 typecheck error: Var name: reserve0 Func name: _updateReserves in EXPRESSION reserve0 -= uint128(amountOut)
 typecheck error: Var name: reserve1 Func name: _updateReserves in EXPRESSION reserve1 -= uint128(amountOut)
Reference: ScType
ConcentratedLiquidityPool.sol analyzed (14 contracts with 1 detectors), 10 result(s) found
Error with reserve1 in function mint
Error with: reserve1 in function mint
Error with reserve0 in function mint
Error with: reserve0 in function mint
Error with amount0 in function burn
Error with: amount0 in function burn
Error with amount1 in function burn
Error with: amount1 in function burn
Error with reserve0 in function burn
Error with: reserve0 in function burn
Error with reserve1 in function burn
Error with: reserve1 in function burn
Error with reserve0 in function collect
Error with: reserve0 in function collect
Error with reserve1 in function collect
Error with: reserve1 in function collect
Error with reserve0 in function _updateReserves
Error with: reserve0 in function _updateReserves
Error with reserve1 in function _updateReserves
Error with: reserve1 in function _updateReserves
Executing Group 11
[*] Tested 10  warnings for Sushi Trident
Group 11 complete
Switched global version to 0.8.4
'solc --version' running
'solc Swivel.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Swivel/gost/build/swivel' running
Compilation warnings/errors on Swivel.sol:
Warning: Unused local variable.
   --> Swivel.sol:279:5:
    |
279 |     Erc20 uToken = Erc20(o.underlying);
    |     ^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
 --> Swivel.sol:9:1:
  |
9 | contract Swivel {
  | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: REF_170 Func name: exitVaultFillingVaultInitiate in EXPRESSION Balance[msg.sender] -= fee
 typecheck error: Var name: REF_171 Func name: exitVaultFillingVaultInitiate in EXPRESSION Balance[msg.sender] -= fee
Reference: ScType
Swivel.sol analyzed (6 contracts with 1 detectors), 2 result(s) found
Error with REF_170 in function exitVaultFillingVaultInitiate
Error with: REF_170 in function exitVaultFillingVaultInitiate
Error with REF_171 in function exitVaultFillingVaultInitiate
Error with: REF_171 in function exitVaultFillingVaultInitiate
Executing Group 12
[*] Tested 2 warnings for Swivel
Group 12 complete
Switched global version to 0.8.4
'solc --version' running
'solc DelegatedStaking.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Covalent/contracts' running
Compilation warnings/errors on DelegatedStaking.sol:
Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^

Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^

Warning: Unused local variable.
   --> DelegatedStaking.sol:168:2:
    |
168 | 	int a = 1+1;
    | 	^^^^^

Warning: Function state mutability can be restricted to pure
   --> DelegatedStaking.sol:159:5:
    |
159 |     function _sharesToTokens(uint128 sharesN, uint128 rate) internal view returns(uint128){
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> DelegatedStaking.sol:163:5:
    |
163 |     function _tokensToShares(uint128 amount, uint128 rate) internal view returns(uint128){
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
 --> DelegatedStaking.sol:8:1:
  |
8 | contract DelegatedStaking is OwnableUpgradeable{
  | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_293 Func name: getDelegatorDetails in NEW VARIABLE rateIncrease = uint128(uint256(newTokensGiven - commissionPaid) * divider / v.totalShares)
Reference: ScType
DelegatedStaking.sol analyzed (8 contracts with 1 detectors), 1 result(s) found
Error with TMP_293 in function getDelegatorDetails
Error with: TMP_293 in function getDelegatorDetails
Executing Group 13
[*] Tested 1 warnings for Covalent
Group 13 complete
Switched global version to 0.6.12
'solc --version' running
'solc WrappedIbbtc.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Badger_Dao_p2/contracts' running
Compilation warnings/errors on WrappedIbbtc.sol:
Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> WrappedIbbtc.sol:95:17:
   |
95 |         uint256 amountInShares = balanceToShares(amount);
   |                 ^^^^^^^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
   --> WrappedIbbtc.sol:114:17:
    |
114 |         uint256 amountInShares = balanceToShares(amount);
    |                 ^^^^^^^^^^^^^^



 typecheck error: Var name: REF_27 Func name: _approve in EXPRESSION _allowances[owner][spender] = amount
 typecheck error: Var name: TMP_88 Func name: transferFrom in ENTRY_POINT
Reference: ScType
WrappedIbbtc.sol analyzed (8 contracts with 1 detectors), 2 result(s) found
Error with REF_27 in function _approve
Error with: REF_27 in function _approve
Error with TMP_88 in function transferFrom
Error with: TMP_88 in function transferFrom
Executing Group 14
[*] Tested 2 warnings for Badger Dao p2
Group 14 complete
Switched global version to 0.8.9
'solc --version' running
'solc TwapOracle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/twap' running

 typecheck error: Var name: TMP_55 Func name: consult in EXPRESSION result = ((sumUSD * IERC20Metadata(token).decimals()) / sumNative)
 typecheck error: Var name: TMP_48 Func name: consult in EXPRESSION result = ((sumUSD * IERC20Metadata(token).decimals()) / sumNative)
 typecheck error: Var name: TMP_41 Func name: consult in EXPRESSION result = ((sumUSD * IERC20Metadata(token).decimals()) / sumNative)
 typecheck error: Var name: TMP_47 Func name: consult in EXPRESSION result = ((sumUSD * IERC20Metadata(token).decimals()) / sumNative)
Reference: ScType
TwapOracle.sol analyzed (20 contracts with 1 detectors), 4 result(s) found
Error with TMP_55 in function consult
Error with: TMP_55 in function consult
Error with TMP_48 in function consult
Error with: TMP_48 in function consult
Error with TMP_41 in function consult
Error with: TMP_41 in function consult
Error with TMP_47 in function consult
Error with: TMP_47 in function consult
[*] Tested 4 warnings for Part 1
'solc --version' running
'solc ./VaderMath.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex/router' running
'solc --version' running
'solc ./BasePool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex/router' running
Compilation warnings/errors on ./BasePool.sol:
Warning: Unreachable code.
   --> BasePool.sol:253:9:
    |
253 |         emit Burn(msg.sender, amountNative, amountForeign, to);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


'solc --version' running
'solc ./VaderRouter.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex/router' running
'solc --version' running
'solc ./UQ112x112.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex/router' running
'solc --version' running
'solc ./GasThrottle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex/router' running

 typecheck error: Var name: totalSupply Func name: mint in EXPRESSION totalSupply += liquidity
 typecheck error: Var name: TMP_222 Func name: swap in EXPRESSION require(bool,string)(foreignAmountOut > 0 && foreignAmountOut <= foreignReserve,BasePool::swap: Swap Impossible)
 typecheck error: Var name: TMP_211 Func name: swap in EXPRESSION require(bool,string)(nativeAmountOut > 0 && nativeAmountOut <= nativeReserve,BasePool::swap: Swap Impossible)
Reference: ScType

 typecheck error: Var name: totalSupply Func name: mint in EXPRESSION totalSupply += liquidity
 typecheck error: Var name: TMP_222 Func name: swap in EXPRESSION require(bool,string)(foreignAmountOut > 0 && foreignAmountOut <= foreignReserve,BasePool::swap: Swap Impossible)
 typecheck error: Var name: TMP_211 Func name: swap in EXPRESSION require(bool,string)(nativeAmountOut > 0 && nativeAmountOut <= nativeReserve,BasePool::swap: Swap Impossible)
 typecheck error: Var name: TMP_43 Func name: calculateSwapReverse in NEW VARIABLE numerator = numeratorC - numeratorA - numeratorB
 typecheck error: Var name: TMP_28 Func name: calculateSwap in ENTRY_POINT
Reference: ScType
. analyzed (45 contracts with 1 detectors), 8 result(s) found
Error with totalSupply in function mint
Error with: totalSupply in function mint
Error with TMP_222 in function swap
Error with: TMP_222 in function swap
Error with TMP_211 in function swap
Error with: TMP_211 in function swap
Error with TMP_43 in function calculateSwapReverse
Error with: TMP_43 in function calculateSwapReverse
Error with TMP_28 in function calculateSwap
Error with: TMP_28 in function calculateSwap
[*] Tested 11 warnings for Part 2
'solc --version' running
'solc ./VaderReserve.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex-v2/router' running
Compilation warnings/errors on ./VaderReserve.sol:
Warning: Unreachable code.
  --> VaderReserve.sol:91:9:
   |
91 |         emit LossCovered(recipient, amount, actualAmount);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


'solc --version' running
'solc ./VaderRouterV2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p2/contracts/dex-v2/router' running
Compilation warnings/errors on ./VaderRouterV2.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> VaderRouterV2.sol:82:9:
   |
82 |         uint256 a, // amountAMin = unused
   |         ^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> VaderRouterV2.sol:83:9:
   |
83 |         uint256 b, // amountBMin = unused
   |         ^^^^^^^^^

Warning: Unused local variable.
   --> VaderRouterV2.sol:227:9:
    |
227 |         uint256 temp = reserve.reimburseImpermanentLoss(msg.sender, coveredLoss);
    |         ^^^^^^^^^^^^



 typecheck error: Var name: TMP_40 Func name: _min in IF a < b
Reference: ScType
. analyzed (24 contracts with 1 detectors), 1 result(s) found
Error with TMP_40 in function _min
Error with: TMP_40 in function _min
[*] Tested 1 warnings for Part 3
Executing Group 15
[*] Tested 16 warnings for Badger Dao p2
Group 15 complete
Switched global version to 0.6.12
'solc --version' running
'solc CDP.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/yAxis_p2/contracts/v3/alchemix/libraries/alchemist' running
CDP.sol analyzed (8 contracts with 1 detectors), 0 result(s) found
Executing Group 16
[*] Tested 0 warnings for yAxis p2
Group 16 complete
Switched global version to 0.6.12
'solc --version' running
'solc AuctionEscapeHatch.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Malt_Finance/src/contracts' running
Compilation warnings/errors on AuctionEscapeHatch.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> AuctionEscapeHatch.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> Auction.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> Permissions.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuction.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IDexHandler.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> node_modules/@openzeppelin/upgrades/contracts/Initializable.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuctionBurnReserveSkew.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuctionStartController.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IImpliedCollateralService.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/ILiquidityExtension.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IMaltDataLab.sol

Warning: This declaration shadows an existing declaration.
   --> Auction.sol:437:5:
    |
437 |     AccountCommitment storage commitment = idToAuction[auctionId].accountCommitments[account];
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> Auction.sol:433:5:
    |
433 |     uint256 commitment,
    |     ^^^^^^^^^^^^^^^^^^

Warning: This declaration shadows an existing declaration.
   --> AuctionEscapeHatch.sol:147:5:
    |
147 |     uint256 earlyExitReturn,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> AuctionEscapeHatch.sol:94:3:
   |
94 |   function earlyExitReturn(address account, uint256 _auctionId, uint256 amount) public view returns(uint256) {
   |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: This declaration shadows an existing declaration.
   --> AuctionEscapeHatch.sol:157:5:
    |
157 |     uint256 earlyExitReturn,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> AuctionEscapeHatch.sol:94:3:
   |
94 |   function earlyExitReturn(address account, uint256 _auctionId, uint256 amount) public view returns(uint256) {
   |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Return value of low-level calls not used.
  --> Permissions.sol:85:5:
   |
85 |     destination.call{value: address(this).balance}('');
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Return value of low-level calls not used.
   --> Permissions.sol:101:5:
    |
101 |     destination.call{value: amount}('');
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> Auction.sol:605:7:
    |
605 |       uint256 avgMaltPrice,
    |       ^^^^^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to view
   --> AuctionEscapeHatch.sol:168:3:
    |
168 |   function _calculateMaltRequiredForExit(uint256 _auctionId, uint256 amount) internal returns(uint256) {
    |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> Auction.sol:68:1:
   |
68 | contract Auction is Initializable, Permissions {
   | ^ (Relevant source part starts here and spans across multiple lines).


AuctionEscapeHatch.sol analyzed (21 contracts with 1 detectors), 0 result(s) found
'solc --version' running
'solc AuctionBurnReserveSkew.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Malt_Finance/src/contracts' running
Compilation warnings/errors on AuctionBurnReserveSkew.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> AuctionBurnReserveSkew.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> Auction.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> Permissions.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IStabilizerNode.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> node_modules/@openzeppelin/upgrades/contracts/Initializable.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuction.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuctionBurnReserveSkew.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IAuctionStartController.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IDexHandler.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IImpliedCollateralService.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/ILiquidityExtension.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IMaltDataLab.sol

Warning: This declaration shadows an existing declaration.
   --> Auction.sol:437:5:
    |
437 |     AccountCommitment storage commitment = idToAuction[auctionId].accountCommitments[account];
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> Auction.sol:433:5:
    |
433 |     uint256 commitment,
    |     ^^^^^^^^^^^^^^^^^^

Warning: Return value of low-level calls not used.
  --> Permissions.sol:85:5:
   |
85 |     destination.call{value: address(this).balance}('');
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Return value of low-level calls not used.
   --> Permissions.sol:101:5:
    |
101 |     destination.call{value: amount}('');
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> Auction.sol:605:7:
    |
605 |       uint256 avgMaltPrice,
    |       ^^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> Auction.sol:68:1:
   |
68 | contract Auction is Initializable, Permissions {
   | ^ (Relevant source part starts here and spans across multiple lines).


AuctionBurnReserveSkew.sol analyzed (22 contracts with 1 detectors), 0 result(s) found
Executing Group 17
[*] Tested 0 warnings for Malt Finance
Group 17 complete
Switched global version to 0.8.10
'solc --version' running
'solc OptimisticLedger.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Perennial/protocol/contracts/collateral/types' running
Compilation warnings/errors on OptimisticLedger.sol:
Warning: Unused local variable.
  --> OptimisticLedger.sol:66:2:
   |
66 | 	int a = 1+1;
   | 	^^^^^



 typecheck error: Var name: REF_25 Func name: settleAccount in EXPRESSION self.balances[account] = newBalance.abs()
 typecheck error: Var name: TMP_10 Func name: settleAccount in EXPRESSION self.shortfall = self.shortfall.add(shortfall)
Reference: ScType
OptimisticLedger.sol analyzed (3 contracts with 1 detectors), 2 result(s) found
Error with REF_25 in function settleAccount
Error with: REF_25 in function settleAccount
Error with TMP_10 in function settleAccount
Error with: TMP_10 in function settleAccount
Executing Group 18
[*] Tested 2 warnings for Perennial
Group 18 complete
Switched global version to 0.7.6
'solc --version' running
'solc CreditLine.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Sublime/contracts/CreditLine' running
Compilation warnings/errors on CreditLine.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
  --> node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:38:5:
   |
38 |     constructor () internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Unused local variable.
   --> CreditLine.sol:869:34:
    |
869 |         (uint256 _ratioOfPrices, uint256 _decimals) = IPriceOracle(priceOracle).getLatestPrice(
    |                                  ^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> CreditLine.sol:996:2:
    |
996 | 	int a = 1+1;
    | 	^^^^^

Warning: Unused local variable.
    --> CreditLine.sol:1050:34:
     |
1050 |         (uint256 _ratioOfPrices, uint256 _decimals) = IPriceOracle(priceOracle).getLatestPrice(_borrowAsset, _collateralAsset);
     |                                  ^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> CreditLine.sol:20:1:
   |
20 | contract CreditLine is ReentrancyGuard, OwnableUpgradeable {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_357 Func name: liquidate in NEW VARIABLE _returnETH = amount.sub(_borrowTokens,Insufficient ETH to liquidate)
Reference: ScType
CreditLine.sol analyzed (15 contracts with 1 detectors), 1 result(s) found
Error with TMP_357 in function liquidate
Error with: TMP_357 in function liquidate
[*] Tested 1 warnings for Part 1
'solc --version' running
'solc YearnYield.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Sublime/contracts/yield' running
Compilation warnings/errors on YearnYield.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
  --> node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:38:5:
   |
38 |     constructor () internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_113 Func name: _depositERC20 in EXPRESSION sharesReceived = IERC20(vault).balanceOf(address(this)).sub(sharesBefore)
 typecheck error: Var name: TMP_100 Func name: _depositETH in EXPRESSION sharesReceived = IERC20(vault).balanceOf(address(this)).sub(initialTokenBalance)
 typecheck error: Var name: TMP_88 Func name: getTokensForShares in EXPRESSION amount = IyVault(liquidityToken[asset]).getPricePerFullShare().mul(shares).div(1e18)
 typecheck error: Var name: TMP_87 Func name: getTokensForShares in EXPRESSION amount = IyVault(liquidityToken[asset]).getPricePerFullShare().mul(shares).div(1e18)
Reference: ScType
YearnYield.sol analyzed (12 contracts with 1 detectors), 4 result(s) found
Error with TMP_113 in function _depositERC20
Error with: TMP_113 in function _depositERC20
Error with TMP_100 in function _depositETH
Error with: TMP_100 in function _depositETH
Error with TMP_88 in function getTokensForShares
Error with: TMP_88 in function getTokensForShares
Error with TMP_87 in function getTokensForShares
Error with: TMP_87 in function getTokensForShares
[*] Tested 4 warnings for Part 2
Executing Group 19
[*] Tested 5 warnings total for Sublime
Group 19 complete
Switched global version to 0.6.12
'solc --version' running
'solc sYETIToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Yeti_Finance/packages/contracts/contracts/YETI' running
Compilation warnings/errors on sYETIToken.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> IsYETIRouter.sol


sYETIToken.sol analyzed (15 contracts with 1 detectors), 0 result(s) found
Executing Group 20
[*] Tested 0 warnings for Yeti Finance
Group 20 complete
Switched global version to 0.8.9
'solc --version' running
'solc LiquidityBasedTWAP.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Vader_Protocol_p3/contracts/lbt' running
Compilation warnings/errors on LiquidityBasedTWAP.sol:
Warning: Unused local variable.
   --> LiquidityBasedTWAP.sol:312:2:
    |
312 | 	int a = 1 + 1;
    | 	^^^^^



 typecheck error: Var name: TMP_56 Func name: _updateVaderPrice in EXPRESSION currentLiquidityEvaluation = (reserveNative * previousPrices[uint256(Paths.VADER)]) + (reserveForeign * getChainlinkPrice(pairData.foreignAsset))
 typecheck error: Var name: TMP_98 Func name: _addVaderPair in NEW VARIABLE pairLiquidityEvaluation = (reserveNative * previousPrices[uint256(Paths.VADER)]) + (reserveForeign * getChainlinkPrice(foreignAsset))
 typecheck error: Var name: TMP_130 Func name: _updateUSDVPrice in EXPRESSION currentLiquidityEvaluation = (reserveNative * previousPrices[uint256(Paths.USDV)]) + (reserveForeign * getChainlinkPrice(address(foreignAsset)))
 typecheck error: Var name: TMP_172 Func name: _addUSDVPair in NEW VARIABLE pairLiquidityEvaluation = (reserveNative * previousPrices[uint256(Paths.USDV)]) + (reserveForeign * getChainlinkPrice(address(foreignAsset)))
Reference: ScType
LiquidityBasedTWAP.sol analyzed (18 contracts with 1 detectors), 4 result(s) found
Error with TMP_56 in function _updateVaderPrice
Error with: TMP_56 in function _updateVaderPrice
Error with TMP_98 in function _addVaderPair
Error with: TMP_98 in function _addVaderPair
Error with TMP_130 in function _updateUSDVPrice
Error with: TMP_130 in function _updateUSDVPrice
Error with TMP_172 in function _addUSDVPair
Error with: TMP_172 in function _addUSDVPair
Executing Group 21
[*] Tested 4 warnings for Vader Protocol p3
Group 21 complete
Switched global version to 0.8.7
'solc --version' running
'solc PoolTemplate.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/InsureDao/contracts' running
Compilation warnings/errors on PoolTemplate.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IIndexTemplate.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IParameters.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IPoolTemplate.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IRegistry.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IUniversalMarket.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> interfaces/IVault.sol

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> PoolTemplate.sol:21:1:
   |
21 | contract PoolTemplate is InsureDAOERC20, IPoolTemplate, IUniversalMarket {
   | ^ (Relevant source part starts here and spans across multiple lines).


PoolTemplate.sol analyzed (12 contracts with 1 detectors), 0 result(s) found
Executing Group 22
[*] Tested 0 warnings for InsureDao
Group 22 complete
Switched global version to 0.8.7
'solc --version' running
'solc LaunchEvent.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Rocket_Joe/contracts' running

 typecheck error: Var name: tokenIncentivesForUsers Func name: createPair in EXPRESSION tokenIncentivesForUsers = (tokenIncentivesForUsers * tokenAllocated) / tokenReserve
 typecheck error: Var name: TMP_114 Func name: createPair in EXPRESSION tokenIncentiveIssuerRefund = tokenIncentivesBalance - tokenIncentivesForUsers
 typecheck error: Var name: tokenIncentivesBalance Func name: withdrawIncentives in EXPRESSION tokenIncentivesBalance -= amount
Reference: ScType
LaunchEvent.sol analyzed (12 contracts with 1 detectors), 3 result(s) found
Error with tokenIncentivesForUsers in function createPair
Error with: tokenIncentivesForUsers in function createPair
Error with TMP_114 in function createPair
Error with: TMP_114 in function createPair
Error with tokenIncentivesBalance in function withdrawIncentives
Error with: tokenIncentivesBalance in function withdrawIncentives
Executing Group 23
[*] Tested 3 warnings for Rocket Joe
Group 23 complete
Switched global version to 0.8.12
'solc --version' running
'solc MasterChef.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Concur_Finance/contracts' running
MasterChef.sol analyzed (10 contracts with 1 detectors), 0 result(s) found
Executing Group 24
[*] Tested 0 warnings for Concur Finance
Group 24 complete
Switched global version to 0.8.0
'solc --version' running
'solc LiquidityPool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Biconomy_Hyphen/contracts/hyphen' running
Compilation warnings/errors on LiquidityPool.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> LiquidityPool.sol:18:1:
   |
18 | contract LiquidityPool is ReentrancyGuardUpgradeable, Pausable, OwnableUpgradeable, ERC2771ContextUpgradeable {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: REF_47 Func name: getAmountToTransfer in EXPRESSION incentivePool[tokenAddress] = (incentivePool[tokenAddress] + (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee))) / BASE_DIVISOR
Reference: ScType
LiquidityPool.sol analyzed (17 contracts with 1 detectors), 1 result(s) found
Error with REF_47 in function getAmountToTransfer
Error with: REF_47 in function getAmountToTransfer
Executing Group 25
[*] Tested 1 warnings for Biconomy Hyphen
Group 25 complete
Switched global version to 0.7.6
'solc --version' running
'solc LenderPool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Sublime_p2/sublime-v1/contracts/PooledCreditLine' running
Compilation warnings/errors on LenderPool.sol:
Warning: Unused local variable.
   --> LenderPool.sol:374:9:
    |
374 |         uint256 _notBorrowed = _borrowedTokens.sub(POOLED_CREDIT_LINE.getPrincipal(_id));
    |         ^^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> LenderPool.sol:22:1:
   |
22 | contract LenderPool is ERC1155Upgradeable, ReentrancyGuardUpgradeable, IPooledCreditLineEnums, ILenderPool {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_297 Func name: _withdrawLiquidity in NEW VARIABLE _amountToWithdraw = _principalWithdrawable.add(_interestWithdrawable)
Reference: ScType
LenderPool.sol analyzed (23 contracts with 1 detectors), 1 result(s) found
Error with TMP_297 in function _withdrawLiquidity
Error with: TMP_297 in function _withdrawLiquidity
Executing Group 26
[*] Tested 0 warnings for Sublime p2
Group 26 complete
Switched global version to 0.8.6
'solc --version' running
'solc ScalingPriceOracle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Volt/contracts/oracle' running
Compilation warnings/errors on ScalingPriceOracle.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> external/Decimal.sol

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> node_modules/@uniswap/v2-periphery/contracts/interfaces/IWETH.sol


ScalingPriceOracle.sol analyzed (39 contracts with 1 detectors), 0 result(s) found
Executing Group 27
[*] Tested 0 warnings for Volt
Group 27 complete
Switched global version to 0.8.12
'solc --version' running
'solc StakedCitadel.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Badger_Dao_p3/src' running
Compilation warnings/errors on StakedCitadel.sol:
Warning: Contract code size is 32330 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> StakedCitadel.sol:59:1:
   |
59 | contract StakedCitadel is
   | ^ (Relevant source part starts here and spans across multiple lines).


StakedCitadel.sol analyzed (16 contracts with 1 detectors), 0 result(s) found
Executing Group 28
[*] Tested 0 warnings for Badger Dao p3
Group 28 complete
Switched global version to 0.8.12
'solc --version' running
'solc Trading.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/data/brainz/slither_env2/Artifact/Benchmark/Tigris_Trade/contracts' running
Compilation warnings/errors on Trading.sol:
Warning: Unused local variable.
   --> Trading.sol:419:11:
    |
419 |         (,int256 _payout) = TradingLibrary.pnl(_trade.direction, _assetPrice, _trade.price, _newMargin, _newLeverage, _trade.accInterest);
    |           ^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> Trading.sol:524:47:
    |
524 |  ...  (uint256 _positionSizeAfterPrice, int256 _payout) = TradingLibrary.pnl(_trade.direc ...
    |                                         ^^^^^^^^^^^^^^

Warning: Unused local variable.
   --> Trading.sol:634:7:
    |
634 | 	    	int a = 1+1;
    | 	    	^^^^^

Warning: Contract code size is 33975 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
  --> Trading.sol:79:1:
   |
79 | contract Trading is MetaContext, ITrading {
   | ^ (Relevant source part starts here and spans across multiple lines).



 typecheck error: Var name: TMP_275 Func name: _handleDeposit in IF tigAsset.balanceOf(address(this)) != _balBefore + _margin
 typecheck error: Var name: TMP_83 Func name: addToPosition in NEW VARIABLE _newPrice = _trade.price * _trade.margin / _newMargin + _price * _addMargin / _newMargin
Reference: ScType
Trading.sol analyzed (20 contracts with 1 detectors), 2 result(s) found
Error with TMP_275 in function _handleDeposit
Error with: TMP_275 in function _handleDeposit
Error with TMP_83 in function addToPosition
Error with: TMP_83 in function addToPosition
Executing Group 29
[*] Tested 2 warnings for Tigris Trade
Group 29 complete
Testing complete
