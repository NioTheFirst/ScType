Switched global version to 0.7.6
Checking YearnYield
Checking IYield
Checking IyVault
Checking OwnableUpgradeable
Checking Initializable
Checking AddressUpgradeable
Checking ContextUpgradeable
Checking SafeMath
Checking IERC20
Checking SafeERC20
Checking Address
Checking ReentrancyGuard
Add to address_to_label {'global:savingsAccount': 1}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998, 'updateSavingsAccount:_savingsAccount': -997}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998, 'updateSavingsAccount:_savingsAccount': -997, 'updateProtocolAddresses:_asset': -996}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998, 'updateSavingsAccount:_savingsAccount': -997, 'updateProtocolAddresses:_asset': -996, 'updateProtocolAddresses:_liquidityToken': -995}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998, 'updateSavingsAccount:_savingsAccount': -997, 'updateProtocolAddresses:_asset': -996, 'updateProtocolAddresses:_liquidityToken': -995, 'emergencyWithdraw:_asset': -994}
Add to address_to_label {'global:savingsAccount': 1, 'global:_owner': 2, 'initialize:_owner': -999, 'initialize:_savingsAccount': -998, 'updateSavingsAccount:_savingsAccount': -997, 'updateProtocolAddresses:_asset': -996, 'updateProtocolAddresses:_liquidityToken': -995, 'emergencyWithdraw:_asset': -994, 'emergencyWithdraw:_wallet': -993}
State_var: liquidityToken
Finding type for liquidityToken(mapping(address => address) ... )
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
State_var: _status
Finding type for _status(uint256 ... )
State_var: savingsAccount
Finding type for savingsAccount(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
State_var: _initialized
Finding type for _initialized(bool ... )
State_var: _initializing
Finding type for _initializing(bool ... )



initialize
Finding type for _owner(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for _savingsAccount(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _owner
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1


MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)
State_var: liquidityToken
State_var: _owner
State_var: _ENTERED
State_var: _NOT_ENTERED
State_var: _status
State_var: savingsAccount
State_var: _initialized
State_var: _initializing



updateSavingsAccount
Finding type for _savingsAccount(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, YearnYield._updateSavingsAccount(address)(_savingsAccount_1)
State_var: liquidityToken
State_var: _owner
State_var: _ENTERED
State_var: _NOT_ENTERED
State_var: _status
State_var: savingsAccount
State_var: _initialized
State_var: _initializing



_updateSavingsAccount
State_var: liquidityToken
State_var: _owner
State_var: _ENTERED
State_var: _NOT_ENTERED
State_var: _status
State_var: savingsAccount
State_var: _initialized
State_var: _initializing



updateProtocolAddresses
Finding type for _asset(address ... )
prev address? u
Head Addr: -996
    Norm: 6
    Set: {-996}
    Fin: NULL
Finding type for _liquidityToken(address ... )
prev address? u
Head Addr: -995
    Norm: 18
    Set: {-995}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _asset
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _liquidityToken
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
REF_1(address) -> liquidityToken_0[_asset_1]
liquidityToken_1(mapping(address => address)) := ϕ(['liquidityToken_0'])
REF_1 (->liquidityToken_1) := _liquidityToken_1(address)
Emit ProtocolAddressesUpdated(_asset_1,_liquidityToken_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Name: liquidityToken, Num: 1
Globalname: liquidityToken
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_1(address) -> liquidityToken_0[_asset_1]
INDEX
[i]Type for REF_1

Name: REF_1 Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidityToken_1(mapping(address => address)) := ϕ(['liquidityToken_0'])
Phi
[i]Type for liquidityToken

Name: liquidityToken Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_1 (->liquidityToken_1) := _liquidityToken_1(address)
asgn
init
end
_______________

Name: _liquidityToken Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _liquidityToken
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_1

Name: REF_1 Function: updateProtocolAddresses
Num: -1
Den: -1
Address: -995
Norm: u
LF: _liquidityToken
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
REF_1(address) -> liquidityToken_0[_asset_1]
liquidityToken_1(mapping(address => address)) := ϕ(['liquidityToken_0'])
REF_1 (->liquidityToken_1) := _liquidityToken_1(address)
Emit ProtocolAddressesUpdated(_asset_1,_liquidityToken_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation

Name: liquidityToken Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_1(address) -> liquidityToken_0[_asset_1]
INDEX
[i]Type for REF_1

Name: REF_1 Function: updateProtocolAddresses
Num: -1
Den: -1
Address: -995
Norm: u
LF: _liquidityToken
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidityToken_1(mapping(address => address)) := ϕ(['liquidityToken_0'])
Phi
[i]Type for liquidityToken

Name: liquidityToken Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_1 (->liquidityToken_1) := _liquidityToken_1(address)
asgn
init
end
_______________

Name: _liquidityToken Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _liquidityToken
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_1

Name: REF_1 Function: updateProtocolAddresses
Num: -1
Den: -1
Address: -995
Norm: u
LF: _liquidityToken
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
State_var: liquidityToken
State_var: _owner
State_var: _ENTERED
State_var: _NOT_ENTERED
State_var: _status
State_var: savingsAccount
State_var: _initialized
State_var: _initializing



emergencyWithdraw
Finding type for _asset(address ... )
prev address? u
Head Addr: -994
    Norm: 6
    Set: {-994}
    Fin: NULL
Finding type for _wallet(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _asset
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _wallet
    fields: []
    fintype: -1


liquidityToken_2(mapping(address => address)) := ϕ(['liquidityToken_4', 'liquidityToken_7', 'liquidityToken_0', 'liquidityToken_10', 'liquidityToken_12', 'liquidityToken_1'])
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_34 = CONVERT 0 to address
TMP_35(bool) = _wallet_1 != TMP_34
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,cant burn)
REF_2(address) -> liquidityToken_4[_asset_1]
investedTo_1(address) := REF_2(address)
TMP_37 = CONVERT investedTo_1 to IERC20
TMP_38 = CONVERT this to address
TMP_39(uint256) = HIGH_LEVEL_CALL, dest:TMP_37(IERC20), function:balanceOf, arguments:['TMP_38']  
amount_1(uint256) := TMP_39(uint256)
TMP_40 = CONVERT 0 to address
TMP_41(bool) = _asset_1 == TMP_40
CONDITION TMP_41
TMP_44(uint256) = INTERNAL_CALL, YearnYield._withdrawERC(address,address,uint256)(_asset_1,investedTo_1,amount_1)
received_1(uint256) := TMP_44(uint256)
TMP_42(uint256) = INTERNAL_CALL, YearnYield._withdrawETH(address,uint256)(investedTo_1,amount_1)
received_2(uint256) := TMP_42(uint256)
TMP_45 = CONVERT _asset_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_45', '_wallet_1', 'received_1'] 
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_wallet_1, function:call, arguments:[''] value:received_2 
success_1(bool)= UNPACK TUPLE_0 index: 0 
TMP_43(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer failed)


Propogating parameters and globals to SSA variables...
End popogation
Name: liquidityToken, Num: 2
Globalname: liquidityToken
global...

Name: liquidityToken Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
liquidityToken_2(mapping(address => address)) := ϕ(['liquidityToken_4', 'liquidityToken_7', 'liquidityToken_0', 'liquidityToken_10', 'liquidityToken_12', 'liquidityToken_1'])
Phi
[i]Type for liquidityToken

Name: liquidityToken Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _owner, Num: 2
Globalname: _owner
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_owner_2(address) := ϕ(['_owner_5', '_owner_1', '_owner_0', '_owner_8'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _owner_2
RETURN
init
end

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_owner_2(address) := ϕ(['_owner_5', '_owner_1', '_owner_0', '_owner_8'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _owner_2
RETURN
init
end

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: onlyOwner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
[i]Type for TMP_133

Name: TMP_133 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bool) = TMP_132 == TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Ownable: caller is not the owner)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_132(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
init
end
_______________

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: onlyOwner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
init
end
_______________

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bool) = TMP_132 == TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Ownable: caller is not the owner)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _NOT_ENTERED, Num: 2
Globalname: _NOT_ENTERED
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _ENTERED, Num: 1
Globalname: _ENTERED
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _status, Num: 2
Globalname: _status
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_1', '_status_4', '_status_0'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_130(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_130

Name: TMP_130 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,ReentrancyGuard: reentrant call)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _status, Num: 3
Globalname: _status
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _status, Num: 4
Globalname: _status
global...

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_1', '_status_4', '_status_0'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_130(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_130

Name: TMP_130 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,ReentrancyGuard: reentrant call)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_34 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(bool) = _wallet_1 != TMP_34
[i]Type for TMP_35

Name: TMP_35 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,cant burn)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: liquidityToken, Num: 4
Globalname: liquidityToken
global...

Name: liquidityToken Function: updateProtocolAddresses
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: investedTo, Num: 1
Globalname: investedTo
End popogation
REF_2(address) -> liquidityToken_4[_asset_1]
INDEX
[i]Type for REF_2

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
investedTo_1(address) := REF_2(address)
asgn
init
end
_______________

Name: REF_2 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_37 = CONVERT investedTo_1 to IERC20
Converting investedTo_1

Name: investedTo Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: investedTo Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_37

Name: TMP_37 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 3
3
3
[i]Type for TMP_38

Name: TMP_38 Function: emergencyWithdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_39(uint256) = HIGH_LEVEL_CALL, dest:TMP_37(IERC20), function:balanceOf, arguments:['TMP_38']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
u
Executing Group 19
[*] Tested 6 warnings for Sublime
Group 19 complete
Testing complete
