Switched global version to 0.8.3



updateHourlyBondAmount
issuer_1(address) := ϕ(['issuer_1'])
[i]Type for issuer

Name: issuer Function: updateHourlyBondAmount
Num: 
Den: 
Address: -999
Norm: u
LF: issuer
Value: u
Fields: 
Finance Type: undef
bond_1(HourlyBond) := ϕ(["bond_1 (-> ['hourlyBondAccounts'])"])
[i]Type for bond

Name: bond Function: updateHourlyBondAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
lendingMeta_5(mapping(address => BaseLending.LendingMetadata)) := ϕ(['lendingMeta_10', 'lendingMeta_12', 'lendingMeta_8', 'lendingMeta_0', 'lendingMeta_1', 'lendingMeta_4'])
[i]Type for lendingMeta

Name: lendingMeta Function: updateHourlyBondAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
hourlyBondMetadata_3(mapping(address => HourlyBondSubscriptionLending.HourlyBondMetadata)) := ϕ(['hourlyBondMetadata_4', 'hourlyBondMetadata_6', 'hourlyBondMetadata_2', 'hourlyBondMetadata_7', 'hourlyBondMetadata_0'])
[i]Type for hourlyBondMetadata

Name: hourlyBondMetadata Function: updateHourlyBondAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> bond_1.yieldQuotientFP
[i]Type for REF_22

Name: REF_22 Function: updateHourlyBondAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
yieldQuotientFP_1(uint256) := REF_22(uint256)
Finance type key: (-1, -1)
[i]Type for yieldQuotientFP

Name: yieldQuotientFP Function: updateHourlyBondAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_54(bool) = yieldQuotientFP_1 > 0
[i]Type for TMP_54

Name: TMP_54 Function: updateHourlyBondAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_23(HourlyBondSubscriptionLending.HourlyBondMetadata) -> hourlyBondMetadata_3[issuer_1]
[i]Type for REF_23

Name: hourlyBondMetadata Function: updateHourlyBondAmount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(BaseLending.YieldAccumulator) = INTERNAL_CALL, HourlyBondSubscriptionLending.getUpdatedHourlyYield(address,HourlyBondSubscriptionLending.HourlyBondMetadata)(issuer_1,REF_23)
issuer_1(address) := ϕ(['issuer_1'])
[i]Type for issuer

Name: issuer Function: getUpdatedHourlyYield
Num: 
Den: 
Address: -999
Norm: u
LF: issuer
Value: u
Fields: 
Finance Type: undef
bondMeta_1 (-> [])(HourlyBondSubscriptionLending.HourlyBondMetadata) := ϕ(['REF_23'])
[i]Type for bondMeta

Name: bondMeta Function: getUpdatedHourlyYield
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lendingMeta_11(mapping(address => BaseLending.LendingMetadata)) := ϕ(['lendingMeta_10', 'lendingMeta_12', 'lendingMeta_8', 'lendingMeta_0', 'lendingMeta_1', 'lendingMeta_4'])
[i]Type for lendingMeta

Name: lendingMeta Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
borrowYieldAccumulators_1(mapping(address => BaseLending.YieldAccumulator)) := ϕ(['borrowYieldAccumulators_5', 'borrowYieldAccumulators_0'])
[i]Type for borrowYieldAccumulators

Name: borrowYieldAccumulators Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxHourlyYieldFP_2(uint256) := ϕ(['maxHourlyYieldFP_1', 'maxHourlyYieldFP_0', 'maxHourlyYieldFP_4'])
[i]Type for maxHourlyYieldFP

Name: maxHourlyYieldFP Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
borrowingFactorPercent_1(uint256) := ϕ(['borrowingFactorPercent_0', 'borrowingFactorPercent_6'])
[i]Type for borrowingFactorPercent

Name: borrowingFactorPercent Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52(BaseLending.YieldAccumulator) -> bondMeta_1 (-> []).yieldAccumulator
[i]Type for REF_52

Name: REF_52 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
accumulator_1 (-> ['bondMeta'])(BaseLending.YieldAccumulator) := REF_52(BaseLending.YieldAccumulator)
Finance type key: (-1, -1)
[i]Type for accumulator

Name: accumulator Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(uint256) -> accumulator_1 (-> ['bondMeta']).lastUpdated
[i]Type for REF_53

Name: REF_53 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_78(uint256) = block.timestamp (c)- REF_53
[i]Type for TMP_78

Name: TMP_78 Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timeDelta_1(uint256) := TMP_78(uint256)
Finance type key: (-1, -1)
[i]Type for timeDelta

Name: timeDelta Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_54(uint256) -> accumulator_1 (-> ['bondMeta']).accumulatorFP
[i]Type for REF_54

Name: REF_54 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(uint256) = INTERNAL_CALL, HourlyBondSubscriptionLending.calcCumulativeYieldFP(BaseLending.YieldAccumulator,uint256)(accumulator_1 (-> ['bondMeta']),timeDelta_1)
yieldAccumulator_1 (-> [])(BaseLending.YieldAccumulator) := ϕ(['yA_1 (-> [])', "borrowAccumulator_1 (-> ['borrowYieldAccumulators'])", "accumulator_1 (-> ['bondMeta'])"])
[i]Type for yieldAccumulator

Name: yieldAccumulator Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: lastUpdated
Finance Type: undef
timeDelta_1(uint256) := ϕ(['timeDelta_1', 'timeDelta_1', 'timeDelta_2'])
[i]Type for timeDelta

Name: timeDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FP32_1(uint256) := ϕ(['FP32_0'])
[i]Type for FP32

Name: FP32 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = timeDelta_1 (c)% 3600
[i]Type for TMP_67

Name: TMP_67 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsDelta_1(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for secondsDelta

Name: secondsDelta Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_49(uint256) -> yieldAccumulator_1 (-> []).accumulatorFP
[i]Type for REF_49

Name: REF_49 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_50

Name: REF_50 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = REF_49 (c)* REF_50
[i]Type for TMP_68

Name: TMP_68 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = TMP_68 (c)* secondsDelta_1
[i]Type for TMP_69

Name: TMP_69 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = FP32_1 (c)* 3600
[i]Type for TMP_70

Name: TMP_70 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_71(uint256) = TMP_69 (c)/ TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
accumulatorFP_1(uint256) := TMP_71(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_72(uint256) = timeDelta_1 (c)/ 3600
[i]Type for TMP_72

Name: TMP_72 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
hoursDelta_1(uint256) := TMP_72(uint256)
Finance type key: (-1, -1)
[i]Type for hoursDelta

Name: hoursDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_73(bool) = hoursDelta_1 > 0
[i]Type for TMP_73

Name: TMP_73 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
accumulatorFP_2(uint256) := ϕ(['accumulatorFP_3', 'accumulatorFP_1'])
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_74(bool) = hoursDelta_1 > i_2
[i]Type for TMP_74

Name: TMP_74 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
REF_51(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_51

Name: REF_51 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(uint256) = accumulatorFP_2 (c)* REF_51
[i]Type for TMP_75

Name: TMP_75 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(uint256) = TMP_75 (c)/ FP32_1
[i]Type for TMP_76

Name: TMP_76 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulatorFP_3(uint256) := TMP_76(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_77

Name: TMP_77 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3601
Fields: 
Finance Type: undef
RETURN accumulatorFP_2
yieldAccumulator_1 (-> [])(BaseLending.YieldAccumulator) := ϕ(['yA_1 (-> [])', "borrowAccumulator_1 (-> ['borrowYieldAccumulators'])", "accumulator_1 (-> ['bondMeta'])"])
[i]Type for yieldAccumulator

Name: yieldAccumulator Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, hourlyYieldFP, lastUpdated
Finance Type: undef
timeDelta_1(uint256) := ϕ(['timeDelta_1', 'timeDelta_1', 'timeDelta_2'])
[i]Type for timeDelta

Name: timeDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FP32_1(uint256) := ϕ(['FP32_0'])
[i]Type for FP32

Name: FP32 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = timeDelta_1 (c)% 3600
[i]Type for TMP_67

Name: TMP_67 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsDelta_1(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for secondsDelta

Name: secondsDelta Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_49(uint256) -> yieldAccumulator_1 (-> []).accumulatorFP
[i]Type for REF_49

Name: REF_49 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_50

Name: REF_50 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = REF_49 (c)* REF_50
[i]Type for TMP_68

Name: TMP_68 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = TMP_68 (c)* secondsDelta_1
[i]Type for TMP_69

Name: TMP_69 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = FP32_1 (c)* 3600
[i]Type for TMP_70

Name: TMP_70 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_71(uint256) = TMP_69 (c)/ TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
accumulatorFP_1(uint256) := TMP_71(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_72(uint256) = timeDelta_1 (c)/ 3600
[i]Type for TMP_72

Name: TMP_72 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
hoursDelta_1(uint256) := TMP_72(uint256)
Finance type key: (-1, -1)
[i]Type for hoursDelta

Name: hoursDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_73(bool) = hoursDelta_1 > 0
[i]Type for TMP_73

Name: TMP_73 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
accumulatorFP_2(uint256) := ϕ(['accumulatorFP_3', 'accumulatorFP_1'])
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_74(bool) = hoursDelta_1 > i_2
[i]Type for TMP_74

Name: TMP_74 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
REF_51(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_51

Name: REF_51 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(uint256) = accumulatorFP_2 (c)* REF_51
[i]Type for TMP_75

Name: TMP_75 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(uint256) = TMP_75 (c)/ FP32_1
[i]Type for TMP_76

Name: TMP_76 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulatorFP_3(uint256) := TMP_76(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_77

Name: TMP_77 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3601
Fields: 
Finance Type: undef
RETURN accumulatorFP_2
[i]Type for TMP_79

Name: TMP_79 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulator_2 (-> ['bondMeta'])(BaseLending.YieldAccumulator) := ϕ(["accumulator_1 (-> ['bondMeta'])"])
[i]Type for accumulator

Name: accumulator Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, lastUpdated
Finance Type: undef
REF_54 (->accumulator_2 (-> ['bondMeta'])) := TMP_79(uint256)
Finance type key: (-1, -1)
[i]Type for REF_54

Name: REF_54 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
bondMeta_2 (-> ['bondMeta'])(HourlyBondSubscriptionLending.HourlyBondMetadata) := ϕ(["accumulator_2 (-> ['bondMeta'])"])
[i]Type for bondMeta

Name: bondMeta Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, lastUpdated
Finance Type: undef
REF_55(BaseLending.LendingMetadata) -> lendingMeta_12[issuer_1]
[i]Type for REF_55

Name: None Function: None
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
meta_1 (-> ['lendingMeta'])(BaseLending.LendingMetadata) := REF_55(BaseLending.LendingMetadata)
Finance type key: (-1, -1)
[i]Type for meta

Name: meta Function: getUpdatedHourlyYield
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_56(BaseLending.YieldAccumulator) -> borrowYieldAccumulators_2[issuer_1]
[i]Type for REF_56

Name: None Function: None
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
borrowAccumulator_1 (-> ['borrowYieldAccumulators'])(BaseLending.YieldAccumulator) := REF_56(BaseLending.YieldAccumulator)
Finance type key: (-1, -1)
[i]Type for borrowAccumulator

Name: borrowAccumulator Function: getUpdatedHourlyYield
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57(uint256) -> borrowAccumulator_1 (-> ['borrowYieldAccumulators']).hourlyYieldFP
[i]Type for REF_57

Name: REF_57 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_58(uint256) -> meta_1 (-> ['lendingMeta']).totalBorrowed
[i]Type for REF_58

Name: REF_58 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_80(uint256) = REF_57 (c)* REF_58
[i]Type for TMP_80

Name: TMP_80 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_59(uint256) -> meta_1 (-> ['lendingMeta']).totalLending
[i]Type for REF_59

Name: REF_59 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_81(uint256) = 1 (c)+ REF_59
[i]Type for TMP_81

Name: TMP_81 Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_82(uint256) = TMP_80 (c)/ TMP_81
[i]Type for TMP_82

Name: TMP_82 Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
yieldGeneratedFP_1(uint256) := TMP_82(uint256)
Finance type key: (-1, -1)
[i]Type for yieldGeneratedFP

Name: yieldGeneratedFP Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_83(uint256) = INTERNAL_CALL, BaseLending.min(uint256,uint256)(maxHourlyYieldFP_3,yieldGeneratedFP_1)
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
[i]Type for TMP_83

Name: TMP_83 Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_maxHourlyYieldFP_1(uint256) := TMP_83(uint256)
Finance type key: (-1, -1)
[i]Type for _maxHourlyYieldFP

Name: _maxHourlyYieldFP Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_60(uint256) -> accumulator_2 (-> ['bondMeta']).hourlyYieldFP
[i]Type for REF_60

Name: REF_60 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_61(uint256) -> accumulator_2 (-> ['bondMeta']).hourlyYieldFP
[i]Type for REF_61

Name: REF_61 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(uint256) -> accumulator_2 (-> ['bondMeta']).lastUpdated
[i]Type for REF_62

Name: REF_62 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_63(uint256) -> meta_1 (-> ['lendingMeta']).totalLending
[i]Type for REF_63

Name: REF_63 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_84(uint256) = INTERNAL_CALL, BaseLending.lendingTarget(BaseLending.LendingMetadata)(meta_1 (-> ['lendingMeta']))
meta_1 (-> [])(BaseLending.LendingMetadata) := ϕ(["meta_1 (-> ['lendingMeta'])", "meta_1 (-> ['lendingMeta'])"])
[i]Type for meta

Name: meta Function: lendingTarget
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: totalBorrowed, totalLending
Finance Type: undef
REF_4(uint256) -> meta_1 (-> []).lendingCap
[i]Type for REF_4

Name: REF_4 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_5(uint256) -> meta_1 (-> []).totalBorrowed
[i]Type for REF_5

Name: REF_5 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_6(uint256) -> meta_1 (-> []).lendingBuffer
[i]Type for REF_6

Name: REF_6 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_49(uint256) = REF_5 (c)+ REF_6
[i]Type for TMP_49

Name: TMP_49 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(uint256) = INTERNAL_CALL, BaseLending.min(uint256,uint256)(REF_4,TMP_49)
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
[i]Type for TMP_50

Name: TMP_50 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_50
meta_1 (-> [])(BaseLending.LendingMetadata) := ϕ(["meta_1 (-> ['lendingMeta'])", "meta_1 (-> ['lendingMeta'])"])
[i]Type for meta

Name: meta Function: lendingTarget
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lendingCap, lendingBuffer, totalBorrowed, totalLending
Finance Type: undef
REF_4(uint256) -> meta_1 (-> []).lendingCap
[i]Type for REF_4

Name: REF_4 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_5(uint256) -> meta_1 (-> []).totalBorrowed
[i]Type for REF_5

Name: REF_5 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_6(uint256) -> meta_1 (-> []).lendingBuffer
[i]Type for REF_6

Name: REF_6 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_49(uint256) = REF_5 (c)+ REF_6
[i]Type for TMP_49

Name: TMP_49 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(uint256) = INTERNAL_CALL, BaseLending.min(uint256,uint256)(REF_4,TMP_49)
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
[i]Type for TMP_50

Name: TMP_50 Function: lendingTarget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_50
[i]Type for TMP_84

Name: TMP_84 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> bondMeta_1 (-> []).buyingSpeed
[i]Type for REF_64

Name: REF_64 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(uint256) -> bondMeta_1 (-> []).withdrawingSpeed
[i]Type for REF_65

Name: REF_65 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_85(uint256) = INTERNAL_CALL, BaseLending.updatedYieldFP(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(REF_61,REF_62,REF_63,TMP_84,REF_64,REF_65,_maxHourlyYieldFP_1)
_yieldFP_1(uint256) := ϕ(['REF_61'])
[i]Type for _yieldFP

Name: _yieldFP Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lastUpdated_1(uint256) := ϕ(['REF_62'])
[i]Type for lastUpdated

Name: lastUpdated Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalLendingInBucket_1(uint256) := ϕ(['REF_63'])
[i]Type for totalLendingInBucket

Name: totalLendingInBucket Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bucketTarget_1(uint256) := ϕ(['TMP_84'])
[i]Type for bucketTarget

Name: bucketTarget Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
buyingSpeed_1(uint256) := ϕ(['REF_64'])
[i]Type for buyingSpeed

Name: buyingSpeed Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawingSpeed_1(uint256) := ϕ(['REF_65'])
[i]Type for withdrawingSpeed

Name: withdrawingSpeed Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bucketMaxYield_1(uint256) := ϕ(['_maxHourlyYieldFP_1'])
[i]Type for bucketMaxYield

Name: bucketMaxYield Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
yieldChangePerSecondFP_1(uint256) := ϕ(['yieldChangePerSecondFP_2', 'yieldChangePerSecondFP_0'])
[i]Type for yieldChangePerSecondFP

Name: yieldChangePerSecondFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_1(uint256) := _yieldFP_1(uint256)
Finance type key: (-1, -1)
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_29(uint256) = block.timestamp (c)- lastUpdated_1
[i]Type for TMP_29

Name: TMP_29 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timeDiff_1(uint256) := TMP_29(uint256)
Finance type key: (-1, -1)
[i]Type for timeDiff

Name: timeDiff Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_30(uint256) = timeDiff_1 (c)* yieldChangePerSecondFP_1
[i]Type for TMP_30

Name: TMP_30 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldDiff_1(uint256) := TMP_30(uint256)
Finance type key: (-1, -1)
[i]Type for yieldDiff

Name: yieldDiff Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = totalLendingInBucket_1 >= bucketTarget_1
[i]Type for TMP_31

Name: TMP_31 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = buyingSpeed_1 >= withdrawingSpeed_1
[i]Type for TMP_32

Name: TMP_32 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_3(uint256) = yieldFP_1 (c)+ yieldDiff_1
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(uint256) = INTERNAL_CALL, BaseLending.min(uint256,uint256)(yieldFP_1,yieldDiff_1)
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
[i]Type for TMP_34

Name: TMP_34 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_2(uint256) = yieldFP_1 (c)- TMP_34
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = yieldFP_3 > bucketMaxYield_1
[i]Type for TMP_35

Name: TMP_35 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_4(uint256) := bucketMaxYield_1(uint256)
Finance type key: (-1, -1)
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_yieldFP_1(uint256) := ϕ(['REF_61'])
[i]Type for _yieldFP

Name: _yieldFP Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lastUpdated_1(uint256) := ϕ(['REF_62'])
[i]Type for lastUpdated

Name: lastUpdated Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalLendingInBucket_1(uint256) := ϕ(['REF_63'])
[i]Type for totalLendingInBucket

Name: totalLendingInBucket Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bucketTarget_1(uint256) := ϕ(['TMP_84'])
[i]Type for bucketTarget

Name: bucketTarget Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
buyingSpeed_1(uint256) := ϕ(['REF_64'])
[i]Type for buyingSpeed

Name: buyingSpeed Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawingSpeed_1(uint256) := ϕ(['REF_65'])
[i]Type for withdrawingSpeed

Name: withdrawingSpeed Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bucketMaxYield_1(uint256) := ϕ(['_maxHourlyYieldFP_1'])
[i]Type for bucketMaxYield

Name: bucketMaxYield Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
yieldChangePerSecondFP_1(uint256) := ϕ(['yieldChangePerSecondFP_2', 'yieldChangePerSecondFP_0'])
[i]Type for yieldChangePerSecondFP

Name: yieldChangePerSecondFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_1(uint256) := _yieldFP_1(uint256)
Finance type key: (-1, -1)
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_29(uint256) = block.timestamp (c)- lastUpdated_1
[i]Type for TMP_29

Name: TMP_29 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timeDiff_1(uint256) := TMP_29(uint256)
Finance type key: (-1, -1)
[i]Type for timeDiff

Name: timeDiff Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_30(uint256) = timeDiff_1 (c)* yieldChangePerSecondFP_1
[i]Type for TMP_30

Name: TMP_30 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldDiff_1(uint256) := TMP_30(uint256)
Finance type key: (-1, -1)
[i]Type for yieldDiff

Name: yieldDiff Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = totalLendingInBucket_1 >= bucketTarget_1
[i]Type for TMP_31

Name: TMP_31 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = buyingSpeed_1 >= withdrawingSpeed_1
[i]Type for TMP_32

Name: TMP_32 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_3(uint256) = yieldFP_1 (c)+ yieldDiff_1
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(uint256) = INTERNAL_CALL, BaseLending.min(uint256,uint256)(yieldFP_1,yieldDiff_1)
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
a_1(uint256) := ϕ(['maxHourlyYieldFP_3', 'REF_4', 'yieldFP_1'])
[i]Type for a

Name: a Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['TMP_49', 'yieldDiff_1', 'yieldGeneratedFP_1'])
[i]Type for b

Name: b Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = a_1 > b_1
[i]Type for TMP_48

Name: TMP_48 Function: min
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN a_1
RETURN b_1
[i]Type for TMP_34

Name: TMP_34 Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_2(uint256) = yieldFP_1 (c)- TMP_34
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = yieldFP_3 > bucketMaxYield_1
[i]Type for TMP_35

Name: TMP_35 Function: updatedYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
yieldFP_4(uint256) := bucketMaxYield_1(uint256)
Finance type key: (-1, -1)
[i]Type for yieldFP

Name: yieldFP Function: updatedYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for TMP_85

Name: TMP_85 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulator_3 (-> ['bondMeta'])(BaseLending.YieldAccumulator) := ϕ(["accumulator_2 (-> ['bondMeta'])"])
[i]Type for accumulator

Name: accumulator Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, lastUpdated, hourlyYieldFP
Finance Type: undef
REF_60 (->accumulator_3 (-> ['bondMeta'])) := TMP_85(uint256)
Finance type key: (-1, -1)
[i]Type for REF_60

Name: REF_60 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
bondMeta_3 (-> ['bondMeta'])(HourlyBondSubscriptionLending.HourlyBondMetadata) := ϕ(["accumulator_3 (-> ['bondMeta'])"])
[i]Type for bondMeta

Name: bondMeta Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, lastUpdated, hourlyYieldFP
Finance Type: undef
REF_66(uint256) -> borrowAccumulator_1 (-> ['borrowYieldAccumulators']).lastUpdated
[i]Type for REF_66

Name: REF_66 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_86(uint256) = block.timestamp (c)- REF_66
[i]Type for TMP_86

Name: TMP_86 Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timeDelta_2(uint256) := TMP_86(uint256)
Finance type key: (-1, -1)
[i]Type for timeDelta

Name: timeDelta Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_67(uint256) -> borrowAccumulator_1 (-> ['borrowYieldAccumulators']).accumulatorFP
[i]Type for REF_67

Name: REF_67 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87(uint256) = INTERNAL_CALL, HourlyBondSubscriptionLending.calcCumulativeYieldFP(BaseLending.YieldAccumulator,uint256)(borrowAccumulator_1 (-> ['borrowYieldAccumulators']),timeDelta_2)
yieldAccumulator_1 (-> [])(BaseLending.YieldAccumulator) := ϕ(['yA_1 (-> [])', "borrowAccumulator_1 (-> ['borrowYieldAccumulators'])", "accumulator_1 (-> ['bondMeta'])"])
[i]Type for yieldAccumulator

Name: yieldAccumulator Function: calcCumulativeYieldFP
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, hourlyYieldFP, lastUpdated
Finance Type: undef
timeDelta_1(uint256) := ϕ(['timeDelta_1', 'timeDelta_1', 'timeDelta_2'])
[i]Type for timeDelta

Name: timeDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FP32_1(uint256) := ϕ(['FP32_0'])
[i]Type for FP32

Name: FP32 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = timeDelta_1 (c)% 3600
[i]Type for TMP_67

Name: TMP_67 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsDelta_1(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for secondsDelta

Name: secondsDelta Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_49(uint256) -> yieldAccumulator_1 (-> []).accumulatorFP
[i]Type for REF_49

Name: REF_49 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_50

Name: REF_50 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = REF_49 (c)* REF_50
[i]Type for TMP_68

Name: TMP_68 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = TMP_68 (c)* secondsDelta_1
[i]Type for TMP_69

Name: TMP_69 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = FP32_1 (c)* 3600
[i]Type for TMP_70

Name: TMP_70 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_71(uint256) = TMP_69 (c)/ TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
accumulatorFP_1(uint256) := TMP_71(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_72(uint256) = timeDelta_1 (c)/ 3600
[i]Type for TMP_72

Name: TMP_72 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
hoursDelta_1(uint256) := TMP_72(uint256)
Finance type key: (-1, -1)
[i]Type for hoursDelta

Name: hoursDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_73(bool) = hoursDelta_1 > 0
[i]Type for TMP_73

Name: TMP_73 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
accumulatorFP_2(uint256) := ϕ(['accumulatorFP_3', 'accumulatorFP_1'])
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_74(bool) = hoursDelta_1 > i_2
[i]Type for TMP_74

Name: TMP_74 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
REF_51(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_51

Name: REF_51 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(uint256) = accumulatorFP_2 (c)* REF_51
[i]Type for TMP_75

Name: TMP_75 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(uint256) = TMP_75 (c)/ FP32_1
[i]Type for TMP_76

Name: TMP_76 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulatorFP_3(uint256) := TMP_76(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_77

Name: TMP_77 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3601
Fields: 
Finance Type: undef
RETURN accumulatorFP_2
yieldAccumulator_1 (-> [])(BaseLending.YieldAccumulator) := ϕ(['yA_1 (-> [])', "borrowAccumulator_1 (-> ['borrowYieldAccumulators'])", "accumulator_1 (-> ['bondMeta'])"])
[i]Type for yieldAccumulator

Name: yieldAccumulator Function: calcCumulativeYieldFP
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, hourlyYieldFP, lastUpdated
Finance Type: undef
timeDelta_1(uint256) := ϕ(['timeDelta_1', 'timeDelta_1', 'timeDelta_2'])
[i]Type for timeDelta

Name: timeDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FP32_1(uint256) := ϕ(['FP32_0'])
[i]Type for FP32

Name: FP32 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = timeDelta_1 (c)% 3600
[i]Type for TMP_67

Name: TMP_67 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsDelta_1(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for secondsDelta

Name: secondsDelta Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_49(uint256) -> yieldAccumulator_1 (-> []).accumulatorFP
[i]Type for REF_49

Name: REF_49 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_50

Name: REF_50 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = REF_49 (c)* REF_50
[i]Type for TMP_68

Name: TMP_68 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = TMP_68 (c)* secondsDelta_1
[i]Type for TMP_69

Name: TMP_69 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = FP32_1 (c)* 3600
[i]Type for TMP_70

Name: TMP_70 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_71(uint256) = TMP_69 (c)/ TMP_70
[i]Type for TMP_71

Name: TMP_71 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
accumulatorFP_1(uint256) := TMP_71(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_72(uint256) = timeDelta_1 (c)/ 3600
[i]Type for TMP_72

Name: TMP_72 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
hoursDelta_1(uint256) := TMP_72(uint256)
Finance type key: (-1, -1)
[i]Type for hoursDelta

Name: hoursDelta Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_73(bool) = hoursDelta_1 > 0
[i]Type for TMP_73

Name: TMP_73 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
accumulatorFP_2(uint256) := ϕ(['accumulatorFP_3', 'accumulatorFP_1'])
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
TMP_74(bool) = hoursDelta_1 > i_2
[i]Type for TMP_74

Name: TMP_74 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
REF_51(uint256) -> yieldAccumulator_1 (-> []).hourlyYieldFP
[i]Type for REF_51

Name: REF_51 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(uint256) = accumulatorFP_2 (c)* REF_51
[i]Type for TMP_75

Name: TMP_75 Function: calcCumulativeYieldFP
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(uint256) = TMP_75 (c)/ FP32_1
[i]Type for TMP_76

Name: TMP_76 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accumulatorFP_3(uint256) := TMP_76(uint256)
Finance type key: (-1, -1)
[i]Type for accumulatorFP

Name: accumulatorFP Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) := i_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_77

Name: TMP_77 Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3600
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
[i]Type for i

Name: i Function: calcCumulativeYieldFP
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3601
Fields: 
Finance Type: undef
RETURN accumulatorFP_2
[i]Type for TMP_87

Name: TMP_87 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
borrowAccumulator_2 (-> ['borrowYieldAccumulators'])(BaseLending.YieldAccumulator) := ϕ(["borrowAccumulator_1 (-> ['borrowYieldAccumulators'])"])
[i]Type for borrowAccumulator

Name: borrowAccumulator Function: getUpdatedHourlyYield
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accumulatorFP, hourlyYieldFP, lastUpdated
Finance Type: undef
REF_67 (->borrowAccumulator_2 (-> ['borrowYieldAccumulators'])) := TMP_87(uint256)
Finance type key: (-1, -1)
[i]Type for REF_67

Name: REF_67 Function: getUpdatedHourlyYield
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
borrowYieldAccumulators_3(mapping(address => BaseLending.YieldAccumulator)) := ϕ(["borrowAccumulator_2 (-> ['borrowYieldAccumulators'])"])
[i]Type for borrowYieldAccumulators

Name: borrowYieldAccumulators Function: getUpdatedHourlyYield
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Executing Group 1
[*] Tested 1 warning for MarginSwap
Group 1 complete
Switched global version to 0.8.3



init



assetChecks
VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_2(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
POOLS_2(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_3(bool) = collateralAsset_1 == VADER_2
[i]Type for TMP_3

Name: TMP_3 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_7(bool) = collateralAsset_1 == USDV_2
[i]Type for TMP_7

Name: TMP_7 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_11

Name: TMP_11 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_12

Name: TMP_12 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_3(address) := ϕ(['POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_13 = CONVERT POOLS_3 to iPOOLS
[i]Type for TMP_13

Name: TMP_13 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_14

Name: TMP_14 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_15

Name: TMP_15 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_4(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
[i]Type for TMP_16

Name: TMP_16 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_5(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_17(bool) = TMP_12 && TMP_16
[i]Type for TMP_17

Name: TMP_17 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_8

Name: TMP_8 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
[i]Type for TMP_9

Name: TMP_9 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_11(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_4

Name: TMP_4 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
[i]Type for TMP_5

Name: TMP_5 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_12(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21 = CONVERT POOLS_5 to iPOOLS
[i]Type for TMP_21

Name: TMP_21 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_22

Name: TMP_22 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_6(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_23 = CONVERT POOLS_6 to iPOOLS
[i]Type for TMP_23

Name: TMP_23 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_24

Name: TMP_24 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_25

Name: TMP_25 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_7(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_6', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
[i]Type for TMP_26

Name: TMP_26 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_8(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_27(bool) = TMP_22 && TMP_26
[i]Type for TMP_27

Name: TMP_27 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_18 = CONVERT POOLS_5 to iPOOLS
[i]Type for TMP_18

Name: TMP_18 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
[i]Type for TMP_19

Name: TMP_19 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_10(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_28 = CONVERT POOLS_8 to iPOOLS
[i]Type for TMP_28

Name: TMP_28 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
[i]Type for TMP_29

Name: TMP_29 Function: assetChecks
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_9(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_2(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: assetChecks
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_2(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: assetChecks
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
POOLS_2(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_3(bool) = collateralAsset_1 == VADER_2
[i]Type for TMP_3

Name: TMP_3 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_7(bool) = collateralAsset_1 == USDV_2
[i]Type for TMP_7

Name: TMP_7 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_11

Name: TMP_11 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_12(bool) = HIGH_LEVEL_CALL, dest:TMP_11(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_12

Name: TMP_12 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_3(address) := ϕ(['POOLS_2', 'POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_13 = CONVERT POOLS_3 to iPOOLS
[i]Type for TMP_13

Name: TMP_13 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_14 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_14

Name: TMP_14 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_15(address) = HIGH_LEVEL_CALL, dest:TMP_14(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_15

Name: TMP_15 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_4(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_3', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_16(bool) = HIGH_LEVEL_CALL, dest:TMP_13(iPOOLS), function:isAnchor, arguments:['TMP_15']  
[i]Type for TMP_16

Name: TMP_16 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_5(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_4', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_17(bool) = TMP_12 && TMP_16
[i]Type for TMP_17

Name: TMP_17 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_8

Name: TMP_8 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_9(bool) = HIGH_LEVEL_CALL, dest:TMP_8(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
[i]Type for TMP_9

Name: TMP_9 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_11(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,Bad Combo)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4 = CONVERT POOLS_2 to iPOOLS
[i]Type for TMP_4

Name: TMP_4 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_5(bool) = HIGH_LEVEL_CALL, dest:TMP_4(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
[i]Type for TMP_5

Name: TMP_5 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_12(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,Bad Combo)
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21 = CONVERT POOLS_5 to iPOOLS
[i]Type for TMP_21

Name: TMP_21 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_22(bool) = HIGH_LEVEL_CALL, dest:TMP_21(iPOOLS), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_22

Name: TMP_22 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_6(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_5', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_23 = CONVERT POOLS_6 to iPOOLS
[i]Type for TMP_23

Name: TMP_23 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_24 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_24

Name: TMP_24 Function: assetChecks
Num: 
Den: 
Address: -999
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_25(address) = HIGH_LEVEL_CALL, dest:TMP_24(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_25

Name: TMP_25 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_7(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_6', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_26(bool) = HIGH_LEVEL_CALL, dest:TMP_23(iPOOLS), function:isAsset, arguments:['TMP_25']  
[i]Type for TMP_26

Name: TMP_26 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_8(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_7', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_27(bool) = TMP_22 && TMP_26
[i]Type for TMP_27

Name: TMP_27 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_18 = CONVERT POOLS_5 to iPOOLS
[i]Type for TMP_18

Name: TMP_18 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_19(bool) = HIGH_LEVEL_CALL, dest:TMP_18(iPOOLS), function:isAnchor, arguments:['debtAsset_1']  
[i]Type for TMP_19

Name: TMP_19 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_10(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,Bad Combo)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_28 = CONVERT POOLS_8 to iPOOLS
[i]Type for TMP_28

Name: TMP_28 Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_29(bool) = HIGH_LEVEL_CALL, dest:TMP_28(iPOOLS), function:isAsset, arguments:['debtAsset_1']  
[i]Type for TMP_29

Name: TMP_29 Function: assetChecks
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_9(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: assetChecks
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_30(None) = SOLIDITY_CALL require(bool,string)(TMP_29,Bad Combo)
[i]Type for TMP_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



isBase
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -997
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True



isPool
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -994
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef



calcValueInBase
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -993
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
RETURN TMP_44
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -993
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
RETURN TMP_44



calcValueInToken
token_1(address) := ϕ(['token2_1'])
[i]Type for token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_51'])
[i]Type for amount

Name: amount Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_18(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT POOLS_18 to iPOOLS
[i]Type for TMP_45

Name: TMP_45 Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_1

Name: TUPLE_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_19(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_18', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_46(bool) = _baseAmt_1 > 0
[i]Type for TMP_46

Name: TMP_46 Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(bool) = _tokenAmt_1 > 0
[i]Type for TMP_47

Name: TMP_47 Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = TMP_46 && TMP_47
[i]Type for TMP_48

Name: TMP_48 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
[i]Type for TMP_49

Name: TMP_49 Function: calcValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
[i]Type for TMP_50

Name: TMP_50 Function: calcValueInToken
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_50
token_1(address) := ϕ(['token2_1'])
[i]Type for token

Name: token Function: calcValueInToken
Num: 
Den: 
Address: -992
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_51'])
[i]Type for amount

Name: amount Function: calcValueInToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_18(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT POOLS_18 to iPOOLS
[i]Type for TMP_45

Name: TMP_45 Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_45(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_1

Name: TUPLE_1 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_19(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_18', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInToken
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_1 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_46(bool) = _baseAmt_1 > 0
[i]Type for TMP_46

Name: TMP_46 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(bool) = _tokenAmt_1 > 0
[i]Type for TMP_47

Name: TMP_47 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48(bool) = TMP_46 && TMP_47
[i]Type for TMP_48

Name: TMP_48 Function: calcValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(uint256) = amount_1 (c)* _tokenAmt_1
[i]Type for TMP_49

Name: TMP_49 Function: calcValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_50(uint256) = TMP_49 (c)/ _baseAmt_1
[i]Type for TMP_50

Name: TMP_50 Function: calcValueInToken
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_50



requirePriceBounds
one_1(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
[i]Type for _10k

Name: _10k Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_44
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_44
[i]Type for TMP_57

Name: TMP_57 Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_testingPrice_1(uint256) := TMP_57(uint256)
Finance type key: (-1, -1)
[i]Type for _testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_58(uint256) = _10k_2 (c)- bound_1
[i]Type for TMP_58

Name: TMP_58 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
[i]Type for TMP_59

Name: TMP_59 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1(uint256) := TMP_59(uint256)
Finance type key: (-1, -1)
[i]Type for _lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(uint256) = _10k_3 (c)+ bound_1
[i]Type for TMP_60

Name: TMP_60 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ _10k_3
[i]Type for TMP_62

Name: TMP_62 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_upper_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for _upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(bool) = _testingPrice_1 <= _lower_1
[i]Type for TMP_67

Name: TMP_67 Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_68(bool) = _testingPrice_1 >= _upper_1
[i]Type for TMP_68

Name: TMP_68 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = TMP_67 || TMP_68
[i]Type for TMP_69

Name: TMP_69 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(bool) = _testingPrice_1 >= _lower_1
[i]Type for TMP_63

Name: TMP_63 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(bool) = _testingPrice_1 <= _upper_1
[i]Type for TMP_64

Name: TMP_64 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65(bool) = TMP_63 && TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
one_1(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_10k_1(uint256) := ϕ(['_10k_3', '_10k_0'])
[i]Type for _10k

Name: _10k Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_57(uint256) = INTERNAL_CALL, Utils.calcValueInBase(address,uint256)(token_1,one_1)
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_44
token_1(address) := ϕ(['debtAsset_1', 'token_1', 'token1_1'])
[i]Type for token

Name: token Function: calcValueInBase
Num: 
Den: 
Address: -991
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', '_interestPayment_1', 'one_1'])
[i]Type for amount

Name: amount Function: calcValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_16(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT POOLS_16 to iPOOLS
[i]Type for TMP_39

Name: TMP_39 Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_39(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_17(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_16', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_40(bool) = _baseAmt_1 > 0
[i]Type for TMP_40

Name: TMP_40 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _tokenAmt_1 > 0
[i]Type for TMP_41

Name: TMP_41 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(bool) = TMP_40 && TMP_41
[i]Type for TMP_42

Name: TMP_42 Function: calcValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(uint256) = amount_1 (c)* _baseAmt_1
[i]Type for TMP_43

Name: TMP_43 Function: calcValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_44(uint256) = TMP_43 (c)/ _tokenAmt_1
[i]Type for TMP_44

Name: TMP_44 Function: calcValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_44
[i]Type for TMP_57

Name: TMP_57 Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_testingPrice_1(uint256) := TMP_57(uint256)
Finance type key: (-1, -1)
[i]Type for _testingPrice

Name: _testingPrice Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_58(uint256) = _10k_2 (c)- bound_1
[i]Type for TMP_58

Name: TMP_58 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_59(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(TMP_58,targetPrice_1)
[i]Type for TMP_59

Name: TMP_59 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lower_1(uint256) := TMP_59(uint256)
Finance type key: (-1, -1)
[i]Type for _lower

Name: _lower Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(uint256) = _10k_3 (c)+ bound_1
[i]Type for TMP_60

Name: TMP_60 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_61(uint256) = targetPrice_1 (c)* TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = TMP_61 (c)/ _10k_3
[i]Type for TMP_62

Name: TMP_62 Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_upper_1(uint256) := TMP_62(uint256)
Finance type key: (-1, -1)
[i]Type for _upper

Name: _upper Function: requirePriceBounds
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(bool) = _testingPrice_1 <= _lower_1
[i]Type for TMP_67

Name: TMP_67 Function: requirePriceBounds
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_68(bool) = _testingPrice_1 >= _upper_1
[i]Type for TMP_68

Name: TMP_68 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(bool) = TMP_67 || TMP_68
[i]Type for TMP_69

Name: TMP_69 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,Not outside)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(bool) = _testingPrice_1 >= _lower_1
[i]Type for TMP_63

Name: TMP_63 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(bool) = _testingPrice_1 <= _upper_1
[i]Type for TMP_64

Name: TMP_64 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65(bool) = TMP_63 && TMP_64
[i]Type for TMP_65

Name: TMP_65 Function: requirePriceBounds
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,Not inside)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



getRewardShare
VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_2(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_24(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_71 = CONVERT VADER_4 to iVADER
[i]Type for TMP_71

Name: TMP_71 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
[i]Type for TMP_72

Name: TMP_72 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_5(address) := ϕ(['VADER_4', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_3(address) := ϕ(['ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_25(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT ROUTER_3 to iROUTER
[i]Type for TMP_73

Name: TMP_73 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
[i]Type for TMP_74

Name: TMP_74 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_4(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_3', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_26(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_25', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_72 && TMP_74
[i]Type for TMP_75

Name: TMP_75 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT POOLS_26 to iPOOLS
[i]Type for TMP_76

Name: TMP_76 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
[i]Type for TMP_77

Name: TMP_77 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_5(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_27(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmount_1(uint256) := TMP_77(uint256)
Finance type key: (-1, -1)
[i]Type for _baseAmount

Name: _baseAmount Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_78 = CONVERT POOLS_27 to iPOOLS
[i]Type for TMP_78

Name: TMP_78 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_79

Name: TMP_79 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_6(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_80 = CONVERT POOLS_28 to iPOOLS
[i]Type for TMP_80

Name: TMP_80 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
[i]Type for TMP_81

Name: TMP_81 Function: getRewardShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_11(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_33(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_82 = CONVERT ROUTER_11 to iROUTER
[i]Type for TMP_82

Name: TMP_82 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
[i]Type for TMP_83

Name: TMP_83 Function: getRewardShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_12(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_34(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
Handling trace

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
Error with TMP_169 in function calcShare
Error with: TMP_169 in function calcShare
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
Handling trace

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_1(uint256) := TMP_84(uint256)
Finance type key: (-1, -1)
[i]Type for _share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86 = CONVERT POOLS_28 to iPOOLS
[i]Type for TMP_86

Name: TMP_86 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_87

Name: TMP_87 Function: getRewardShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_7(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_94
amount_1(uint256) := ϕ(['_share_1', '_share_scope_0_1'])
[i]Type for amount

Name: amount Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardReductionFactor_1(uint256) := ϕ(['rewardReductionFactor_1'])
[i]Type for rewardReductionFactor

Name: rewardReductionFactor Function: getReducedShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_94(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(1,rewardReductionFactor_1,amount_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: getReducedShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_94
[i]Type for TMP_85

Name: TMP_85 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_2(uint256) := TMP_85(uint256)
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88 = CONVERT POOLS_29 to iPOOLS
[i]Type for TMP_88

Name: TMP_88 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
[i]Type for TMP_89

Name: TMP_89 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_8(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_30(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_90 = CONVERT ROUTER_8 to iROUTER
[i]Type for TMP_90

Name: TMP_90 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
[i]Type for TMP_91

Name: TMP_91 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_9(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_31(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_92

Name: TMP_92 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for _share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
[i]Type for TMP_93

Name: TMP_93 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_1(uint256) := TMP_93(uint256)
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_4(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_2(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_24(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_71 = CONVERT VADER_4 to iVADER
[i]Type for TMP_71

Name: TMP_71 Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = HIGH_LEVEL_CALL, dest:TMP_71(iVADER), function:emitting, arguments:[]  
[i]Type for TMP_72

Name: TMP_72 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_5(address) := ϕ(['VADER_4', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_3(address) := ϕ(['ROUTER_4', 'ROUTER_2', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_25(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_24', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_73 = CONVERT ROUTER_3 to iROUTER
[i]Type for TMP_73

Name: TMP_73 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_74(bool) = HIGH_LEVEL_CALL, dest:TMP_73(iROUTER), function:isCurated, arguments:['token_1']  
[i]Type for TMP_74

Name: TMP_74 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_6(address) := ϕ(['VADER_5', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: getRewardShare
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
ROUTER_4(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_3', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_26(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_25', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_75(bool) = TMP_72 && TMP_74
[i]Type for TMP_75

Name: TMP_75 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT POOLS_26 to iPOOLS
[i]Type for TMP_76

Name: TMP_76 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_77(uint256) = HIGH_LEVEL_CALL, dest:TMP_76(iPOOLS), function:getBaseAmount, arguments:['token_1']  
[i]Type for TMP_77

Name: TMP_77 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_5(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_27(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmount_1(uint256) := TMP_77(uint256)
Finance type key: (-1, -1)
[i]Type for _baseAmount

Name: _baseAmount Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_78 = CONVERT POOLS_27 to iPOOLS
[i]Type for TMP_78

Name: TMP_78 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_79(bool) = HIGH_LEVEL_CALL, dest:TMP_78(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_79

Name: TMP_79 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_6(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_5', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_28(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_27', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_80 = CONVERT POOLS_28 to iPOOLS
[i]Type for TMP_80

Name: TMP_80 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_81(uint256) = HIGH_LEVEL_CALL, dest:TMP_80(iPOOLS), function:pooledUSDV, arguments:[]  
[i]Type for TMP_81

Name: TMP_81 Function: getRewardShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_11(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_33(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_82 = CONVERT ROUTER_11 to iROUTER
[i]Type for TMP_82

Name: TMP_82 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(iROUTER), function:reserveUSDV, arguments:[]  
[i]Type for TMP_83

Name: TMP_83 Function: getRewardShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_12(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_11', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_34(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_33', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_84(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_81,TMP_83)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
Handling trace

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
Handling trace

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_1(uint256) := TMP_84(uint256)
Finance type key: (-1, -1)
[i]Type for _share

Name: _share Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_86 = CONVERT POOLS_28 to iPOOLS
[i]Type for TMP_86

Name: TMP_86 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_87(bool) = HIGH_LEVEL_CALL, dest:TMP_86(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_87

Name: TMP_87 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_7(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_6', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_29(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_28', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_85(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_1,rewardReductionFactor_1)
[i]Type for TMP_85

Name: TMP_85 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_2(uint256) := TMP_85(uint256)
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88 = CONVERT POOLS_29 to iPOOLS
[i]Type for TMP_88

Name: TMP_88 Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_89(uint256) = HIGH_LEVEL_CALL, dest:TMP_88(iPOOLS), function:pooledVADER, arguments:[]  
[i]Type for TMP_89

Name: TMP_89 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_8(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_30(address) := ϕ(['POOLS_47', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_35', 'POOLS_15', 'POOLS_32', 'POOLS_9', 'POOLS_8', 'POOLS_1', 'POOLS_19', 'POOLS_21', 'POOLS_26', 'POOLS_29', 'POOLS_54', 'POOLS_45', 'POOLS_10', 'POOLS_11'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_90 = CONVERT ROUTER_8 to iROUTER
[i]Type for TMP_90

Name: TMP_90 Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:TMP_90(iROUTER), function:reserveVADER, arguments:[]  
[i]Type for TMP_91

Name: TMP_91 Function: getRewardShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_9(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_8', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getRewardShare
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_31(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_30', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getRewardShare
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_92(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_baseAmount_1,TMP_89,TMP_91)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_92

Name: TMP_92 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_share_scope_0_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for _share_scope_0

Name: _share_scope_0 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_93(uint256) = INTERNAL_CALL, Utils.getReducedShare(uint256,uint256)(_share_scope_0_1,rewardReductionFactor_1)
[i]Type for TMP_93

Name: TMP_93 Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardShare_1(uint256) := TMP_93(uint256)
Finance type key: (-1, -1)
[i]Type for rewardShare

Name: rewardShare Function: getRewardShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



getProtection
ROUTER_14(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_95(uint256) = INTERNAL_CALL, Utils.getCoverage(address,address)(member_1,token_1)
member_1(address) := ϕ(['member_1'])
[i]Type for member

Name: member Function: getCoverage
Num: 
Den: 
Address: -989
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token_1'])
[i]Type for token

Name: token Function: getCoverage
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_18(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_36(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_104 = CONVERT ROUTER_18 to iROUTER
[i]Type for TMP_104

Name: TMP_104 Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:TMP_104(iROUTER), function:getMemberBaseDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_105

Name: TMP_105 Function: getCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_19(address) := ϕ(['ROUTER_4', 'ROUTER_18', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_37(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_36', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_B0_1(uint256) := TMP_105(uint256)
Finance type key: (-1, -1)
[i]Type for _B0

Name: _B0 Function: getCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_106 = CONVERT ROUTER_19 to iROUTER
[i]Type for TMP_106

Name: TMP_106 Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_107(uint256) = HIGH_LEVEL_CALL, dest:TMP_106(iROUTER), function:getMemberTokenDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_107

Name: TMP_107 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_20(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_19', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_38(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_37', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_T0_1(uint256) := TMP_107(uint256)
Finance type key: (-1, -1)
[i]Type for _T0

Name: _T0 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_108 = CONVERT POOLS_38 to iPOOLS
[i]Type for TMP_108

Name: TMP_108 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:TMP_108(iPOOLS), function:getMemberUnits, arguments:['token_1', 'member_1']  
[i]Type for TMP_109

Name: TMP_109 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_39(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_38', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_units_1(uint256) := TMP_109(uint256)
Finance type key: (-1, -1)
[i]Type for _units

Name: _units Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_110 = CONVERT POOLS_39 to iPOOLS
[i]Type for TMP_110

Name: TMP_110 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_110(iPOOLS), function:getUnits, arguments:['token_1']  
[i]Type for TMP_111

Name: TMP_111 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_40(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_39', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_112 = CONVERT POOLS_40 to iPOOLS
[i]Type for TMP_112

Name: TMP_112 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = HIGH_LEVEL_CALL, dest:TMP_112(iPOOLS), function:getBaseAmount, arguments:['token_1']  
[i]Type for TMP_113

Name: TMP_113 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_41(address) := ϕ(['POOLS_8', 'POOLS_40', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_114(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_units_1,TMP_111,TMP_113)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_B1_1(uint256) := TMP_114(uint256)
Finance type key: (-1, -1)
[i]Type for _B1

Name: _B1 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115 = CONVERT POOLS_42 to iPOOLS
[i]Type for TMP_115

Name: TMP_115 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_116(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(iPOOLS), function:getUnits, arguments:['token_1']  
[i]Type for TMP_116

Name: TMP_116 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_43(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_42', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_117 = CONVERT POOLS_43 to iPOOLS
[i]Type for TMP_117

Name: TMP_117 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = HIGH_LEVEL_CALL, dest:TMP_117(iPOOLS), function:getTokenAmount, arguments:['token_1']  
[i]Type for TMP_118

Name: TMP_118 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_44(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_43', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_units_1,TMP_116,TMP_118)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_T1_1(uint256) := TMP_119(uint256)
Finance type key: (-1, -1)
[i]Type for _T1

Name: _T1 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Utils.calcCoverage(uint256,uint256,uint256,uint256)(_B0_1,_T0_1,_B1_1,_T1_1)
B0_1(uint256) := ϕ(['_B0_1'])
[i]Type for B0

Name: B0 Function: calcCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
T0_1(uint256) := ϕ(['_T0_1'])
[i]Type for T0

Name: T0 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
B1_1(uint256) := ϕ(['_B1_1'])
[i]Type for B1

Name: B1 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
T1_1(uint256) := ϕ(['_T1_1'])
[i]Type for T1

Name: T1 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = B0_1 > 0
[i]Type for TMP_227

Name: TMP_227 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(bool) = T1_1 > 0
[i]Type for TMP_228

Name: TMP_228 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_227 && TMP_228
[i]Type for TMP_229

Name: TMP_229 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = T0_1 (c)* B1_1
[i]Type for TMP_230

Name: TMP_230 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_231(uint256) = TMP_230 (c)/ T1_1
[i]Type for TMP_231

Name: TMP_231 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = B0_1 (c)+ TMP_231
Handling trace

Name: TMP_231 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: B0 Function: calcCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
Error with TMP_232 in function calcCoverage
Error with: TMP_232 in function calcCoverage
[i]Type for TMP_232

Name: TMP_232 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_depositValue_1(uint256) := TMP_232(uint256)
Finance type key: (-1, -1)
[i]Type for _depositValue

Name: _depositValue Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = T1_1 (c)* B1_1
[i]Type for TMP_233

Name: TMP_233 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_234(uint256) = TMP_233 (c)/ T1_1
[i]Type for TMP_234

Name: TMP_234 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = B1_1 (c)+ TMP_234
[i]Type for TMP_235

Name: TMP_235 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_redemptionValue_1(uint256) := TMP_235(uint256)
Finance type key: (-1, -1)
[i]Type for _redemptionValue

Name: _redemptionValue Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = _redemptionValue_1 <= _depositValue_1
[i]Type for TMP_236

Name: TMP_236 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = _depositValue_1 (c)- _redemptionValue_1
[i]Type for TMP_237

Name: TMP_237 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
coverage_1(uint256) := TMP_237(uint256)
Finance type key: (-1, -1)
[i]Type for coverage

Name: coverage Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
B0_1(uint256) := ϕ(['_B0_1'])
[i]Type for B0

Name: B0 Function: calcCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
T0_1(uint256) := ϕ(['_T0_1'])
[i]Type for T0

Name: T0 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
B1_1(uint256) := ϕ(['_B1_1'])
[i]Type for B1

Name: B1 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
T1_1(uint256) := ϕ(['_T1_1'])
[i]Type for T1

Name: T1 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = B0_1 > 0
[i]Type for TMP_227

Name: TMP_227 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(bool) = T1_1 > 0
[i]Type for TMP_228

Name: TMP_228 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_227 && TMP_228
[i]Type for TMP_229

Name: TMP_229 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = T0_1 (c)* B1_1
[i]Type for TMP_230

Name: TMP_230 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_231(uint256) = TMP_230 (c)/ T1_1
[i]Type for TMP_231

Name: TMP_231 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_232(uint256) = B0_1 (c)+ TMP_231
Handling trace

Name: TMP_231 Function: calcCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: B0 Function: calcCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{2: 1, 1: -1}
[i]Type for TMP_232

Name: TMP_232 Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_depositValue_1(uint256) := TMP_232(uint256)
Finance type key: (-1, -1)
[i]Type for _depositValue

Name: _depositValue Function: calcCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = T1_1 (c)* B1_1
[i]Type for TMP_233

Name: TMP_233 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_234(uint256) = TMP_233 (c)/ T1_1
[i]Type for TMP_234

Name: TMP_234 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = B1_1 (c)+ TMP_234
[i]Type for TMP_235

Name: TMP_235 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_redemptionValue_1(uint256) := TMP_235(uint256)
Finance type key: (-1, -1)
[i]Type for _redemptionValue

Name: _redemptionValue Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = _redemptionValue_1 <= _depositValue_1
[i]Type for TMP_236

Name: TMP_236 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = _depositValue_1 (c)- _redemptionValue_1
[i]Type for TMP_237

Name: TMP_237 Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
coverage_1(uint256) := TMP_237(uint256)
Finance type key: (-1, -1)
[i]Type for coverage

Name: coverage Function: calcCoverage
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_120
member_1(address) := ϕ(['member_1'])
[i]Type for member

Name: member Function: getCoverage
Num: 
Den: 
Address: -989
Norm: u
LF: member
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token_1'])
[i]Type for token

Name: token Function: getCoverage
Num: 
Den: 
Address: -988
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
ROUTER_18(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_36(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_104 = CONVERT ROUTER_18 to iROUTER
[i]Type for TMP_104

Name: TMP_104 Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:TMP_104(iROUTER), function:getMemberBaseDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_105

Name: TMP_105 Function: getCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_19(address) := ϕ(['ROUTER_4', 'ROUTER_18', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_37(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_36', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_B0_1(uint256) := TMP_105(uint256)
Finance type key: (-1, -1)
[i]Type for _B0

Name: _B0 Function: getCoverage
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_106 = CONVERT ROUTER_19 to iROUTER
[i]Type for TMP_106

Name: TMP_106 Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_107(uint256) = HIGH_LEVEL_CALL, dest:TMP_106(iROUTER), function:getMemberTokenDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_107

Name: TMP_107 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_20(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_19', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getCoverage
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_38(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_37', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_T0_1(uint256) := TMP_107(uint256)
Finance type key: (-1, -1)
[i]Type for _T0

Name: _T0 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_108 = CONVERT POOLS_38 to iPOOLS
[i]Type for TMP_108

Name: TMP_108 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:TMP_108(iPOOLS), function:getMemberUnits, arguments:['token_1', 'member_1']  
[i]Type for TMP_109

Name: TMP_109 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_39(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_38', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_units_1(uint256) := TMP_109(uint256)
Finance type key: (-1, -1)
[i]Type for _units

Name: _units Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_110 = CONVERT POOLS_39 to iPOOLS
[i]Type for TMP_110

Name: TMP_110 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_110(iPOOLS), function:getUnits, arguments:['token_1']  
[i]Type for TMP_111

Name: TMP_111 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_40(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_39', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_112 = CONVERT POOLS_40 to iPOOLS
[i]Type for TMP_112

Name: TMP_112 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = HIGH_LEVEL_CALL, dest:TMP_112(iPOOLS), function:getBaseAmount, arguments:['token_1']  
[i]Type for TMP_113

Name: TMP_113 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_41(address) := ϕ(['POOLS_8', 'POOLS_40', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_114(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_units_1,TMP_111,TMP_113)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_B1_1(uint256) := TMP_114(uint256)
Finance type key: (-1, -1)
[i]Type for _B1

Name: _B1 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115 = CONVERT POOLS_42 to iPOOLS
[i]Type for TMP_115

Name: TMP_115 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_116(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(iPOOLS), function:getUnits, arguments:['token_1']  
[i]Type for TMP_116

Name: TMP_116 Function: getCoverage
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_43(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_42', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_117 = CONVERT POOLS_43 to iPOOLS
[i]Type for TMP_117

Name: TMP_117 Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = HIGH_LEVEL_CALL, dest:TMP_117(iPOOLS), function:getTokenAmount, arguments:['token_1']  
[i]Type for TMP_118

Name: TMP_118 Function: getCoverage
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_44(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_43', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCoverage
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_units_1,TMP_116,TMP_118)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_T1_1(uint256) := TMP_119(uint256)
Finance type key: (-1, -1)
[i]Type for _T1

Name: _T1 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Utils.calcCoverage(uint256,uint256,uint256,uint256)(_B0_1,_T0_1,_B1_1,_T1_1)
[i]Type for TMP_120

Name: TMP_120 Function: getCoverage
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_120
[i]Type for TMP_95

Name: TMP_95 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_15(address) := ϕ(['ROUTER_20'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
_coverage_1(uint256) := TMP_95(uint256)
Finance type key: (-1, -1)
[i]Type for _coverage

Name: _coverage Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT ROUTER_15 to iROUTER
[i]Type for TMP_96

Name: TMP_96 Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:TMP_96(iROUTER), function:isCurated, arguments:['token_1']  
[i]Type for TMP_97

Name: TMP_97 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_16(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_15', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT ROUTER_16 to iROUTER
[i]Type for TMP_98

Name: TMP_98 Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:TMP_98(iROUTER), function:getMemberLastDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_99

Name: TMP_99 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_17(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_100(uint256) = block.timestamp (c)- TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_duration_1(uint256) := TMP_100(uint256)
Finance type key: (-1, -1)
[i]Type for _duration

Name: _duration Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101(bool) = _duration_1 <= timeForFullProtection_1
[i]Type for TMP_101

Name: TMP_101 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_1(uint256) := _coverage_1(uint256)
Finance type key: (-1, -1)
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(basisPoints_1,protection_3)
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
[i]Type for TMP_103

Name: TMP_103 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_103
TMP_102(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_duration_1,timeForFullProtection_1,_coverage_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_2(uint256) := TMP_102(uint256)
Finance type key: (-1, -1)
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_3(uint256) := ϕ(['protection_2', 'protection_1'])
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_14(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_95(uint256) = INTERNAL_CALL, Utils.getCoverage(address,address)(member_1,token_1)
[i]Type for TMP_95

Name: TMP_95 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_15(address) := ϕ(['ROUTER_20'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
_coverage_1(uint256) := TMP_95(uint256)
Finance type key: (-1, -1)
[i]Type for _coverage

Name: _coverage Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT ROUTER_15 to iROUTER
[i]Type for TMP_96

Name: TMP_96 Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_97(bool) = HIGH_LEVEL_CALL, dest:TMP_96(iROUTER), function:isCurated, arguments:['token_1']  
[i]Type for TMP_97

Name: TMP_97 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_16(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_15', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT ROUTER_16 to iROUTER
[i]Type for TMP_98

Name: TMP_98 Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:TMP_98(iROUTER), function:getMemberLastDeposit, arguments:['member_1', 'token_1']  
[i]Type for TMP_99

Name: TMP_99 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ROUTER_17(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getProtection
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_100(uint256) = block.timestamp (c)- TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_duration_1(uint256) := TMP_100(uint256)
Finance type key: (-1, -1)
[i]Type for _duration

Name: _duration Function: getProtection
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101(bool) = _duration_1 <= timeForFullProtection_1
[i]Type for TMP_101

Name: TMP_101 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_1(uint256) := _coverage_1(uint256)
Finance type key: (-1, -1)
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = INTERNAL_CALL, Utils.calcPart(uint256,uint256)(basisPoints_1,protection_3)
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
[i]Type for TMP_103

Name: TMP_103 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_103
TMP_102(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(_duration_1,timeForFullProtection_1,_coverage_1)
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_2(uint256) := TMP_102(uint256)
Finance type key: (-1, -1)
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protection_3(uint256) := ϕ(['protection_2', 'protection_1'])
[i]Type for protection

Name: protection Function: getProtection
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



getCollateralValueInBase
POOLS_46(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
FACTORY_2(address) := ϕ(['FACTORY_1', 'FACTORY_0', 'FACTORY_3', 'FACTORY_9', 'FACTORY_10'])
[i]Type for FACTORY

Name: FACTORY Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_121(uint256) = collateral_1 (c)* 6666
[i]Type for TMP_121

Name: TMP_121 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6666
Fields: 
Finance Type: undef
TMP_122(uint256) = TMP_121 (c)/ 10000
[i]Type for TMP_122

Name: TMP_122 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralAdjusted_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralAdjusted

Name: _collateralAdjusted Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_123(bool) = INTERNAL_CALL, Utils.isBase(address)(collateralAsset_1)
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
[i]Type for TMP_123

Name: TMP_123 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(bool) = INTERNAL_CALL, Utils.isPool(address)(collateralAsset_1)
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_48(address) := ϕ(['POOLS_15'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_130 = CONVERT FACTORY_4 to iFACTORY
[i]Type for TMP_130

Name: TMP_130 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = HIGH_LEVEL_CALL, dest:TMP_130(iFACTORY), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_131

Name: TMP_131 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FACTORY_5(address) := ϕ(['FACTORY_1', 'FACTORY_4', 'FACTORY_3', 'FACTORY_9', 'FACTORY_10'])
[i]Type for FACTORY

Name: FACTORY Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_125 = CONVERT POOLS_48 to iPOOLS
[i]Type for TMP_125

Name: TMP_125 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = HIGH_LEVEL_CALL, dest:TMP_125(iPOOLS), function:getMemberUnits, arguments:['collateralAsset_1', 'member_1']  
[i]Type for TMP_126

Name: TMP_126 Function: getCollateralValueInBase
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_49(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_48', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT POOLS_49 to iPOOLS
[i]Type for TMP_127

Name: TMP_127 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_127(iPOOLS), function:getBaseAmount, arguments:['collateralAsset_1']  
[i]Type for TMP_128

Name: TMP_128 Function: getCollateralValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_50(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_49', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = INTERNAL_CALL, Utils.calcAsymmetricShare(uint256,uint256,uint256)(_collateralAdjusted_1,TMP_126,TMP_128)
u_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for u

Name: u Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
U_1(uint256) := ϕ(['TMP_126'])
[i]Type for U

Name: U Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
A_1(uint256) := ϕ(['TMP_128'])
[i]Type for A

Name: A Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_215(uint256) = u_1 (c)* A_1
[i]Type for TMP_215

Name: TMP_215 Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_216(uint256) = U_1 (c)* U_1
[i]Type for TMP_216

Name: TMP_216 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_217(uint256) = TMP_216 (c)* 2
[i]Type for TMP_217

Name: TMP_217 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_217(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_218(uint256) = U_1 (c)* u_1
[i]Type for TMP_218

Name: TMP_218 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)* 2
[i]Type for TMP_219

Name: TMP_219 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_219(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_220(uint256) = u_1 (c)* u_1
[i]Type for TMP_220

Name: TMP_220 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_220(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_221(uint256) = part1_1 (c)* part2_1
[i]Type for TMP_221

Name: TMP_221 Function: calcAsymmetricShare
Num: 2, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)- part3_1
Handling trace

Name: part3 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_221 Function: calcAsymmetricShare
Num: 2, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{3: -1, 2: -1}
Error with TMP_222 in function calcAsymmetricShare
Error with: TMP_222 in function calcAsymmetricShare
[i]Type for TMP_222

Name: TMP_222 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_223(uint256) = TMP_222 (c)+ part4_1
[i]Type for TMP_223

Name: TMP_223 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_223(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_224(uint256) = U_1 (c)* U_1
[i]Type for TMP_224

Name: TMP_224 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_225(uint256) = TMP_224 (c)* U_1
[i]Type for TMP_225

Name: TMP_225 Function: calcAsymmetricShare
Num: 3, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part5_1(uint256) := TMP_225(uint256)
Finance type key: (-1, -1)
[i]Type for part5

Name: part5 Function: calcAsymmetricShare
Num: 3, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = numerator_1 (c)/ part5_1
[i]Type for TMP_226

Name: TMP_226 Function: calcAsymmetricShare
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_226
u_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for u

Name: u Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
U_1(uint256) := ϕ(['TMP_126'])
[i]Type for U

Name: U Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
A_1(uint256) := ϕ(['TMP_128'])
[i]Type for A

Name: A Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_215(uint256) = u_1 (c)* A_1
[i]Type for TMP_215

Name: TMP_215 Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcAsymmetricShare
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_216(uint256) = U_1 (c)* U_1
[i]Type for TMP_216

Name: TMP_216 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_217(uint256) = TMP_216 (c)* 2
[i]Type for TMP_217

Name: TMP_217 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_217(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_218(uint256) = U_1 (c)* u_1
[i]Type for TMP_218

Name: TMP_218 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)* 2
[i]Type for TMP_219

Name: TMP_219 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_219(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_220(uint256) = u_1 (c)* u_1
[i]Type for TMP_220

Name: TMP_220 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_220(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_221(uint256) = part1_1 (c)* part2_1
[i]Type for TMP_221

Name: TMP_221 Function: calcAsymmetricShare
Num: 2, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)- part3_1
Handling trace

Name: part3 Function: calcAsymmetricShare
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_221 Function: calcAsymmetricShare
Num: 2, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
d:{3: -1, 2: -1}
[i]Type for TMP_222

Name: TMP_222 Function: calcAsymmetricShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_223(uint256) = TMP_222 (c)+ part4_1
[i]Type for TMP_223

Name: TMP_223 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_223(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_224(uint256) = U_1 (c)* U_1
[i]Type for TMP_224

Name: TMP_224 Function: calcAsymmetricShare
Num: 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_225(uint256) = TMP_224 (c)* U_1
[i]Type for TMP_225

Name: TMP_225 Function: calcAsymmetricShare
Num: 3, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part5_1(uint256) := TMP_225(uint256)
Finance type key: (-1, -1)
[i]Type for part5

Name: part5 Function: calcAsymmetricShare
Num: 3, 3, 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_226(uint256) = numerator_1 (c)/ part5_1
[i]Type for TMP_226

Name: TMP_226 Function: calcAsymmetricShare
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_226
[i]Type for TMP_129

Name: TMP_129 Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_3(uint256) := TMP_129(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_5(uint256) := _collateralAdjusted_1(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_2(uint256) := ϕ(['baseValue_0', 'baseValue_1'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
baseValue_4(uint256) := ϕ(['baseValue_0', 'baseValue_3'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_132 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_132

Name: TMP_132 Function: getCollateralValueInBase
Num: 
Den: 
Address: -986
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_133(address) = HIGH_LEVEL_CALL, dest:TMP_132(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_133

Name: TMP_133 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(uint256) = INTERNAL_CALL, Utils.calcSwapValueInBase(address,uint256)(TMP_133,_collateralAdjusted_1)
token_1(address) := ϕ(['TMP_133'])
[i]Type for token

Name: token Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for amount

Name: amount Function: calcSwapValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_20(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_53 = CONVERT POOLS_20 to iPOOLS
[i]Type for TMP_53

Name: TMP_53 Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_2

Name: TUPLE_2 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_21(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 1, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 1, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 1, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 1, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 1, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
[i]Type for TMP_54

Name: TMP_54 Function: calcSwapValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_54
token_1(address) := ϕ(['TMP_133'])
[i]Type for token

Name: token Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for amount

Name: amount Function: calcSwapValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_20(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_53 = CONVERT POOLS_20 to iPOOLS
[i]Type for TMP_53

Name: TMP_53 Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_53(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_2

Name: TUPLE_2 Function: calcSwapValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_21(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_20', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_2 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_2 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInBase
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_54(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_tokenAmt_1,_baseAmt_1)
[i]Type for TMP_54

Name: TMP_54 Function: calcSwapValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_54
[i]Type for TMP_134

Name: TMP_134 Function: getCollateralValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_6(uint256) := ϕ(['baseValue_0', 'baseValue_5'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(uint256) = INTERNAL_CALL, Utils.calcSwapValueInToken(address,uint256)(debtAsset_1,baseValue_6)
token_1(address) := ϕ(['debtAsset_1'])
[i]Type for token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -985
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['baseValue_6'])
[i]Type for amount

Name: amount Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_22(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_55 = CONVERT POOLS_22 to iPOOLS
[i]Type for TMP_55

Name: TMP_55 Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_23(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
[i]Type for TMP_56

Name: TMP_56 Function: calcSwapValueInToken
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_56
token_1(address) := ϕ(['debtAsset_1'])
[i]Type for token

Name: token Function: calcSwapValueInToken
Num: 
Den: 
Address: -985
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['baseValue_6'])
[i]Type for amount

Name: amount Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_22(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_55 = CONVERT POOLS_22 to iPOOLS
[i]Type for TMP_55

Name: TMP_55 Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_55(iPOOLS), function:getPoolAmounts, arguments:['token_1']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calcSwapValueInToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_23(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_22', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: calcSwapValueInToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_baseAmt_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _baseAmt

Name: _baseAmt Function: calcSwapValueInToken
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_tokenAmt_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for _tokenAmt

Name: _tokenAmt Function: calcSwapValueInToken
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_56(uint256) = INTERNAL_CALL, Utils.calcSwapOutput(uint256,uint256,uint256)(amount_1,_baseAmt_1,_tokenAmt_1)
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: 2, 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: 2, 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_178
[i]Type for TMP_56

Name: TMP_56 Function: calcSwapValueInToken
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_56
[i]Type for TMP_135

Name: TMP_135 Function: getCollateralValueInBase
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
debt_1(uint256) := TMP_135(uint256)
Finance type key: (-1, -1)
[i]Type for debt

Name: debt Function: getCollateralValueInBase
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN debt_1,baseValue_6
POOLS_46(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
FACTORY_2(address) := ϕ(['FACTORY_1', 'FACTORY_0', 'FACTORY_3', 'FACTORY_9', 'FACTORY_10'])
[i]Type for FACTORY

Name: FACTORY Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_121(uint256) = collateral_1 (c)* 6666
[i]Type for TMP_121

Name: TMP_121 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6666
Fields: 
Finance Type: undef
TMP_122(uint256) = TMP_121 (c)/ 10000
[i]Type for TMP_122

Name: TMP_122 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralAdjusted_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralAdjusted

Name: _collateralAdjusted Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_123(bool) = INTERNAL_CALL, Utils.isBase(address)(collateralAsset_1)
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
token_1(address) := ϕ(['collateralAsset_1', 'collateralAsset_1'])
[i]Type for token

Name: token Function: isBase
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
VADER_3(address) := ϕ(['VADER_0', 'VADER_6', 'VADER_1'])
[i]Type for VADER

Name: VADER Function: isBase
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
USDV_3(address) := ϕ(['USDV_1', 'USDV_0'])
[i]Type for USDV

Name: USDV Function: isBase
Num: -1
Den: -1
Address: 1
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
TMP_31(bool) = token_1 == VADER_3
[i]Type for TMP_31

Name: TMP_31 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_32(bool) = token_1 == USDV_3
[i]Type for TMP_32

Name: TMP_32 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33(bool) = TMP_31 || TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: isBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN True
[i]Type for TMP_123

Name: TMP_123 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(bool) = INTERNAL_CALL, Utils.isPool(address)(collateralAsset_1)
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
token_1(address) := ϕ(['collateralAsset_1'])
[i]Type for token

Name: token Function: isPool
Num: 
Den: 
Address: -986
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
POOLS_13(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT POOLS_13 to iPOOLS
[i]Type for TMP_34

Name: TMP_34 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = HIGH_LEVEL_CALL, dest:TMP_34(iPOOLS), function:isAnchor, arguments:['token_1']  
[i]Type for TMP_35

Name: TMP_35 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_14(address) := ϕ(['POOLS_8', 'POOLS_13', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT POOLS_14 to iPOOLS
[i]Type for TMP_36

Name: TMP_36 Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = HIGH_LEVEL_CALL, dest:TMP_36(iPOOLS), function:isAsset, arguments:['token_1']  
[i]Type for TMP_37

Name: TMP_37 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_15(address) := ϕ(['POOLS_8', 'POOLS_14', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: isPool
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = TMP_35 || TMP_37
[i]Type for TMP_38

Name: TMP_38 Function: isPool
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pool_1(bool) := True(bool)
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: isPool
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POOLS_48(address) := ϕ(['POOLS_15'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_130 = CONVERT FACTORY_4 to iFACTORY
[i]Type for TMP_130

Name: TMP_130 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = HIGH_LEVEL_CALL, dest:TMP_130(iFACTORY), function:isSynth, arguments:['collateralAsset_1']  
[i]Type for TMP_131

Name: TMP_131 Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FACTORY_5(address) := ϕ(['FACTORY_1', 'FACTORY_4', 'FACTORY_3', 'FACTORY_9', 'FACTORY_10'])
[i]Type for FACTORY

Name: FACTORY Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 5
Norm: u
LF: FACTORY
Value: u
Fields: 
Finance Type: undef
TMP_125 = CONVERT POOLS_48 to iPOOLS
[i]Type for TMP_125

Name: TMP_125 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = HIGH_LEVEL_CALL, dest:TMP_125(iPOOLS), function:getMemberUnits, arguments:['collateralAsset_1', 'member_1']  
[i]Type for TMP_126

Name: TMP_126 Function: getCollateralValueInBase
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_49(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_48', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT POOLS_49 to iPOOLS
[i]Type for TMP_127

Name: TMP_127 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_127(iPOOLS), function:getBaseAmount, arguments:['collateralAsset_1']  
[i]Type for TMP_128

Name: TMP_128 Function: getCollateralValueInBase
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_50(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_49', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = INTERNAL_CALL, Utils.calcAsymmetricShare(uint256,uint256,uint256)(_collateralAdjusted_1,TMP_126,TMP_128)
[i]Type for TMP_129

Name: TMP_129 Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_3(uint256) := TMP_129(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_5(uint256) := _collateralAdjusted_1(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_2(uint256) := ϕ(['baseValue_0', 'baseValue_1'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_4(uint256) := ϕ(['baseValue_0', 'baseValue_3'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: -1
Den: 3, 3, 3
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_132 = CONVERT collateralAsset_1 to iSYNTH
[i]Type for TMP_132

Name: TMP_132 Function: getCollateralValueInBase
Num: 
Den: 
Address: -986
Norm: 6
LF: SYNTH
Value: u
Fields: 
Finance Type: undef
TMP_133(address) = HIGH_LEVEL_CALL, dest:TMP_132(iSYNTH), function:TOKEN, arguments:[]  
[i]Type for TMP_133

Name: TMP_133 Function: getCollateralValueInBase
Num: -1
Den: -1
Address: 3
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(uint256) = INTERNAL_CALL, Utils.calcSwapValueInBase(address,uint256)(TMP_133,_collateralAdjusted_1)
[i]Type for TMP_134

Name: TMP_134 Function: getCollateralValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
baseValue_6(uint256) := ϕ(['baseValue_0', 'baseValue_5'])
[i]Type for baseValue

Name: baseValue Function: getCollateralValueInBase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(uint256) = INTERNAL_CALL, Utils.calcSwapValueInToken(address,uint256)(debtAsset_1,baseValue_6)
[i]Type for TMP_135

Name: TMP_135 Function: getCollateralValueInBase
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
debt_1(uint256) := TMP_135(uint256)
Finance type key: (-1, -1)
[i]Type for debt

Name: debt Function: getCollateralValueInBase
Num: 1
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN debt_1,baseValue_6



getInterestPayment
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getInterestPayment
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getInterestPayment
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_26(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_153(uint256) = INTERNAL_CALL, Utils.getDebtLoading(address,address)(collateralAsset_1,debtAsset_1)
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getDebtLoading
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getDebtLoading
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_29(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_52(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_158 = CONVERT ROUTER_29 to iROUTER
[i]Type for TMP_158

Name: TMP_158 Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = HIGH_LEVEL_CALL, dest:TMP_158(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_159

Name: TMP_159 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_30(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_29', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_53(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_52', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtIssued_1(uint256) := TMP_159(uint256)
Finance type key: (-1, -1)
[i]Type for _debtIssued

Name: _debtIssued Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_160 = CONVERT POOLS_53 to iPOOLS
[i]Type for TMP_160

Name: TMP_160 Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = HIGH_LEVEL_CALL, dest:TMP_160(iPOOLS), function:getTokenAmount, arguments:['debtAsset_1']  
[i]Type for TMP_161

Name: TMP_161 Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_54(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_53', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtDepth_1(uint256) := TMP_161(uint256)
Finance type key: (-1, -1)
[i]Type for _debtDepth

Name: _debtDepth Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_162(uint256) = _debtIssued_1 (c)* 10000
[i]Type for TMP_162

Name: TMP_162 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_163(uint256) = TMP_162 (c)/ _debtDepth_1
[i]Type for TMP_163

Name: TMP_163 Function: getDebtLoading
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_163
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getDebtLoading
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getDebtLoading
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_29(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_52(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_158 = CONVERT ROUTER_29 to iROUTER
[i]Type for TMP_158

Name: TMP_158 Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = HIGH_LEVEL_CALL, dest:TMP_158(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_159

Name: TMP_159 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_30(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_29', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_53(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_52', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtIssued_1(uint256) := TMP_159(uint256)
Finance type key: (-1, -1)
[i]Type for _debtIssued

Name: _debtIssued Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_160 = CONVERT POOLS_53 to iPOOLS
[i]Type for TMP_160

Name: TMP_160 Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = HIGH_LEVEL_CALL, dest:TMP_160(iPOOLS), function:getTokenAmount, arguments:['debtAsset_1']  
[i]Type for TMP_161

Name: TMP_161 Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_54(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_53', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtDepth_1(uint256) := TMP_161(uint256)
Finance type key: (-1, -1)
[i]Type for _debtDepth

Name: _debtDepth Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_162(uint256) = _debtIssued_1 (c)* 10000
[i]Type for TMP_162

Name: TMP_162 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_163(uint256) = TMP_162 (c)/ _debtDepth_1
[i]Type for TMP_163

Name: TMP_163 Function: getDebtLoading
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_163
[i]Type for TMP_153

Name: TMP_153 Function: getInterestPayment
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_27(address) := ϕ(['ROUTER_30'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
_debtLoading_1(uint256) := TMP_153(uint256)
Finance type key: (-1, -1)
[i]Type for _debtLoading

Name: _debtLoading Function: getInterestPayment
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_154 = CONVERT ROUTER_27 to iROUTER
[i]Type for TMP_154

Name: TMP_154 Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_155(uint256) = HIGH_LEVEL_CALL, dest:TMP_154(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_155

Name: TMP_155 Function: getInterestPayment
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_28(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_27', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = _debtLoading_1 (c)* TMP_155
[i]Type for TMP_156

Name: TMP_156 Function: getInterestPayment
Num: 3, 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_157(uint256) = TMP_156 (c)/ 10000
[i]Type for TMP_157

Name: TMP_157 Function: getInterestPayment
Num: 3, 3
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_157
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getInterestPayment
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getInterestPayment
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_26(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_153(uint256) = INTERNAL_CALL, Utils.getDebtLoading(address,address)(collateralAsset_1,debtAsset_1)
[i]Type for TMP_153

Name: TMP_153 Function: getInterestPayment
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_27(address) := ϕ(['ROUTER_30'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
_debtLoading_1(uint256) := TMP_153(uint256)
Finance type key: (-1, -1)
[i]Type for _debtLoading

Name: _debtLoading Function: getInterestPayment
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_154 = CONVERT ROUTER_27 to iROUTER
[i]Type for TMP_154

Name: TMP_154 Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_155(uint256) = HIGH_LEVEL_CALL, dest:TMP_154(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_155

Name: TMP_155 Function: getInterestPayment
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_28(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_27', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getInterestPayment
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_156(uint256) = _debtLoading_1 (c)* TMP_155
[i]Type for TMP_156

Name: TMP_156 Function: getInterestPayment
Num: 3, 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_157(uint256) = TMP_156 (c)/ 10000
[i]Type for TMP_157

Name: TMP_157 Function: getInterestPayment
Num: 3, 3
Den: 2
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_157



getDebtLoading
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getDebtLoading
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getDebtLoading
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_29(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_52(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_158 = CONVERT ROUTER_29 to iROUTER
[i]Type for TMP_158

Name: TMP_158 Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = HIGH_LEVEL_CALL, dest:TMP_158(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_159

Name: TMP_159 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_30(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_29', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_53(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_52', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtIssued_1(uint256) := TMP_159(uint256)
Finance type key: (-1, -1)
[i]Type for _debtIssued

Name: _debtIssued Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_160 = CONVERT POOLS_53 to iPOOLS
[i]Type for TMP_160

Name: TMP_160 Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = HIGH_LEVEL_CALL, dest:TMP_160(iPOOLS), function:getTokenAmount, arguments:['debtAsset_1']  
[i]Type for TMP_161

Name: TMP_161 Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_54(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_53', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtDepth_1(uint256) := TMP_161(uint256)
Finance type key: (-1, -1)
[i]Type for _debtDepth

Name: _debtDepth Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_162(uint256) = _debtIssued_1 (c)* 10000
[i]Type for TMP_162

Name: TMP_162 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_163(uint256) = TMP_162 (c)/ _debtDepth_1
[i]Type for TMP_163

Name: TMP_163 Function: getDebtLoading
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_163
collateralAsset_1(address) := ϕ(['collateralAsset_1'])
[i]Type for collateralAsset

Name: collateralAsset Function: getDebtLoading
Num: 
Den: 
Address: -984
Norm: 6
LF: collateralAsset
Value: u
Fields: 
Finance Type: undef
debtAsset_1(address) := ϕ(['debtAsset_1'])
[i]Type for debtAsset

Name: debtAsset Function: getDebtLoading
Num: 
Den: 
Address: -983
Norm: 18
LF: debtAsset
Value: u
Fields: 
Finance Type: undef
ROUTER_29(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_0', 'ROUTER_13', 'ROUTER_30', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_52(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_0', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_158 = CONVERT ROUTER_29 to iROUTER
[i]Type for TMP_158

Name: TMP_158 Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
TMP_159(uint256) = HIGH_LEVEL_CALL, dest:TMP_158(iROUTER), function:getSystemDebt, arguments:['collateralAsset_1', 'debtAsset_1']  
[i]Type for TMP_159

Name: TMP_159 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
ROUTER_30(address) := ϕ(['ROUTER_4', 'ROUTER_7', 'ROUTER_20', 'ROUTER_25', 'ROUTER_28', 'ROUTER_13', 'ROUTER_30', 'ROUTER_29', 'ROUTER_10', 'ROUTER_1', 'ROUTER_16'])
[i]Type for ROUTER

Name: ROUTER Function: getDebtLoading
Num: -1
Den: -1
Address: 4
Norm: u
LF: ROUTER
Value: u
Fields: 
Finance Type: undef
POOLS_53(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_52', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtIssued_1(uint256) := TMP_159(uint256)
Finance type key: (-1, -1)
[i]Type for _debtIssued

Name: _debtIssued Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_160 = CONVERT POOLS_53 to iPOOLS
[i]Type for TMP_160

Name: TMP_160 Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = HIGH_LEVEL_CALL, dest:TMP_160(iPOOLS), function:getTokenAmount, arguments:['debtAsset_1']  
[i]Type for TMP_161

Name: TMP_161 Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
POOLS_54(address) := ϕ(['POOLS_8', 'POOLS_45', 'POOLS_19', 'POOLS_29', 'POOLS_47', 'POOLS_54', 'POOLS_10', 'POOLS_12', 'POOLS_17', 'POOLS_23', 'POOLS_15', 'POOLS_11', 'POOLS_35', 'POOLS_53', 'POOLS_32', 'POOLS_9', 'POOLS_1', 'POOLS_26', 'POOLS_21'])
[i]Type for POOLS

Name: POOLS Function: getDebtLoading
Num: -1
Den: -1
Address: 3
Norm: u
LF: POOLS
Value: u
Fields: 
Finance Type: undef
_debtDepth_1(uint256) := TMP_161(uint256)
Finance type key: (-1, -1)
[i]Type for _debtDepth

Name: _debtDepth Function: getDebtLoading
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_162(uint256) = _debtIssued_1 (c)* 10000
[i]Type for TMP_162

Name: TMP_162 Function: getDebtLoading
Num: 3
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_163(uint256) = TMP_162 (c)/ _debtDepth_1
[i]Type for TMP_163

Name: TMP_163 Function: getDebtLoading
Num: 3
Den: 2
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_163



calcPart
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168
bp_1(uint256) := ϕ(['basisPoints_1', 'TMP_58'])
[i]Type for bp

Name: bp Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['protection_3', 'targetPrice_1'])
[i]Type for total

Name: total Function: calcPart
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = bp_1 <= 10000
[i]Type for TMP_164

Name: TMP_164 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = bp_1 >= 0
[i]Type for TMP_165

Name: TMP_165 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = TMP_164 && TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(None) = SOLIDITY_CALL require(bool,string)(TMP_166,Must be correct BP)
[i]Type for TMP_167

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = INTERNAL_CALL, Utils.calcShare(uint256,uint256,uint256)(bp_1,10000,total_1)
[i]Type for TMP_168

Name: TMP_168 Function: calcPart
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_168



calcShare
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part_1(uint256) := ϕ(['bp_1', 'totalSupply_1', '_memberCollateral_1', 'debt_1', 'timeElapsed_1', '_duration_1', '_units_1', '_baseAmount_1'])
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_1(uint256) := ϕ(['maxSupply_1', 'TMP_81', 'timeForFullProtection_1', 'TMP_89', 'TMP_116', 'rewardReductionFactor_1', '_year_2', '_collateral_1', '_memberDebt_1', 'TMP_111'])
[i]Type for total

Name: total Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['TMP_146', '_coverage_1', '_memberCollateral_1', 'amount_1', 'total_1', 'TMP_83', 'TMP_91', 'TMP_113', 'TMP_118', '_interestPaid_1'])
[i]Type for amount

Name: amount Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = part_1 > total_1
[i]Type for TMP_169

Name: TMP_169 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_2(uint256) := total_1(uint256)
Finance type key: (-1, -1)
[i]Type for part

Name: part Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part_3(uint256) := ϕ(['part_2', 'part_1'])
[i]Type for part

Name: part Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_170(bool) = total_1 > 0
[i]Type for TMP_170

Name: TMP_170 Function: calcShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = amount_1 (c)* part_3
[i]Type for TMP_171

Name: TMP_171 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_172(uint256) = TMP_171 (c)/ total_1
[i]Type for TMP_172

Name: TMP_172 Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
share_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for share

Name: share Function: calcShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef



calcSwapOutput
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_178
x_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for x

Name: x Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
X_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for X

Name: X Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Y_1(uint256) := ϕ(['_baseAmt_1', '_tokenAmt_1'])
[i]Type for Y

Name: Y Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173(uint256) = x_1 (c)* X_1
[i]Type for TMP_173

Name: TMP_173 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = TMP_173 (c)* Y_1
[i]Type for TMP_174

Name: TMP_174 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_174(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(uint256) = x_1 (c)+ X_1
[i]Type for TMP_175

Name: TMP_175 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(uint256) = x_1 (c)+ X_1
[i]Type for TMP_176

Name: TMP_176 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = TMP_175 (c)* TMP_176
[i]Type for TMP_177

Name: TMP_177 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_177(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_178

Name: TMP_178 Function: calcSwapOutput
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_178



calcSwapFee
TMP_179(uint256) = x_1 (c)* x_1
[i]Type for TMP_179

Name: TMP_179 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = TMP_179 (c)* Y_1
[i]Type for TMP_180

Name: TMP_180 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_180(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = x_1 (c)+ X_1
[i]Type for TMP_181

Name: TMP_181 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = x_1 (c)+ X_1
[i]Type for TMP_182

Name: TMP_182 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_181 (c)* TMP_182
[i]Type for TMP_183

Name: TMP_183 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_184

Name: TMP_184 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_184
TMP_179(uint256) = x_1 (c)* x_1
[i]Type for TMP_179

Name: TMP_179 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(uint256) = TMP_179 (c)* Y_1
[i]Type for TMP_180

Name: TMP_180 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_180(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = x_1 (c)+ X_1
[i]Type for TMP_181

Name: TMP_181 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = x_1 (c)+ X_1
[i]Type for TMP_182

Name: TMP_182 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(uint256) = TMP_181 (c)* TMP_182
[i]Type for TMP_183

Name: TMP_183 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_183(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = numerator_1 (c)/ denominator_1
[i]Type for TMP_184

Name: TMP_184 Function: calcSwapFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_184



calcSwapSlip
TMP_185(uint256) = x_1 (c)* 10000
[i]Type for TMP_185

Name: TMP_185 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
TMP_186(uint256) = x_1 (c)+ X_1
[i]Type for TMP_186

Name: TMP_186 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(uint256) = TMP_185 (c)/ TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
RETURN TMP_187
TMP_185(uint256) = x_1 (c)* 10000
[i]Type for TMP_185

Name: TMP_185 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
TMP_186(uint256) = x_1 (c)+ X_1
[i]Type for TMP_186

Name: TMP_186 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(uint256) = TMP_185 (c)/ TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: calcSwapSlip
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
RETURN TMP_187



calcLiquidityUnits
one_3(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_188(bool) = P_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: calcLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Utils.getSlipAdustment(uint256,uint256,uint256,uint256)(b_1,B_1,t_1,T_1)
b_1(uint256) := ϕ(['b_1'])
[i]Type for b

Name: b Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
B_1(uint256) := ϕ(['B_1'])
[i]Type for B

Name: B Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
t_1(uint256) := ϕ(['t_1'])
[i]Type for t

Name: t Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
T_1(uint256) := ϕ(['T_1'])
[i]Type for T

Name: T Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
one_5(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(uint256) = B_1 (c)* t_1
[i]Type for TMP_199

Name: TMP_199 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = b_1 (c)* T_1
[i]Type for TMP_200

Name: TMP_200 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = b_1 (c)* 2
[i]Type for TMP_201

Name: TMP_201 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)+ B_1
[i]Type for TMP_202

Name: TMP_202 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_203(uint256) = t_1 (c)+ T_1
[i]Type for TMP_203

Name: TMP_203 Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_203(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(bool) = part1_1 > part2_1
[i]Type for TMP_204

Name: TMP_204 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = part2_1 (c)- part1_1
[i]Type for TMP_206

Name: TMP_206 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_2(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = part1_1 (c)- part2_1
[i]Type for TMP_205

Name: TMP_205 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_205(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_3(uint256) := ϕ(['numerator_1', 'numerator_2'])
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = part3_1 (c)* part4_1
[i]Type for TMP_207

Name: TMP_207 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_207(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_208(uint256) = numerator_3 (c)* one_5
[i]Type for TMP_208

Name: TMP_208 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = TMP_208 (c)/ denominator_1
[i]Type for TMP_209

Name: TMP_209 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_210(uint256) = one_5 (c)- TMP_209
[i]Type for TMP_210

Name: TMP_210 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_210
b_1(uint256) := ϕ(['b_1'])
[i]Type for b

Name: b Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
B_1(uint256) := ϕ(['B_1'])
[i]Type for B

Name: B Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
t_1(uint256) := ϕ(['t_1'])
[i]Type for t

Name: t Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
T_1(uint256) := ϕ(['T_1'])
[i]Type for T

Name: T Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
one_5(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(uint256) = B_1 (c)* t_1
[i]Type for TMP_199

Name: TMP_199 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = b_1 (c)* T_1
[i]Type for TMP_200

Name: TMP_200 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = b_1 (c)* 2
[i]Type for TMP_201

Name: TMP_201 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)+ B_1
[i]Type for TMP_202

Name: TMP_202 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: getSlipAdustment
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_203(uint256) = t_1 (c)+ T_1
[i]Type for TMP_203

Name: TMP_203 Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_203(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: getSlipAdustment
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(bool) = part1_1 > part2_1
[i]Type for TMP_204

Name: TMP_204 Function: getSlipAdustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = part2_1 (c)- part1_1
[i]Type for TMP_206

Name: TMP_206 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_2(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = part1_1 (c)- part2_1
[i]Type for TMP_205

Name: TMP_205 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_205(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_3(uint256) := ϕ(['numerator_1', 'numerator_2'])
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = part3_1 (c)* part4_1
[i]Type for TMP_207

Name: TMP_207 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_207(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_208(uint256) = numerator_3 (c)* one_5
[i]Type for TMP_208

Name: TMP_208 Function: getSlipAdustment
Num: 1, 2
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = TMP_208 (c)/ denominator_1
[i]Type for TMP_209

Name: TMP_209 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_210(uint256) = one_5 (c)- TMP_209
[i]Type for TMP_210

Name: TMP_210 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_210
[i]Type for TMP_189

Name: TMP_189 Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
slipAdjustment_1(uint256) := TMP_189(uint256)
Finance type key: (-1, -1)
[i]Type for slipAdjustment

Name: slipAdjustment Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN b_1
TMP_190(uint256) = t_1 (c)* B_1
[i]Type for TMP_190

Name: TMP_190 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint256) = T_1 (c)* b_1
[i]Type for TMP_191

Name: TMP_191 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_191(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192(uint256) = T_1 (c)* B_1
[i]Type for TMP_192

Name: TMP_192 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = TMP_192 (c)* 2
[i]Type for TMP_193

Name: TMP_193 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_194(uint256) = P_1 (c)* part1_1
[i]Type for TMP_194

Name: TMP_194 Function: calcLiquidityUnits
Num: 6, 2, 1
Den: -1
Address: u
Norm: 42
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = TMP_194 (c)+ part2_1
Handling trace

Name: part2 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_194 Function: calcLiquidityUnits
Num: 6, 2, 1
Den: -1
Address: u
Norm: 42
LF: None
Value: u
Fields: 
Finance Type: undef
d:{2: 0, 1: 0, 6: -1}
Error with TMP_195 in function calcLiquidityUnits
Error with: TMP_195 in function calcLiquidityUnits
[i]Type for TMP_195

Name: TMP_195 Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = TMP_195 (c)/ part3_1
[i]Type for TMP_196

Name: TMP_196 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_units_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for _units

Name: _units Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_197(uint256) = _units_1 (c)* slipAdjustment_1
[i]Type for TMP_197

Name: TMP_197 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_198(uint256) = TMP_197 (c)/ one_4
[i]Type for TMP_198

Name: TMP_198 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
RETURN TMP_198
one_3(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_188(bool) = P_1 == 0
[i]Type for TMP_188

Name: TMP_188 Function: calcLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Utils.getSlipAdustment(uint256,uint256,uint256,uint256)(b_1,B_1,t_1,T_1)
[i]Type for TMP_189

Name: TMP_189 Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
slipAdjustment_1(uint256) := TMP_189(uint256)
Finance type key: (-1, -1)
[i]Type for slipAdjustment

Name: slipAdjustment Function: calcLiquidityUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN b_1
TMP_190(uint256) = t_1 (c)* B_1
[i]Type for TMP_190

Name: TMP_190 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_190(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint256) = T_1 (c)* b_1
[i]Type for TMP_191

Name: TMP_191 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_191(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192(uint256) = T_1 (c)* B_1
[i]Type for TMP_192

Name: TMP_192 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = TMP_192 (c)* 2
[i]Type for TMP_193

Name: TMP_193 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_193(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_194(uint256) = P_1 (c)* part1_1
[i]Type for TMP_194

Name: TMP_194 Function: calcLiquidityUnits
Num: 6, 2, 1
Den: -1
Address: u
Norm: 42
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = TMP_194 (c)+ part2_1
Handling trace

Name: part2 Function: calcLiquidityUnits
Num: 2, 1
Den: -1
Address: u
Norm: 24
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_194 Function: calcLiquidityUnits
Num: 6, 2, 1
Den: -1
Address: u
Norm: 42
LF: None
Value: u
Fields: 
Finance Type: undef
d:{2: 0, 1: 0, 6: -1}
[i]Type for TMP_195

Name: TMP_195 Function: calcLiquidityUnits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = TMP_195 (c)/ part3_1
[i]Type for TMP_196

Name: TMP_196 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_units_1(uint256) := TMP_196(uint256)
Finance type key: (-1, -1)
[i]Type for _units

Name: _units Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_197(uint256) = _units_1 (c)* slipAdjustment_1
[i]Type for TMP_197

Name: TMP_197 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
TMP_198(uint256) = TMP_197 (c)/ one_4
[i]Type for TMP_198

Name: TMP_198 Function: calcLiquidityUnits
Num: -1
Den: 2, 1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
RETURN TMP_198



getSlipAdustment
b_1(uint256) := ϕ(['b_1'])
[i]Type for b

Name: b Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
B_1(uint256) := ϕ(['B_1'])
[i]Type for B

Name: B Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
t_1(uint256) := ϕ(['t_1'])
[i]Type for t

Name: t Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
T_1(uint256) := ϕ(['T_1'])
[i]Type for T

Name: T Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
one_5(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(uint256) = B_1 (c)* t_1
[i]Type for TMP_199

Name: TMP_199 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = b_1 (c)* T_1
[i]Type for TMP_200

Name: TMP_200 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = b_1 (c)* 2
[i]Type for TMP_201

Name: TMP_201 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)+ B_1
[i]Type for TMP_202

Name: TMP_202 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_203(uint256) = t_1 (c)+ T_1
[i]Type for TMP_203

Name: TMP_203 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_203(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(bool) = part1_1 > part2_1
[i]Type for TMP_204

Name: TMP_204 Function: getSlipAdustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = part2_1 (c)- part1_1
[i]Type for TMP_206

Name: TMP_206 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_2(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = part1_1 (c)- part2_1
[i]Type for TMP_205

Name: TMP_205 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_205(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_3(uint256) := ϕ(['numerator_1', 'numerator_2'])
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = part3_1 (c)* part4_1
[i]Type for TMP_207

Name: TMP_207 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_207(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_208(uint256) = numerator_3 (c)* one_5
[i]Type for TMP_208

Name: TMP_208 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = TMP_208 (c)/ denominator_1
[i]Type for TMP_209

Name: TMP_209 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_210(uint256) = one_5 (c)- TMP_209
[i]Type for TMP_210

Name: TMP_210 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_210
b_1(uint256) := ϕ(['b_1'])
[i]Type for b

Name: b Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
B_1(uint256) := ϕ(['B_1'])
[i]Type for B

Name: B Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
t_1(uint256) := ϕ(['t_1'])
[i]Type for t

Name: t Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
T_1(uint256) := ϕ(['T_1'])
[i]Type for T

Name: T Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
one_5(uint256) := ϕ(['one_4', 'one_0', 'one_2'])
[i]Type for one

Name: one Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(uint256) = B_1 (c)* t_1
[i]Type for TMP_199

Name: TMP_199 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_199(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(uint256) = b_1 (c)* T_1
[i]Type for TMP_200

Name: TMP_200 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_200(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = b_1 (c)* 2
[i]Type for TMP_201

Name: TMP_201 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_202(uint256) = TMP_201 (c)+ B_1
[i]Type for TMP_202

Name: TMP_202 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_202(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_203(uint256) = t_1 (c)+ T_1
[i]Type for TMP_203

Name: TMP_203 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_203(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(bool) = part1_1 > part2_1
[i]Type for TMP_204

Name: TMP_204 Function: getSlipAdustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = part2_1 (c)- part1_1
[i]Type for TMP_206

Name: TMP_206 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_2(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = part1_1 (c)- part2_1
[i]Type for TMP_205

Name: TMP_205 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_205(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
numerator_3(uint256) := ϕ(['numerator_1', 'numerator_2'])
[i]Type for numerator

Name: numerator Function: getSlipAdustment
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = part3_1 (c)* part4_1
[i]Type for TMP_207

Name: TMP_207 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
denominator_1(uint256) := TMP_207(uint256)
Finance type key: (-1, -1)
[i]Type for denominator

Name: denominator Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_208(uint256) = numerator_3 (c)* one_5
[i]Type for TMP_208

Name: TMP_208 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(uint256) = TMP_208 (c)/ denominator_1
[i]Type for TMP_209

Name: TMP_209 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_210(uint256) = one_5 (c)- TMP_209
[i]Type for TMP_210

Name: TMP_210 Function: getSlipAdustment
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_210



calcSynthUnits
TMP_211(uint256) = P_1 (c)* b_1
[i]Type for TMP_211

Name: TMP_211 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = b_1 (c)+ B_1
[i]Type for TMP_212

Name: TMP_212 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_213(uint256) = 2 (c)* TMP_212
[i]Type for TMP_213

Name: TMP_213 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_214(uint256) = TMP_211 (c)/ TMP_213
[i]Type for TMP_214

Name: TMP_214 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_214
TMP_211(uint256) = P_1 (c)* b_1
[i]Type for TMP_211

Name: TMP_211 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(uint256) = b_1 (c)+ B_1
[i]Type for TMP_212

Name: TMP_212 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_213(uint256) = 2 (c)* TMP_212
[i]Type for TMP_213

Name: TMP_213 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_214(uint256) = TMP_211 (c)/ TMP_213
[i]Type for TMP_214

Name: TMP_214 Function: calcSynthUnits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
RETURN TMP_214



calcAsymmetricShare
u_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for u

Name: u Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
U_1(uint256) := ϕ(['TMP_126'])
[i]Type for U

Name: U Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A_1(uint256) := ϕ(['TMP_128'])
[i]Type for A

Name: A Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = u_1 (c)* A_1
[i]Type for TMP_215

Name: TMP_215 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_216(uint256) = U_1 (c)* U_1
[i]Type for TMP_216

Name: TMP_216 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(uint256) = TMP_216 (c)* 2
[i]Type for TMP_217

Name: TMP_217 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_217(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_218(uint256) = U_1 (c)* u_1
[i]Type for TMP_218

Name: TMP_218 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)* 2
[i]Type for TMP_219

Name: TMP_219 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_219(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_220(uint256) = u_1 (c)* u_1
[i]Type for TMP_220

Name: TMP_220 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_220(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_221(uint256) = part1_1 (c)* part2_1
[i]Type for TMP_221

Name: TMP_221 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)- part3_1
[i]Type for TMP_222

Name: TMP_222 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_223(uint256) = TMP_222 (c)+ part4_1
[i]Type for TMP_223

Name: TMP_223 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_223(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_224(uint256) = U_1 (c)* U_1
[i]Type for TMP_224

Name: TMP_224 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = TMP_224 (c)* U_1
[i]Type for TMP_225

Name: TMP_225 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
part5_1(uint256) := TMP_225(uint256)
Finance type key: (-1, -1)
[i]Type for part5

Name: part5 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = numerator_1 (c)/ part5_1
[i]Type for TMP_226

Name: TMP_226 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_226
u_1(uint256) := ϕ(['_collateralAdjusted_1'])
[i]Type for u

Name: u Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
U_1(uint256) := ϕ(['TMP_126'])
[i]Type for U

Name: U Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A_1(uint256) := ϕ(['TMP_128'])
[i]Type for A

Name: A Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(uint256) = u_1 (c)* A_1
[i]Type for TMP_215

Name: TMP_215 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part1_1(uint256) := TMP_215(uint256)
Finance type key: (-1, -1)
[i]Type for part1

Name: part1 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_216(uint256) = U_1 (c)* U_1
[i]Type for TMP_216

Name: TMP_216 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(uint256) = TMP_216 (c)* 2
[i]Type for TMP_217

Name: TMP_217 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
part2_1(uint256) := TMP_217(uint256)
Finance type key: (-1, -1)
[i]Type for part2

Name: part2 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_218(uint256) = U_1 (c)* u_1
[i]Type for TMP_218

Name: TMP_218 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_219(uint256) = TMP_218 (c)* 2
[i]Type for TMP_219

Name: TMP_219 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part3_1(uint256) := TMP_219(uint256)
Finance type key: (-1, -1)
[i]Type for part3

Name: part3 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_220(uint256) = u_1 (c)* u_1
[i]Type for TMP_220

Name: TMP_220 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
part4_1(uint256) := TMP_220(uint256)
Finance type key: (-1, -1)
[i]Type for part4

Name: part4 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_221(uint256) = part1_1 (c)* part2_1
[i]Type for TMP_221

Name: TMP_221 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_222(uint256) = TMP_221 (c)- part3_1
[i]Type for TMP_222

Name: TMP_222 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_223(uint256) = TMP_222 (c)+ part4_1
[i]Type for TMP_223

Name: TMP_223 Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
numerator_1(uint256) := TMP_223(uint256)
Finance type key: (-1, -1)
[i]Type for numerator

Name: numerator Function: calcAsymmetricShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef