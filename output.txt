Switched global version to 0.8.10



settleAccount
REF_17(mapping(address => UFixed18)) -> self_1 (-> []).balances
[i]Type for REF_17

Name: REF_17 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_18(UFixed18) -> REF_17[account_1]
[i]Type for REF_18

Name: REF_17 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(Fixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.from(UFixed18), arguments:['REF_18'] 
[i]Type for TMP_4

Name: TMP_4 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(Fixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.add(Fixed18,Fixed18), arguments:['TMP_4', 'amount_1'] 
[i]Type for TMP_5

Name: TMP_5 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(Fixed18) := TMP_5(Fixed18)
Finance type key: (-1, -1)
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_6(int256) = 1 (c)+ 1
[i]Type for TMP_6

Name: TMP_6 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_6(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_7(int256) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.sign(Fixed18), arguments:['newBalance_1'] 
[i]Type for TMP_7

Name: TMP_7 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8(uint256) = 0 (c)- 1
[i]Type for TMP_8

Name: TMP_8 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
TMP_9(bool) = TMP_7 == TMP_8
[i]Type for TMP_9

Name: TMP_9 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shortfall_2(UFixed18) := ϕ(['shortfall_0', 'shortfall_1'])
[i]Type for shortfall

Name: shortfall Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_3(Fixed18) := ϕ(['newBalance_1', 'newBalance_2'])
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(mapping(address => UFixed18)) -> self_1 (-> []).balances
[i]Type for REF_25

Name: REF_25 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_26(UFixed18) -> REF_25[account_1]
[i]Type for REF_26

Name: REF_25 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_12(UFixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.abs(Fixed18), arguments:['newBalance_3'] 
[i]Type for TMP_12

Name: TMP_12 Function: settleAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
self_2 (-> [])(OptimisticLedger) := ϕ(['self_1 (-> [])'])
[i]Type for self

Name: self Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortfall, balances
Finance Type: undef
REF_26 (->self_2 (-> [])) := TMP_12(UFixed18)
Handling trace

Name: TMP_12 Function: settleAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: REF_26 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d:{-999: -1}
Error with REF_26 in function settleAccount
Error with: REF_26 in function settleAccount
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_21(UFixed18) -> self_1 (-> []).shortfall
[i]Type for REF_21

Name: self_1 (-> []).shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
TMP_10(UFixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.abs(Fixed18), arguments:['newBalance_1'] 
[i]Type for TMP_10

Name: TMP_10 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_11(UFixed18) = LIBRARY_CALL, dest:UFixed18Lib, function:UFixed18Lib.add(UFixed18,UFixed18), arguments:['REF_21', 'TMP_10'] 
[i]Type for TMP_11

Name: TMP_11 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
shortfall_1(UFixed18) := TMP_11(UFixed18)
Finance type key: (50, -1)
[i]Type for shortfall

Name: shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
REF_28(UFixed18) -> self_2 (-> []).shortfall
[i]Type for REF_28

Name: self.shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
REF_29(UFixed18) -> self_2 (-> []).shortfall
[i]Type for REF_29

Name: self.shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
TMP_13(UFixed18) = LIBRARY_CALL, dest:UFixed18Lib, function:UFixed18Lib.add(UFixed18,UFixed18), arguments:['REF_29', 'shortfall_2'] 
[i]Type for TMP_13

Name: TMP_13 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
self_3 (-> [])(OptimisticLedger) := ϕ(['self_2 (-> [])'])
[i]Type for self

Name: self Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortfall, balances
Finance Type: undef
REF_28 (->self_3 (-> [])) := TMP_13(UFixed18)
Finance type key: (50, -1)
[i]Type for REF_28

Name: REF_28 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
REF_24(Fixed18) -> Fixed18Lib.ZERO
[i]Type for REF_24

Name: REF_24 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
newBalance_2(Fixed18) := REF_24(Fixed18)
Finance type key: (-1, -1)
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(mapping(address => UFixed18)) -> self_1 (-> []).balances
[i]Type for REF_17

Name: REF_17 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_18(UFixed18) -> REF_17[account_1]
[i]Type for REF_18

Name: REF_17 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(Fixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.from(UFixed18), arguments:['REF_18'] 
[i]Type for TMP_4

Name: TMP_4 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(Fixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.add(Fixed18,Fixed18), arguments:['TMP_4', 'amount_1'] 
[i]Type for TMP_5

Name: TMP_5 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(Fixed18) := TMP_5(Fixed18)
Finance type key: (-1, -1)
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_6(int256) = 1 (c)+ 1
[i]Type for TMP_6

Name: TMP_6 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_6(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_7(int256) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.sign(Fixed18), arguments:['newBalance_1'] 
[i]Type for TMP_7

Name: TMP_7 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8(uint256) = 0 (c)- 1
[i]Type for TMP_8

Name: TMP_8 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
TMP_9(bool) = TMP_7 == TMP_8
[i]Type for TMP_9

Name: TMP_9 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shortfall_2(UFixed18) := ϕ(['shortfall_0', 'shortfall_1'])
[i]Type for shortfall

Name: shortfall Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_3(Fixed18) := ϕ(['newBalance_1', 'newBalance_2'])
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(mapping(address => UFixed18)) -> self_1 (-> []).balances
[i]Type for REF_25

Name: REF_25 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_26(UFixed18) -> REF_25[account_1]
[i]Type for REF_26

Name: REF_25 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_12(UFixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.abs(Fixed18), arguments:['newBalance_3'] 
[i]Type for TMP_12

Name: TMP_12 Function: settleAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
self_2 (-> [])(OptimisticLedger) := ϕ(['self_1 (-> [])'])
[i]Type for self

Name: self Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortfall, balances
Finance Type: undef
REF_26 (->self_2 (-> [])) := TMP_12(UFixed18)
Handling trace

Name: TMP_12 Function: settleAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: REF_26 Function: settleAccount
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
d:{-999: -1}
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_21(UFixed18) -> self_1 (-> []).shortfall
[i]Type for REF_21

Name: self_1 (-> []).shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
TMP_10(UFixed18) = LIBRARY_CALL, dest:Fixed18Lib, function:Fixed18Lib.abs(Fixed18), arguments:['newBalance_1'] 
[i]Type for TMP_10

Name: TMP_10 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_11(UFixed18) = LIBRARY_CALL, dest:UFixed18Lib, function:UFixed18Lib.add(UFixed18,UFixed18), arguments:['REF_21', 'TMP_10'] 
[i]Type for TMP_11

Name: TMP_11 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
shortfall_1(UFixed18) := TMP_11(UFixed18)
Finance type key: (50, -1)
[i]Type for shortfall

Name: shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
REF_28(UFixed18) -> self_2 (-> []).shortfall
[i]Type for REF_28

Name: self.shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
REF_29(UFixed18) -> self_2 (-> []).shortfall
[i]Type for REF_29

Name: self.shortfall Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
TMP_13(UFixed18) = LIBRARY_CALL, dest:UFixed18Lib, function:UFixed18Lib.add(UFixed18,UFixed18), arguments:['REF_29', 'shortfall_2'] 
[i]Type for TMP_13

Name: TMP_13 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
self_3 (-> [])(OptimisticLedger) := ϕ(['self_2 (-> [])'])
[i]Type for self

Name: self Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: balances, shortfall
Finance Type: undef
REF_28 (->self_3 (-> [])) := TMP_13(UFixed18)
Finance type key: (50, -1)
[i]Type for REF_28

Name: REF_28 Function: settleAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: debt
Finance type key: (50, -1)
REF_24(Fixed18) -> Fixed18Lib.ZERO
[i]Type for REF_24

Name: REF_24 Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
newBalance_2(Fixed18) := REF_24(Fixed18)
Finance type key: (-1, -1)
[i]Type for newBalance

Name: newBalance Function: settleAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Function count: 1
Executing Group 18
[*] Tested 1 warnings for Perennial
Group 18 complete
Elapsed time: 9.211715747 seconds
Testing complete
