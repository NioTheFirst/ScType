Switched global version to 0.6.12
Finding type for manager...
IManager
Finding type for _allowances...
mapping(address => mapping(address => uint256))
Finding type for totalDepositCap...
uint256
Finding type for _balances...
mapping(address => uint256)
Finding type for _totalSupply...
uint256
Finding type for _name...
string
Finding type for _decimals...
uint8
Finding type for MAX...
uint256
Finding type for min...
uint256
Finding type for _symbol...
string



constructor
Finding type for _name...
string
Finding type for _symbol...
string
Finding type for _manager...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _manager
    fields: []
    fintype: -1
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager

Name: None Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
CONSTRUCTOR VARIABLES______________________________
Copied manager

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Copied min

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied totalDepositCap

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setGauge
Finding type for _gauge...
address
Param: 0
    num: []
    den: []
    norm: u
    link: _gauge
    fields: []
    fintype: -1
[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef



setMin
Finding type for _min...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
[i]Type for MAX

Name: MAX Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_34', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_34', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_34(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_34', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_34', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyStrategist()()
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_38', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Getting new address:
None
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -997
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_38', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_38(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_38', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Getting new address:
None
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -996
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_38', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
[i]Type for MAX

Name: MAX Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setTotalDepositCap
Finding type for _totalDepositCap...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



swap
Finding type for _token0...
address
Finding type for _token1...
address
Finding type for _expectedAmount...
uint256
Param: 0
    num: []
    den: []
    norm: u
    link: _token0
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _token1
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
[[], [], 'u', '_token0', [], -1, -995]

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
[[], [], 'u', '_token1', [], -1, -994]

Name: _token1 Function: swap
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _expectedAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_4(IManager) := ϕ(['manager_39'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4'])
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_5', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_76 = CONVERT this to address
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_78 = CONVERT TMP_77 to IController

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_79 = CONVERT this to address
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_5', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_81 = CONVERT TMP_80 to IConverter

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_converter_1(IConverter) := TMP_81(IConverter)
[i]Type for _converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
TMP_82 = CONVERT _token0_1 to IERC20

Name: None Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_83 = CONVERT this to address
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_84(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_85 = CONVERT _token0_1 to IERC20

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_86 = CONVERT _converter_1 to address

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_88(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_token0', [], -1, -995]

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
[[], [], 'u', '_token1', [], -1, -994]

Name: _token1 Function: swap
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _expectedAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_2(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_4(IManager) := ϕ(['manager_39'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4'])
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_5', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_76 = CONVERT this to address
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_78 = CONVERT TMP_77 to IController

Name: TMP_77 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_79 = CONVERT this to address
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_6(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_5', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_81 = CONVERT TMP_80 to IConverter

Name: TMP_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_converter_1(IConverter) := TMP_81(IConverter)
[i]Type for _converter

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
TMP_82 = CONVERT _token0_1 to IERC20

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_83 = CONVERT this to address
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_84(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_85 = CONVERT _token0_1 to IERC20

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_86 = CONVERT _converter_1 to address

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_88(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



earn
Finding type for _token...
address
Finding type for _strategy...
address
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _strategy
    fields: []
    fintype: -1
[[], [], 'u', '_token', [], -1, -993]

Name: _token Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[], [], 'u', '_strategy', [], -1, -992]

Name: _strategy Function: earn
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_10(IManager) := ϕ(['manager_37'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_10', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_10', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39'])
TMP_93 = CONVERT this to address
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_95 = CONVERT TMP_94 to IController

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_95(IController)
[i]Type for _controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_97(uint256)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_98 = CONVERT _token_1 to IERC20

Name: None Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_99 = CONVERT _controller_1 to address

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
[[], [], 'u', '_token', [], -1, -993]

Name: _token Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[], [], 'u', '_strategy', [], -1, -992]

Name: _strategy Function: earn
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_7(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_10(IManager) := ϕ(['manager_37'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_10', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_10', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39'])
TMP_93 = CONVERT this to address
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_95 = CONVERT TMP_94 to IController

Name: TMP_94 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_95(IController)
[i]Type for _controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_97(uint256)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_98 = CONVERT _token_1 to IERC20

Name: _token Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_99 = CONVERT _controller_1 to address

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  



deposit
Finding type for _token...
address
Finding type for _amount...
uint256
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
[[], [], 'u', '_token', [], -1, -991]

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amount Function: deposit
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Getting new address:
None
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -990
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Getting new address:
None
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -989
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_22', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_23', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
Getting new address:
None
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_184(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
i_1(uint8) := ϕ(['i_2', 'i_0'])
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_185(bool) = i_1 < REF_73
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_186 = CONVERT _token_1 to IERC20

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: ERC20
Fields: 
Finance Type: undef
TMP_187 = CONVERT this to address
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
Handling balance function!
-988
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-988
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-988
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_190(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_191(uint8) := i_1(uint8)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN _balance_1
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
Getting new address:
None
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_184(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
i_1(uint8) := ϕ(['i_2', 'i_0'])
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_185(bool) = i_1 < REF_73
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_186 = CONVERT _token_1 to IERC20

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: ERC20
Fields: 
Finance Type: undef
TMP_187 = CONVERT this to address
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
Handling balance function!
-987
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
Error with TMP_190 in function balanceOfThis
Error with: TMP_190 in function balanceOfThis
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_190(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_191(uint8) := i_1(uint8)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN _balance_1
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_25(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
Getting new address:
None
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: -986
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_184(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
i_1(uint8) := ϕ(['i_2', 'i_0'])
_balance_1(uint256) := ϕ(['_balance_2', '_balance_0'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_185(bool) = i_1 < REF_73
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_186 = CONVERT _token_1 to IERC20

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: ERC20
Fields: 
Finance Type: undef
TMP_187 = CONVERT this to address
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
Handling balance function!
-987
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -987, -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987, -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
Error with TMP_189 in function balanceOfThis
Error with: TMP_189 in function balanceOfThis
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_190(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_191(uint8) := i_1(uint8)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN _balance_1
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
Getting new address:
None
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_22', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: Controller
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
Getting new address:
None
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_23', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN TMP_182
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
manager_21(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_22', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_23', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
Getting new address:
None
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_22', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: Controller
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
Getting new address:
None
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 1
Den: -1
Address: -984
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_24(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_23', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 1
Den: -1
Address: -984
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN TMP_182
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -984
Norm: 0
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -984
Norm: 0
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
TMP_109 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Handling balance function!
-991
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_112 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
TMP_115 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Handling balance function!
-991
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
RETURN _totalSupply_1
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
_totalSupply_1(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
RETURN _totalSupply_1
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -991
Den: 1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_token', [], -1, -991]

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[-991], [1], 0, None, [], -1, 'u']

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
TMP_109 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Handling balance function!
-991
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_112 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
TMP_115 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Handling balance function!
-991
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
Error with TMP_44 in function _mint
Error with: TMP_44 in function _mint
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -991
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_token', [], -1, -991]

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[-991], [1], 0, None, [], -1, 'u']

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -991, -991
Den: 1, 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
TMP_109 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Handling balance function!
-991
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -991, -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
Error with _before in function deposit
Error with: _before in function deposit
[i]Type for _before

Name: _before Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_112 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
TMP_115 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Handling balance function!
-991
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -991, -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
Error with TMP_118 in function deposit
Error with: TMP_118 in function deposit
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
_token_1(address) := ϕ(['_token_1', '_token_1'])
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_188'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_204 = CONVERT _token_1 to ExtendedIERC20

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
RETURN _amount_3
Error with TMP_120 in function deposit
Error with: TMP_120 in function deposit
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
amount_1(uint256) := ϕ(['_shares_2'])
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_0', '_totalSupply_4', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: global
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
from_1(address) := ϕ(['TMP_42', 'account_1', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -991, -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1(uint256) := _amount_5(uint256)
Error with _shares in function deposit
Error with: _shares in function deposit
[i]Type for _shares

Name: _shares Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
Error with TMP_124 in function deposit
Error with: TMP_124 in function deposit
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
Error with TMP_125 in function deposit
Error with: TMP_125 in function deposit
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



depositMultiple
Finding type for _tokens...
address[]
Finding type for _amounts...
uint256[]
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
[[], [], 'u', None, [], -1, -983]

Name: _tokens Function: depositMultiple
Num: 
Den: 
Address: -983
Norm: u
LF: None
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amounts Function: depositMultiple
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
i_1(uint8) := ϕ(['i_2', 'i_0'])
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_136(bool) = i_1 < REF_48
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_50(address) -> _tokens_1 (-> [])[i_1]
address
[i]Type for REF_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
uint256
[i]Type for REF_51

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Getting new address:
None
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -982
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_33'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_31', 'manager_35', 'manager_37', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Getting new address:
None
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -981
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_19', 'manager_28', 'manager_26', 'manager_6', 'manager_1', 'manager_12', 'manager_30', 'manager_35', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39'])
[i]Type for manager

Name: manager Function: global
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
TMP_109 = CONVERT _token_1 to IERC20

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Handling balance function!
u
Executing Group 7
[*] Tested 3 warnings for yAxis
Group 7 complete
Testing complete
