Switched global version to 0.8.12



initiateMarketOrder
position_2(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_1(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
_isTrustedForwarder_3(mapping(address => bool)) := ϕ(['_isTrustedForwarder_1', '_isTrustedForwarder_0', '_isTrustedForwarder_2', '_isTrustedForwarder_4', '_isTrustedForwarder_3'])
[i]Type for _isTrustedForwarder

Name: _isTrustedForwarder Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(bool) -> _isTrustedForwarder_3[msg.sender]
[i]Type for REF_2

Name: _isTrustedForwarder Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_2(uint256) = TMP_1 - 20
[i]Type for TMP_2

Name: TMP_2 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_3(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_2)
[i]Type for TMP_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(uint256) = TMP_3 >> 96
[i]Type for TMP_4

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := TMP_4(uint256)
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
RETURN msg.sender
RETURN msg.sender
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_5
_isTrustedForwarder_3(mapping(address => bool)) := ϕ(['_isTrustedForwarder_1', '_isTrustedForwarder_0', '_isTrustedForwarder_2', '_isTrustedForwarder_4', '_isTrustedForwarder_3'])
[i]Type for _isTrustedForwarder

Name: _isTrustedForwarder Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(bool) -> _isTrustedForwarder_3[msg.sender]
[i]Type for REF_2

Name: _isTrustedForwarder Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_1

Name: TMP_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_2(uint256) = TMP_1 - 20
[i]Type for TMP_2

Name: TMP_2 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
TMP_3(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_2)
[i]Type for TMP_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(uint256) = TMP_3 >> 96
[i]Type for TMP_4

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := TMP_4(uint256)
Finance type key: (-1, -1)
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_5
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -996
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -996
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -996
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -996
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_26(uint256) = HIGH_LEVEL_CALL, dest:position_3(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_26

Name: TMP_26 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_3', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_3(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_2', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(TMP_26,True)
_id_1(uint256) := ϕ(['TMP_26', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_0', 'blockDelayPassed_5'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
[i]Type for blockDelay

Name: blockDelay Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_333

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Finance type key: (-1, -1)
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_334(bool) -> _delay_1.actionType
[i]Type for REF_334

Name: REF_334 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_408(bool) = REF_334 == _type_1
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_337(uint256) -> _delay_1.delay
[i]Type for REF_337

Name: REF_337 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_410(bool) = block.number < REF_337
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_335

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_336(uint256) -> REF_335.delay
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_409(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay
Finance Type: undef
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Finance type key: (-1, -1)
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_3', 'blockDelayPassed_4'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay
Finance Type: undef
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_338

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_339(uint256) -> REF_338.delay
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_412(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay
Finance Type: undef
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Finance type key: (-1, -1)
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
[i]Type for REF_340

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_341(bool) -> REF_340.actionType
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_id_1(uint256) := ϕ(['TMP_26', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_0', 'blockDelayPassed_5'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
[i]Type for blockDelay

Name: blockDelay Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_333

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Finance type key: (-1, -1)
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: actionType, delay
Finance Type: undef
REF_334(bool) -> _delay_1.actionType
[i]Type for REF_334

Name: REF_334 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_408(bool) = REF_334 == _type_1
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_337(uint256) -> _delay_1.delay
[i]Type for REF_337

Name: REF_337 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_410(bool) = block.number < REF_337
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_335

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_336(uint256) -> REF_335.delay
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_409(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Finance type key: (-1, -1)
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_3', 'blockDelayPassed_4'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_338

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_339(uint256) -> REF_338.delay
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_412(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Finance type key: (-1, -1)
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
[i]Type for REF_340

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_341(bool) -> REF_340.actionType
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_5(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_5

Name: REF_5 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_6(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_6

Name: REF_6 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkVault(address,address)(REF_5,REF_6)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_7(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_7

Name: REF_7 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_29 = CONVERT REF_7 to IStableVault
[i]Type for TMP_29

Name: TMP_29 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_30(address) = HIGH_LEVEL_CALL, dest:TMP_29(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_30

Name: TMP_30 Function: initiateMarketOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
position_7(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_6', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_6(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_5', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := TMP_30(address)
Finance type key: (-1, -1)
[i]Type for _tigAsset

Name: _tigAsset Function: initiateMarketOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_10

Name: REF_10 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_11(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_11

Name: REF_11 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_12(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_12

Name: REF_12 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_6(ITradingExtension), function:validateTrade, arguments:['REF_10', '_tigAsset_1', 'REF_11', 'REF_12']  
position_8(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_7', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_7(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_6', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_14(bytes32) -> _tradeInfo_1 (-> []).referral
[i]Type for REF_14

Name: REF_14 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_7(ITradingExtension), function:_setReferral, arguments:['REF_14', '_trader_1']  
position_9(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_8', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_8(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_7', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_15(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_15

Name: REF_15 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_16(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_16

Name: REF_16 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_17(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_17

Name: REF_17 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_18(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_18

Name: REF_18 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_33(uint256) = REF_17 (c)* REF_18
[i]Type for TMP_33

Name: TMP_33 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(uint256) = TMP_33 (c)/ 1000000000000000000
[i]Type for TMP_34

Name: TMP_34 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_35(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_16,TMP_34,_trader_1,_tigAsset_1,False)
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
[i]Type for TMP_35

Name: TMP_35 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
tradingExtension_9(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(uint256) = REF_15 (c)- TMP_35
[i]Type for TMP_36

Name: TMP_36 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_marginAfterFees_1(uint256) := TMP_36(uint256)
Finance type key: (10, -1)
[i]Type for _marginAfterFees

Name: _marginAfterFees Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_19(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_19

Name: REF_19 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_37(uint256) = _marginAfterFees_1 (c)* REF_19
[i]Type for TMP_37

Name: TMP_37 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_38(uint256) = TMP_37 (c)/ 1000000000000000000
[i]Type for TMP_38

Name: TMP_38 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: updated compound fee ratio (t)
_positionSize_1(uint256) := TMP_38(uint256)
Finance type key: (10, -1)
[i]Type for _positionSize

Name: _positionSize Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: updated compound fee ratio (t)
REF_20(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_20

Name: REF_20 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_21(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_21

Name: REF_21 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_22(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_22

Name: REF_22 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(_tigAsset_1,REF_20,REF_21,REF_22,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
REF_41(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_41

Name: REF_41 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_isLong_1(uint256) := 2(uint256)
Finance type key: (-1, -1)
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_isLong_2(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_isLong_3(uint256) := ϕ(['_isLong_1', '_isLong_2'])
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_24

Name: REF_24 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_10(ITradingExtension), function:getVerifiedPrice, arguments:['REF_24', '_priceData_1 (-> [])', '_signature_1', '_isLong_3']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_12(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_11', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_11(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_10', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _price

Name: _price Function: initiateMarketOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_26(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_26

Name: REF_26 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_27(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_27

Name: REF_27 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_28(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_28

Name: REF_28 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_29(uint256) -> _tradeInfo_1 (-> []).tpPrice
[i]Type for REF_29

Name: REF_29 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_30(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_30

Name: REF_30 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_40 = new MintTrade(_trader_1,_marginAfterFees_1,REF_26,REF_27,REF_28,_price_1,REF_29,REF_30,0,_tigAsset_1)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintTrade_1(IPosition.MintTrade) := TMP_40(IPosition.MintTrade)
Finance type key: (-1, -1)
[i]Type for _mintTrade

Name: _mintTrade Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_31

Name: REF_31 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_32(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_32

Name: REF_32 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(REF_31,REF_32,_price_1)
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_33(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_33

Name: REF_33 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_37(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_37

Name: REF_37 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_12(ITradingExtension), function:modifyShortOi, arguments:['REF_37', '_tigAsset_1', 'True', '_positionSize_1']  
position_14(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_13', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_13(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_12', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_35

Name: REF_35 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_12(ITradingExtension), function:modifyLongOi, arguments:['REF_35', '_tigAsset_1', 'True', '_positionSize_1']  
position_15(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_14', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_14(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_38

Name: REF_38 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_38,_tigAsset_1)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_16(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_16(IPosition), function:mint, arguments:['_mintTrade_1']  
position_17(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_16', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(uint256) = HIGH_LEVEL_CALL, dest:position_17(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_46

Name: TMP_46 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_18(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_17', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(uint256) = TMP_46 - 1
[i]Type for TMP_47

Name: TMP_47 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
position_2(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_1(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
TMP_26(uint256) = HIGH_LEVEL_CALL, dest:position_3(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_26

Name: TMP_26 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_3', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_3(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_2', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(TMP_26,True)
_id_1(uint256) := ϕ(['TMP_26', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_0', 'blockDelayPassed_5'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
[i]Type for blockDelay

Name: blockDelay Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_333

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Finance type key: (-1, -1)
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: actionType, delay
Finance Type: undef
REF_334(bool) -> _delay_1.actionType
[i]Type for REF_334

Name: REF_334 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_408(bool) = REF_334 == _type_1
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_337(uint256) -> _delay_1.delay
[i]Type for REF_337

Name: REF_337 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_410(bool) = block.number < REF_337
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_335

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_336(uint256) -> REF_335.delay
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_409(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Finance type key: (-1, -1)
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_3', 'blockDelayPassed_4'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_338

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_339(uint256) -> REF_338.delay
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_412(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Finance type key: (-1, -1)
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
[i]Type for REF_340

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_341(bool) -> REF_340.actionType
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_id_1(uint256) := ϕ(['TMP_26', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_0', 'blockDelayPassed_5'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
[i]Type for blockDelay

Name: blockDelay Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_333

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Finance type key: (-1, -1)
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: actionType, delay
Finance Type: undef
REF_334(bool) -> _delay_1.actionType
[i]Type for REF_334

Name: REF_334 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_408(bool) = REF_334 == _type_1
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_337(uint256) -> _delay_1.delay
[i]Type for REF_337

Name: REF_337 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_410(bool) = block.number < REF_337
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_335

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_336(uint256) -> REF_335.delay
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_409(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Finance type key: (-1, -1)
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_3', 'blockDelayPassed_4'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
[i]Type for REF_338

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_339(uint256) -> REF_338.delay
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_412(uint256) = block.number (c)+ blockDelay_1
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Finance type key: (-1, -1)
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
[i]Type for REF_340

Name: blockDelayPassed Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_341(bool) -> REF_340.actionType
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: delay, actionType
Finance Type: undef
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_5(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_5

Name: REF_5 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_6(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_6

Name: REF_6 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkVault(address,address)(REF_5,REF_6)
REF_7(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_7

Name: REF_7 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_29 = CONVERT REF_7 to IStableVault
[i]Type for TMP_29

Name: TMP_29 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_30(address) = HIGH_LEVEL_CALL, dest:TMP_29(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_30

Name: TMP_30 Function: initiateMarketOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
position_7(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_6', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_6(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_5', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := TMP_30(address)
Finance type key: (-1, -1)
[i]Type for _tigAsset

Name: _tigAsset Function: initiateMarketOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_10

Name: REF_10 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_11(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_11

Name: REF_11 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_12(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_12

Name: REF_12 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_6(ITradingExtension), function:validateTrade, arguments:['REF_10', '_tigAsset_1', 'REF_11', 'REF_12']  
position_8(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_7', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_7(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_6', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_14(bytes32) -> _tradeInfo_1 (-> []).referral
[i]Type for REF_14

Name: REF_14 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_7(ITradingExtension), function:_setReferral, arguments:['REF_14', '_trader_1']  
position_9(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_8', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_8(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_7', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_15(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_15

Name: REF_15 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_16(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_16

Name: REF_16 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_17(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_17

Name: REF_17 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_18(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_18

Name: REF_18 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_33(uint256) = REF_17 (c)* REF_18
[i]Type for TMP_33

Name: TMP_33 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(uint256) = TMP_33 (c)/ 1000000000000000000
[i]Type for TMP_34

Name: TMP_34 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_35(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_16,TMP_34,_trader_1,_tigAsset_1,False)
[i]Type for TMP_35

Name: TMP_35 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
tradingExtension_9(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(uint256) = REF_15 (c)- TMP_35
[i]Type for TMP_36

Name: TMP_36 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_marginAfterFees_1(uint256) := TMP_36(uint256)
Finance type key: (10, -1)
[i]Type for _marginAfterFees

Name: _marginAfterFees Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_19(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_19

Name: REF_19 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_37(uint256) = _marginAfterFees_1 (c)* REF_19
[i]Type for TMP_37

Name: TMP_37 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_38(uint256) = TMP_37 (c)/ 1000000000000000000
[i]Type for TMP_38

Name: TMP_38 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: updated compound fee ratio (t)
_positionSize_1(uint256) := TMP_38(uint256)
Finance type key: (10, -1)
[i]Type for _positionSize

Name: _positionSize Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: updated compound fee ratio (t)
REF_20(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_20

Name: REF_20 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_21(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_21

Name: REF_21 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_22(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_22

Name: REF_22 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(_tigAsset_1,REF_20,REF_21,REF_22,_permitData_1 (-> []),_trader_1)
REF_41(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_41

Name: REF_41 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_isLong_1(uint256) := 2(uint256)
Finance type key: (-1, -1)
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_isLong_2(uint256) := 1(uint256)
Finance type key: (-1, -1)
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_isLong_3(uint256) := ϕ(['_isLong_1', '_isLong_2'])
[i]Type for _isLong

Name: _isLong Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_24

Name: REF_24 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_10(ITradingExtension), function:getVerifiedPrice, arguments:['REF_24', '_priceData_1 (-> [])', '_signature_1', '_isLong_3']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_12(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_11', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_11(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_10', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _price

Name: _price Function: initiateMarketOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_26(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_26

Name: REF_26 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_27(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_27

Name: REF_27 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_28(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_28

Name: REF_28 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_29(uint256) -> _tradeInfo_1 (-> []).tpPrice
[i]Type for REF_29

Name: REF_29 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_30(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_30

Name: REF_30 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_40 = new MintTrade(_trader_1,_marginAfterFees_1,REF_26,REF_27,REF_28,_price_1,REF_29,REF_30,0,_tigAsset_1)
[i]Type for TMP_40

Name: TMP_40 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintTrade_1(IPosition.MintTrade) := TMP_40(IPosition.MintTrade)
Finance type key: (-1, -1)
[i]Type for _mintTrade

Name: _mintTrade Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_31

Name: REF_31 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_32(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_32

Name: REF_32 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(REF_31,REF_32,_price_1)
REF_33(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_33

Name: REF_33 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_37(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_37

Name: REF_37 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_12(ITradingExtension), function:modifyShortOi, arguments:['REF_37', '_tigAsset_1', 'True', '_positionSize_1']  
position_14(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_13', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_13(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_12', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_35

Name: REF_35 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_12(ITradingExtension), function:modifyLongOi, arguments:['REF_35', '_tigAsset_1', 'True', '_positionSize_1']  
position_15(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_14', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_14(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_38

Name: REF_38 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_38,_tigAsset_1)
position_16(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_16(IPosition), function:mint, arguments:['_mintTrade_1']  
position_17(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_16', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46(uint256) = HIGH_LEVEL_CALL, dest:position_17(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_46

Name: TMP_46 Function: initiateMarketOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_18(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_17', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47(uint256) = TMP_46 - 1
[i]Type for TMP_47

Name: TMP_47 Function: initiateMarketOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



initiateCloseOrder
position_19(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_15(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,False)
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_22(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_outputToken_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_23(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_53

Name: TMP_53 Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_24(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_23', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_20(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_19', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_53(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(uint256) -> _trade_1.orderType
[i]Type for REF_43

Name: REF_43 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_54(bool) = REF_43 != 0
[i]Type for TMP_54

Name: TMP_54 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_55

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(uint256) -> _trade_1.asset
[i]Type for REF_45

Name: REF_45 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_20(ITradingExtension), function:getVerifiedPrice, arguments:['REF_45', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_1

Name: TUPLE_1 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_21(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_20', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for _price

Name: _price Function: initiateCloseOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._closePosition(uint256,uint256,uint256,address,address,bool)(_id_1,_percent_1,_price_1,_stableVault_1,_outputToken_1,False)
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_percent_1(uint256) := ϕ(['DIVISION_CONSTANT_9', '_percent_1'])
[i]Type for _percent

Name: _percent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_limitPrice_1', '_price_1'])
[i]Type for _price

Name: _price Function: _closePosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', 'TMP_217'])
[i]Type for _stableVault

Name: _stableVault Function: _closePosition
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_tigAsset_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _closePosition
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_11(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_1(uint256) := ϕ(['maxWinPercent_0', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_100(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_71(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_11(IPosition.Trade,uint256,int256) = HIGH_LEVEL_CALL, dest:tradingExtension_71(ITradingExtension), function:_closePosition, arguments:['_id_1', '_price_1', '_percent_1']  
[i]Type for TUPLE_11

Name: TUPLE_11 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_12(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_11', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_2(uint256) := ϕ(['maxWinPercent_1', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_101(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_100', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_72(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_71'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1 (-> [])(IPosition.Trade)= UNPACK TUPLE_11 index: 0 
[i]Type for _trade

Name: _trade Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256)= UNPACK TUPLE_11 index: 1 
[i]Type for _positionSize

Name: _positionSize Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_11 index: 2 
[i]Type for _payout

Name: _payout Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_101(IPosition), function:setAccInterest, arguments:['_id_1']  
DIVISION_CONSTANT_13(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_12', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_3(uint256) := ϕ(['maxWinPercent_2', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_102(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_101', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_73(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_72', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_232(uint256) -> _trade_1 (-> []).asset
[i]Type for REF_232

Name: REF_232 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_233(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_233

Name: REF_233 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_232,REF_233)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_103(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = _percent_1 < DIVISION_CONSTANT_14
[i]Type for TMP_225

Name: TMP_225 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_234(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_234

Name: REF_234 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_235(uint256) -> _trade_1 (-> []).leverage
[i]Type for REF_235

Name: REF_235 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_226(uint256) = REF_234 (c)* REF_235
[i]Type for TMP_226

Name: TMP_226 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = DIVISION_CONSTANT_14 (c)- _percent_1
[i]Type for TMP_227

Name: TMP_227 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = TMP_226 (c)* TMP_227
[i]Type for TMP_228

Name: TMP_228 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)/ DIVISION_CONSTANT_14
[i]Type for TMP_229

Name: TMP_229 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)/ 1000000000000000000
[i]Type for TMP_230

Name: TMP_230 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_237(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_237

Name: REF_237 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_74(ITradingExtension), function:minPos, arguments:['REF_237']  
[i]Type for TMP_231

Name: TMP_231 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_15(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_14', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_5(uint256) := ϕ(['maxWinPercent_4', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_104(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_103', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_75(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_230 < TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_103(IPosition), function:burn, arguments:['_id_1']  
DIVISION_CONSTANT_17(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_7(uint256) := ϕ(['maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_106(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL revert(string)(!size)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_104(IPosition), function:reducePosition, arguments:['_id_1', '_percent_1']  
DIVISION_CONSTANT_16(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_15', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_6(uint256) := ϕ(['maxWinPercent_5', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_105(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_104', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = _payout_1 > 0
[i]Type for TMP_236

Name: TMP_236 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(uint256) -> _trade_1 (-> []).asset
[i]Type for REF_240

Name: REF_240 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_237 = CONVERT _payout_1 to uint256
[i]Type for TMP_237

Name: TMP_237 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_237 * _percent_1
[i]Type for TMP_238

Name: TMP_238 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_239(uint256) = TMP_238 / DIVISION_CONSTANT_17
[i]Type for TMP_239

Name: TMP_239 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_241(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_241

Name: REF_241 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_240(uint256) = _positionSize_1 * _percent_1
[i]Type for TMP_240

Name: TMP_240 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 / DIVISION_CONSTANT_17
[i]Type for TMP_241

Name: TMP_241 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _trade_1 (-> []).trader
[i]Type for REF_242

Name: REF_242 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_242(uint256) = INTERNAL_CALL, Trading._handleCloseFees(uint256,uint256,address,uint256,address,bool)(REF_240,TMP_239,REF_241,TMP_241,REF_242,_isBot_1)
_asset_1(uint256) := ϕ(['REF_240', 'REF_222'])
[i]Type for _asset

Name: _asset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(uint256) := ϕ(['TMP_211', 'TMP_239'])
[i]Type for _payout

Name: _payout Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_241', 'REF_223'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['_positionSizeAfterPrice_1', 'TMP_241'])
[i]Type for _positionSize

Name: _positionSize Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['REF_224', 'REF_242'])
[i]Type for _trader

Name: _trader Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_isBot_1(bool) := ϕ(['_isBot_1'])
[i]Type for _isBot

Name: _isBot Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_25(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_1(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_16(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_11(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_79(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_16(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_354

Name: TMP_354 Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_26(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_25', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_2(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_1', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_17(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_16', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_12(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_11'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_80(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_79', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_354(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_1(Trading.Fees) := closeFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_311(uint256) -> _fees_1.daoFees
[i]Type for REF_311

Name: REF_311 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_355(uint256) = _positionSize_1 * REF_311
[i]Type for TMP_355

Name: TMP_355 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(uint256) = TMP_355 / DIVISION_CONSTANT_26
[i]Type for TMP_356

Name: TMP_356 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_312(uint256) -> asset_1.feeMultiplier
[i]Type for REF_312

Name: REF_312 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_357(uint256) = TMP_356 * REF_312
[i]Type for TMP_357

Name: TMP_357 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_358(uint256) = TMP_357 / DIVISION_CONSTANT_26
[i]Type for TMP_358

Name: TMP_358 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_1(uint256) := TMP_358(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_313(uint256) -> _fees_1.burnFees
[i]Type for REF_313

Name: REF_313 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_359(uint256) = _positionSize_1 * REF_313
[i]Type for TMP_359

Name: TMP_359 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 / DIVISION_CONSTANT_26
[i]Type for TMP_360

Name: TMP_360 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_314(uint256) -> asset_1.feeMultiplier
[i]Type for REF_314

Name: REF_314 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_361(uint256) = TMP_360 * REF_314
[i]Type for TMP_361

Name: TMP_361 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362(uint256) = TMP_361 / DIVISION_CONSTANT_26
[i]Type for TMP_362

Name: TMP_362 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_burnFeesPaid_1(uint256) := TMP_362(uint256)
Finance type key: (-1, -1)
[i]Type for _burnFeesPaid

Name: _burnFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_363(address) = HIGH_LEVEL_CALL, dest:tradingExtension_80(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_363

Name: TMP_363 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_27(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_26', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_13(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_12', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_81(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_80', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_363(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_364 = CONVERT 0 to address
[i]Type for TMP_364

Name: TMP_364 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_365(bool) = _referrer_1 != TMP_364
[i]Type for TMP_365

Name: TMP_365 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_3(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_2'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_2(uint256) := ϕ(['_referralFeesPaid_0', '_referralFeesPaid_1'])
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(uint256) -> _fees_1.botFees
[i]Type for REF_319

Name: REF_319 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_374(uint256) = _positionSize_1 * REF_319
[i]Type for TMP_374

Name: TMP_374 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(uint256) = TMP_374 / DIVISION_CONSTANT_28
[i]Type for TMP_375

Name: TMP_375 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_320(uint256) -> asset_1.feeMultiplier
[i]Type for REF_320

Name: REF_320 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_376(uint256) = TMP_375 * REF_320
[i]Type for TMP_376

Name: TMP_376 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 / DIVISION_CONSTANT_28
[i]Type for TMP_377

Name: TMP_377 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_1(uint256) := TMP_377(uint256)
Finance type key: (-1, -1)
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(uint256) -> _fees_1.referralFees
[i]Type for REF_316

Name: REF_316 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_366(uint256) = _positionSize_1 * REF_316
[i]Type for TMP_366

Name: TMP_366 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367(uint256) = TMP_366 / DIVISION_CONSTANT_27
[i]Type for TMP_367

Name: TMP_367 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_317(uint256) -> asset_1.feeMultiplier
[i]Type for REF_317

Name: REF_317 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_368(uint256) = TMP_367 * REF_317
[i]Type for TMP_368

Name: TMP_368 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_369(uint256) = TMP_368 / DIVISION_CONSTANT_27
[i]Type for TMP_369

Name: TMP_369 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_1(uint256) := TMP_369(uint256)
Finance type key: (-1, -1)
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_5(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_4'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_2(uint256) := ϕ(['_botFeesPaid_1', '_botFeesPaid_0'])
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_378

Name: TMP_378 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_379(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_379

Name: TMP_379 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_378(IStable), function:mintFor, arguments:['TMP_379', '_botFeesPaid_1']  
gov_16(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_15'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_381(uint256) = _daoFeesPaid_3 - _botFeesPaid_1
[i]Type for TMP_381

Name: TMP_381 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_4(uint256) := TMP_381(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_370

Name: TMP_370 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_370(IStable), function:mintFor, arguments:['_referrer_1', '_referralFeesPaid_1']  
DIVISION_CONSTANT_28(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_14(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_13', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_372(uint256) = _referralFeesPaid_1 * 2
[i]Type for TMP_372

Name: TMP_372 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_373(uint256) = _daoFeesPaid_1 - TMP_372
[i]Type for TMP_373

Name: TMP_373 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_daoFeesPaid_2(uint256) := TMP_373(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_383(uint256) = _payout_1 (c)- _daoFeesPaid_5
[i]Type for TMP_383

Name: TMP_383 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_384(uint256) = TMP_383 (c)- _burnFeesPaid_1
[i]Type for TMP_384

Name: TMP_384 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_384 (c)- _botFeesPaid_2
[i]Type for TMP_385

Name: TMP_385 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
payout__1(uint256) := TMP_385(uint256)
Finance type key: (-1, -1)
[i]Type for payout_

Name: payout_ Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_386 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_386

Name: TMP_386 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_387 = CONVERT this to address
[i]Type for TMP_387

Name: TMP_387 Function: _handleCloseFees
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_386(IStable), function:mintFor, arguments:['TMP_387', '_daoFeesPaid_5']  
gov_17(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_16', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_389 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_389

Name: TMP_389 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_390 = CONVERT gov_17 to address
[i]Type for TMP_390

Name: TMP_390 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_392

Name: TMP_392 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_393(bool) = HIGH_LEVEL_CALL, dest:TMP_389(IStable), function:approve, arguments:['TMP_390', 'TMP_392']  
[i]Type for TMP_393

Name: TMP_393 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_18(IGovNFT) := ϕ(['gov_19', 'gov_17', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_18(IGovNFT), function:distribute, arguments:['_tigAsset_1', '_daoFeesPaid_5']  
gov_19(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_18', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN payout__1
_asset_1(uint256) := ϕ(['REF_240', 'REF_222'])
[i]Type for _asset

Name: _asset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(uint256) := ϕ(['TMP_211', 'TMP_239'])
[i]Type for _payout

Name: _payout Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_241', 'REF_223'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['_positionSizeAfterPrice_1', 'TMP_241'])
[i]Type for _positionSize

Name: _positionSize Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['REF_224', 'REF_242'])
[i]Type for _trader

Name: _trader Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_isBot_1(bool) := ϕ(['_isBot_1'])
[i]Type for _isBot

Name: _isBot Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_25(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_1(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_16(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_11(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_79(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_16(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_354

Name: TMP_354 Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_26(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_25', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_2(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_1', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_17(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_16', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_12(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_11'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_80(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_79', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_354(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := closeFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, botFees, referralFees
Finance Type: undef
REF_311(uint256) -> _fees_1.daoFees
[i]Type for REF_311

Name: REF_311 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_355(uint256) = _positionSize_1 * REF_311
[i]Type for TMP_355

Name: TMP_355 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(uint256) = TMP_355 / DIVISION_CONSTANT_26
[i]Type for TMP_356

Name: TMP_356 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_312(uint256) -> asset_1.feeMultiplier
[i]Type for REF_312

Name: REF_312 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_357(uint256) = TMP_356 * REF_312
[i]Type for TMP_357

Name: TMP_357 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_358(uint256) = TMP_357 / DIVISION_CONSTANT_26
[i]Type for TMP_358

Name: TMP_358 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_1(uint256) := TMP_358(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_313(uint256) -> _fees_1.burnFees
[i]Type for REF_313

Name: REF_313 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_359(uint256) = _positionSize_1 * REF_313
[i]Type for TMP_359

Name: TMP_359 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 / DIVISION_CONSTANT_26
[i]Type for TMP_360

Name: TMP_360 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_314(uint256) -> asset_1.feeMultiplier
[i]Type for REF_314

Name: REF_314 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_361(uint256) = TMP_360 * REF_314
[i]Type for TMP_361

Name: TMP_361 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362(uint256) = TMP_361 / DIVISION_CONSTANT_26
[i]Type for TMP_362

Name: TMP_362 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_burnFeesPaid_1(uint256) := TMP_362(uint256)
Finance type key: (-1, -1)
[i]Type for _burnFeesPaid

Name: _burnFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_363(address) = HIGH_LEVEL_CALL, dest:tradingExtension_80(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_363

Name: TMP_363 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_27(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_26', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_13(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_12', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_81(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_80', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_363(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_364 = CONVERT 0 to address
[i]Type for TMP_364

Name: TMP_364 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_365(bool) = _referrer_1 != TMP_364
[i]Type for TMP_365

Name: TMP_365 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_3(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_2'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_2(uint256) := ϕ(['_referralFeesPaid_0', '_referralFeesPaid_1'])
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(uint256) -> _fees_1.botFees
[i]Type for REF_319

Name: REF_319 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_374(uint256) = _positionSize_1 * REF_319
[i]Type for TMP_374

Name: TMP_374 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(uint256) = TMP_374 / DIVISION_CONSTANT_28
[i]Type for TMP_375

Name: TMP_375 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_320(uint256) -> asset_1.feeMultiplier
[i]Type for REF_320

Name: REF_320 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_376(uint256) = TMP_375 * REF_320
[i]Type for TMP_376

Name: TMP_376 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 / DIVISION_CONSTANT_28
[i]Type for TMP_377

Name: TMP_377 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_1(uint256) := TMP_377(uint256)
Finance type key: (-1, -1)
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(uint256) -> _fees_1.referralFees
[i]Type for REF_316

Name: REF_316 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_366(uint256) = _positionSize_1 * REF_316
[i]Type for TMP_366

Name: TMP_366 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367(uint256) = TMP_366 / DIVISION_CONSTANT_27
[i]Type for TMP_367

Name: TMP_367 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_317(uint256) -> asset_1.feeMultiplier
[i]Type for REF_317

Name: REF_317 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_368(uint256) = TMP_367 * REF_317
[i]Type for TMP_368

Name: TMP_368 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_369(uint256) = TMP_368 / DIVISION_CONSTANT_27
[i]Type for TMP_369

Name: TMP_369 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_1(uint256) := TMP_369(uint256)
Finance type key: (-1, -1)
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_5(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_4'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_2(uint256) := ϕ(['_botFeesPaid_1', '_botFeesPaid_0'])
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_378

Name: TMP_378 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_379(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_379

Name: TMP_379 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_378(IStable), function:mintFor, arguments:['TMP_379', '_botFeesPaid_1']  
gov_16(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_15'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_381(uint256) = _daoFeesPaid_3 - _botFeesPaid_1
[i]Type for TMP_381

Name: TMP_381 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_4(uint256) := TMP_381(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_370

Name: TMP_370 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_370(IStable), function:mintFor, arguments:['_referrer_1', '_referralFeesPaid_1']  
DIVISION_CONSTANT_28(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_14(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_13', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_372(uint256) = _referralFeesPaid_1 * 2
[i]Type for TMP_372

Name: TMP_372 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_373(uint256) = _daoFeesPaid_1 - TMP_372
[i]Type for TMP_373

Name: TMP_373 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_daoFeesPaid_2(uint256) := TMP_373(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_383(uint256) = _payout_1 (c)- _daoFeesPaid_5
[i]Type for TMP_383

Name: TMP_383 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_384(uint256) = TMP_383 (c)- _burnFeesPaid_1
[i]Type for TMP_384

Name: TMP_384 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_384 (c)- _botFeesPaid_2
[i]Type for TMP_385

Name: TMP_385 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
payout__1(uint256) := TMP_385(uint256)
Finance type key: (-1, -1)
[i]Type for payout_

Name: payout_ Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_386 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_386

Name: TMP_386 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_387 = CONVERT this to address
[i]Type for TMP_387

Name: TMP_387 Function: _handleCloseFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_386(IStable), function:mintFor, arguments:['TMP_387', '_daoFeesPaid_5']  
gov_17(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_16', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_389 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_389

Name: TMP_389 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_390 = CONVERT gov_17 to address
[i]Type for TMP_390

Name: TMP_390 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_392

Name: TMP_392 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_393(bool) = HIGH_LEVEL_CALL, dest:TMP_389(IStable), function:approve, arguments:['TMP_390', 'TMP_392']  
[i]Type for TMP_393

Name: TMP_393 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_18(IGovNFT) := ϕ(['gov_19', 'gov_17', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_18(IGovNFT), function:distribute, arguments:['_tigAsset_1', '_daoFeesPaid_5']  
gov_19(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_18', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN payout__1
[i]Type for TMP_242

Name: TMP_242 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_18(uint256) := ϕ(['DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_4(uint256) := ϕ(['_toMint_0', '_toMint_1'])
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_243(bool) = maxWinPercent_8 > 0
[i]Type for TMP_243

Name: TMP_243 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_243

Name: REF_243 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_244(uint256) = REF_243 * maxWinPercent_8
[i]Type for TMP_244

Name: TMP_244 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_245(uint256) = TMP_244 / DIVISION_CONSTANT_18
[i]Type for TMP_245

Name: TMP_245 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = _toMint_1 > TMP_245
[i]Type for TMP_246

Name: TMP_246 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(bool) = TMP_243 && TMP_246
[i]Type for TMP_247

Name: TMP_247 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_246(address) -> _trade_1 (-> []).trader
[i]Type for REF_246

Name: REF_246 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_247(address) -> _trade_1 (-> []).trader
[i]Type for REF_247

Name: REF_247 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_245(address) -> _trade_1 (-> []).trader
[i]Type for REF_245

Name: REF_245 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_251(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_251

Name: TMP_251 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_3(uint256) := ϕ(['_toMint_2', '_toMint_1'])
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_244

Name: REF_244 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_248(uint256) = REF_244 * maxWinPercent_8
[i]Type for TMP_248

Name: TMP_248 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_249(uint256) = TMP_248 / DIVISION_CONSTANT_18
[i]Type for TMP_249

Name: TMP_249 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_2(uint256) := TMP_249(uint256)
Finance type key: (-1, -1)
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._handleWithdraw(IPosition.Trade,address,address,uint256)(_trade_1 (-> []),_stableVault_1,_outputToken_1,_toMint_3)
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, trader
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: -1
Den: -1
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, trader
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_percent_1(uint256) := ϕ(['DIVISION_CONSTANT_9', '_percent_1'])
[i]Type for _percent

Name: _percent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_limitPrice_1', '_price_1'])
[i]Type for _price

Name: _price Function: _closePosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', 'TMP_217'])
[i]Type for _stableVault

Name: _stableVault Function: _closePosition
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_tigAsset_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _closePosition
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_11(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_1(uint256) := ϕ(['maxWinPercent_0', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_100(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_71(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_11(IPosition.Trade,uint256,int256) = HIGH_LEVEL_CALL, dest:tradingExtension_71(ITradingExtension), function:_closePosition, arguments:['_id_1', '_price_1', '_percent_1']  
[i]Type for TUPLE_11

Name: TUPLE_11 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_12(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_11', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_2(uint256) := ϕ(['maxWinPercent_1', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_101(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_100', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_72(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_71'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1 (-> [])(IPosition.Trade)= UNPACK TUPLE_11 index: 0 
[i]Type for _trade

Name: _trade Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, trader
Finance Type: undef
_positionSize_1(uint256)= UNPACK TUPLE_11 index: 1 
[i]Type for _positionSize

Name: _positionSize Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_11 index: 2 
[i]Type for _payout

Name: _payout Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_101(IPosition), function:setAccInterest, arguments:['_id_1']  
DIVISION_CONSTANT_13(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_12', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_3(uint256) := ϕ(['maxWinPercent_2', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_102(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_101', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_73(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_72', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_232(uint256) -> _trade_1 (-> []).asset
[i]Type for REF_232

Name: REF_232 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_233(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_233

Name: REF_233 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_232,REF_233)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_103(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = _percent_1 < DIVISION_CONSTANT_14
[i]Type for TMP_225

Name: TMP_225 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_234(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_234

Name: REF_234 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_235(uint256) -> _trade_1 (-> []).leverage
[i]Type for REF_235

Name: REF_235 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_226(uint256) = REF_234 (c)* REF_235
[i]Type for TMP_226

Name: TMP_226 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = DIVISION_CONSTANT_14 (c)- _percent_1
[i]Type for TMP_227

Name: TMP_227 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = TMP_226 (c)* TMP_227
[i]Type for TMP_228

Name: TMP_228 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = TMP_228 (c)/ DIVISION_CONSTANT_14
[i]Type for TMP_229

Name: TMP_229 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = TMP_229 (c)/ 1000000000000000000
[i]Type for TMP_230

Name: TMP_230 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_237(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_237

Name: REF_237 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_231(uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_74(ITradingExtension), function:minPos, arguments:['REF_237']  
[i]Type for TMP_231

Name: TMP_231 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_15(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_14', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_5(uint256) := ϕ(['maxWinPercent_4', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_104(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_103', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_75(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = TMP_230 < TMP_231
[i]Type for TMP_232

Name: TMP_232 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_103(IPosition), function:burn, arguments:['_id_1']  
DIVISION_CONSTANT_17(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_7(uint256) := ϕ(['maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_106(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(None) = SOLIDITY_CALL revert(string)(!size)
[i]Type for TMP_233

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_104(IPosition), function:reducePosition, arguments:['_id_1', '_percent_1']  
DIVISION_CONSTANT_16(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_15', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWinPercent_6(uint256) := ϕ(['maxWinPercent_5', 'maxWinPercent_7', 'maxWinPercent_9', 'maxWinPercent_6'])
[i]Type for maxWinPercent

Name: maxWinPercent Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_105(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_104', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = _payout_1 > 0
[i]Type for TMP_236

Name: TMP_236 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(uint256) -> _trade_1 (-> []).asset
[i]Type for REF_240

Name: REF_240 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_237 = CONVERT _payout_1 to uint256
[i]Type for TMP_237

Name: TMP_237 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_238(uint256) = TMP_237 * _percent_1
[i]Type for TMP_238

Name: TMP_238 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_239(uint256) = TMP_238 / DIVISION_CONSTANT_17
[i]Type for TMP_239

Name: TMP_239 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_241(address) -> _trade_1 (-> []).tigAsset
[i]Type for REF_241

Name: REF_241 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_240(uint256) = _positionSize_1 * _percent_1
[i]Type for TMP_240

Name: TMP_240 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 / DIVISION_CONSTANT_17
[i]Type for TMP_241

Name: TMP_241 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _trade_1 (-> []).trader
[i]Type for REF_242

Name: REF_242 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_242(uint256) = INTERNAL_CALL, Trading._handleCloseFees(uint256,uint256,address,uint256,address,bool)(REF_240,TMP_239,REF_241,TMP_241,REF_242,_isBot_1)
[i]Type for TMP_242

Name: TMP_242 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_18(uint256) := ϕ(['DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := TMP_242(uint256)
Finance type key: (-1, -1)
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_4(uint256) := ϕ(['_toMint_0', '_toMint_1'])
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_243(bool) = maxWinPercent_8 > 0
[i]Type for TMP_243

Name: TMP_243 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_243

Name: REF_243 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_244(uint256) = REF_243 * maxWinPercent_8
[i]Type for TMP_244

Name: TMP_244 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_245(uint256) = TMP_244 / DIVISION_CONSTANT_18
[i]Type for TMP_245

Name: TMP_245 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_246(bool) = _toMint_1 > TMP_245
[i]Type for TMP_246

Name: TMP_246 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247(bool) = TMP_243 && TMP_246
[i]Type for TMP_247

Name: TMP_247 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_246(address) -> _trade_1 (-> []).trader
[i]Type for REF_246

Name: REF_246 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_247(address) -> _trade_1 (-> []).trader
[i]Type for REF_247

Name: REF_247 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_245(address) -> _trade_1 (-> []).trader
[i]Type for REF_245

Name: REF_245 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_251(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_251

Name: TMP_251 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_3(uint256) := ϕ(['_toMint_2', '_toMint_1'])
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(uint256) -> _trade_1 (-> []).margin
[i]Type for REF_244

Name: REF_244 Function: _closePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_248(uint256) = REF_244 * maxWinPercent_8
[i]Type for TMP_248

Name: TMP_248 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_249(uint256) = TMP_248 / DIVISION_CONSTANT_18
[i]Type for TMP_249

Name: TMP_249 Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toMint_2(uint256) := TMP_249(uint256)
Finance type key: (-1, -1)
[i]Type for _toMint

Name: _toMint Function: _closePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._handleWithdraw(IPosition.Trade,address,address,uint256)(_trade_1 (-> []),_stableVault_1,_outputToken_1,_toMint_3)
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, trader
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, trader
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_19(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_15(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -994
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,False)
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
position_22(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_outputToken_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -999
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -995
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_23(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_53

Name: TMP_53 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_24(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_23', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_20(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_19', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_53(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, asset
Finance Type: undef
REF_43(uint256) -> _trade_1.orderType
[i]Type for REF_43

Name: REF_43 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_54(bool) = REF_43 != 0
[i]Type for TMP_54

Name: TMP_54 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_55

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(uint256) -> _trade_1.asset
[i]Type for REF_45

Name: REF_45 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_1(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_20(ITradingExtension), function:getVerifiedPrice, arguments:['REF_45', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_1

Name: TUPLE_1 Function: initiateCloseOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_21(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_20', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateCloseOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for _price

Name: _price Function: initiateCloseOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._closePosition(uint256,uint256,uint256,address,address,bool)(_id_1,_percent_1,_price_1,_stableVault_1,_outputToken_1,False)



addToPosition
position_25(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_27(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_60

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_29(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_28', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_48(uint256) -> _trade_1.asset
[i]Type for REF_48

Name: REF_48 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_49(address) -> _trade_1.tigAsset
[i]Type for REF_49

Name: REF_49 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> _trade_1.margin
[i]Type for REF_50

Name: REF_50 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
[i]Type for TMP_61

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_51(uint256) -> _trade_1.leverage
[i]Type for REF_51

Name: REF_51 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
position_30(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_29', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52(uint256) -> _trade_1.orderType
[i]Type for REF_52

Name: REF_52 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_64(bool) = REF_52 != 0
[i]Type for TMP_64

Name: TMP_64 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_65

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(uint256) -> _trade_1.asset
[i]Type for REF_53

Name: REF_53 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_54(uint256) -> _trade_1.leverage
[i]Type for REF_54

Name: REF_54 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66(uint256) = _addMargin_1 (c)* REF_54
[i]Type for TMP_66

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
[i]Type for TMP_67

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_55(address) -> _trade_1.tigAsset
[i]Type for REF_55

Name: REF_55 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
Finance type key: (0, 10)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (13, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
Finance type key: (0, 10)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (13, 13)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (13, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
Finance type key: (0, 10)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
Finance type key: (0, 10)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
Finance type key: (0, 10)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (13, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
Finance type key: (0, 10)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (13, 13)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (13, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
Finance type key: (0, 10)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
Finance type key: (0, 10)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
[i]Type for TMP_68

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_68(uint256)
Finance type key: (13, -1)
[i]Type for _fee

Name: _fee Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_56(address) -> _trade_1.tigAsset
[i]Type for REF_56

Name: REF_56 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
Finance type key: (0, 13)
[i]Type for TMP_69

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
Finance type key: (0, 1)
Error with TMP_275 in function _handleDeposit
Error with: TMP_275 in function _handleDeposit
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: undef
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
Finance type key: (0, 1)
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: undef
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
position_34(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_33', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(bool) -> _trade_1.direction
[i]Type for REF_75

Name: REF_75 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_77(uint256) -> _trade_1.asset
[i]Type for REF_77

Name: REF_77 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
[i]Type for TUPLE_2

Name: TUPLE_2 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_35(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_34', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_79(uint256) -> _trade_1.asset
[i]Type for REF_79

Name: REF_79 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_36(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_35', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
Finance type key: (0, 13)
[i]Type for TMP_72

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_58(uint256) -> _trade_1.leverage
[i]Type for REF_58

Name: REF_58 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_73(uint256) = TMP_72 (c)* REF_58
[i]Type for TMP_73

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
[i]Type for TMP_74

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: net balance
_positionSize_1(uint256) := TMP_74(uint256)
Finance type key: (1, -1)
[i]Type for _positionSize

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: net balance
REF_59(bool) -> _trade_1.direction
[i]Type for REF_59

Name: REF_59 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_64(uint256) -> _trade_1.asset
[i]Type for REF_64

Name: REF_64 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(address) -> _trade_1.tigAsset
[i]Type for REF_65

Name: REF_65 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
position_38(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_37', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_61(uint256) -> _trade_1.asset
[i]Type for REF_61

Name: REF_61 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(address) -> _trade_1.tigAsset
[i]Type for REF_62

Name: REF_62 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
position_37(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_36', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> _trade_1.asset
[i]Type for REF_66

Name: REF_66 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_67(address) -> _trade_1.tigAsset
[i]Type for REF_67

Name: REF_67 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_39(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_addMargin_2(uint256) = _addMargin_1 - _fee_1
Finance type key: (0, 13)
[i]Type for _addMargin

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_68(uint256) -> _trade_1.margin
[i]Type for REF_68

Name: REF_68 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_78(uint256) = REF_68 + _addMargin_2
[i]Type for TMP_78

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_newMargin_1(uint256) := TMP_78(uint256)
Finance type key: (1, -1)
[i]Type for _newMargin

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_69(uint256) -> _trade_1.price
[i]Type for REF_69

Name: REF_69 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_70(uint256) -> _trade_1.margin
[i]Type for REF_70

Name: REF_70 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(uint256) = REF_69 * REF_70
[i]Type for TMP_79

Name: TMP_79 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(uint256) = TMP_79 / _newMargin_1
[i]Type for TMP_80

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_81(uint256) = _price_3 * _addMargin_2
[i]Type for TMP_81

Name: TMP_81 Function: addToPosition
Num: 
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_82(uint256) = TMP_81 / _newMargin_1
Finance type key: (1, 1)
Finance type key: (1, 1)
[i]Type for TMP_82

Name: TMP_82 Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_83(uint256) = TMP_80 + TMP_82
Finance type key: (1, 40)
Error with TMP_83 in function addToPosition
Error with: TMP_83 in function addToPosition
[i]Type for TMP_83

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000001
Fields: 
Finance Type: undef
_newPrice_1(uint256) := TMP_83(uint256)
Finance type key: (-1, -1)
[i]Type for _newPrice

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000001
Fields: 
Finance Type: undef
REF_72(uint256) -> _trade_1.id
[i]Type for REF_72

Name: REF_72 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
position_40(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_39', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(uint256) -> _trade_1.id
[i]Type for REF_73

Name: REF_73 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(address) -> _trade_1.trader
[i]Type for REF_74

Name: REF_74 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
position_25(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -992
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_27(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_60

Name: TMP_60 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_29(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_28', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, tigAsset, margin, leverage, orderType, direction, price, id, trader
Finance Type: undef
REF_48(uint256) -> _trade_1.asset
[i]Type for REF_48

Name: REF_48 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_49(address) -> _trade_1.tigAsset
[i]Type for REF_49

Name: REF_49 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_50(uint256) -> _trade_1.margin
[i]Type for REF_50

Name: REF_50 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
[i]Type for TMP_61

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_51(uint256) -> _trade_1.leverage
[i]Type for REF_51

Name: REF_51 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
position_30(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_29', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52(uint256) -> _trade_1.orderType
[i]Type for REF_52

Name: REF_52 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_64(bool) = REF_52 != 0
[i]Type for TMP_64

Name: TMP_64 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_65

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(uint256) -> _trade_1.asset
[i]Type for REF_53

Name: REF_53 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_54(uint256) -> _trade_1.leverage
[i]Type for REF_54

Name: REF_54 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_66(uint256) = _addMargin_1 (c)* REF_54
[i]Type for TMP_66

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
[i]Type for TMP_67

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_55(address) -> _trade_1.tigAsset
[i]Type for REF_55

Name: REF_55 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
Finance type key: (0, 10)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (13, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
Finance type key: (0, 10)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (13, 13)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (13, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
Finance type key: (0, 10)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
Finance type key: (0, 10)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
Finance type key: (0, 10)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (13, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
Finance type key: (0, 10)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (13, 13)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (13, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
Finance type key: (0, 10)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
Finance type key: (0, 10)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: raw balance
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
[i]Type for TMP_68

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_68(uint256)
Finance type key: (13, -1)
[i]Type for _fee

Name: _fee Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: transaction fee (n)
REF_56(address) -> _trade_1.tigAsset
[i]Type for REF_56

Name: REF_56 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
Finance type key: (0, 13)
[i]Type for TMP_69

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
Finance type key: (0, 1)
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: undef
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -992
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
Finance type key: (0, 1)
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: undef
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: 3000000
Fields: 
Finance Type: net balance
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
position_34(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_33', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(bool) -> _trade_1.direction
[i]Type for REF_75

Name: REF_75 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_77(uint256) -> _trade_1.asset
[i]Type for REF_77

Name: REF_77 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
[i]Type for TUPLE_2

Name: TUPLE_2 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_35(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_34', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_79(uint256) -> _trade_1.asset
[i]Type for REF_79

Name: REF_79 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_36(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_35', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _price

Name: _price Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
Finance type key: (0, 13)
[i]Type for TMP_72

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_58(uint256) -> _trade_1.leverage
[i]Type for REF_58

Name: REF_58 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_73(uint256) = TMP_72 (c)* REF_58
[i]Type for TMP_73

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
[i]Type for TMP_74

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: net balance
_positionSize_1(uint256) := TMP_74(uint256)
Finance type key: (1, -1)
[i]Type for _positionSize

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: net balance
REF_59(bool) -> _trade_1.direction
[i]Type for REF_59

Name: REF_59 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_64(uint256) -> _trade_1.asset
[i]Type for REF_64

Name: REF_64 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_65(address) -> _trade_1.tigAsset
[i]Type for REF_65

Name: REF_65 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
position_38(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_37', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_61(uint256) -> _trade_1.asset
[i]Type for REF_61

Name: REF_61 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_62(address) -> _trade_1.tigAsset
[i]Type for REF_62

Name: REF_62 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
position_37(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_36', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> _trade_1.asset
[i]Type for REF_66

Name: REF_66 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_67(address) -> _trade_1.tigAsset
[i]Type for REF_67

Name: REF_67 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_39(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_addMargin_2(uint256) = _addMargin_1 - _fee_1
Finance type key: (0, 13)
[i]Type for _addMargin

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_68(uint256) -> _trade_1.margin
[i]Type for REF_68

Name: REF_68 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_78(uint256) = REF_68 + _addMargin_2
[i]Type for TMP_78

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
_newMargin_1(uint256) := TMP_78(uint256)
Finance type key: (1, -1)
[i]Type for _newMargin

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
REF_69(uint256) -> _trade_1.price
[i]Type for REF_69

Name: REF_69 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_70(uint256) -> _trade_1.margin
[i]Type for REF_70

Name: REF_70 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_79(uint256) = REF_69 * REF_70
[i]Type for TMP_79

Name: TMP_79 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(uint256) = TMP_79 / _newMargin_1
[i]Type for TMP_80

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_81(uint256) = _price_3 * _addMargin_2
[i]Type for TMP_81

Name: TMP_81 Function: addToPosition
Num: 
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: net balance
TMP_82(uint256) = TMP_81 / _newMargin_1
Finance type key: (1, 1)
Finance type key: (1, 1)
[i]Type for TMP_82

Name: TMP_82 Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: price/exchange rate
TMP_83(uint256) = TMP_80 + TMP_82
Finance type key: (1, 40)
[i]Type for TMP_83

Name: TMP_83 Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000001
Fields: 
Finance Type: undef
_newPrice_1(uint256) := TMP_83(uint256)
Finance type key: (-1, -1)
[i]Type for _newPrice

Name: _newPrice Function: addToPosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 3000000000000000001
Fields: 
Finance Type: undef
REF_72(uint256) -> _trade_1.id
[i]Type for REF_72

Name: REF_72 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
position_40(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_39', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addToPosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(uint256) -> _trade_1.id
[i]Type for REF_73

Name: REF_73 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(address) -> _trade_1.trader
[i]Type for REF_74

Name: REF_74 Function: addToPosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



initiateLimitOrder
position_41(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_36(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_80

Name: REF_80 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87 = CONVERT REF_80 to IStableVault
[i]Type for TMP_87

Name: TMP_87 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_88(address) = HIGH_LEVEL_CALL, dest:TMP_87(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_88

Name: TMP_88 Function: initiateLimitOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
position_43(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_42', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_38(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_37', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := TMP_88(address)
Finance type key: (-1, -1)
[i]Type for _tigAsset

Name: _tigAsset Function: initiateLimitOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_83

Name: REF_83 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_84

Name: REF_84 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_85

Name: REF_85 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_38(ITradingExtension), function:validateTrade, arguments:['REF_83', '_tigAsset_1', 'REF_84', 'REF_85']  
position_44(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_43', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_39(ITradingExtension) := ϕ(['tradingExtension_38', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_86(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_86

Name: REF_86 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_87(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_87

Name: REF_87 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkVault(address,address)(REF_86,REF_87)
TMP_91(bool) = _orderType_1 == 0
[i]Type for TMP_91

Name: TMP_91 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL revert(string)(5)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bytes32) -> _tradeInfo_1 (-> []).referral
[i]Type for REF_89

Name: REF_89 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_40(ITradingExtension), function:_setReferral, arguments:['REF_89', '_trader_1']  
position_46(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_45', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_41(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_40', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_90

Name: REF_90 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_91(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_91

Name: REF_91 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_92(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_92

Name: REF_92 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(_tigAsset_1,REF_90,REF_91,REF_92,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
REF_93(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_93

Name: REF_93 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_94(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_94

Name: REF_94 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(REF_93,REF_94,_price_1)
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = HIGH_LEVEL_CALL, dest:position_48(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_49(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_48', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_96(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_98

Name: REF_98 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_99

Name: REF_99 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_100(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_100

Name: REF_100 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_101

Name: REF_101 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(uint256) -> _tradeInfo_1 (-> []).tpPrice
[i]Type for REF_102

Name: REF_102 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_103

Name: REF_103 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_97 = new MintTrade(_trader_1,REF_98,REF_99,REF_100,REF_101,_price_1,REF_102,REF_103,_orderType_1,_tigAsset_1)
[i]Type for TMP_97

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_49(IPosition), function:mint, arguments:['TMP_97']  
position_50(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_49', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> limitDelay_0[_id_1]
[i]Type for REF_104

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = block.timestamp (c)+ 4
[i]Type for TMP_99

Name: TMP_99 Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
limitDelay_1(mapping(uint256 => uint256)) := ϕ(['limitDelay_0'])
[i]Type for limitDelay

Name: limitDelay Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104 (->limitDelay_1) := TMP_99(uint256)
Finance type key: (-1, -1)
[i]Type for REF_104

Name: REF_104 Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
REF_105(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_105

Name: REF_105 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
position_41(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_36(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_80(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_80

Name: REF_80 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_87 = CONVERT REF_80 to IStableVault
[i]Type for TMP_87

Name: TMP_87 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_88(address) = HIGH_LEVEL_CALL, dest:TMP_87(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_88

Name: TMP_88 Function: initiateLimitOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
position_43(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_42', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_38(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_37', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := TMP_88(address)
Finance type key: (-1, -1)
[i]Type for _tigAsset

Name: _tigAsset Function: initiateLimitOrder
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_83

Name: REF_83 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_84

Name: REF_84 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_85(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_85

Name: REF_85 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_38(ITradingExtension), function:validateTrade, arguments:['REF_83', '_tigAsset_1', 'REF_84', 'REF_85']  
position_44(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_43', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_39(ITradingExtension) := ϕ(['tradingExtension_38', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_86(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_86

Name: REF_86 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_87(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_87

Name: REF_87 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkVault(address,address)(REF_86,REF_87)
TMP_91(bool) = _orderType_1 == 0
[i]Type for TMP_91

Name: TMP_91 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL revert(string)(5)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bytes32) -> _tradeInfo_1 (-> []).referral
[i]Type for REF_89

Name: REF_89 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_40(ITradingExtension), function:_setReferral, arguments:['REF_89', '_trader_1']  
position_46(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_45', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_41(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_40', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(address) -> _tradeInfo_1 (-> []).marginAsset
[i]Type for REF_90

Name: REF_90 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_91(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_91

Name: REF_91 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_92(address) -> _tradeInfo_1 (-> []).stableVault
[i]Type for REF_92

Name: REF_92 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(_tigAsset_1,REF_90,REF_91,REF_92,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -991
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Address: 1
Norm: 6
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -998
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -993
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
REF_93(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_93

Name: REF_93 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_94(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_94

Name: REF_94 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(REF_93,REF_94,_price_1)
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96(uint256) = HIGH_LEVEL_CALL, dest:position_48(IPosition), function:getCount, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_49(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_48', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_96(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_98

Name: REF_98 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_99(uint256) -> _tradeInfo_1 (-> []).leverage
[i]Type for REF_99

Name: REF_99 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_100(uint256) -> _tradeInfo_1 (-> []).asset
[i]Type for REF_100

Name: REF_100 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(bool) -> _tradeInfo_1 (-> []).direction
[i]Type for REF_101

Name: REF_101 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_102(uint256) -> _tradeInfo_1 (-> []).tpPrice
[i]Type for REF_102

Name: REF_102 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_103(uint256) -> _tradeInfo_1 (-> []).slPrice
[i]Type for REF_103

Name: REF_103 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_97 = new MintTrade(_trader_1,REF_98,REF_99,REF_100,REF_101,_price_1,REF_102,REF_103,_orderType_1,_tigAsset_1)
[i]Type for TMP_97

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_49(IPosition), function:mint, arguments:['TMP_97']  
position_50(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_49', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> limitDelay_0[_id_1]
[i]Type for REF_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = block.timestamp (c)+ 4
[i]Type for TMP_99

Name: TMP_99 Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
limitDelay_1(mapping(uint256 => uint256)) := ϕ(['limitDelay_0'])
[i]Type for limitDelay

Name: limitDelay Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104 (->limitDelay_1) := TMP_99(uint256)
Finance type key: (-1, -1)
[i]Type for REF_104

Name: REF_104 Function: initiateLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
REF_105(uint256) -> _tradeInfo_1 (-> []).margin
[i]Type for REF_105

Name: REF_105 Function: initiateLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



cancelLimitOrder
position_51(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_53(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_53(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_103

Name: TMP_103 Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_54(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_53', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_103(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_107(uint256) -> _trade_1.orderType
[i]Type for REF_107

Name: REF_107 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_104(bool) = REF_107 == 0
[i]Type for TMP_104

Name: TMP_104 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_105

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_108(address) -> _trade_1.tigAsset
[i]Type for REF_108

Name: REF_108 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_106 = CONVERT REF_108 to IStable
[i]Type for TMP_106

Name: TMP_106 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_110(uint256) -> _trade_1.margin
[i]Type for REF_110

Name: REF_110 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_106(IStable), function:mintFor, arguments:['_trader_1', 'REF_110']  
position_55(IPosition) := ϕ(['position_72', 'position_54', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_55(IPosition), function:burn, arguments:['_id_1']  
position_56(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_55', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_51(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -990
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -990
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_53(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_53(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_103

Name: TMP_103 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_54(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_53', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_103(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, tigAsset, margin
Finance Type: undef
REF_107(uint256) -> _trade_1.orderType
[i]Type for REF_107

Name: REF_107 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_104(bool) = REF_107 == 0
[i]Type for TMP_104

Name: TMP_104 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_105

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_108(address) -> _trade_1.tigAsset
[i]Type for REF_108

Name: REF_108 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_106 = CONVERT REF_108 to IStable
[i]Type for TMP_106

Name: TMP_106 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_110(uint256) -> _trade_1.margin
[i]Type for REF_110

Name: REF_110 Function: cancelLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_106(IStable), function:mintFor, arguments:['_trader_1', 'REF_110']  
position_55(IPosition) := ϕ(['position_72', 'position_54', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_55(IPosition), function:burn, arguments:['_id_1']  
position_56(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_55', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: cancelLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



addMargin
pairsContract_2(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_57(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_59(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_60(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_113

Name: TMP_113 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_6(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_5', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_61(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_60', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_113(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113(uint256) -> _trade_1.orderType
[i]Type for REF_113

Name: REF_113 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(bool) = REF_113 != 0
[i]Type for TMP_114

Name: TMP_114 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_115

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_115(uint256) -> _trade_1.asset
[i]Type for REF_115

Name: REF_115 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_116(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_6(IPairsContract), function:idToAsset, arguments:['REF_115']  
[i]Type for TMP_116

Name: TMP_116 Function: addMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_7(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_6'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_62(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_61', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_116(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: addMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_116(address) -> _trade_1.tigAsset
[i]Type for REF_116

Name: REF_116 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_116,_marginAsset_1,_addMargin_1,_stableVault_1,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
REF_117(uint256) -> _trade_1.margin
[i]Type for REF_117

Name: REF_117 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_118(uint256) = REF_117 (c)+ _addMargin_1
[i]Type for TMP_118

Name: TMP_118 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newMargin_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for _newMargin

Name: _newMargin Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(uint256) -> _trade_1.margin
[i]Type for REF_118

Name: REF_118 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> _trade_1.leverage
[i]Type for REF_119

Name: REF_119 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119(uint256) = REF_118 (c)* REF_119
[i]Type for TMP_119

Name: TMP_119 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = TMP_119 (c)/ _newMargin_1
[i]Type for TMP_120

Name: TMP_120 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newLeverage_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for _newLeverage

Name: _newLeverage Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(uint256) -> asset_1.minLeverage
[i]Type for REF_120

Name: REF_120 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_121(bool) = _newLeverage_1 < REF_120
[i]Type for TMP_121

Name: TMP_121 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(None) = SOLIDITY_CALL revert(string)(!lev)
[i]Type for TMP_122

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_63(IPosition), function:modifyMargin, arguments:['_id_1', '_newMargin_1', '_newLeverage_1']  
position_64(IPosition) := ϕ(['position_63', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_2(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_57(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -987
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_59(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_60(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_113

Name: TMP_113 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_6(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_5', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_61(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_60', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_113(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, asset, tigAsset, margin, leverage
Finance Type: undef
REF_113(uint256) -> _trade_1.orderType
[i]Type for REF_113

Name: REF_113 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_114(bool) = REF_113 != 0
[i]Type for TMP_114

Name: TMP_114 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_115

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_115(uint256) -> _trade_1.asset
[i]Type for REF_115

Name: REF_115 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_116(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_6(IPairsContract), function:idToAsset, arguments:['REF_115']  
[i]Type for TMP_116

Name: TMP_116 Function: addMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_7(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_6'])
[i]Type for pairsContract

Name: pairsContract Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_62(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_61', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_116(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: addMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: minLeverage
Finance Type: undef
REF_116(address) -> _trade_1.tigAsset
[i]Type for REF_116

Name: REF_116 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_116,_marginAsset_1,_addMargin_1,_stableVault_1,_permitData_1 (-> []),_trader_1)
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
_tigAsset_1(address) := ϕ(['_tigAsset_1', '_tigAsset_1', 'REF_116', 'REF_56'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_marginAsset_1(address) := ϕ(['_marginAsset_1', 'REF_90', '_marginAsset_1', 'REF_20'])
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: _marginAsset
Value: u
Fields: 
Finance Type: undef
_margin_1(uint256) := ϕ(['_addMargin_1', 'TMP_69', 'REF_21', 'REF_91'])
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', 'REF_92', 'REF_22'])
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: usePermit, amount, deadline, v, r, s
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: 
Den: 
Address: -987
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
TMP_254 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
tigAsset_1(IStable) := TMP_254(IStable)
Finance type key: (-1, -1)
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(bool) -> _permitData_1 (-> []).usePermit
[i]Type for REF_248

Name: REF_248 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_257 = CONVERT this to address
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
REF_250(uint256) -> _permitData_1 (-> []).amount
[i]Type for REF_250

Name: REF_250 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_251(uint256) -> _permitData_1 (-> []).deadline
[i]Type for REF_251

Name: REF_251 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(uint8) -> _permitData_1 (-> []).v
[i]Type for REF_252

Name: REF_252 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_253(bytes32) -> _permitData_1 (-> []).r
[i]Type for REF_253

Name: REF_253 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_254(bytes32) -> _permitData_1 (-> []).s
[i]Type for REF_254

Name: REF_254 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
TMP_259 = CONVERT this to address
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_260(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_263(uint256) = 18 (c)- TMP_262
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_264(uint256) = 10 (c)** TMP_263
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Finance type key: (-1, -1)
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_265 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_266 = CONVERT this to address
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_269 = CONVERT _marginAsset_1 to IERC20
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Address: -989
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_273 = CONVERT this to address
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_276(bool) = TMP_274 != TMP_275
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_277(int256) = 1 (c)+ 1
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_277(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_278 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Address: -988
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
TMP_281 = CONVERT this to address
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_282 = CONVERT this to address
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
REF_117(uint256) -> _trade_1.margin
[i]Type for REF_117

Name: REF_117 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_118(uint256) = REF_117 (c)+ _addMargin_1
[i]Type for TMP_118

Name: TMP_118 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newMargin_1(uint256) := TMP_118(uint256)
Finance type key: (-1, -1)
[i]Type for _newMargin

Name: _newMargin Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(uint256) -> _trade_1.margin
[i]Type for REF_118

Name: REF_118 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_119(uint256) -> _trade_1.leverage
[i]Type for REF_119

Name: REF_119 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_119(uint256) = REF_118 (c)* REF_119
[i]Type for TMP_119

Name: TMP_119 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = TMP_119 (c)/ _newMargin_1
[i]Type for TMP_120

Name: TMP_120 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newLeverage_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for _newLeverage

Name: _newLeverage Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(uint256) -> asset_1.minLeverage
[i]Type for REF_120

Name: REF_120 Function: addMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_121(bool) = _newLeverage_1 < REF_120
[i]Type for TMP_121

Name: TMP_121 Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(None) = SOLIDITY_CALL revert(string)(!lev)
[i]Type for TMP_122

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_63(IPosition), function:modifyMargin, arguments:['_id_1', '_newMargin_1', '_newLeverage_1']  
position_64(IPosition) := ϕ(['position_63', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: addMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



removeMargin
pairsContract_8(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_65(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_42(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_67(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_outputToken_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_68(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_128

Name: TMP_128 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_12(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_11'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_69(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_68', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_46(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_45', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_128(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_123(uint256) -> _trade_1.orderType
[i]Type for REF_123

Name: REF_123 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_129(bool) = REF_123 != 0
[i]Type for TMP_129

Name: TMP_129 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_125(uint256) -> _trade_1.asset
[i]Type for REF_125

Name: REF_125 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_131(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_12(IPairsContract), function:idToAsset, arguments:['REF_125']  
[i]Type for TMP_131

Name: TMP_131 Function: removeMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_13(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_12', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_70(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_69', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_47(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_46', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_131(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: removeMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_126(uint256) -> _trade_1.margin
[i]Type for REF_126

Name: REF_126 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = REF_126 (c)- _removeMargin_1
[i]Type for TMP_132

Name: TMP_132 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newMargin_1(uint256) := TMP_132(uint256)
Finance type key: (-1, -1)
[i]Type for _newMargin

Name: _newMargin Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(uint256) -> _trade_1.margin
[i]Type for REF_127

Name: REF_127 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_128(uint256) -> _trade_1.leverage
[i]Type for REF_128

Name: REF_128 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = REF_127 (c)* REF_128
[i]Type for TMP_133

Name: TMP_133 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ _newMargin_1
[i]Type for TMP_134

Name: TMP_134 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newLeverage_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for _newLeverage

Name: _newLeverage Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(uint256) -> asset_1.maxLeverage
[i]Type for REF_129

Name: REF_129 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_135(bool) = _newLeverage_1 > REF_129
[i]Type for TMP_135

Name: TMP_135 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136(None) = SOLIDITY_CALL revert(string)(!lev)
[i]Type for TMP_136

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_131(uint256) -> _trade_1.asset
[i]Type for REF_131

Name: REF_131 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_47(ITradingExtension), function:getVerifiedPrice, arguments:['REF_131', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_71(IPosition) := ϕ(['position_72', 'position_70', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_48(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_47'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_assetPrice_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _assetPrice

Name: _assetPrice Function: removeMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_133(bool) -> _trade_1.direction
[i]Type for REF_133

Name: REF_133 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_134(uint256) -> _trade_1.price
[i]Type for REF_134

Name: REF_134 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_135(int256) -> _trade_1.accInterest
[i]Type for REF_135

Name: REF_135 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_5(uint256,int256) = LIBRARY_CALL, dest:TradingLibrary, function:TradingLibrary.pnl(bool,uint256,uint256,uint256,uint256,int256), arguments:['REF_133', '_assetPrice_1', 'REF_134', '_newMargin_1', '_newLeverage_1', 'REF_135'] 
[i]Type for TUPLE_5

Name: TUPLE_5 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_5 index: 1 
[i]Type for _payout

Name: _payout Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(uint256) -> _trade_1.id
[i]Type for REF_137

Name: REF_137 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_71(IPosition), function:modifyMargin, arguments:['REF_137', '_newMargin_1', '_newLeverage_1']  
position_72(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_71', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._handleWithdraw(IPosition.Trade,address,address,uint256)(_trade_1,_stableVault_1,_outputToken_1,_removeMargin_1)
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: tigAsset, trader, orderType, asset, margin, leverage, direction, price, accInterest, id
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: tigAsset, trader, orderType, asset, margin, leverage, direction, price, accInterest, id
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(uint256) -> _trade_1.id
[i]Type for REF_138

Name: REF_138 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
pairsContract_8(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_65(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_42(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -985
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -985
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_67(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_outputToken_1)
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_stableVault_1(address) := ϕ(['REF_5', '_stableVault_1', 'REF_86', '_stableVault_1', '_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_87', '_outputToken_1', '_marginAsset_1', '_marginAsset_1', 'REF_6', '_outputToken_1'])
[i]Type for _token

Name: _token Function: _checkVault
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
[i]Type for allowedVault

Name: allowedVault Function: _checkVault
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_342(bool) -> allowedVault_1[_stableVault_1]
[i]Type for REF_342

Name: allowedVault Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_416(bool) = _token_1 == TMP_415
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_417 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_419(bool) = TMP_416 || TMP_418
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_68(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_128

Name: TMP_128 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_12(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_11'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_69(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_68', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_46(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_45', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_128(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, asset, margin, leverage, direction, price, accInterest, id
Finance Type: undef
REF_123(uint256) -> _trade_1.orderType
[i]Type for REF_123

Name: REF_123 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_129(bool) = REF_123 != 0
[i]Type for TMP_129

Name: TMP_129 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL revert()()
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_125(uint256) -> _trade_1.asset
[i]Type for REF_125

Name: REF_125 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_131(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_12(IPairsContract), function:idToAsset, arguments:['REF_125']  
[i]Type for TMP_131

Name: TMP_131 Function: removeMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_13(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_12', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_70(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_69', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_47(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_46', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_131(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: removeMargin
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: maxLeverage
Finance Type: undef
REF_126(uint256) -> _trade_1.margin
[i]Type for REF_126

Name: REF_126 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_132(uint256) = REF_126 (c)- _removeMargin_1
[i]Type for TMP_132

Name: TMP_132 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newMargin_1(uint256) := TMP_132(uint256)
Finance type key: (-1, -1)
[i]Type for _newMargin

Name: _newMargin Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(uint256) -> _trade_1.margin
[i]Type for REF_127

Name: REF_127 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_128(uint256) -> _trade_1.leverage
[i]Type for REF_128

Name: REF_128 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_133(uint256) = REF_127 (c)* REF_128
[i]Type for TMP_133

Name: TMP_133 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(uint256) = TMP_133 (c)/ _newMargin_1
[i]Type for TMP_134

Name: TMP_134 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newLeverage_1(uint256) := TMP_134(uint256)
Finance type key: (-1, -1)
[i]Type for _newLeverage

Name: _newLeverage Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(uint256) -> asset_1.maxLeverage
[i]Type for REF_129

Name: REF_129 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_135(bool) = _newLeverage_1 > REF_129
[i]Type for TMP_135

Name: TMP_135 Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136(None) = SOLIDITY_CALL revert(string)(!lev)
[i]Type for TMP_136

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_131(uint256) -> _trade_1.asset
[i]Type for REF_131

Name: REF_131 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_47(ITradingExtension), function:getVerifiedPrice, arguments:['REF_131', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_71(IPosition) := ϕ(['position_72', 'position_70', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_48(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_47'])
[i]Type for tradingExtension

Name: tradingExtension Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_assetPrice_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _assetPrice

Name: _assetPrice Function: removeMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_133(bool) -> _trade_1.direction
[i]Type for REF_133

Name: REF_133 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_134(uint256) -> _trade_1.price
[i]Type for REF_134

Name: REF_134 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_135(int256) -> _trade_1.accInterest
[i]Type for REF_135

Name: REF_135 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_5(uint256,int256) = LIBRARY_CALL, dest:TradingLibrary, function:TradingLibrary.pnl(bool,uint256,uint256,uint256,uint256,int256), arguments:['REF_133', '_assetPrice_1', 'REF_134', '_newMargin_1', '_newLeverage_1', 'REF_135'] 
[i]Type for TUPLE_5

Name: TUPLE_5 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_5 index: 1 
[i]Type for _payout

Name: _payout Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(uint256) -> _trade_1.id
[i]Type for REF_137

Name: REF_137 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_71(IPosition), function:modifyMargin, arguments:['REF_137', '_newMargin_1', '_newLeverage_1']  
position_72(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_71', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: removeMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._handleWithdraw(IPosition.Trade,address,address,uint256)(_trade_1,_stableVault_1,_outputToken_1,_removeMargin_1)
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: tigAsset, trader, orderType, asset, margin, leverage, direction, price, accInterest, id
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := ϕ(['_trade_1 (-> [])', '_trade_1'])
[i]Type for _trade

Name: _trade Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: tigAsset, trader, orderType, asset, margin, leverage, direction, price, accInterest, id
Finance Type: undef
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1'])
[i]Type for _stableVault

Name: _stableVault Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: _stableVault
Value: u
Fields: 
Finance Type: undef
_outputToken_1(address) := ϕ(['_outputToken_1', '_outputToken_1'])
[i]Type for _outputToken

Name: _outputToken Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: _outputToken
Value: u
Fields: 
Finance Type: undef
_toMint_1(uint256) := ϕ(['_toMint_3', '_removeMargin_1'])
[i]Type for _toMint

Name: _toMint Function: _handleWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _trade_1.tigAsset
[i]Type for REF_264

Name: REF_264 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_286 = CONVERT REF_264 to IStable
[i]Type for TMP_286

Name: TMP_286 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_286(IStable), function:mintFor, arguments:['TMP_287', '_toMint_1']  
REF_266(address) -> _trade_1.tigAsset
[i]Type for REF_266

Name: REF_266 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_289(bool) = _outputToken_1 == REF_266
[i]Type for TMP_289

Name: TMP_289 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_292 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_292

Name: TMP_292 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT this to address
[i]Type for TMP_293

Name: TMP_293 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_294(uint256) = HIGH_LEVEL_CALL, dest:TMP_292(IERC20), function:balanceOf, arguments:['TMP_293']  
[i]Type for TMP_294

Name: TMP_294 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balBefore_1(uint256) := TMP_294(uint256)
Finance type key: (0, -1)
[i]Type for _balBefore

Name: _balBefore Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_295 = CONVERT _stableVault_1 to IStableVault
[i]Type for TMP_295

Name: TMP_295 Function: _handleWithdraw
Num: 
Den: 
Address: -986
Norm: u
LF: StableVault
Value: u
Fields: 
Finance Type: undef
TMP_296(uint256) = HIGH_LEVEL_CALL, dest:TMP_295(IStableVault), function:withdraw, arguments:['_outputToken_1', '_toMint_1']  
[i]Type for TMP_296

Name: TMP_296 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_290

Name: TMP_290 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_268(address) -> _trade_1.trader
[i]Type for REF_268

Name: REF_268 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_291(bool) = HIGH_LEVEL_CALL, dest:TMP_290(IERC20), function:transfer, arguments:['REF_268', '_toMint_1']  
[i]Type for TMP_291

Name: TMP_291 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_297

Name: TMP_297 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
REF_272(address) -> _trade_1.trader
[i]Type for REF_272

Name: REF_272 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_298 = CONVERT _outputToken_1 to IERC20
[i]Type for TMP_298

Name: TMP_298 Function: _handleWithdraw
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_299 = CONVERT this to address
[i]Type for TMP_299

Name: TMP_299 Function: _handleWithdraw
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IERC20), function:balanceOf, arguments:['TMP_299']  
[i]Type for TMP_300

Name: TMP_300 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_301(uint256) = TMP_300 (c)- _balBefore_1
Finance type key: (0, 0)
[i]Type for TMP_301

Name: TMP_301 Function: _handleWithdraw
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_302(bool) = HIGH_LEVEL_CALL, dest:TMP_297(IERC20), function:transfer, arguments:['REF_272', 'TMP_301']  
[i]Type for TMP_302

Name: TMP_302 Function: _handleWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(uint256) -> _trade_1.id
[i]Type for REF_138

Name: REF_138 Function: removeMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



updateTpSl
position_73(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_49(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_75(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_75(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_142

Name: TMP_142 Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_76(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_75', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_52(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_51', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_142(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_140(uint256) -> _trade_1.orderType
[i]Type for REF_140

Name: REF_140 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = REF_140 != 0
[i]Type for TMP_143

Name: TMP_143 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> _trade_1.asset
[i]Type for REF_143

Name: REF_143 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_52(ITradingExtension), function:getVerifiedPrice, arguments:['REF_143', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_6

Name: TUPLE_6 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_78(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_53(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _price

Name: _price Function: updateTpSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_76(IPosition), function:modifyTp, arguments:['_id_1', '_limitPrice_1']  
position_77(IPosition) := ϕ(['position_72', 'position_76', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(bool) -> _trade_1.direction
[i]Type for REF_144

Name: REF_144 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(_limitPrice_1,REF_144,_price_1)
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_79(IPosition), function:modifySl, arguments:['_id_1', '_limitPrice_1']  
position_80(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_79', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_73(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_49(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
[i]Type for proxyApprovals

Name: proxyApprovals Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = _trader_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
[i]Type for REF_345

Name: None Function: None
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Finance type key: (-1, -1)
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -984
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: proxy, time
Finance Type: undef
REF_346(address) -> _proxy_1.proxy
[i]Type for REF_346

Name: REF_346 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(bool) = REF_346 == TMP_423
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_347(uint256) -> _proxy_1.time
[i]Type for REF_347

Name: REF_347 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_425(bool) = REF_347 >= block.timestamp
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_426(bool) = TMP_424 && TMP_425
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: 
Den: 
Address: -984
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
position_112(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_113(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_112', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_406(bool) = TMP_405 != _trader_1
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_75(IPosition) := ϕ(['position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_75(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_142

Name: TMP_142 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_76(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_75', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_52(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_51', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_142(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, asset, direction
Finance Type: undef
REF_140(uint256) -> _trade_1.orderType
[i]Type for REF_140

Name: REF_140 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = REF_140 != 0
[i]Type for TMP_143

Name: TMP_143 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_143(uint256) -> _trade_1.asset
[i]Type for REF_143

Name: REF_143 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_52(ITradingExtension), function:getVerifiedPrice, arguments:['REF_143', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_6

Name: TUPLE_6 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_78(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_53(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _price

Name: _price Function: updateTpSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_76(IPosition), function:modifyTp, arguments:['_id_1', '_limitPrice_1']  
position_77(IPosition) := ϕ(['position_72', 'position_76', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(bool) -> _trade_1.direction
[i]Type for REF_144

Name: REF_144 Function: updateTpSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._checkSl(uint256,bool,uint256)(_limitPrice_1,REF_144,_price_1)
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sl_1(uint256) := ϕ(['REF_31', 'REF_93', '_limitPrice_1'])
[i]Type for _sl

Name: _sl Function: _checkSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_direction_1(bool) := ϕ(['REF_94', 'REF_144', 'REF_32'])
[i]Type for _direction

Name: _direction Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256) := ϕ(['_price_1', '_price_1', '_price_1'])
[i]Type for _price

Name: _price Function: _checkSl
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_401(bool) = _sl_1 < _price_1
[i]Type for TMP_401

Name: TMP_401 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_402(bool) = _sl_1 != 0
[i]Type for TMP_402

Name: TMP_402 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_403(bool) = TMP_401 && TMP_402
[i]Type for TMP_403

Name: TMP_403 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = _sl_1 > _price_1
[i]Type for TMP_399

Name: TMP_399 Function: _checkSl
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_404(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_404

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_400(None) = SOLIDITY_CALL revert(string)(3)
[i]Type for TMP_400

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_79(IPosition), function:modifySl, arguments:['_id_1', '_limitPrice_1']  
position_80(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_79', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: updateTpSl
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



executeLimitOrder
DIVISION_CONSTANT_1(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_1(uint256) := ϕ(['limitOrderPriceRange_7', 'limitOrderPriceRange_0', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_81(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_54(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitDelay_2(mapping(uint256 => uint256)) := ϕ(['limitDelay_4', 'limitDelay_1', 'limitDelay_0'])
[i]Type for limitDelay

Name: limitDelay Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
HIGH_LEVEL_CALL, dest:tradingExtension_55(ITradingExtension), function:_checkGas, arguments:[]  
DIVISION_CONSTANT_3(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_2', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_3(uint256) := ϕ(['limitOrderPriceRange_7', 'limitOrderPriceRange_6', 'limitOrderPriceRange_2'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_83(IPosition) := ϕ(['position_82', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_56(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_55', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitDelay_4(mapping(uint256 => uint256)) := ϕ(['limitDelay_4', 'limitDelay_1', 'limitDelay_3'])
[i]Type for limitDelay

Name: limitDelay Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_147(uint256) -> limitDelay_4[_id_1]
[i]Type for REF_147

Name: limitDelay Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151(bool) = block.timestamp >= REF_147
[i]Type for TMP_151

Name: TMP_151 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_153(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_83(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_153

Name: TMP_153 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_4(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_3', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_4(uint256) := ϕ(['limitOrderPriceRange_3', 'limitOrderPriceRange_7', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_84(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_83', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_57(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_56', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_1(IPosition.Trade) := TMP_153(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_149(uint256) -> trade_1.asset
[i]Type for REF_149

Name: REF_149 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_150(uint256) -> trade_1.margin
[i]Type for REF_150

Name: REF_150 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_151(uint256) -> trade_1.leverage
[i]Type for REF_151

Name: REF_151 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_154(uint256) = REF_150 * REF_151
[i]Type for TMP_154

Name: TMP_154 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_155(uint256) = TMP_154 / 1000000000000000000
[i]Type for TMP_155

Name: TMP_155 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_152(address) -> trade_1.trader
[i]Type for REF_152

Name: REF_152 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_153(address) -> trade_1.tigAsset
[i]Type for REF_153

Name: REF_153 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_156(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_149,TMP_155,REF_152,REF_153,True)
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
[i]Type for TMP_156

Name: TMP_156 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
DIVISION_CONSTANT_5(uint256) := ϕ(['DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_21'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_58(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_156(uint256)
Finance type key: (10, -1)
[i]Type for _fee

Name: _fee Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_155(uint256) -> trade_1.asset
[i]Type for REF_155

Name: REF_155 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_7(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_58(ITradingExtension), function:getVerifiedPrice, arguments:['REF_155', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_7

Name: TUPLE_7 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_6(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_5', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_6(uint256) := ϕ(['limitOrderPriceRange_5', 'limitOrderPriceRange_7', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_86(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_85', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_59(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_58', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for _price

Name: _price Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_spread_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for _spread

Name: _spread Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> trade_1.orderType
[i]Type for REF_156

Name: REF_156 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_157(bool) = REF_156 == 0
[i]Type for TMP_157

Name: TMP_157 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL revert(string)(5)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> trade_1.price
[i]Type for REF_157

Name: REF_157 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_158(uint256) -> trade_1.price
[i]Type for REF_158

Name: REF_158 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_159(uint256) = REF_158 * limitOrderPriceRange_6
[i]Type for TMP_159

Name: TMP_159 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160(uint256) = TMP_159 / DIVISION_CONSTANT_6
[i]Type for TMP_160

Name: TMP_160 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = REF_157 + TMP_160
[i]Type for TMP_161

Name: TMP_161 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162(bool) = _price_1 > TMP_161
[i]Type for TMP_162

Name: TMP_162 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_159(uint256) -> trade_1.price
[i]Type for REF_159

Name: REF_159 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(uint256) -> trade_1.price
[i]Type for REF_160

Name: REF_160 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_163(uint256) = REF_160 * limitOrderPriceRange_6
[i]Type for TMP_163

Name: TMP_163 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(uint256) = TMP_163 / DIVISION_CONSTANT_6
[i]Type for TMP_164

Name: TMP_164 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(uint256) = REF_159 - TMP_164
[i]Type for TMP_165

Name: TMP_165 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = _price_1 < TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(bool) = TMP_162 || TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_168

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(bool) -> trade_1.direction
[i]Type for REF_161

Name: REF_161 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_162(uint256) -> trade_1.orderType
[i]Type for REF_162

Name: REF_162 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_169(bool) = REF_162 == 1
[i]Type for TMP_169

Name: TMP_169 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = REF_161 && TMP_169
[i]Type for TMP_170

Name: TMP_170 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(bool) -> trade_1.direction
[i]Type for REF_164

Name: REF_164 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173 = ! REF_164 
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(uint256) -> trade_1.orderType
[i]Type for REF_165

Name: REF_165 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_174(bool) = REF_165 == 1
[i]Type for TMP_174

Name: TMP_174 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(bool) = TMP_173 && TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_163(uint256) -> trade_1.price
[i]Type for REF_163

Name: REF_163 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_171(bool) = REF_163 < _price_1
[i]Type for TMP_171

Name: TMP_171 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_172(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_172

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_166(uint256) -> trade_1.price
[i]Type for REF_166

Name: REF_166 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_176(bool) = REF_166 > _price_1
[i]Type for TMP_176

Name: TMP_176 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_177(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(bool) -> trade_1.direction
[i]Type for REF_167

Name: REF_167 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_178 = ! REF_167 
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_168(uint256) -> trade_1.orderType
[i]Type for REF_168

Name: REF_168 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_179(bool) = REF_168 == 2
[i]Type for TMP_179

Name: TMP_179 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(bool) = TMP_178 && TMP_179
[i]Type for TMP_180

Name: TMP_180 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> trade_1.price
[i]Type for REF_169

Name: REF_169 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(bool) = REF_169 < _price_1
[i]Type for TMP_181

Name: TMP_181 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_171(uint256) -> trade_1.price
[i]Type for REF_171

Name: REF_171 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_183(bool) = REF_171 > _price_1
[i]Type for TMP_183

Name: TMP_183 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_173(bool) -> trade_1.direction
[i]Type for REF_173

Name: REF_173 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_182

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> trade_1.price
[i]Type for REF_174

Name: REF_174 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(uint256) -> trade_1.price
[i]Type for REF_175

Name: REF_175 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_185(uint256) = REF_175 * _spread_1
[i]Type for TMP_185

Name: TMP_185 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 / DIVISION_CONSTANT_6
[i]Type for TMP_186

Name: TMP_186 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_6(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_174(-> trade_6) = REF_174 + TMP_186
[i]Type for REF_174

Name: REF_174 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_184(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_184

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_7(IPosition.Trade) := ϕ(['trade_6', 'trade_5'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> trade_1.price
[i]Type for REF_170

Name: REF_170 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
trade_3(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_170 (->trade_3) := _price_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_170

Name: REF_170 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_176(uint256) -> trade_1.price
[i]Type for REF_176

Name: REF_176 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(uint256) -> trade_1.price
[i]Type for REF_177

Name: REF_177 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187(uint256) = REF_177 * _spread_1
[i]Type for TMP_187

Name: TMP_187 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_188(uint256) = TMP_187 / DIVISION_CONSTANT_6
[i]Type for TMP_188

Name: TMP_188 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_5(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_176(-> trade_5) = REF_176 - TMP_188
[i]Type for REF_176

Name: REF_176 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_172(uint256) -> trade_1.price
[i]Type for REF_172

Name: REF_172 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
trade_2(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_172 (->trade_2) := _price_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_172

Name: REF_172 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> trade_7.direction
[i]Type for REF_178

Name: REF_178 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_180(uint256) -> trade_7.asset
[i]Type for REF_180

Name: REF_180 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(address) -> trade_7.tigAsset
[i]Type for REF_181

Name: REF_181 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_182(uint256) -> trade_7.margin
[i]Type for REF_182

Name: REF_182 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_183(uint256) -> trade_7.leverage
[i]Type for REF_183

Name: REF_183 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(uint256) = REF_182 * REF_183
[i]Type for TMP_189

Name: TMP_189 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = TMP_189 / 1000000000000000000
[i]Type for TMP_190

Name: TMP_190 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_59(ITradingExtension), function:modifyLongOi, arguments:['REF_180', 'REF_181', 'True', 'TMP_190']  
position_87(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_86', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_60(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_59', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_4(IPosition.Trade) := ϕ(['trade_2', 'trade_3', 'trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_185(uint256) -> trade_7.asset
[i]Type for REF_185

Name: REF_185 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_186(address) -> trade_7.tigAsset
[i]Type for REF_186

Name: REF_186 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_187(uint256) -> trade_7.margin
[i]Type for REF_187

Name: REF_187 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> trade_7.leverage
[i]Type for REF_188

Name: REF_188 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_192(uint256) = REF_187 * REF_188
[i]Type for TMP_192

Name: TMP_192 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = TMP_192 / 1000000000000000000
[i]Type for TMP_193

Name: TMP_193 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_59(ITradingExtension), function:modifyShortOi, arguments:['REF_185', 'REF_186', 'True', 'TMP_193']  
position_88(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_87', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_61(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_189(uint256) -> trade_7.asset
[i]Type for REF_189

Name: REF_189 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_190(address) -> trade_7.tigAsset
[i]Type for REF_190

Name: REF_190 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_189,REF_190)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_89(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(uint256) -> trade_7.price
[i]Type for REF_192

Name: REF_192 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_193(uint256) -> trade_7.margin
[i]Type for REF_193

Name: REF_193 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_196(uint256) = REF_193 - _fee_1
[i]Type for TMP_196

Name: TMP_196 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
HIGH_LEVEL_CALL, dest:position_89(IPosition), function:executeLimitOrder, arguments:['_id_1', 'REF_192', 'TMP_196']  
position_90(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_89', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_194(uint256) -> trade_7.asset
[i]Type for REF_194

Name: REF_194 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_195(bool) -> trade_7.direction
[i]Type for REF_195

Name: REF_195 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> trade_7.price
[i]Type for REF_196

Name: REF_196 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(uint256) -> trade_7.leverage
[i]Type for REF_197

Name: REF_197 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_198(uint256) -> trade_7.margin
[i]Type for REF_198

Name: REF_198 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = REF_198 - _fee_1
[i]Type for TMP_198

Name: TMP_198 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_199(address) -> trade_7.trader
[i]Type for REF_199

Name: REF_199 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_199(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_199

Name: TMP_199 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_1(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_1(uint256) := ϕ(['limitOrderPriceRange_7', 'limitOrderPriceRange_0', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_81(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_54(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitDelay_2(mapping(uint256 => uint256)) := ϕ(['limitDelay_4', 'limitDelay_1', 'limitDelay_0'])
[i]Type for limitDelay

Name: limitDelay Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
HIGH_LEVEL_CALL, dest:tradingExtension_55(ITradingExtension), function:_checkGas, arguments:[]  
DIVISION_CONSTANT_3(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_2', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_3(uint256) := ϕ(['limitOrderPriceRange_7', 'limitOrderPriceRange_6', 'limitOrderPriceRange_2'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_83(IPosition) := ϕ(['position_82', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_56(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_55', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitDelay_4(mapping(uint256 => uint256)) := ϕ(['limitDelay_4', 'limitDelay_1', 'limitDelay_3'])
[i]Type for limitDelay

Name: limitDelay Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_147(uint256) -> limitDelay_4[_id_1]
[i]Type for REF_147

Name: limitDelay Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151(bool) = block.timestamp >= REF_147
[i]Type for TMP_151

Name: TMP_151 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_152(None) = SOLIDITY_CALL require(bool)(TMP_151)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_153(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_83(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_153

Name: TMP_153 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_4(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_3', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_4(uint256) := ϕ(['limitOrderPriceRange_3', 'limitOrderPriceRange_7', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_84(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_83', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_57(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_56', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_1(IPosition.Trade) := TMP_153(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_149(uint256) -> trade_1.asset
[i]Type for REF_149

Name: REF_149 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_150(uint256) -> trade_1.margin
[i]Type for REF_150

Name: REF_150 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_151(uint256) -> trade_1.leverage
[i]Type for REF_151

Name: REF_151 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_154(uint256) = REF_150 * REF_151
[i]Type for TMP_154

Name: TMP_154 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_155(uint256) = TMP_154 / 1000000000000000000
[i]Type for TMP_155

Name: TMP_155 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_152(address) -> trade_1.trader
[i]Type for REF_152

Name: REF_152 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_153(address) -> trade_1.tigAsset
[i]Type for REF_153

Name: REF_153 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_156(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_149,TMP_155,REF_152,REF_153,True)
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
_asset_1(uint256) := ϕ(['REF_149', 'REF_16', 'REF_53'])
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['TMP_67', 'TMP_155', 'TMP_34'])
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: 
Den: 
Address: -996
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_55', 'REF_153'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_1(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_14(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_2(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_1', 'openFees_8', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_15(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_14', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_3(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_2', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_76', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_275(uint256) -> _fees_1.daoFees
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_276(uint256) -> _fees_1.daoFees
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_277(uint256) -> asset_1.feeMultiplier
[i]Type for REF_277

Name: REF_277 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_304(uint256) = REF_276 * REF_277
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: burnFees, daoFees
Finance Type: undef
REF_275 (->_fees_2) := TMP_305(uint256)
Finance type key: (10, -1)
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_278(uint256) -> _fees_2.burnFees
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_279(uint256) -> _fees_2.burnFees
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
REF_280(uint256) -> asset_1.feeMultiplier
[i]Type for REF_280

Name: REF_280 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_306(uint256) = REF_279 * REF_280
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: referralFees, daoFees, burnFees
Finance Type: undef
REF_278 (->_fees_3) := TMP_307(uint256)
Finance type key: (10, -1)
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_281(uint256) -> _fees_3.referralFees
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_282(uint256) -> _fees_3.referralFees
[i]Type for REF_282

Name: REF_282 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_283(uint256) -> asset_1.feeMultiplier
[i]Type for REF_283

Name: REF_283 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_308(uint256) = REF_282 * REF_283
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_281 (->_fees_4) := TMP_309(uint256)
Finance type key: (-1, -1)
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_284(uint256) -> _fees_4.botFees
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_285(uint256) -> _fees_4.botFees
[i]Type for REF_285

Name: REF_285 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_286(uint256) -> asset_1.feeMultiplier
[i]Type for REF_286

Name: REF_286 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_310(uint256) = REF_285 * REF_286
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_284 (->_fees_5) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_4(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_3'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_77', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_312(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bool) = _referrer_1 != TMP_313
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
TMP_315 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> _fees_5.referralFees
[i]Type for REF_289

Name: REF_289 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_316(uint256) = _positionSize_1 * REF_289
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_5(IGovNFT) := ϕ(['gov_19', 'gov_4', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(uint256) -> _fees_5.daoFees
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_291(uint256) -> _fees_5.daoFees
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_292(uint256) -> _fees_5.referralFees
[i]Type for REF_292

Name: REF_292 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_319(uint256) = REF_292 * 2
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_320(uint256) = REF_291 - TMP_319
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_290 (->_fees_6) := TMP_320(uint256)
Finance type key: (10, -1)
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_321 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(uint256) -> _fees_7.botFees
[i]Type for REF_294

Name: REF_294 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_323(uint256) = _positionSize_1 * REF_294
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_7(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_6'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(uint256) -> _fees_7.botFees
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_298 (->_fees_8) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_295(uint256) -> _fees_7.daoFees
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_296(uint256) -> _fees_7.daoFees
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_297(uint256) -> _fees_7.botFees
[i]Type for REF_297

Name: REF_297 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_326(uint256) = REF_296 - REF_297
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_295 (->_fees_9) := TMP_326(uint256)
Finance type key: (10, -1)
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
REF_299(uint256) -> _fees_10.daoFees
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_327(uint256) = _positionSize_1 * REF_299
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Finance type key: (10, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_300(uint256) -> _fees_10.burnFees
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
REF_301(uint256) -> _fees_10.botFees
[i]Type for REF_301

Name: REF_301 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_329(uint256) = REF_300 + REF_301
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_330(uint256) = _positionSize_1 * TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Finance type key: (10, 10)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
_feePaid_1(uint256) := TMP_332(uint256)
Finance type key: (10, -1)
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_340 = CONVERT 0 to address
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(bool) = _referrer_1 != TMP_340
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_305(uint256) -> _fees_10.burnFees
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_342(uint256) = _positionSize_1 * REF_305
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_306(uint256) -> _fees_10.referralFees
[i]Type for REF_306

Name: REF_306 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(uint256) = _positionSize_1 * REF_306
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_307(uint256) -> _fees_10.botFees
[i]Type for REF_307

Name: REF_307 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(uint256) = _positionSize_1 * REF_307
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_308(uint256) -> _fees_10.burnFees
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
Finance type key: (10, -1)
TMP_349(uint256) = _positionSize_1 * REF_308
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_309(uint256) -> _fees_10.botFees
[i]Type for REF_309

Name: REF_309 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_351(uint256) = _positionSize_1 * REF_309
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_333 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
gov_8(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_7', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_337 = CONVERT this to address
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
gov_9(IGovNFT) := ϕ(['gov_19', 'gov_8', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
gov_10(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_9', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleOpenFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _feePaid_1
[i]Type for TMP_156

Name: TMP_156 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
DIVISION_CONSTANT_5(uint256) := ϕ(['DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_21'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_58(ITradingExtension) := ϕ(['tradingExtension_78'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_156(uint256)
Finance type key: (10, -1)
[i]Type for _fee

Name: _fee Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_155(uint256) -> trade_1.asset
[i]Type for REF_155

Name: REF_155 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_7(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_58(ITradingExtension), function:getVerifiedPrice, arguments:['REF_155', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_7

Name: TUPLE_7 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_6(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_5', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
limitOrderPriceRange_6(uint256) := ϕ(['limitOrderPriceRange_5', 'limitOrderPriceRange_7', 'limitOrderPriceRange_6'])
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_86(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_85', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_59(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_58', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for _price

Name: _price Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_spread_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for _spread

Name: _spread Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> trade_1.orderType
[i]Type for REF_156

Name: REF_156 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_157(bool) = REF_156 == 0
[i]Type for TMP_157

Name: TMP_157 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(None) = SOLIDITY_CALL revert(string)(5)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> trade_1.price
[i]Type for REF_157

Name: REF_157 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_158(uint256) -> trade_1.price
[i]Type for REF_158

Name: REF_158 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_159(uint256) = REF_158 * limitOrderPriceRange_6
[i]Type for TMP_159

Name: TMP_159 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160(uint256) = TMP_159 / DIVISION_CONSTANT_6
[i]Type for TMP_160

Name: TMP_160 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161(uint256) = REF_157 + TMP_160
[i]Type for TMP_161

Name: TMP_161 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162(bool) = _price_1 > TMP_161
[i]Type for TMP_162

Name: TMP_162 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_159(uint256) -> trade_1.price
[i]Type for REF_159

Name: REF_159 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_160(uint256) -> trade_1.price
[i]Type for REF_160

Name: REF_160 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_163(uint256) = REF_160 * limitOrderPriceRange_6
[i]Type for TMP_163

Name: TMP_163 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(uint256) = TMP_163 / DIVISION_CONSTANT_6
[i]Type for TMP_164

Name: TMP_164 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(uint256) = REF_159 - TMP_164
[i]Type for TMP_165

Name: TMP_165 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = _price_1 < TMP_165
[i]Type for TMP_166

Name: TMP_166 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(bool) = TMP_162 || TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_168

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(bool) -> trade_1.direction
[i]Type for REF_161

Name: REF_161 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_162(uint256) -> trade_1.orderType
[i]Type for REF_162

Name: REF_162 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_169(bool) = REF_162 == 1
[i]Type for TMP_169

Name: TMP_169 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = REF_161 && TMP_169
[i]Type for TMP_170

Name: TMP_170 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_164(bool) -> trade_1.direction
[i]Type for REF_164

Name: REF_164 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_173 = ! REF_164 
[i]Type for TMP_173

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(uint256) -> trade_1.orderType
[i]Type for REF_165

Name: REF_165 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_174(bool) = REF_165 == 1
[i]Type for TMP_174

Name: TMP_174 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(bool) = TMP_173 && TMP_174
[i]Type for TMP_175

Name: TMP_175 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_163(uint256) -> trade_1.price
[i]Type for REF_163

Name: REF_163 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_171(bool) = REF_163 < _price_1
[i]Type for TMP_171

Name: TMP_171 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_172(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_172

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_166(uint256) -> trade_1.price
[i]Type for REF_166

Name: REF_166 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_176(bool) = REF_166 > _price_1
[i]Type for TMP_176

Name: TMP_176 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_177(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(bool) -> trade_1.direction
[i]Type for REF_167

Name: REF_167 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_178 = ! REF_167 
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_168(uint256) -> trade_1.orderType
[i]Type for REF_168

Name: REF_168 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_179(bool) = REF_168 == 2
[i]Type for TMP_179

Name: TMP_179 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(bool) = TMP_178 && TMP_179
[i]Type for TMP_180

Name: TMP_180 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> trade_1.price
[i]Type for REF_169

Name: REF_169 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_181(bool) = REF_169 < _price_1
[i]Type for TMP_181

Name: TMP_181 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_171(uint256) -> trade_1.price
[i]Type for REF_171

Name: REF_171 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_183(bool) = REF_171 > _price_1
[i]Type for TMP_183

Name: TMP_183 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_173(bool) -> trade_1.direction
[i]Type for REF_173

Name: REF_173 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_182(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_182

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> trade_1.price
[i]Type for REF_174

Name: REF_174 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_175(uint256) -> trade_1.price
[i]Type for REF_175

Name: REF_175 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_185(uint256) = REF_175 * _spread_1
[i]Type for TMP_185

Name: TMP_185 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(uint256) = TMP_185 / DIVISION_CONSTANT_6
[i]Type for TMP_186

Name: TMP_186 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_6(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_174(-> trade_6) = REF_174 + TMP_186
[i]Type for REF_174

Name: REF_174 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_184(None) = SOLIDITY_CALL revert(string)(6)
[i]Type for TMP_184

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_7(IPosition.Trade) := ϕ(['trade_6', 'trade_5'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_170(uint256) -> trade_1.price
[i]Type for REF_170

Name: REF_170 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
trade_3(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_170 (->trade_3) := _price_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_170

Name: REF_170 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_176(uint256) -> trade_1.price
[i]Type for REF_176

Name: REF_176 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_177(uint256) -> trade_1.price
[i]Type for REF_177

Name: REF_177 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_187(uint256) = REF_177 * _spread_1
[i]Type for TMP_187

Name: TMP_187 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_188(uint256) = TMP_187 / DIVISION_CONSTANT_6
[i]Type for TMP_188

Name: TMP_188 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_5(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_176(-> trade_5) = REF_176 - TMP_188
[i]Type for REF_176

Name: REF_176 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_172(uint256) -> trade_1.price
[i]Type for REF_172

Name: REF_172 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
trade_2(IPosition.Trade) := ϕ(['trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_172 (->trade_2) := _price_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_172

Name: REF_172 Function: executeLimitOrder
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_178(bool) -> trade_7.direction
[i]Type for REF_178

Name: REF_178 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_180(uint256) -> trade_7.asset
[i]Type for REF_180

Name: REF_180 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_181(address) -> trade_7.tigAsset
[i]Type for REF_181

Name: REF_181 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_182(uint256) -> trade_7.margin
[i]Type for REF_182

Name: REF_182 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_183(uint256) -> trade_7.leverage
[i]Type for REF_183

Name: REF_183 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_189(uint256) = REF_182 * REF_183
[i]Type for TMP_189

Name: TMP_189 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = TMP_189 / 1000000000000000000
[i]Type for TMP_190

Name: TMP_190 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_59(ITradingExtension), function:modifyLongOi, arguments:['REF_180', 'REF_181', 'True', 'TMP_190']  
position_87(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_86', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_60(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_59', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trade_4(IPosition.Trade) := ϕ(['trade_2', 'trade_3', 'trade_1'])
[i]Type for trade

Name: trade Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: asset, margin, leverage, trader, tigAsset, orderType, price, direction
Finance Type: undef
REF_185(uint256) -> trade_7.asset
[i]Type for REF_185

Name: REF_185 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_186(address) -> trade_7.tigAsset
[i]Type for REF_186

Name: REF_186 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_187(uint256) -> trade_7.margin
[i]Type for REF_187

Name: REF_187 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_188(uint256) -> trade_7.leverage
[i]Type for REF_188

Name: REF_188 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_192(uint256) = REF_187 * REF_188
[i]Type for TMP_192

Name: TMP_192 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = TMP_192 / 1000000000000000000
[i]Type for TMP_193

Name: TMP_193 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_59(ITradingExtension), function:modifyShortOi, arguments:['REF_185', 'REF_186', 'True', 'TMP_193']  
position_88(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_87', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_61(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_189(uint256) -> trade_7.asset
[i]Type for REF_189

Name: REF_189 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_190(address) -> trade_7.tigAsset
[i]Type for REF_190

Name: REF_190 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_189,REF_190)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_89(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(uint256) -> trade_7.price
[i]Type for REF_192

Name: REF_192 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_193(uint256) -> trade_7.margin
[i]Type for REF_193

Name: REF_193 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_196(uint256) = REF_193 - _fee_1
[i]Type for TMP_196

Name: TMP_196 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
HIGH_LEVEL_CALL, dest:position_89(IPosition), function:executeLimitOrder, arguments:['_id_1', 'REF_192', 'TMP_196']  
position_90(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_89', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_194(uint256) -> trade_7.asset
[i]Type for REF_194

Name: REF_194 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_195(bool) -> trade_7.direction
[i]Type for REF_195

Name: REF_195 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_196(uint256) -> trade_7.price
[i]Type for REF_196

Name: REF_196 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_197(uint256) -> trade_7.leverage
[i]Type for REF_197

Name: REF_197 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_198(uint256) -> trade_7.margin
[i]Type for REF_198

Name: REF_198 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_198(uint256) = REF_198 - _fee_1
[i]Type for TMP_198

Name: TMP_198 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000000000
Fields: 
Finance Type: updated compound fee ratio (t)
REF_199(address) -> trade_7.trader
[i]Type for REF_199

Name: REF_199 Function: executeLimitOrder
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_199(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_199

Name: TMP_199 Function: executeLimitOrder
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



liquidatePosition
position_91(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_62(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_62(ITradingExtension), function:_checkGas, arguments:[]  
position_92(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_91', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_63(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_62', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_92(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_202

Name: TMP_202 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_93(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_92', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_64(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_63', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_202(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> _trade_1.orderType
[i]Type for REF_202

Name: REF_202 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_203(bool) = REF_202 != 0
[i]Type for TMP_203

Name: TMP_203 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> _trade_1.asset
[i]Type for REF_204

Name: REF_204 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_64(ITradingExtension), function:getVerifiedPrice, arguments:['REF_204', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_8

Name: TUPLE_8 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_94(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_93', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_65(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_64', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_8 index: 0 
[i]Type for _price

Name: _price Function: liquidatePosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_206(bool) -> _trade_1.direction
[i]Type for REF_206

Name: REF_206 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_207(uint256) -> _trade_1.price
[i]Type for REF_207

Name: REF_207 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_208(uint256) -> _trade_1.margin
[i]Type for REF_208

Name: REF_208 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_209(uint256) -> _trade_1.leverage
[i]Type for REF_209

Name: REF_209 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(int256) -> _trade_1.accInterest
[i]Type for REF_210

Name: REF_210 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_9(uint256,int256) = LIBRARY_CALL, dest:TradingLibrary, function:TradingLibrary.pnl(bool,uint256,uint256,uint256,uint256,int256), arguments:['REF_206', '_price_1', 'REF_207', 'REF_208', 'REF_209', 'REF_210'] 
[i]Type for TUPLE_9

Name: TUPLE_9 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSizeAfterPrice_1(uint256)= UNPACK TUPLE_9 index: 0 
[i]Type for _positionSizeAfterPrice

Name: _positionSizeAfterPrice Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_9 index: 1 
[i]Type for _payout

Name: _payout Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_211(uint256) -> _trade_1.margin
[i]Type for REF_211

Name: REF_211 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_212(uint256) -> _trade_1.leverage
[i]Type for REF_212

Name: REF_212 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_205(uint256) = REF_211 * REF_212
[i]Type for TMP_205

Name: TMP_205 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = TMP_205 / 1000000000000000000
[i]Type for TMP_206

Name: TMP_206 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_positionSize_1(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for _positionSize

Name: _positionSize Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_213(bool) -> _trade_1.direction
[i]Type for REF_213

Name: REF_213 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_215(uint256) -> _trade_1.asset
[i]Type for REF_215

Name: REF_215 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_216(address) -> _trade_1.tigAsset
[i]Type for REF_216

Name: REF_216 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_65(ITradingExtension), function:modifyLongOi, arguments:['REF_215', 'REF_216', 'False', '_positionSize_1']  
position_96(IPosition) := ϕ(['position_95', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_67(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_218(uint256) -> _trade_1.asset
[i]Type for REF_218

Name: REF_218 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> _trade_1.tigAsset
[i]Type for REF_219

Name: REF_219 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_65(ITradingExtension), function:modifyShortOi, arguments:['REF_218', 'REF_219', 'False', '_positionSize_1']  
position_95(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_94', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_66(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_65'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(uint256) -> _trade_1.asset
[i]Type for REF_220

Name: REF_220 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> _trade_1.tigAsset
[i]Type for REF_221

Name: REF_221 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_220,REF_221)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_97(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_222(uint256) -> _trade_1.asset
[i]Type for REF_222

Name: REF_222 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_211(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_211

Name: TMP_211 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
REF_223(address) -> _trade_1.tigAsset
[i]Type for REF_223

Name: REF_223 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_224(address) -> _trade_1.trader
[i]Type for REF_224

Name: REF_224 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_212(uint256) = INTERNAL_CALL, Trading._handleCloseFees(uint256,uint256,address,uint256,address,bool)(REF_222,TMP_211,REF_223,_positionSizeAfterPrice_1,REF_224,True)
[i]Type for TMP_212

Name: TMP_212 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_98(IPosition), function:burn, arguments:['_id_1']  
position_99(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_98', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_226(address) -> _trade_1.trader
[i]Type for REF_226

Name: REF_226 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_214

Name: TMP_214 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_91(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_62(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:tradingExtension_62(ITradingExtension), function:_checkGas, arguments:[]  
position_92(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_91', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_63(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_62', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_92(IPosition), function:trades, arguments:['_id_1']  
[i]Type for TMP_202

Name: TMP_202 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_93(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_92', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_64(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_63', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trade_1(IPosition.Trade) := TMP_202(IPosition.Trade)
Finance type key: (-1, -1)
[i]Type for _trade

Name: _trade Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: orderType, asset, direction, price, margin, leverage, accInterest, tigAsset, trader
Finance Type: undef
REF_202(uint256) -> _trade_1.orderType
[i]Type for REF_202

Name: REF_202 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_203(bool) = REF_202 != 0
[i]Type for TMP_203

Name: TMP_203 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> _trade_1.asset
[i]Type for REF_204

Name: REF_204 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_64(ITradingExtension), function:getVerifiedPrice, arguments:['REF_204', '_priceData_1 (-> [])', '_signature_1', '0']  
[i]Type for TUPLE_8

Name: TUPLE_8 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_94(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_93', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_65(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_64', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint256)= UNPACK TUPLE_8 index: 0 
[i]Type for _price

Name: _price Function: liquidatePosition
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
REF_206(bool) -> _trade_1.direction
[i]Type for REF_206

Name: REF_206 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_207(uint256) -> _trade_1.price
[i]Type for REF_207

Name: REF_207 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_208(uint256) -> _trade_1.margin
[i]Type for REF_208

Name: REF_208 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_209(uint256) -> _trade_1.leverage
[i]Type for REF_209

Name: REF_209 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(int256) -> _trade_1.accInterest
[i]Type for REF_210

Name: REF_210 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_9(uint256,int256) = LIBRARY_CALL, dest:TradingLibrary, function:TradingLibrary.pnl(bool,uint256,uint256,uint256,uint256,int256), arguments:['REF_206', '_price_1', 'REF_207', 'REF_208', 'REF_209', 'REF_210'] 
[i]Type for TUPLE_9

Name: TUPLE_9 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_positionSizeAfterPrice_1(uint256)= UNPACK TUPLE_9 index: 0 
[i]Type for _positionSizeAfterPrice

Name: _positionSizeAfterPrice Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(int256)= UNPACK TUPLE_9 index: 1 
[i]Type for _payout

Name: _payout Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_211(uint256) -> _trade_1.margin
[i]Type for REF_211

Name: REF_211 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_212(uint256) -> _trade_1.leverage
[i]Type for REF_212

Name: REF_212 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_205(uint256) = REF_211 * REF_212
[i]Type for TMP_205

Name: TMP_205 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206(uint256) = TMP_205 / 1000000000000000000
[i]Type for TMP_206

Name: TMP_206 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
_positionSize_1(uint256) := TMP_206(uint256)
Finance type key: (-1, -1)
[i]Type for _positionSize

Name: _positionSize Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
REF_213(bool) -> _trade_1.direction
[i]Type for REF_213

Name: REF_213 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_215(uint256) -> _trade_1.asset
[i]Type for REF_215

Name: REF_215 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_216(address) -> _trade_1.tigAsset
[i]Type for REF_216

Name: REF_216 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_65(ITradingExtension), function:modifyLongOi, arguments:['REF_215', 'REF_216', 'False', '_positionSize_1']  
position_96(IPosition) := ϕ(['position_95', 'position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_67(ITradingExtension) := ϕ(['tradingExtension_48', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_66', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_82', 'tradingExtension_13', 'tradingExtension_78', 'tradingExtension_67'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_218(uint256) -> _trade_1.asset
[i]Type for REF_218

Name: REF_218 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_219(address) -> _trade_1.tigAsset
[i]Type for REF_219

Name: REF_219 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:tradingExtension_65(ITradingExtension), function:modifyShortOi, arguments:['REF_218', 'REF_219', 'False', '_positionSize_1']  
position_95(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_94', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_66(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_65'])
[i]Type for tradingExtension

Name: tradingExtension Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_220(uint256) -> _trade_1.asset
[i]Type for REF_220

Name: REF_220 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_221(address) -> _trade_1.tigAsset
[i]Type for REF_221

Name: REF_221 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_220,REF_221)
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(uint256) := ϕ(['REF_38', 'REF_66', 'REF_232', 'REF_220', 'REF_189'])
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_233', 'REF_221', 'REF_190', '_tigAsset_1', 'REF_67'])
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_18(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_107(IPosition) := ϕ(['position_72', 'position_0', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: longOi
Finance Type: undef
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_1', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_19(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_108(IPosition) := ϕ(['position_72', 'position_107', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_327(uint256) -> TMP_395.longOi
[i]Type for REF_327

Name: REF_327 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: shortOi
Finance Type: undef
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_2', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_20(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_19', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_109(IPosition) := ϕ(['position_72', 'position_108', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_329(uint256) -> TMP_396.shortOi
[i]Type for REF_329

Name: REF_329 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: baseFundingRate
Finance Type: undef
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_5', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_21(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_20', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_110(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_331(uint256) -> TMP_397.baseFundingRate
[i]Type for REF_331

Name: REF_331 Function: _updateFunding
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_5', 'vaultFundingPercent_4', 'vaultFundingPercent_6'])
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_22(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_21', 'pairsContract_13', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_111(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_110', 'position_56', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: _updateFunding
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_97(IPosition) := ϕ(['position_111'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_222(uint256) -> _trade_1.asset
[i]Type for REF_222

Name: REF_222 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_211(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_211

Name: TMP_211 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
REF_223(address) -> _trade_1.tigAsset
[i]Type for REF_223

Name: REF_223 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_224(address) -> _trade_1.trader
[i]Type for REF_224

Name: REF_224 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_212(uint256) = INTERNAL_CALL, Trading._handleCloseFees(uint256,uint256,address,uint256,address,bool)(REF_222,TMP_211,REF_223,_positionSizeAfterPrice_1,REF_224,True)
_asset_1(uint256) := ϕ(['REF_240', 'REF_222'])
[i]Type for _asset

Name: _asset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(uint256) := ϕ(['TMP_211', 'TMP_239'])
[i]Type for _payout

Name: _payout Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_241', 'REF_223'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['_positionSizeAfterPrice_1', 'TMP_241'])
[i]Type for _positionSize

Name: _positionSize Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['REF_224', 'REF_242'])
[i]Type for _trader

Name: _trader Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_isBot_1(bool) := ϕ(['_isBot_1'])
[i]Type for _isBot

Name: _isBot Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_25(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_1(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_16(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_11(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_79(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_16(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_354

Name: TMP_354 Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_26(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_25', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_2(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_1', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_17(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_16', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_12(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_11'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_80(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_79', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_354(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := closeFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, botFees, referralFees
Finance Type: undef
REF_311(uint256) -> _fees_1.daoFees
[i]Type for REF_311

Name: REF_311 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_355(uint256) = _positionSize_1 * REF_311
[i]Type for TMP_355

Name: TMP_355 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(uint256) = TMP_355 / DIVISION_CONSTANT_26
[i]Type for TMP_356

Name: TMP_356 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_312(uint256) -> asset_1.feeMultiplier
[i]Type for REF_312

Name: REF_312 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_357(uint256) = TMP_356 * REF_312
[i]Type for TMP_357

Name: TMP_357 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_358(uint256) = TMP_357 / DIVISION_CONSTANT_26
[i]Type for TMP_358

Name: TMP_358 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_1(uint256) := TMP_358(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_313(uint256) -> _fees_1.burnFees
[i]Type for REF_313

Name: REF_313 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_359(uint256) = _positionSize_1 * REF_313
[i]Type for TMP_359

Name: TMP_359 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 / DIVISION_CONSTANT_26
[i]Type for TMP_360

Name: TMP_360 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_314(uint256) -> asset_1.feeMultiplier
[i]Type for REF_314

Name: REF_314 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_361(uint256) = TMP_360 * REF_314
[i]Type for TMP_361

Name: TMP_361 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362(uint256) = TMP_361 / DIVISION_CONSTANT_26
[i]Type for TMP_362

Name: TMP_362 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_burnFeesPaid_1(uint256) := TMP_362(uint256)
Finance type key: (-1, -1)
[i]Type for _burnFeesPaid

Name: _burnFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_363(address) = HIGH_LEVEL_CALL, dest:tradingExtension_80(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_363

Name: TMP_363 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_27(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_26', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_13(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_12', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_81(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_80', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_363(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_364 = CONVERT 0 to address
[i]Type for TMP_364

Name: TMP_364 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_365(bool) = _referrer_1 != TMP_364
[i]Type for TMP_365

Name: TMP_365 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_3(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_2'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_2(uint256) := ϕ(['_referralFeesPaid_0', '_referralFeesPaid_1'])
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(uint256) -> _fees_1.botFees
[i]Type for REF_319

Name: REF_319 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_374(uint256) = _positionSize_1 * REF_319
[i]Type for TMP_374

Name: TMP_374 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(uint256) = TMP_374 / DIVISION_CONSTANT_28
[i]Type for TMP_375

Name: TMP_375 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_320(uint256) -> asset_1.feeMultiplier
[i]Type for REF_320

Name: REF_320 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_376(uint256) = TMP_375 * REF_320
[i]Type for TMP_376

Name: TMP_376 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 / DIVISION_CONSTANT_28
[i]Type for TMP_377

Name: TMP_377 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_1(uint256) := TMP_377(uint256)
Finance type key: (-1, -1)
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(uint256) -> _fees_1.referralFees
[i]Type for REF_316

Name: REF_316 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_366(uint256) = _positionSize_1 * REF_316
[i]Type for TMP_366

Name: TMP_366 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367(uint256) = TMP_366 / DIVISION_CONSTANT_27
[i]Type for TMP_367

Name: TMP_367 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_317(uint256) -> asset_1.feeMultiplier
[i]Type for REF_317

Name: REF_317 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_368(uint256) = TMP_367 * REF_317
[i]Type for TMP_368

Name: TMP_368 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_369(uint256) = TMP_368 / DIVISION_CONSTANT_27
[i]Type for TMP_369

Name: TMP_369 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_1(uint256) := TMP_369(uint256)
Finance type key: (-1, -1)
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_5(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_4'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_2(uint256) := ϕ(['_botFeesPaid_1', '_botFeesPaid_0'])
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_378

Name: TMP_378 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_379(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_379

Name: TMP_379 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_378(IStable), function:mintFor, arguments:['TMP_379', '_botFeesPaid_1']  
gov_16(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_15'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_381(uint256) = _daoFeesPaid_3 - _botFeesPaid_1
[i]Type for TMP_381

Name: TMP_381 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_4(uint256) := TMP_381(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_370

Name: TMP_370 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_370(IStable), function:mintFor, arguments:['_referrer_1', '_referralFeesPaid_1']  
DIVISION_CONSTANT_28(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_14(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_13', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_372(uint256) = _referralFeesPaid_1 * 2
[i]Type for TMP_372

Name: TMP_372 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_373(uint256) = _daoFeesPaid_1 - TMP_372
[i]Type for TMP_373

Name: TMP_373 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_daoFeesPaid_2(uint256) := TMP_373(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_383(uint256) = _payout_1 (c)- _daoFeesPaid_5
[i]Type for TMP_383

Name: TMP_383 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_384(uint256) = TMP_383 (c)- _burnFeesPaid_1
[i]Type for TMP_384

Name: TMP_384 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_384 (c)- _botFeesPaid_2
[i]Type for TMP_385

Name: TMP_385 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
payout__1(uint256) := TMP_385(uint256)
Finance type key: (-1, -1)
[i]Type for payout_

Name: payout_ Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_386 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_386

Name: TMP_386 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_387 = CONVERT this to address
[i]Type for TMP_387

Name: TMP_387 Function: _handleCloseFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_386(IStable), function:mintFor, arguments:['TMP_387', '_daoFeesPaid_5']  
gov_17(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_16', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_389 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_389

Name: TMP_389 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_390 = CONVERT gov_17 to address
[i]Type for TMP_390

Name: TMP_390 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_392

Name: TMP_392 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_393(bool) = HIGH_LEVEL_CALL, dest:TMP_389(IStable), function:approve, arguments:['TMP_390', 'TMP_392']  
[i]Type for TMP_393

Name: TMP_393 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_18(IGovNFT) := ϕ(['gov_19', 'gov_17', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_18(IGovNFT), function:distribute, arguments:['_tigAsset_1', '_daoFeesPaid_5']  
gov_19(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_18', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN payout__1
_asset_1(uint256) := ϕ(['REF_240', 'REF_222'])
[i]Type for _asset

Name: _asset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payout_1(uint256) := ϕ(['TMP_211', 'TMP_239'])
[i]Type for _payout

Name: _payout Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
_tigAsset_1(address) := ϕ(['REF_241', 'REF_223'])
[i]Type for _tigAsset

Name: _tigAsset Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _tigAsset
Value: u
Fields: 
Finance Type: undef
_positionSize_1(uint256) := ϕ(['_positionSizeAfterPrice_1', 'TMP_241'])
[i]Type for _positionSize

Name: _positionSize Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_trader_1(address) := ϕ(['REF_224', 'REF_242'])
[i]Type for _trader

Name: _trader Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: _trader
Value: u
Fields: 
Finance Type: undef
_isBot_1(bool) := ϕ(['_isBot_1'])
[i]Type for _isBot

Name: _isBot Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_25(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_1(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_16(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_11(IGovNFT) := ϕ(['gov_19', 'gov_0', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_79(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_16(IPairsContract), function:idToAsset, arguments:['_asset_1']  
[i]Type for TMP_354

Name: TMP_354 Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_26(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_25', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_2(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_1', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairsContract_17(IPairsContract) := ϕ(['pairsContract_1', 'pairsContract_13', 'pairsContract_15', 'pairsContract_16', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17'])
[i]Type for pairsContract

Name: pairsContract Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_12(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_11'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_80(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_79', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(IPairsContract.Asset) := TMP_354(IPairsContract.Asset)
Finance type key: (-1, -1)
[i]Type for asset

Name: asset Function: _handleCloseFees
Num: -1
Den: -1
Address: 1
Norm: 6
LF: None
Value: u
Fields: feeMultiplier
Finance Type: undef
_fees_1(Trading.Fees) := closeFees_2(Trading.Fees)
Finance type key: (-1, -1)
[i]Type for _fees

Name: _fees Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, botFees, referralFees
Finance Type: undef
REF_311(uint256) -> _fees_1.daoFees
[i]Type for REF_311

Name: REF_311 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_355(uint256) = _positionSize_1 * REF_311
[i]Type for TMP_355

Name: TMP_355 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(uint256) = TMP_355 / DIVISION_CONSTANT_26
[i]Type for TMP_356

Name: TMP_356 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_312(uint256) -> asset_1.feeMultiplier
[i]Type for REF_312

Name: REF_312 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_357(uint256) = TMP_356 * REF_312
[i]Type for TMP_357

Name: TMP_357 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_358(uint256) = TMP_357 / DIVISION_CONSTANT_26
[i]Type for TMP_358

Name: TMP_358 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_1(uint256) := TMP_358(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_313(uint256) -> _fees_1.burnFees
[i]Type for REF_313

Name: REF_313 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_359(uint256) = _positionSize_1 * REF_313
[i]Type for TMP_359

Name: TMP_359 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 / DIVISION_CONSTANT_26
[i]Type for TMP_360

Name: TMP_360 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_314(uint256) -> asset_1.feeMultiplier
[i]Type for REF_314

Name: REF_314 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_361(uint256) = TMP_360 * REF_314
[i]Type for TMP_361

Name: TMP_361 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362(uint256) = TMP_361 / DIVISION_CONSTANT_26
[i]Type for TMP_362

Name: TMP_362 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_burnFeesPaid_1(uint256) := TMP_362(uint256)
Finance type key: (-1, -1)
[i]Type for _burnFeesPaid

Name: _burnFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_363(address) = HIGH_LEVEL_CALL, dest:tradingExtension_80(ITradingExtension), function:getRef, arguments:['_trader_1']  
[i]Type for TMP_363

Name: TMP_363 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
DIVISION_CONSTANT_27(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_26', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_13(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_12', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tradingExtension_81(ITradingExtension) := ϕ(['tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_60', 'tradingExtension_74', 'tradingExtension_82', 'tradingExtension_80', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_41', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_21', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66'])
[i]Type for tradingExtension

Name: tradingExtension Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referrer_1(address) := TMP_363(address)
Finance type key: (-1, -1)
[i]Type for _referrer

Name: _referrer Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_364 = CONVERT 0 to address
[i]Type for TMP_364

Name: TMP_364 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_365(bool) = _referrer_1 != TMP_364
[i]Type for TMP_365

Name: TMP_365 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_3(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_2'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_2(uint256) := ϕ(['_referralFeesPaid_0', '_referralFeesPaid_1'])
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(uint256) -> _fees_1.botFees
[i]Type for REF_319

Name: REF_319 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_374(uint256) = _positionSize_1 * REF_319
[i]Type for TMP_374

Name: TMP_374 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(uint256) = TMP_374 / DIVISION_CONSTANT_28
[i]Type for TMP_375

Name: TMP_375 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_320(uint256) -> asset_1.feeMultiplier
[i]Type for REF_320

Name: REF_320 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_376(uint256) = TMP_375 * REF_320
[i]Type for TMP_376

Name: TMP_376 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 / DIVISION_CONSTANT_28
[i]Type for TMP_377

Name: TMP_377 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_1(uint256) := TMP_377(uint256)
Finance type key: (-1, -1)
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(uint256) -> _fees_1.referralFees
[i]Type for REF_316

Name: REF_316 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_366(uint256) = _positionSize_1 * REF_316
[i]Type for TMP_366

Name: TMP_366 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367(uint256) = TMP_366 / DIVISION_CONSTANT_27
[i]Type for TMP_367

Name: TMP_367 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_317(uint256) -> asset_1.feeMultiplier
[i]Type for REF_317

Name: REF_317 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_368(uint256) = TMP_367 * REF_317
[i]Type for TMP_368

Name: TMP_368 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_369(uint256) = TMP_368 / DIVISION_CONSTANT_27
[i]Type for TMP_369

Name: TMP_369 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_referralFeesPaid_1(uint256) := TMP_369(uint256)
Finance type key: (-1, -1)
[i]Type for _referralFeesPaid

Name: _referralFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_5(uint256) := ϕ(['_daoFeesPaid_1', '_daoFeesPaid_4'])
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_botFeesPaid_2(uint256) := ϕ(['_botFeesPaid_1', '_botFeesPaid_0'])
[i]Type for _botFeesPaid

Name: _botFeesPaid Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_378

Name: TMP_378 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_379(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_379

Name: TMP_379 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_378(IStable), function:mintFor, arguments:['TMP_379', '_botFeesPaid_1']  
gov_16(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_1', 'gov_15'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_381(uint256) = _daoFeesPaid_3 - _botFeesPaid_1
[i]Type for TMP_381

Name: TMP_381 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_daoFeesPaid_4(uint256) := TMP_381(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_370

Name: TMP_370 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_370(IStable), function:mintFor, arguments:['_referrer_1', '_referralFeesPaid_1']  
DIVISION_CONSTANT_28(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_14(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_13', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_372(uint256) = _referralFeesPaid_1 * 2
[i]Type for TMP_372

Name: TMP_372 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_373(uint256) = _daoFeesPaid_1 - TMP_372
[i]Type for TMP_373

Name: TMP_373 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_daoFeesPaid_2(uint256) := TMP_373(uint256)
Finance type key: (-1, -1)
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_383(uint256) = _payout_1 (c)- _daoFeesPaid_5
[i]Type for TMP_383

Name: TMP_383 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_384(uint256) = TMP_383 (c)- _burnFeesPaid_1
[i]Type for TMP_384

Name: TMP_384 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_384 (c)- _botFeesPaid_2
[i]Type for TMP_385

Name: TMP_385 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
payout__1(uint256) := TMP_385(uint256)
Finance type key: (-1, -1)
[i]Type for payout_

Name: payout_ Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_386 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_386

Name: TMP_386 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_387 = CONVERT this to address
[i]Type for TMP_387

Name: TMP_387 Function: _handleCloseFees
Num: 
Den: 
Address: 3
Norm: u
LF: Trading
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_386(IStable), function:mintFor, arguments:['TMP_387', '_daoFeesPaid_5']  
gov_17(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_16', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_389 = CONVERT _tigAsset_1 to IStable
[i]Type for TMP_389

Name: TMP_389 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: Stable
Value: u
Fields: 
Finance Type: undef
TMP_390 = CONVERT gov_17 to address
[i]Type for TMP_390

Name: TMP_390 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_392

Name: TMP_392 Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
TMP_393(bool) = HIGH_LEVEL_CALL, dest:TMP_389(IStable), function:approve, arguments:['TMP_390', 'TMP_392']  
[i]Type for TMP_393

Name: TMP_393 Function: _handleCloseFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
gov_18(IGovNFT) := ϕ(['gov_19', 'gov_17', 'gov_10', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:gov_18(IGovNFT), function:distribute, arguments:['_tigAsset_1', '_daoFeesPaid_5']  
gov_19(IGovNFT) := ϕ(['gov_19', 'gov_10', 'gov_18', 'gov_1'])
[i]Type for gov

Name: gov Function: _handleCloseFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN payout__1
[i]Type for TMP_212

Name: TMP_212 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:position_98(IPosition), function:burn, arguments:['_id_1']  
position_99(IPosition) := ϕ(['position_72', 'position_40', 'position_111', 'position_64', 'position_50', 'position_99', 'position_105', 'position_56', 'position_98', 'position_90', 'position_24', 'position_1', 'position_106', 'position_77', 'position_18', 'position_113'])
[i]Type for position

Name: position Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_226(address) -> _trade_1.trader
[i]Type for REF_226

Name: REF_226 Function: liquidatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_214(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_214

Name: TMP_214 Function: liquidatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



setFees
DIVISION_CONSTANT_29(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_3(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
closeFees_3(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Ownable.onlyOwner()()
INTERNAL_CALL, Ownable._checkOwner()()
TMP_9(address) = INTERNAL_CALL, Ownable.owner()()
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
RETURN _owner_1
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
RETURN _owner_1
[i]Type for TMP_9

Name: TMP_9 Function: _checkOwner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
TMP_10(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_10

Name: TMP_10 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11(bool) = TMP_9 == TMP_10
[i]Type for TMP_11

Name: TMP_11 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_12(None) = SOLIDITY_CALL require(bool,string)(TMP_11,Ownable: caller is not the owner)
[i]Type for TMP_12

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_9(address) = INTERNAL_CALL, Ownable.owner()()
[i]Type for TMP_9

Name: TMP_9 Function: _checkOwner
Num: -1
Den: -1
Address: 2
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
TMP_10(address) = INTERNAL_CALL, MetaContext._msgSender()()
[i]Type for TMP_10

Name: TMP_10 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11(bool) = TMP_9 == TMP_10
[i]Type for TMP_11

Name: TMP_11 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_12(None) = SOLIDITY_CALL require(bool,string)(TMP_11,Ownable: caller is not the owner)
[i]Type for TMP_12

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, Ownable._checkOwner()()
TMP_432(uint256) = _referralFees_1 * 2
[i]Type for TMP_432

Name: TMP_432 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_433(uint256) = _botFees_1 + TMP_432
[i]Type for TMP_433

Name: TMP_433 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_434(bool) = _daoFees_1 >= TMP_433
[i]Type for TMP_434

Name: TMP_434 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_435(None) = SOLIDITY_CALL require(bool)(TMP_434)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_353(uint256) -> closeFees_4.daoFees
[i]Type for REF_353

Name: REF_353 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_5(Trading.Fees) := ϕ(['closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_353 (->closeFees_5) := _daoFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_353

Name: REF_353 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_354(uint256) -> closeFees_5.burnFees
[i]Type for REF_354

Name: REF_354 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_6(Trading.Fees) := ϕ(['closeFees_5'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees
Finance Type: undef
REF_354 (->closeFees_6) := _burnFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_354

Name: REF_354 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_349(uint256) -> openFees_4.daoFees
[i]Type for REF_349

Name: REF_349 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_5(Trading.Fees) := ϕ(['openFees_4'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees
Finance Type: undef
REF_349 (->openFees_5) := _daoFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_349

Name: REF_349 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_355(uint256) -> closeFees_6.referralFees
[i]Type for REF_355

Name: REF_355 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_7(Trading.Fees) := ϕ(['closeFees_6'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees
Finance Type: undef
REF_355 (->closeFees_7) := _referralFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_355

Name: REF_355 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_356(uint256) -> closeFees_7.botFees
[i]Type for REF_356

Name: REF_356 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_8(Trading.Fees) := ϕ(['closeFees_7'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_356 (->closeFees_8) := _botFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_356

Name: REF_356 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_350(uint256) -> openFees_5.burnFees
[i]Type for REF_350

Name: REF_350 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_6(Trading.Fees) := ϕ(['openFees_5'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees
Finance Type: undef
REF_350 (->openFees_6) := _burnFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_350

Name: REF_350 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_436(bool) = _percent_1 <= DIVISION_CONSTANT_30
[i]Type for TMP_436

Name: TMP_436 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_437(None) = SOLIDITY_CALL require(bool)(TMP_436)
[i]Type for TMP_437

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_6(uint256) := _percent_1(uint256)
Finance type key: (-1, -1)
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_351(uint256) -> openFees_6.referralFees
[i]Type for REF_351

Name: REF_351 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_7(Trading.Fees) := ϕ(['openFees_6'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees
Finance Type: undef
REF_351 (->openFees_7) := _referralFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_351

Name: REF_351 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_352(uint256) -> openFees_7.botFees
[i]Type for REF_352

Name: REF_352 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_8(Trading.Fees) := ϕ(['openFees_7'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_352 (->openFees_8) := _botFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_352

Name: REF_352 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
DIVISION_CONSTANT_29(uint256) := ϕ(['DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_6', 'DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24'])
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
openFees_3(Trading.Fees) := ϕ(['openFees_8', 'openFees_4', 'openFees_0', 'openFees_2'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
closeFees_3(Trading.Fees) := ϕ(['closeFees_2', 'closeFees_8', 'closeFees_0', 'closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_432(uint256) = _referralFees_1 * 2
[i]Type for TMP_432

Name: TMP_432 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_433(uint256) = _botFees_1 + TMP_432
[i]Type for TMP_433

Name: TMP_433 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_434(bool) = _daoFees_1 >= TMP_433
[i]Type for TMP_434

Name: TMP_434 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_435(None) = SOLIDITY_CALL require(bool)(TMP_434)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_353(uint256) -> closeFees_4.daoFees
[i]Type for REF_353

Name: REF_353 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_5(Trading.Fees) := ϕ(['closeFees_4'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_353 (->closeFees_5) := _daoFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_353

Name: REF_353 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_354(uint256) -> closeFees_5.burnFees
[i]Type for REF_354

Name: REF_354 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_6(Trading.Fees) := ϕ(['closeFees_5'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_354 (->closeFees_6) := _burnFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_354

Name: REF_354 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_349(uint256) -> openFees_4.daoFees
[i]Type for REF_349

Name: REF_349 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_5(Trading.Fees) := ϕ(['openFees_4'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_349 (->openFees_5) := _daoFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_349

Name: REF_349 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_355(uint256) -> closeFees_6.referralFees
[i]Type for REF_355

Name: REF_355 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_7(Trading.Fees) := ϕ(['closeFees_6'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_355 (->closeFees_7) := _referralFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_355

Name: REF_355 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_356(uint256) -> closeFees_7.botFees
[i]Type for REF_356

Name: REF_356 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
closeFees_8(Trading.Fees) := ϕ(['closeFees_7'])
[i]Type for closeFees

Name: closeFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_356 (->closeFees_8) := _botFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_356

Name: REF_356 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_350(uint256) -> openFees_5.burnFees
[i]Type for REF_350

Name: REF_350 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_6(Trading.Fees) := ϕ(['openFees_5'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_350 (->openFees_6) := _burnFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_350

Name: REF_350 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_436(bool) = _percent_1 <= DIVISION_CONSTANT_30
[i]Type for TMP_436

Name: TMP_436 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_437(None) = SOLIDITY_CALL require(bool)(TMP_436)
[i]Type for TMP_437

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vaultFundingPercent_6(uint256) := _percent_1(uint256)
Finance type key: (-1, -1)
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_351(uint256) -> openFees_6.referralFees
[i]Type for REF_351

Name: REF_351 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_7(Trading.Fees) := ϕ(['openFees_6'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_351 (->openFees_7) := _referralFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_351

Name: REF_351 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_352(uint256) -> openFees_7.botFees
[i]Type for REF_352

Name: REF_352 Function: setFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
openFees_8(Trading.Fees) := ϕ(['openFees_7'])
[i]Type for openFees

Name: openFees Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: daoFees, burnFees, referralFees, botFees
Finance Type: undef
REF_352 (->openFees_8) := _botFees_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_352

Name: REF_352 Function: setFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Function count: 86
Executing Group 29
[*] Tested 5 warnings for Tigris Trade
Group 29 complete
Elapsed time: 18.306216941 seconds
Testing complete
