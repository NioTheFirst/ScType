Switched global version to 0.8.9
Currently Omitted (9)
Analyzed_contracts_count: 9
total compilations: 2, contracts: 9
contract name: VaderReserve
Add to address_to_label {'global:_owner': 1}
Addr:global__owner : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2}
Addr:global__ZERO_ADDRESS : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3}
Addr:global_router : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999}
Addr:grant_recipient : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998}
Addr:initialize__router : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997}
Addr:initialize__dao : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996}
Addr:reimburseImpermanentLoss_recipient : 0
Mark functions Adding: VaderReserve, constructor, True
[*]Marked
Mark functions Adding: VaderReserve, reserve, True
[X]No Binary
Mark functions Adding: VaderReserve, grant, True
[*]Marked
Mark functions Adding: VaderReserve, initialize, True
[*]Marked
Mark functions Adding: VaderReserve, reimburseImpermanentLoss, True
[*]Marked
Mark functions Adding: VaderReserve, _min, True
[x] Not visible 
Mark functions Adding: VaderReserve, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _ZERO_ADDRESS
Finding type for _ZERO_ADDRESS(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: _ONE_YEAR
Finding type for _ONE_YEAR(uint256 ... )
Value: u
Source address: u
State_var: router
Finding type for router(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: vader
Finding type for vader(IERC20 ... )
Value: u
Source address: u
State_var: _GRANT_DELAY
Finding type for _GRANT_DELAY(uint256 ... )
Value: u
Source address: u
State_var: lastGrant
Finding type for lastGrant(uint256 ... )
Value: u
Source address: u
State_var: _MAX_BASIS_POINTS
Finding type for _MAX_BASIS_POINTS(uint256 ... )
Value: u
Source address: u
State_var: _MAX_GRANT_BASIS_POINTS
Finding type for _MAX_GRANT_BASIS_POINTS(uint256 ... )
Value: u
Source address: u
contract name: IVaderReserve
contract name: Ownable
contract name: IERC20
contract name: IERC20Permit
contract name: SafeERC20
contract name: Address
contract name: Context
contract name: ProtocolConstants
Running check on VaderReserve
Reading Function: constructor
Checking funcion...



constructor
Function name: constructor
Finding type for _vader(IERC20 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
constructor(IERC20)


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_3', '_ZERO_ADDRESS_0'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
TMP_16(bool) = _vader_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
vader_1(IERC20) := _vader_1(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 1
Globalname: _ZERO_ADDRESS, contract_name: VaderReserve
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_3', '_ZERO_ADDRESS_0'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _vader_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: vader_1, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 1
Globalname: vader, contract_name: VaderReserve
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
vader_1(IERC20) := _vader_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_3', '_ZERO_ADDRESS_0'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
TMP_16(bool) = _vader_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
vader_1(IERC20) := _vader_1(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_3', '_ZERO_ADDRESS_0'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _vader_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: vader_1, name: vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
vader_1(IERC20) := _vader_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: reserve
Function reserve not marked
Reading Function: grant
Checking funcion...



grant
Function name: grant
Finding type for recipient(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for amount(uint256 ... )
Value: u
New param cache [[[], [], 0, 'recipient', [], -1, -999, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
grant(address,uint256)


_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_5', '_MAX_BASIS_POINTS_0'])
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, VaderReserve.throttle()()
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
vader_7(IERC20) := ϕ(['vader_3'])
TMP_21(uint256) = TMP_20 (c)* _MAX_GRANT_BASIS_POINTS_4
TMP_22(uint256) = TMP_21 (c)/ _MAX_BASIS_POINTS_4
TMP_23(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_22,amount_1)
amount_2(uint256) := TMP_23(uint256)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_8', 'recipient_1', 'amount_2'] 
Emit GrantDistributed(recipient_1,amount_2)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _MAX_BASIS_POINTS_1, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_BASIS_POINTS, Num: 1
Globalname: _MAX_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_GRANT_BASIS_POINTS_1, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_GRANT_BASIS_POINTS, Num: 1
Globalname: _MAX_GRANT_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: vader_4, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 4
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_5', '_MAX_BASIS_POINTS_0'])
Phi
[i]Type for _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
Phi
[i]Type for _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyOwner()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
_checkOwner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
FIND RETURN
ENTRY_POINT
owner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 1
Globalname: _owner, contract_name: VaderReserve
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
FIND RETURN
ENTRY_POINT
_msgSender()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Source address: u
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
Old param cache: []
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, VaderReserve.throttle()()
New param cache []
FIND RETURN
ENTRY_POINT
throttle()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _GRANT_DELAY, Num: 1
Globalname: _GRANT_DELAY, contract_name: VaderReserve
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: lastGrant_1, name: lastGrant

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastGrant, Num: 1
Globalname: lastGrant, contract_name: VaderReserve
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_GRANT_DELAY_1(uint256) := ϕ(['_GRANT_DELAY_0'])
Phi
[i]Type for _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lastGrant_1(uint256) := ϕ(['lastGrant_2', 'lastGrant_0'])
Phi
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = lastGrant_1 (c)+ _GRANT_DELAY_1
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_48 <= block.timestamp
lnorm: u rnorm: u
[i]Type for TMP_49

Name: TMP_49 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,VaderReserve::throttle: Grant Too Fast)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_2, name: lastGrant

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastGrant, Num: 2
Globalname: lastGrant, contract_name: VaderReserve
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
lastGrant_2(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_GRANT_DELAY_1(uint256) := ϕ(['_GRANT_DELAY_0'])
Phi
[i]Type for _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lastGrant_1(uint256) := ϕ(['lastGrant_2', 'lastGrant_0'])
Phi
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = lastGrant_1 (c)+ _GRANT_DELAY_1
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_48 <= block.timestamp
lnorm: u rnorm: u
[i]Type for TMP_49

Name: TMP_49 Function: throttle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,VaderReserve::throttle: Grant Too Fast)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_2, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
lastGrant_2(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] TMP_23 cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_BASIS_POINTS, Num: 4
Globalname: _MAX_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_GRANT_BASIS_POINTS, Num: 4
Globalname: _MAX_GRANT_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
End popogation
Ssa_name: vader_7, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 7
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
New param cache []
FIND RETURN
ENTRY_POINT
reserve()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vader_2, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 2
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
vader_2(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_18 cleared
[i] TMP_19 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vader_3, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 3
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_18 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 4
4
4
[i]Type for TMP_18

Name: TMP_18 Function: reserve
Num: -1
Den: -1
Address: 4
Norm: u
LF: VaderReserve
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(uint256) = HIGH_LEVEL_CALL, dest:vader_2(IERC20), function:balanceOf, arguments:['TMP_18']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Currently Omitted (3)
Executing Group 15
[*] Tested 17 warnings for Badger Dao p2
Group 15 complete
Testing complete
