Switched global version to 0.7.6
Checking CreditLine
Checking SavingsAccountUtil
Checking IPriceOracle
Checking ISavingsAccount
Checking IStrategyRegistry
Checking IYield
Checking OwnableUpgradeable
Checking Initializable
Checking AddressUpgradeable
Checking ContextUpgradeable
Checking SafeMath
Checking IERC20
Checking SafeERC20
Checking Address
Checking ReentrancyGuard
Add to address_to_label {'global:defaultStrategy': 1}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989, 'request:_requestTo': -988}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989, 'request:_requestTo': -988, 'request:_borrowAsset': -987}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989, 'request:_requestTo': -988, 'request:_borrowAsset': -987, 'request:_collateralAsset': -986}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989, 'request:_requestTo': -988, 'request:_borrowAsset': -987, 'request:_collateralAsset': -986, 'depositCollateral:_strategy': -985}
Add to address_to_label {'global:defaultStrategy': 1, 'global:savingsAccount': 2, 'global:strategyRegistry': 3, 'global:_owner': 4, 'global:priceOracle': 5, 'global:protocolFeeCollector': 6, 'initialize:_defaultStrategy': -999, 'initialize:_priceOracle': -998, 'initialize:_savingsAccount': -997, 'initialize:_strategyRegistry': -996, 'initialize:_owner': -995, 'initialize:_protocolFeeCollector': -994, 'updateDefaultStrategy:_defaultStrategy': -993, 'updatePriceOracle:_priceOracle': -992, 'updateSavingsAccount:_savingsAccount': -991, 'updateProtocolFeeCollector:_protocolFeeCollector': -990, 'updateStrategyRegistry:_strategyRegistry': -989, 'request:_requestTo': -988, 'request:_borrowAsset': -987, 'request:_collateralAsset': -986, 'depositCollateral:_strategy': -985, 'global:USDC': 7}
IN KEY: calculateBorrowableAmount_creditLineConstants_borrowAsset
IN KEY: _createRequest_creditLineConstants_borrowAsset
State_var: savingsAccount
Finding type for savingsAccount(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
State_var: strategyRegistry
Finding type for strategyRegistry(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
State_var: creditLineVariables
Finding type for creditLineVariables(mapping(uint256 => CreditLine.CreditLineVariables) ... )
global
creditLineVariables
status
OUT KEY: global_creditLineVariables_status
global
creditLineVariables
principal
OUT KEY: global_creditLineVariables_principal
global
creditLineVariables
totalInterestRepaid
OUT KEY: global_creditLineVariables_totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
OUT KEY: global_creditLineVariables_lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
OUT KEY: global_creditLineVariables_interestAccruedTillLastPrincipalUpdate
State_var: creditLineConstants
Finding type for creditLineConstants(mapping(uint256 => CreditLine.CreditLineConstants) ... )
global
creditLineConstants
lender
OUT KEY: global_creditLineConstants_lender
global
creditLineConstants
borrower
OUT KEY: global_creditLineConstants_borrower
global
creditLineConstants
borrowLimit
OUT KEY: global_creditLineConstants_borrowLimit
global
creditLineConstants
idealCollateralRatio
OUT KEY: global_creditLineConstants_idealCollateralRatio
global
creditLineConstants
borrowRate
OUT KEY: global_creditLineConstants_borrowRate
global
creditLineConstants
borrowAsset
OUT KEY: global_creditLineConstants_borrowAsset
global
creditLineConstants
collateralAsset
OUT KEY: global_creditLineConstants_collateralAsset
global
creditLineConstants
autoLiquidation
OUT KEY: global_creditLineConstants_autoLiquidation
global
creditLineConstants
requestByLender
OUT KEY: global_creditLineConstants_requestByLender
State_var: priceOracle
Finding type for priceOracle(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy(mapping(uint256 => mapping(address => uint256)) ... )
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
State_var: protocolFeeCollector
Finding type for protocolFeeCollector(address ... )
prev address? u
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
State_var: protocolFeeFraction
Finding type for protocolFeeFraction(uint256 ... )
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction(uint256 ... )
State_var: _initialized
Finding type for _initialized(bool ... )
State_var: _initializing
Finding type for _initializing(bool ... )
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS(uint256 ... )
State_var: creditLineCounter
Finding type for creditLineCounter(uint256 ... )
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
State_var: _status
Finding type for _status(uint256 ... )
State_var: defaultStrategy
Finding type for defaultStrategy(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL



initialize
Finding type for _defaultStrategy(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for _priceOracle(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _savingsAccount(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Finding type for _strategyRegistry(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for _owner(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for _protocolFeeFraction(uint256 ... )
Finding type for _protocolFeeCollector(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Finding type for _liquidatorRewardFraction(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _defaultStrategy
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _priceOracle
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: _strategyRegistry
    fields: []
    fintype: -1
Param: 4
    num: []
    den: []
    norm: u
    link: _owner
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: []
    den: []
    norm: u
    link: _protocolFeeCollector
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
Propogating parameters and globals to SSA variables...
Name: _protocolFeeFraction, Num: 1
Globalname: _protocolFeeFraction
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
Propogating parameters and globals to SSA variables...
Name: _liquidatorRewardFraction, Num: 1
Globalname: _liquidatorRewardFraction
End popogation
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)


MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
Propogating parameters and globals to SSA variables...
Name: _protocolFeeFraction, Num: 1
Globalname: _protocolFeeFraction
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
Propogating parameters and globals to SSA variables...
Name: _liquidatorRewardFraction, Num: 1
Globalname: _liquidatorRewardFraction
End popogation
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateDefaultStrategy
Finding type for _defaultStrategy(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _defaultStrategy
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateDefaultStrategy
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updatePriceOracle
Finding type for _priceOracle(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _priceOracle
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updatePriceOracle
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateSavingsAccount
Finding type for _savingsAccount(address ... )
prev address? u
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateSavingsAccount
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateProtocolFeeFraction
Finding type for _protocolFee(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Name: _protocolFee, Num: 1
Globalname: _protocolFee
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Name: _protocolFee, Num: 1
Globalname: _protocolFee
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateProtocolFeeFraction
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateProtocolFeeCollector
Finding type for _protocolFeeCollector(address ... )
prev address? u
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _protocolFeeCollector
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateProtocolFeeCollector
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateStrategyRegistry
Finding type for _strategyRegistry(address ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _strategyRegistry
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateStrategyRegistry
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateLiquidatorRewardFraction
Finding type for _rewardFraction(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Name: _rewardFraction, Num: 1
Globalname: _rewardFraction
End popogation
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)


MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Propogating parameters and globals to SSA variables...
Name: _rewardFraction, Num: 1
Globalname: _rewardFraction
End popogation
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_updateLiquidatorRewardFraction
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



calculateInterest
Finding type for _principal(uint256 ... )
Finding type for _borrowRate(uint256 ... )
Finding type for _timeElapsed(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


_principal_1(uint256) := ϕ(['REF_11'])
_borrowRate_1(uint256) := ϕ(['REF_13'])
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
TMP_64(uint256) = 10 ** 30
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
_interest_1(uint256) := TMP_66(uint256)
RETURN _interest_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _principal, Num: 1
Globalname: _principal

Name: _principal_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: YEAR_IN_SECONDS, Num: 1
Globalname: YEAR_IN_SECONDS
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _principal, Num: 1
Globalname: _principal
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _borrowRate, Num: 1
Globalname: _borrowRate
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef


_principal_1(uint256) := ϕ(['REF_11'])
_borrowRate_1(uint256) := ϕ(['REF_13'])
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
TMP_64(uint256) = 10 ** 30
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
_interest_1(uint256) := TMP_66(uint256)
RETURN _interest_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _principal, Num: 1
Globalname: _principal

Name: _principal_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _principal, Num: 1
Globalname: _principal
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _borrowRate, Num: 1
Globalname: _borrowRate
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



calculateInterestAccrued
Finding type for _id(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
CONDITION TMP_67
RETURN 0
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
_timeElapsed_1(uint256) := TMP_68(uint256)
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
REF_11(uint256) -> REF_10.principal
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
REF_13(uint256) -> REF_12.borrowRate
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
_interestAccrued_1(uint256) := TMP_69(uint256)
RETURN _interestAccrued_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 1
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 1
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
OUT KEY: calculateInterestAccrued_creditLineVariables_lastPrincipalUpdateTime
OUT KEY: calculateInterestAccrued_creditLineVariables_lastPrincipalUpdateTime
FTT: None
No field found
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
OUT KEY: calculateInterestAccrued_creditLineVariables_principal
OUT KEY: calculateInterestAccrued_creditLineVariables_principal
FTT: None
No field found
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
OUT KEY: calculateInterestAccrued_creditLineConstants_borrowRate
OUT KEY: calculateInterestAccrued_creditLineConstants_borrowRate
FTT: None
No field found
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef


_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
CONDITION TMP_67
RETURN 0
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
_timeElapsed_1(uint256) := TMP_68(uint256)
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
REF_11(uint256) -> REF_10.principal
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
REF_13(uint256) -> REF_12.borrowRate
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
_interestAccrued_1(uint256) := TMP_69(uint256)
RETURN _interestAccrued_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



calculateCurrentDebt
Finding type for _id(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
_interestAccrued_1(uint256) := TMP_70(uint256)
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_15(uint256) -> REF_14.principal
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_22(uint256) -> REF_21.totalInterestRepaid
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
_currentDebt_1(uint256) := TMP_73(uint256)
RETURN _currentDebt_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 3
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
Name: creditLineVariables, Num: 4
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
OUT KEY: calculateCurrentDebt_creditLineVariables_principal
OUT KEY: calculateCurrentDebt_creditLineVariables_principal
FTT: None
No field found
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
OUT KEY: calculateCurrentDebt_creditLineVariables_interestAccruedTillLastPrincipalUpdate
OUT KEY: calculateCurrentDebt_creditLineVariables_interestAccruedTillLastPrincipalUpdate
FTT: None
No field found
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
OUT KEY: calculateCurrentDebt_creditLineVariables_totalInterestRepaid
OUT KEY: calculateCurrentDebt_creditLineVariables_totalInterestRepaid
FTT: None
No field found
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
_interestAccrued_1(uint256) := TMP_70(uint256)
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_15(uint256) -> REF_14.principal
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
REF_22(uint256) -> REF_21.totalInterestRepaid
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
_currentDebt_1(uint256) := TMP_73(uint256)
RETURN _currentDebt_1


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



calculateBorrowableAmount
Finding type for _id(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


_id_1(uint256) := ϕ(['_id_1'])
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
TMP_74(bool) = _status_1 == REF_25
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
TMP_75(bool) = _status_1 == REF_26
TMP_76(bool) = TMP_74 || TMP_75
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
REF_29(address) -> REF_28.collateralAsset
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
REF_31(address) -> REF_30.borrowAsset
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
_totalCollateralToken_1(uint256) := TMP_79(uint256)
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
_currentDebt_1(uint256) := TMP_80(uint256)
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
REF_35(uint256) -> REF_34.idealCollateralRatio
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
TMP_83(uint256) = 10 ** 30
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
TMP_85(uint256) = 10 ** _decimals_1
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
_maxPossible_1(uint256) := TMP_86(uint256)
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
REF_39(uint256) -> REF_38.borrowLimit
_borrowLimit_1(uint256) := REF_39(uint256)
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
CONDITION TMP_87
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
CONDITION TMP_88
RETURN 0
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
RETURN TMP_89
_maxPossible_2(uint256) := _borrowLimit_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 5
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 3
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: priceOracle, Num: 2
Globalname: priceOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _status, Num: 1
Globalname: _status
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
INDEX
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
MEMBER
init
end
init
end
OUT KEY: calculateBorrowableAmount_creditLineVariables_status
OUT KEY: calculateBorrowableAmount_creditLineVariables_status
FTT: None
No field found
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_23, Field: status
init
end
_______________

Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
OUT KEY: global_CreditLineStatus_ACTIVE
OUT KEY: global_CreditLineStatus_ACTIVE
FTT: None
No field found
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
OUT KEY: global_CreditLineStatus_REQUESTED
OUT KEY: global_CreditLineStatus_REQUESTED
FTT: None
No field found
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
End popogation
Name: creditLineConstants, Num: 4
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: priceOracle, Num: 3
Globalname: priceOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Converting priceOracle_2

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_29(address) -> REF_28.collateralAsset
MEMBER
init
end
init
end
OUT KEY: calculateBorrowableAmount_creditLineConstants_collateralAsset
OUT KEY: calculateBorrowableAmount_creditLineConstants_collateralAsset
FTT: None
No field found
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_28, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> REF_30.borrowAsset
MEMBER
init
end
init
end
OUT KEY: calculateBorrowableAmount_creditLineConstants_borrowAsset
FTT: ([-1], [-1], 6, -1, 7)
([-1], [-1], 6, -1, 7)
([-1], [-1], 6, -1, 7)
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
Root: REF_30, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
High Call: getLatestPrice
Running querryfc
Written func info: PriceOracle, getLatestPrice
Handling balance function!
5
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac053883a0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac05388550>] ... )
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Finding type for _ratioOfPrices(uint256 ... )
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Finding type for _decimals(uint256 ... )
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _totalCollateralToken, Num: 1
Globalname: _totalCollateralToken
End popogation
Name: creditLineConstants, Num: 5
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralShareInStrategy, Num: 11
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 32
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: strategyRegistry, Num: 8
Globalname: strategyRegistry
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
INDEX
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_237(address) -> REF_236.collateralAsset
MEMBER
init
end
init
end
OUT KEY: calculateTotalCollateralTokens_creditLineConstants_collateralAsset
OUT KEY: calculateTotalCollateralTokens_creditLineConstants_collateralAsset
FTT: None
No field found
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_236, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_237(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
End popogation
Name: collateralShareInStrategy, Num: 12
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: strategyRegistry, Num: 9
Globalname: strategyRegistry
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Converting strategyRegistry_8

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
StrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
High Call: getStrategies
Running querryfc
Written func info: StrategyRegistry, getStrategies
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_11', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
_strategyList_1(address[]) := TMP_294(address[])
asgn
init
end
_______________

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
index_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 2
Globalname: index
Name: _amount, Num: 1
Globalname: _amount
Name: index, Num: 2
Globalname: index
End popogation
Name: _amount, Num: 1
Globalname: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: index, Num: 2
Globalname: index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_2(uint256) := ϕ(['index_1', 'index_3'])
Phi
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_295(bool) = index_2 < REF_239
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
REF_240(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_296 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
End popogation
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
INDEX
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_242(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_243(uint256) -> REF_241[REF_242]
INDEX
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_liquidityShares_1(uint256) := REF_243(uint256)
asgn
init
end
_______________

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 1
Globalname: _tokenInStrategy
End popogation
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
asgn
init
end
_______________

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation
Name: collateralShareInStrategy, Num: 13
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_244(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_298 = CONVERT REF_244 to IYield
Converting REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Yield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
High Call: getTokensForShares
Running querryfc
Written func info: Yield, getTokensForShares
Handling balance function!
u
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenInStrategy_2(uint256) := TMP_299(uint256)
asgn
init
end
_______________

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _amount, Num: 2
Globalname: _amount
End popogation
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
init
end
init
end
init
end
_______________

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_300(uint256)
asgn
init
end
_______________

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 3
Globalname: index
End popogation
TMP_301(uint256) := index_2(uint256)
asgn
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
index_3(uint256) = index_2 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
RETURN _amount_1
RETURN
init
end

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
Phid

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
XXXX
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
INDEX
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_237(address) -> REF_236.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_236, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_237(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
End popogation

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Converting strategyRegistry_8

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
StrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
High Call: getStrategies
Running querryfc
Written func info: StrategyRegistry, getStrategies
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_11', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
_strategyList_1(address[]) := TMP_294(address[])
asgn
init
end
_______________

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
index_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: index, Num: 2
Globalname: index
Name: _amount, Num: 1
Globalname: _amount
Name: index, Num: 2
Globalname: index
End popogation
Name: _amount, Num: 1
Globalname: _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: index, Num: 2
Globalname: index

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Phi
init
end
_______________

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_2(uint256) := ϕ(['index_1', 'index_3'])
Phi
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_295(bool) = index_2 < REF_239
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
End popogation
REF_240(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_296 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
End popogation
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
INDEX
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_242(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_243(uint256) -> REF_241[REF_242]
INDEX
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_liquidityShares_1(uint256) := REF_243(uint256)
asgn
init
end
_______________

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 1
Globalname: _tokenInStrategy
End popogation
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
asgn
init
end
_______________

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_244(address) -> _strategyList_1[index_2]
INDEX
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_298 = CONVERT REF_244 to IYield
Converting REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Yield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
High Call: getTokensForShares
Running querryfc
Written func info: Yield, getTokensForShares
Handling balance function!
u
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenInStrategy_2(uint256) := TMP_299(uint256)
asgn
init
end
_______________

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
Name: _amount, Num: 2
Globalname: _amount
End popogation
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
init
end
init
end
init
end
_______________

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_2(uint256) := TMP_300(uint256)
asgn
init
end
_______________

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 3
Globalname: index
End popogation
TMP_301(uint256) := index_2(uint256)
asgn
init
end
_______________

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
index_3(uint256) = index_2 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _amount_1
RETURN
init
end

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalCollateralToken_1(uint256) := TMP_79(uint256)
asgn
init
end
_______________

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_80(uint256)
asgn
init
end
_______________

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineConstants, Num: 6
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _id, Num: 1
Globalname: _id
Name: _maxPossible, Num: 1
Globalname: _maxPossible
End popogation
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
testing mul...
init
end
init
end

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
MEMBER
init
end
init
end
OUT KEY: calculateBorrowableAmount_REF_34_idealCollateralRatio
OUT KEY: calculateBorrowableAmount_REF_idealCollateralRatio
FTT: None
No field found
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_34, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
testing mul...
init
end
init
end

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(uint256) = 10 ** _decimals_1
init
end
init
end
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
init
end
init
end
Error with TMP_86 in function calculateBorrowableAmount
Error with: TMP_86 in function calculateBorrowableAmount
lnorm: 30 rnorm: *
init
end
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_maxPossible_1(uint256) := TMP_86(uint256)
asgn
init
end
_______________

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio
Finance Type: undef
Root: None, Field: None
XXXX
REF_39(uint256) -> REF_38.borrowLimit
MEMBER
init
end
init
end
OUT KEY: calculateBorrowableAmount_REF_38_borrowLimit
OUT KEY: calculateBorrowableAmount_REF_borrowLimit
FTT: None
No field found
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_38, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_borrowLimit_1(uint256) := REF_39(uint256)
asgn
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _maxPossible, Num: 3
Globalname: _maxPossible

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Phi
init
end
_______________

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
init
end
init
end
init
end
_______________

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN
init
end

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: _maxPossible, Num: 2
Globalname: _maxPossible
End popogation
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


_id_1(uint256) := ϕ(['_id_1'])
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
TMP_74(bool) = _status_1 == REF_25
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
TMP_75(bool) = _status_1 == REF_26
TMP_76(bool) = TMP_74 || TMP_75
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
REF_29(address) -> REF_28.collateralAsset
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
REF_31(address) -> REF_30.borrowAsset
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
_totalCollateralToken_1(uint256) := TMP_79(uint256)
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
_currentDebt_1(uint256) := TMP_80(uint256)
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
REF_35(uint256) -> REF_34.idealCollateralRatio
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
TMP_83(uint256) = 10 ** 30
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
TMP_85(uint256) = 10 ** _decimals_1
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
_maxPossible_1(uint256) := TMP_86(uint256)
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
REF_39(uint256) -> REF_38.borrowLimit
_borrowLimit_1(uint256) := REF_39(uint256)
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
CONDITION TMP_87
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
CONDITION TMP_88
RETURN 0
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
RETURN TMP_89
_maxPossible_2(uint256) := _borrowLimit_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
XXXX
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _status, Num: 1
Globalname: _status
global...

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
INDEX
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_23, Field: status
init
end
_______________

Name: status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Converting priceOracle_2

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_29(address) -> REF_28.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_28, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> REF_30.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
Root: REF_30, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
High Call: getLatestPrice
Running querryfc
Written func info: PriceOracle, getLatestPrice
Handling balance function!
5
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac053883a0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac05388550>] ... )
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Finding type for _ratioOfPrices(uint256 ... )
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Finding type for _decimals(uint256 ... )
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _totalCollateralToken, Num: 1
Globalname: _totalCollateralToken
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
init
end
init
end
_______________

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalCollateralToken_1(uint256) := TMP_79(uint256)
asgn
init
end
_______________

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_80(uint256)
asgn
init
end
_______________

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
Name: _id, Num: 1
Globalname: _id
Name: _maxPossible, Num: 1
Globalname: _maxPossible
End popogation
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
testing mul...
init
end
init
end

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
MEMBER
init
end
init
end
init
end
_______________

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_34, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
testing mul...
init
end
init
end

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(uint256) = 10 ** _decimals_1
init
end
init
end
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
init
end
init
end
lnorm: 30 rnorm: u
init
end
_______________

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_maxPossible_1(uint256) := TMP_86(uint256)
asgn
init
end
_______________

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_39(uint256) -> REF_38.borrowLimit
MEMBER
init
end
init
end
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_38, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_borrowLimit_1(uint256) := REF_39(uint256)
asgn
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _maxPossible, Num: 3
Globalname: _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Phi
init
end
_______________

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
init
end
init
end
init
end
_______________

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN
init
end

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: _maxPossible, Num: 2
Globalname: _maxPossible
End popogation
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



updateinterestAccruedTillLastPrincipalUpdate
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_depositCollateralFromSavingsAccount
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



request
Finding type for _requestTo(address ... )
prev address? u
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
Finding type for _borrowLimit(uint256 ... )
Finding type for _borrowRate(uint256 ... )
Finding type for _autoLiquidation(bool ... )
Finding type for _collateralRatio(uint256 ... )
Finding type for _borrowAsset(address ... )
prev address? u
Head Addr: -987
    Norm: 6
    Set: {-987}
    Fin: NULL
Finding type for _collateralAsset(address ... )
prev address? u
Head Addr: -986
    Norm: 18
    Set: {-986}
    Fin: NULL
Finding type for _requestAsLender(bool ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _requestTo
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: []
    den: []
    norm: u
    link: _borrowAsset
    fields: []
    fintype: -1
Param: 6
    num: []
    den: []
    norm: u
    link: _collateralAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


priceOracle_4(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
priceOracle_5(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
_lender_1(address) := _requestTo_1(address)
_borrower_1(address) := msg.sender(address)
CONDITION _requestAsLender_1
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
_id_1(uint256) := TMP_122(uint256)
Emit CreditLineRequested(_id_1,_lender_3,_borrower_3)
_lender_2(address) := msg.sender(address)
_borrower_2(address) := _requestTo_1(address)
RETURN _id_1


Propogating parameters and globals to SSA variables...
End popogation
Name: priceOracle, Num: 4
Globalname: priceOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
priceOracle_4(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: priceOracle, Num: 5
Globalname: priceOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
Converting priceOracle_4

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
High Call: doesFeedExist
Running querryfc
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_5(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _lender, Num: 1
Globalname: _lender
End popogation
_lender_1(address) := _requestTo_1(address)
asgn
init
end
_______________

Name: _requestTo Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
End popogation
_borrower_1(address) := msg.sender(address)
asgn
init
_______________

Name: msg.sender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestAsLender, Num: 1
Globalname: _requestAsLender
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Name: _lender, Num: 3
Globalname: _lender

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrower, Num: 3
Globalname: _borrower

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
Phi
init
end
_______________

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
Phi
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 3
Globalname: _borrower
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
Name: _requestAsLender, Num: 1
Globalname: _requestAsLender
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
Name: _borrowRate, Num: 1
Globalname: _borrowRate
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
init
end
init
end
init
end
init
end
init
end
init
end
init
end
init
end
init
end
[[], [], 'u', '_requestTo', [], -1, -988, 'u']

Name: _lender Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _borrower Function: None
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _borrowLimit Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _autoLiquidation Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _collateralRatio Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_borrowAsset', [], -1, -987, 'u']

Name: _borrowAsset Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_collateralAsset', [], -1, -986, 'u']

Name: _collateralAsset Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _requestByLender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _lender_1 Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrower, Num: 1
Globalname: _borrower

Name: _borrower_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit

Name: _borrowLimit_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation

Name: _autoLiquidation_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio

Name: _collateralRatio_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowAsset_1 Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Phid

Name: _collateralAsset_1 Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Phid
Name: _requestByLender, Num: 1
Globalname: _requestByLender

Name: _requestByLender_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineCounter, Num: 1
Globalname: creditLineCounter
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 9
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 8
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_1(address) := ϕ(['_lender_3'])
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_1(address) := ϕ(['_borrower_3'])
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
End popogation
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_126(uint256) = creditLineCounter_1 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_126(uint256)
asgn
init
end
_______________

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineCounter, Num: 2
Globalname: creditLineCounter
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
creditLineCounter_2(uint256) := _id_1(uint256)
asgn
init
end
_______________

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineVariables, Num: 10
Globalname: creditLineVariables
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
INDEX
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineVariables_status
OUT KEY: _createRequest_creditLineVariables_status
FTT: None
No field found
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
Name: creditLineConstants, Num: 9
Globalname: creditLineConstants
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
INDEX
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> REF_72.borrower
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_borrower
OUT KEY: _createRequest_creditLineConstants_borrower
FTT: None
No field found
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
XXXX
REF_73 (->creditLineConstants_9) := _borrower_1(address)
asgn
init
end
_______________

Name: _borrower_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineConstants, Num: 10
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Phid
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
INDEX
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Root: None, Field: None
XXXX
REF_75(address) -> REF_74.lender
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_lender
OUT KEY: _createRequest_creditLineConstants_lender
FTT: None
No field found
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
XXXX
REF_75 (->creditLineConstants_10) := _lender_1(address)
asgn
init
end
_______________

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
Name: creditLineConstants, Num: 11
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Phid
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
INDEX
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> REF_76.borrowLimit
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_borrowLimit
OUT KEY: _createRequest_creditLineConstants_borrowLimit
FTT: None
No field found
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
XXXX
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
Name: creditLineConstants, Num: 12
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Phid
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
INDEX
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_79(bool) -> REF_78.autoLiquidation
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_autoLiquidation
OUT KEY: _createRequest_creditLineConstants_autoLiquidation
FTT: None
No field found
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
XXXX
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
asgn
init
end
_______________

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
Name: creditLineConstants, Num: 13
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Phid
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
INDEX
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Root: None, Field: None
XXXX
REF_81(uint256) -> REF_80.idealCollateralRatio
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_idealCollateralRatio
OUT KEY: _createRequest_creditLineConstants_idealCollateralRatio
FTT: None
No field found
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
XXXX
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
asgn
init
end
_______________

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowRate, Num: 1
Globalname: _borrowRate
Name: creditLineConstants, Num: 14
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Phid
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
INDEX
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Root: None, Field: None
XXXX
REF_83(uint256) -> REF_82.borrowRate
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_borrowRate
OUT KEY: _createRequest_creditLineConstants_borrowRate
FTT: None
No field found
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
XXXX
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
asgn
init
end
_______________

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineConstants, Num: 15
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Phid
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
INDEX
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_85(address) -> REF_84.borrowAsset
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_borrowAsset
FTT: ([-1], [-1], 6, -1, 7)
([-1], [-1], 6, -1, 7)
([-1], [-1], 6, -1, 7)
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
XXXX
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
asgn
init
end
_______________

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: None
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: creditLineConstants, Num: 16
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Phid
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
INDEX
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_87(address) -> REF_86.collateralAsset
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_collateralAsset
OUT KEY: _createRequest_creditLineConstants_collateralAsset
FTT: None
No field found
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
XXXX
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
asgn
init
end
_______________

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestByLender, Num: 1
Globalname: _requestByLender
Name: creditLineConstants, Num: 17
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Phid
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
INDEX
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_89(bool) -> REF_88.requestByLender
MEMBER
init
end
init
end
OUT KEY: _createRequest_creditLineConstants_requestByLender
OUT KEY: _createRequest_creditLineConstants_requestByLender
FTT: None
No field found
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
asgn
init
end
_______________

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _lender_1 Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrower, Num: 1
Globalname: _borrower

Name: _borrower_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowAsset_1 Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Phid

Name: _collateralAsset_1 Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Phid
Name: _requestByLender, Num: 1
Globalname: _requestByLender

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_1(address) := ϕ(['_lender_3'])
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_1(address) := ϕ(['_borrower_3'])
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
End popogation
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_126(uint256) = creditLineCounter_1 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_126(uint256)
asgn
init
end
_______________

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
creditLineCounter_2(uint256) := _id_1(uint256)
asgn
init
end
_______________

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
INDEX
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
MEMBER
init
end
init
end
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Phid
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
INDEX
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> REF_72.borrower
MEMBER
init
end
init
end
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
XXXX
REF_73 (->creditLineConstants_9) := _borrower_1(address)
asgn
init
end
_______________

Name: _borrower_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Phid
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
INDEX
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Root: None, Field: None
XXXX
REF_75(address) -> REF_74.lender
MEMBER
init
end
init
end
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
XXXX
REF_75 (->creditLineConstants_10) := _lender_1(address)
asgn
init
end
_______________

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Phid
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
INDEX
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> REF_76.borrowLimit
MEMBER
init
end
init
end
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
XXXX
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Phid
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
INDEX
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_79(bool) -> REF_78.autoLiquidation
MEMBER
init
end
init
end
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
XXXX
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
asgn
init
end
_______________

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Phid
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
INDEX
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Root: None, Field: None
XXXX
REF_81(uint256) -> REF_80.idealCollateralRatio
MEMBER
init
end
init
end
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
XXXX
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
asgn
init
end
_______________

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowRate, Num: 1
Globalname: _borrowRate
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Phid
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
INDEX
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Root: None, Field: None
XXXX
REF_83(uint256) -> REF_82.borrowRate
MEMBER
init
end
init
end
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
XXXX
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
asgn
init
end
_______________

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Phid
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
INDEX
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowAsset, borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_85(address) -> REF_84.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
XXXX
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
asgn
init
end
_______________

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Phid
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
INDEX
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_87(address) -> REF_86.collateralAsset
MEMBER
init
end
init
end
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
XXXX
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
asgn
init
end
_______________

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestByLender, Num: 1
Globalname: _requestByLender
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
INDEX
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_89(bool) -> REF_88.requestByLender
MEMBER
init
end
init
end
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
asgn
init
end
_______________

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_122(uint256)
asgn
init
end
_______________

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 3
Globalname: _borrower
End popogation
Propogating parameters and globals to SSA variables...
Name: _lender, Num: 2
Globalname: _lender
End popogation
_lender_2(address) := msg.sender(address)
asgn
init
_______________

Name: msg.sender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 2
Globalname: _borrower
End popogation
_borrower_2(address) := _requestTo_1(address)
asgn
init
end
_______________

Name: _requestTo Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


priceOracle_4(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
priceOracle_5(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
_lender_1(address) := _requestTo_1(address)
_borrower_1(address) := msg.sender(address)
CONDITION _requestAsLender_1
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
_id_1(uint256) := TMP_122(uint256)
Emit CreditLineRequested(_id_1,_lender_3,_borrower_3)
_lender_2(address) := msg.sender(address)
_borrower_2(address) := _requestTo_1(address)
RETURN _id_1


Propogating parameters and globals to SSA variables...
End popogation

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
priceOracle_4(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
Converting priceOracle_4

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
High Call: doesFeedExist
Running querryfc
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_5(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _lender, Num: 1
Globalname: _lender
End popogation
_lender_1(address) := _requestTo_1(address)
asgn
init
end
_______________

Name: _requestTo Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 1
Globalname: _borrower
End popogation
_borrower_1(address) := msg.sender(address)
asgn
init
_______________

Name: msg.sender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestAsLender, Num: 1
Globalname: _requestAsLender
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Name: _lender, Num: 3
Globalname: _lender

Name: _lender Function: request
Num: 
Den: 
Address: u
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrower, Num: 3
Globalname: _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
Phi
init
end
_______________

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
Phi
init
end
_______________

Name: _borrower Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
Name: _requestAsLender, Num: 1
Globalname: _requestAsLender
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
Name: _borrowRate, Num: 1
Globalname: _borrowRate
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
init
end
init
end
init
end
init
end
init
end
init
end
init
end
init
end
init
end
[[], [], 'u', '_requestTo', [], -1, -988, 'u']

Name: _lender Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_requestTo', [], -1, -988, 'u']

Name: _borrower Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _borrowLimit Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _autoLiquidation Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _collateralRatio Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_borrowAsset', [], -1, -987, 'u']

Name: _borrowAsset Function: None
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_collateralAsset', [], -1, -986, 'u']

Name: _collateralAsset Function: None
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _requestByLender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _lender_1 Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrower_1 Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowAsset_1 Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Phid

Name: _collateralAsset_1 Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Phid
Name: _requestByLender, Num: 1
Globalname: _requestByLender

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_1(address) := ϕ(['_lender_3'])
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_1(address) := ϕ(['_borrower_3'])
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_126(uint256) = creditLineCounter_1 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_126(uint256)
asgn
init
end
_______________

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
creditLineCounter_2(uint256) := _id_1(uint256)
asgn
init
end
_______________

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
INDEX
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
MEMBER
init
end
init
end
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Phid
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
INDEX
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> REF_72.borrower
MEMBER
init
end
init
end
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
XXXX
REF_73 (->creditLineConstants_9) := _borrower_1(address)
asgn
init
end
_______________

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Phid
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
INDEX
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Root: None, Field: None
XXXX
REF_75(address) -> REF_74.lender
MEMBER
init
end
init
end
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
XXXX
REF_75 (->creditLineConstants_10) := _lender_1(address)
asgn
init
end
_______________

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Phid
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
INDEX
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> REF_76.borrowLimit
MEMBER
init
end
init
end
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
XXXX
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Phid
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
INDEX
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_79(bool) -> REF_78.autoLiquidation
MEMBER
init
end
init
end
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
XXXX
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
asgn
init
end
_______________

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Phid
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
INDEX
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Root: None, Field: None
XXXX
REF_81(uint256) -> REF_80.idealCollateralRatio
MEMBER
init
end
init
end
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
XXXX
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
asgn
init
end
_______________

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowRate, Num: 1
Globalname: _borrowRate
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Phid
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
INDEX
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Root: None, Field: None
XXXX
REF_83(uint256) -> REF_82.borrowRate
MEMBER
init
end
init
end
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
XXXX
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
asgn
init
end
_______________

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Phid
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
INDEX
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowAsset, borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_85(address) -> REF_84.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
XXXX
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
asgn
init
end
_______________

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Phid
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
INDEX
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_87(address) -> REF_86.collateralAsset
MEMBER
init
end
init
end
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
XXXX
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
asgn
init
end
_______________

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestByLender, Num: 1
Globalname: _requestByLender
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
INDEX
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_89(bool) -> REF_88.requestByLender
MEMBER
init
end
init
end
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
asgn
init
end
_______________

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _lender_1 Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrower_1 Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _borrowRate, Num: 1
Globalname: _borrowRate

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowAsset_1 Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Phid

Name: _collateralAsset_1 Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Phid
Name: _requestByLender, Num: 1
Globalname: _requestByLender

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_lender_1(address) := ϕ(['_lender_3'])
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrower_1(address) := ϕ(['_borrower_3'])
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
XXXX
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
TMP_126(uint256) = creditLineCounter_1 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_126(uint256)
asgn
init
end
_______________

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
creditLineCounter_2(uint256) := _id_1(uint256)
asgn
init
end
_______________

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
INDEX
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
MEMBER
init
end
init
end
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_69, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Phid
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
INDEX
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_73(address) -> REF_72.borrower
MEMBER
init
end
init
end
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
XXXX
REF_73 (->creditLineConstants_9) := _borrower_1(address)
asgn
init
end
_______________

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_72, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Phid
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
INDEX
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
Root: None, Field: None
XXXX
REF_75(address) -> REF_74.lender
MEMBER
init
end
init
end
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
XXXX
REF_75 (->creditLineConstants_10) := _lender_1(address)
asgn
init
end
_______________

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Root: REF_74, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Phid
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
INDEX
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
Root: None, Field: None
XXXX
REF_77(uint256) -> REF_76.borrowLimit
MEMBER
init
end
init
end
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
XXXX
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_76, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _autoLiquidation, Num: 1
Globalname: _autoLiquidation
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Phid
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
INDEX
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_79(bool) -> REF_78.autoLiquidation
MEMBER
init
end
init
end
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
XXXX
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
asgn
init
end
_______________

Name: _autoLiquidation_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_78, Field: autoLiquidation
init
end
_______________

Name: autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _collateralRatio, Num: 1
Globalname: _collateralRatio
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Phid
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
INDEX
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
Root: None, Field: None
XXXX
REF_81(uint256) -> REF_80.idealCollateralRatio
MEMBER
init
end
init
end
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
XXXX
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
asgn
init
end
_______________

Name: _collateralRatio_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_80, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrowRate, Num: 1
Globalname: _borrowRate
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Phid
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
INDEX
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
Root: None, Field: None
XXXX
REF_83(uint256) -> REF_82.borrowRate
MEMBER
init
end
init
end
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
XXXX
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
asgn
init
end
_______________

Name: _borrowRate_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_82, Field: borrowRate
init
end
_______________

Name: borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Phid
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
INDEX
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowAsset, borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_85(address) -> REF_84.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
XXXX
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
asgn
init
end
_______________

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -987
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: -1
Den: -1
Address: -987
Norm: 6
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_84, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Phid
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
INDEX
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_87(address) -> REF_86.collateralAsset
MEMBER
init
end
init
end
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
XXXX
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
asgn
init
end
_______________

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: -1
Den: -1
Address: -986
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Root: REF_86, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _requestByLender, Num: 1
Globalname: _requestByLender
End popogation

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
INDEX
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_89(bool) -> REF_88.requestByLender
MEMBER
init
end
init
end
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
asgn
init
end
_______________

Name: _requestByLender_1 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_88, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_id_1(uint256) := TMP_122(uint256)
asgn
init
end
_______________

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _lender, Num: 2
Globalname: _lender
End popogation
_lender_2(address) := msg.sender(address)
asgn
init
_______________

Name: msg.sender Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _borrower, Num: 2
Globalname: _borrower
End popogation
_borrower_2(address) := _requestTo_1(address)
asgn
init
end
_______________

Name: _requestTo Function: None
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -988
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _id_1
RETURN
init
end

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_createRequest
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



accept
Finding type for _id(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
TMP_127(bool) = REF_91 == REF_92
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_94(bool) -> REF_93.requestByLender
_requestByLender_1(bool) := REF_94(bool)
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_96(address) -> REF_95.borrower
TMP_129(bool) = msg.sender == REF_96
TMP_130(bool) = TMP_129 && _requestByLender_1
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_98(address) -> REF_97.lender
TMP_131(bool) = msg.sender == REF_98
TMP_132 = ! _requestByLender_1 
TMP_133(bool) = TMP_131 && TMP_132
TMP_134(bool) = TMP_130 || TMP_133
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
Emit CreditLineAccepted(_id_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: creditLineVariables, Num: 11
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
Name: creditLineConstants, Num: 18
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
INDEX
[i]Type for REF_90

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
MEMBER
init
end
init
end
[i]Type for REF_91

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_90, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
[i]Type for REF_92

Name: CreditLineStatus.REQUESTED Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_127(bool) = REF_91 == REF_92
[i]Type for TMP_127

Name: TMP_127 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _requestByLender, Num: 1
Globalname: _requestByLender
End popogation
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_93

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_94(bool) -> REF_93.requestByLender
MEMBER
init
end
init
end
[i]Type for REF_94

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_93, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_requestByLender_1(bool) := REF_94(bool)
asgn
init
end
_______________

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _requestByLender

Name: _requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_95

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_96(address) -> REF_95.borrower
MEMBER
init
end
init
end
[i]Type for REF_96

Name: creditLineConstants.borrower Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_95, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_129(bool) = msg.sender == REF_96
[i]Type for TMP_129

Name: TMP_129 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(bool) = TMP_129 && _requestByLender_1
[i]Type for TMP_130

Name: TMP_130 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_97

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_98(address) -> REF_97.lender
MEMBER
init
end
init
end
[i]Type for REF_98

Name: creditLineConstants.lender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_97, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_131(bool) = msg.sender == REF_98
[i]Type for TMP_131

Name: TMP_131 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_132 = ! _requestByLender_1 
[i]Type for TMP_132

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(bool) = TMP_131 && TMP_132
[i]Type for TMP_133

Name: TMP_133 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bool) = TMP_130 || TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: creditLineVariables, Num: 12
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
INDEX
[i]Type for REF_99

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
MEMBER
init
end
init
end
[i]Type for REF_100

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_99, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
[i]Type for REF_101

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_100

Name: REF_100 Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_99, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation


creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
TMP_127(bool) = REF_91 == REF_92
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_94(bool) -> REF_93.requestByLender
_requestByLender_1(bool) := REF_94(bool)
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_96(address) -> REF_95.borrower
TMP_129(bool) = msg.sender == REF_96
TMP_130(bool) = TMP_129 && _requestByLender_1
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
REF_98(address) -> REF_97.lender
TMP_131(bool) = msg.sender == REF_98
TMP_132 = ! _requestByLender_1 
TMP_133(bool) = TMP_131 && TMP_132
TMP_134(bool) = TMP_130 || TMP_133
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
Emit CreditLineAccepted(_id_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
INDEX
[i]Type for REF_90

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_90, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_92

Name: CreditLineStatus.REQUESTED Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_127(bool) = REF_91 == REF_92
[i]Type for TMP_127

Name: TMP_127 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _requestByLender, Num: 1
Globalname: _requestByLender
End popogation
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_93

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_94(bool) -> REF_93.requestByLender
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_94

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_93, Field: requestByLender
init
end
_______________

Name: requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_requestByLender_1(bool) := REF_94(bool)
asgn
init
end
_______________

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _requestByLender

Name: _requestByLender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_95

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_96(address) -> REF_95.borrower
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrower Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_96

Name: creditLineConstants.borrower Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_95, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_129(bool) = msg.sender == REF_96
[i]Type for TMP_129

Name: TMP_129 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(bool) = TMP_129 && _requestByLender_1
[i]Type for TMP_130

Name: TMP_130 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
INDEX
[i]Type for REF_97

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_98(address) -> REF_97.lender
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.lender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: creditLineConstants.lender Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_97, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_131(bool) = msg.sender == REF_98
[i]Type for TMP_131

Name: TMP_131 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_132 = ! _requestByLender_1 
[i]Type for TMP_132

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(bool) = TMP_131 && TMP_132
[i]Type for TMP_133

Name: TMP_133 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bool) = TMP_130 || TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
INDEX
[i]Type for REF_99

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_99, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_101

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_100

Name: REF_100 Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_99, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



depositCollateral
Finding type for _id(uint256 ... )
Finding type for _amount(uint256 ... )
Finding type for _strategy(address ... )
prev address? u
Head Addr: -985
    Norm: 0
    Set: {-985}
    Fin: NULL
Finding type for _fromSavingsAccount(bool ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _strategy
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
TMP_137(bool) = REF_103 == REF_104
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
Emit CollateralDeposited(_id_1,_amount_1,_strategy_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: creditLineVariables, Num: 13
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Propogating parameters and globals to SSA variables...
End popogation
Name: _NOT_ENTERED, Num: 2
Globalname: _NOT_ENTERED
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _ENTERED, Num: 1
Globalname: _ENTERED
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _status, Num: 2
Globalname: _status
global...

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_1'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_386(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_386

Name: TMP_386 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_387(None) = SOLIDITY_CALL require(bool,string)(TMP_386,ReentrancyGuard: reentrant call)
[i]Type for TMP_387

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _status, Num: 3
Globalname: _status
global...

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _status, Num: 4
Globalname: _status
global...

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_1'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_386(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_386

Name: TMP_386 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_387(None) = SOLIDITY_CALL require(bool,string)(TMP_386,ReentrancyGuard: reentrant call)
[i]Type for TMP_387

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
init
end
_______________

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
_status_4(uint256) := _NOT_ENTERED_2(uint256)
asgn
init
end
_______________

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
Name: creditLineVariables, Num: 15
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 45
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
INDEX
[i]Type for REF_315

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
MEMBER
init
end
init
end
[i]Type for REF_316

Name: creditLineVariables.status Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_315, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
MEMBER
init
init
end
OUT KEY: global_CreditLineStatus_NOT_CREATED
OUT KEY: global_CreditLineStatus_NOT_CREATED
FTT: None
No field found
[i]Type for REF_317

Name: CreditLineStatus.NOT_CREATED Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: NOT_CREATED
init
end
_______________

Name: NOT_CREATED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_388(bool) = REF_316 != REF_317
[i]Type for TMP_388

Name: TMP_388 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_389(None) = SOLIDITY_CALL require(bool,string)(TMP_388,Credit line does not exist)
[i]Type for TMP_389

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
INDEX
[i]Type for REF_315

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_316

Name: creditLineVariables.status Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_315, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.NOT_CREATED Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_317

Name: CreditLineStatus.NOT_CREATED Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: NOT_CREATED
init
end
_______________

Name: NOT_CREATED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_388(bool) = REF_316 != REF_317
[i]Type for TMP_388

Name: TMP_388 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_389(None) = SOLIDITY_CALL require(bool,string)(TMP_388,Credit line does not exist)
[i]Type for TMP_389

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
INDEX
[i]Type for REF_102

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
MEMBER
init
end
init
end
[i]Type for REF_103

Name: creditLineVariables.status Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_102, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
[i]Type for REF_104

Name: CreditLineStatus.ACTIVE Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_137(bool) = REF_103 == REF_104
[i]Type for TMP_137

Name: TMP_137 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount
End popogation
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_strategy', [], -1, -985, 'u']

Name: _strategy Function: None
Num: 
Den: 
Address: -985
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _fromSavingsAccount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _amount, Num: 1
Globalname: _amount

Name: _amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -985
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Phid
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount

Name: _fromSavingsAccount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralShareInStrategy, Num: 7
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 19
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
Name: savingsAccount, Num: 4
Globalname: savingsAccount
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['_amount_1'])
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_strategy_1(address) := ϕ(['_strategy_1'])
Phi
[i]Type for _strategy

Name: _strategy Function: _depositCollateral
Num: 
Den: 
Address: -985
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
XXXX
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
Phi
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
savingsAccount_4(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_0'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
INDEX
[i]Type for REF_105

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_106(address) -> REF_105.lender
MEMBER
init
end
init
end
[i]Type for REF_106

Name: creditLineConstants.lender Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_105, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_143(bool) = REF_106 != msg.sender
[i]Type for TMP_143

Name: TMP_143 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount
End popogation
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
End popogation
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
init
end
init
end
init
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _sender Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _amount, Num: 1
Globalname: _amount

Name: _amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _sender_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralShareInStrategy, Num: 1
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 7
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
Name: savingsAccount, Num: 2
Globalname: savingsAccount
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid
Name: strategyRegistry, Num: 2
Globalname: strategyRegistry
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['_amount_1'])
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_sender_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
savingsAccount_2(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_0'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_2(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
INDEX
[i]Type for REF_49

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_50(address) -> REF_49.collateralAsset
MEMBER
init
end
init
end
[i]Type for REF_50

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_49, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_50(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
End popogation
Name: collateralShareInStrategy, Num: 2
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: savingsAccount, Num: 3
Globalname: savingsAccount
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid
Name: strategyRegistry, Num: 3
Globalname: strategyRegistry
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
Converting strategyRegistry_2

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
StrategyRegistry
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
High Call: getStrategies
Running querryfc
Written func info: StrategyRegistry, getStrategies
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
savingsAccount_3(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_8', 'savingsAccount_13'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_3(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_2', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
_strategyList_1(address[]) := TMP_95(address[])
asgn
init
end
_______________

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _savingsAccount, Num: 1
Globalname: _savingsAccount
End popogation
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
Converting savingsAccount_3

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
SavingsAccount
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
asgn
init
end
_______________

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 1
Globalname: _index
End popogation
_index_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 2
Globalname: _index
Name: _index, Num: 2
Globalname: _index
Name: _activeAmount, Num: 1
Globalname: _activeAmount
End popogation
Name: _activeAmount, Num: 1
Globalname: _activeAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _index, Num: 2
Globalname: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Phi
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_97(bool) = _index_2 < REF_52
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategy, Num: 1
Globalname: _strategy
End popogation
REF_53(address) -> _strategyList_1[_index_2]
INDEX
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_strategy_1(address) := REF_53(address)
asgn
init
end
_______________

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
End popogation
Name: collateralShareInStrategy, Num: 3
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
High Call: balanceInShares
Running querryfc
Written func info: SavingsAccount, balanceInShares
Handling balance function!
2
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_liquidityShares_1(uint256) := TMP_98(uint256)
asgn
init
end
_______________

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_99(bool) = _liquidityShares_1 == 0
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_55(address) -> _strategyList_1[_index_2]
INDEX
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_100 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(bool) = REF_55 == TMP_100
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_102(bool) = TMP_99 || TMP_101
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 1
Globalname: _tokenInStrategy
End popogation
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
asgn
init
end
_______________

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation
Name: collateralShareInStrategy, Num: 4
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_103 = CONVERT _strategy_1 to IYield
Converting _strategy_1

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Yield
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
High Call: getTokensForShares
Running querryfc
Written func info: Yield, getTokensForShares
Handling balance function!
u
Finding type for hlc_1(uint256 ... )
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_3', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenInStrategy_2(uint256) := TMP_104(uint256)
asgn
init
end
_______________

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokensToTransfer, Num: 1
Globalname: _tokensToTransfer
End popogation
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
asgn
init
end
_______________

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _activeAmount, Num: 1
Globalname: _activeAmount
End popogation
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
init
end
init
end
init
end
_______________

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(bool) = TMP_105 >= _amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _tokensToTransfer, Num: 3
Globalname: _tokensToTransfer

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Phi
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _activeAmount, Num: 1
Globalname: _activeAmount
Name: _activeAmount, Num: 2
Globalname: _activeAmount
End popogation
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
init
end
init
end
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_activeAmount_2(uint256) := TMP_108(uint256)
asgn
init
end
_______________

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _activeAmount, Num: 1
Globalname: _activeAmount
Name: _tokensToTransfer, Num: 2
Globalname: _tokensToTransfer
End popogation
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
init
end
init
end
init
end
_______________

Name: _amount_1 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokensToTransfer_2(uint256) := TMP_107(uint256)
asgn
init
end
_______________

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: collateralShareInStrategy, Num: 5
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_109 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 8
8
8
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
High Call: transferFrom
Running querryfc
Written func info: SavingsAccount, transferFrom
Handling balance function!
2
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: collateralShareInStrategy, Num: 6
Globalname: collateralShareInStrategy
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
INDEX
[i]Type for REF_61

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_62(uint256) -> REF_61[_strategy_1]
INDEX
[i]Type for REF_62

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
INDEX
[i]Type for REF_63

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_64(uint256) -> REF_63[_strategy_1]
INDEX
[i]Type for REF_64

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
testing mul...
init
end
init
end

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
init
end
init
end
init
end
_______________

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
asgn
init
end
_______________

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_114(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 3
Globalname: _index
End popogation
TMP_115(uint256) := _index_2(uint256)
asgn
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_index_3(uint256) = _index_2 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _amount, Num: 1
Globalname: _amount

Name: _amount_1 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _sender_1 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['_amount_1'])
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_sender_1(address) := ϕ(['msg.sender'])
Phi
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
savingsAccount_2(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_0'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_2(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
INDEX
[i]Type for REF_49

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_50(address) -> REF_49.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_49, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_50(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
End popogation

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
Phid
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
Converting strategyRegistry_2

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
StrategyRegistry
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
High Call: getStrategies
Running querryfc
Written func info: StrategyRegistry, getStrategies
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
savingsAccount_3(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_8', 'savingsAccount_13'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
strategyRegistry_3(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_9', 'strategyRegistry_2', 'strategyRegistry_3', 'strategyRegistry_5', 'strategyRegistry_1', 'strategyRegistry_7'])
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
XXXX
_strategyList_1(address[]) := TMP_95(address[])
asgn
init
end
_______________

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _savingsAccount, Num: 1
Globalname: _savingsAccount
End popogation
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
Converting savingsAccount_3

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
SavingsAccount
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
asgn
init
end
_______________

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 1
Globalname: _index
End popogation
_index_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 2
Globalname: _index
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: _index, Num: 2
Globalname: _index
Name: _activeAmount, Num: 1
Globalname: _activeAmount
End popogation
Name: _activeAmount, Num: 1
Globalname: _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _index, Num: 2
Globalname: _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Phi
init
end
_______________

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Phi
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: REF_52 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_97(bool) = _index_2 < REF_52
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: _strategy, Num: 1
Globalname: _strategy
End popogation
REF_53(address) -> _strategyList_1[_index_2]
INDEX
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_strategy_1(address) := REF_53(address)
asgn
init
end
_______________

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
End popogation

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
High Call: balanceInShares
Running querryfc
Written func info: SavingsAccount, balanceInShares
Handling balance function!
2
Finding type for hlc_2(uint256 ... )
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_liquidityShares_1(uint256) := TMP_98(uint256)
asgn
init
end
_______________

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _strategyList, Num: 1
Globalname: _strategyList
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
End popogation
TMP_99(bool) = _liquidityShares_1 == 0
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_55(address) -> _strategyList_1[_index_2]
INDEX
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_100 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(bool) = REF_55 == TMP_100
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_102(bool) = TMP_99 || TMP_101
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
Name: _tokenInStrategy, Num: 1
Globalname: _tokenInStrategy
End popogation
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
asgn
init
end
_______________

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_103 = CONVERT _strategy_1 to IYield
Converting _strategy_1

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Yield
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
High Call: getTokensForShares
Running querryfc
Written func info: Yield, getTokensForShares
Handling balance function!
u
Finding type for hlc_3(uint256 ... )
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_3', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokenInStrategy_2(uint256) := TMP_104(uint256)
asgn
init
end
_______________

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
Name: _tokensToTransfer, Num: 1
Globalname: _tokensToTransfer
End popogation
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
asgn
init
end
_______________

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
init
end
init
end
init
end
_______________

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(bool) = TMP_105 >= _amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _tokensToTransfer, Num: 3
Globalname: _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Phi
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _activeAmount, Num: 2
Globalname: _activeAmount
End popogation
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
init
end
init
end
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_activeAmount_2(uint256) := TMP_108(uint256)
asgn
init
end
_______________

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _tokensToTransfer, Num: 2
Globalname: _tokensToTransfer
End popogation
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
init
end
init
end
init
end
_______________

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_tokensToTransfer_2(uint256) := TMP_107(uint256)
asgn
init
end
_______________

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_109 = CONVERT this to address
Converting this
8
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
High Call: transferFrom
Running querryfc
Written func info: SavingsAccount, transferFrom
Handling balance function!
2
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _liquidityShares, Num: 1
Globalname: _liquidityShares
Name: _id, Num: 1
Globalname: _id
Name: _tokenInStrategy, Num: 2
Globalname: _tokenInStrategy
End popogation

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
INDEX
[i]Type for REF_61

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_62(uint256) -> REF_61[_strategy_1]
INDEX
[i]Type for REF_62

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
INDEX
[i]Type for REF_63

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_64(uint256) -> REF_63[_strategy_1]
INDEX
[i]Type for REF_64

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
testing mul...
init
end
init
end

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
init
end
init
end
init
end
_______________

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
asgn
init
end
_______________

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_114(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _index, Num: 3
Globalname: _index
End popogation
TMP_115(uint256) := _index_2(uint256)
asgn
init
end
_______________

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
_index_3(uint256) = _index_2 + 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
INDEX
[i]Type for REF_107

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_108(address) -> REF_107.collateralAsset
MEMBER
init
end
init
end
[i]Type for REF_108

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_107, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_108(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _savingsAccount, Num: 1
Globalname: _savingsAccount
End popogation
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
Converting savingsAccount_4

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
SavingsAccount
[i]Type for TMP_146

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
asgn
init
end
_______________

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_147 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(bool) = _collateralAsset_1 == TMP_147
[i]Type for TMP_148

Name: TMP_148 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
TMP_151 = CONVERT _collateralAsset_1 to IERC20
Converting _collateralAsset_1

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_151

Name: TMP_151 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152 = CONVERT this to address
Converting this
8
[i]Type for TMP_152

Name: TMP_152 Function: _depositCollateral
Num: -1
Den: -1
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
TMP_149(bool) = msg.value == _amount_1
[i]Type for TMP_149

Name: TMP_149 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
Name: collateralShareInStrategy, Num: 8
Globalname: collateralShareInStrategy
global...

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_154 = CONVERT _collateralAsset_1 to IERC20
Converting _collateralAsset_1

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_154

Name: TMP_154 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
High Call: approve
Running querryfc
[i]Type for TMP_155

Name: TMP_155 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _sharesReceived, Num: 1
Globalname: _sharesReceived
End popogation
Name: collateralShareInStrategy, Num: 9
Globalname: collateralShareInStrategy
global...

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_156 = CONVERT this to address
Converting this
8
[i]Type for TMP_156

Name: TMP_156 Function: _depositCollateral
Num: -1
Den: -1
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
High Call: deposit
Running querryfc
Written func info: SavingsAccount, deposit
Handling balance function!
2
Finding type for hlc_4(uint256 ... )
[i]Type for TMP_157

Name: TMP_157 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_8', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_sharesReceived_1(uint256) := TMP_157(uint256)
asgn
init
end
_______________

Name: TMP_157 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _sharesReceived

Name: _sharesReceived Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: collateralShareInStrategy, Num: 10
Globalname: collateralShareInStrategy
global...

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
INDEX
[i]Type for REF_112

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_113(uint256) -> REF_112[_strategy_1]
INDEX
[i]Type for REF_113

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
INDEX
[i]Type for REF_114

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_115(uint256) -> REF_114[_strategy_1]
INDEX
[i]Type for REF_115

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
init
end
init
end
init
end
_______________

Name: _sharesReceived Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
asgn
init
end
_______________

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_113

Name: REF_113 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _amount, Num: 1
Globalname: _amount

Name: _amount_1 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _strategy_1 Function: _depositCollateral
Num: 
Den: 
Address: -985
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Phid
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount

Name: _fromSavingsAccount_1 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['_amount_1'])
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_strategy_1(address) := ϕ(['_strategy_1'])
Phi
[i]Type for _strategy

Name: _strategy Function: _depositCollateral
Num: 
Den: 
Address: -985
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
XXXX
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
Phi
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
savingsAccount_4(address) := ϕ(['savingsAccount_1', 'savingsAccount_6', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_0'])
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
INDEX
[i]Type for REF_105

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_106(address) -> REF_105.lender
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.lender Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: creditLineConstants.lender Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_105, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_143(bool) = REF_106 != msg.sender
[i]Type for TMP_143

Name: TMP_143 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount
End popogation
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
End popogation
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
init
end
init
end
init
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _collateralAsset, Num: 1
Globalname: _collateralAsset
End popogation
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
INDEX
[i]Type for REF_107

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_108(address) -> REF_107.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_107, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_collateralAsset_1(address) := REF_108(address)
asgn
init
end
_______________

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _savingsAccount, Num: 1
Globalname: _savingsAccount
End popogation
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
Converting savingsAccount_4

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
SavingsAccount
[i]Type for TMP_146

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
asgn
init
end
_______________

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 2
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_147 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_148(bool) = _collateralAsset_1 == TMP_147
[i]Type for TMP_148

Name: TMP_148 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
TMP_151 = CONVERT _collateralAsset_1 to IERC20
Converting _collateralAsset_1

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_151

Name: TMP_151 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152 = CONVERT this to address
Converting this
8
[i]Type for TMP_152

Name: TMP_152 Function: _depositCollateral
Num: 
Den: 
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
TMP_149(bool) = msg.value == _amount_1
[i]Type for TMP_149

Name: TMP_149 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_154 = CONVERT _collateralAsset_1 to IERC20
Converting _collateralAsset_1

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _collateralAsset Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_154

Name: TMP_154 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
High Call: approve
Running querryfc
[i]Type for TMP_155

Name: TMP_155 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _sharesReceived, Num: 1
Globalname: _sharesReceived
End popogation

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_156 = CONVERT this to address
Converting this
8
[i]Type for TMP_156

Name: TMP_156 Function: _depositCollateral
Num: 
Den: 
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
High Call: deposit
Running querryfc
Written func info: SavingsAccount, deposit
Handling balance function!
2
Finding type for hlc_5(uint256 ... )
[i]Type for TMP_157

Name: TMP_157 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_10', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_8', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_sharesReceived_1(uint256) := TMP_157(uint256)
asgn
init
end
_______________

Name: TMP_157 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _sharesReceived

Name: _sharesReceived Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _sharesReceived, Num: 1
Globalname: _sharesReceived
Name: _id, Num: 1
Globalname: _id
End popogation

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
INDEX
[i]Type for REF_112

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_113(uint256) -> REF_112[_strategy_1]
INDEX
[i]Type for REF_113

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
INDEX
[i]Type for REF_114

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_115(uint256) -> REF_114[_strategy_1]
INDEX
[i]Type for REF_115

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
init
end
init
end
init
end
_______________

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
asgn
init
end
_______________

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_113

Name: REF_113 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
End popogation


creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
TMP_137(bool) = REF_103 == REF_104
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
Emit CollateralDeposited(_id_1,_amount_1,_strategy_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
init
end
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
INDEX
[i]Type for REF_102

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_103

Name: creditLineVariables.status Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_102, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_104

Name: CreditLineStatus.ACTIVE Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_137(bool) = REF_103 == REF_104
[i]Type for TMP_137

Name: TMP_137 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
Name: _fromSavingsAccount, Num: 1
Globalname: _fromSavingsAccount
End popogation
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
init
end
init
end
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
Name: _id, Num: 1
Globalname: _id
End popogation
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_depositCollateral
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



_withdrawBorrowAmount
State_var: savingsAccount
State_var: strategyRegistry
State_var: creditLineVariables
State_var: creditLineConstants
State_var: priceOracle
State_var: collateralShareInStrategy
State_var: _owner
State_var: _NOT_ENTERED
State_var: protocolFeeCollector
State_var: protocolFeeFraction
State_var: liquidatorRewardFraction
State_var: _initialized
State_var: _initializing
State_var: YEAR_IN_SECONDS
State_var: creditLineCounter
State_var: _ENTERED
State_var: _status
State_var: defaultStrategy



borrow
Finding type for _id(uint256 ... )
Finding type for _amount(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_12', 'protocolFeeFraction_0', 'protocolFeeFraction_9', 'protocolFeeFraction_1'])
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_0', 'protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
TMP_179(bool) = REF_130 == REF_131
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
_borrowableAmount_1(uint256) := TMP_181(uint256)
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
REF_133(address) -> REF_132.borrowAsset
_borrowAsset_1(address) := REF_133(address)
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
REF_135(address) -> REF_134.lender
_lender_1(address) := REF_135(address)
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
REF_137(uint256) -> REF_136.principal
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
REF_139(uint256) -> REF_138.principal
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
TMP_186 = CONVERT 0 to address
TMP_187(bool) = _borrowAsset_1 != TMP_186
CONDITION TMP_187
TMP_188 = CONVERT _borrowAsset_1 to IERC20
TMP_189 = CONVERT this to address
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_6', 'protocolFeeFraction_12', 'protocolFeeFraction_9', 'protocolFeeFraction_1'])
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_6', 'protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
_balanceBefore_1(uint256) := TMP_190(uint256)
TMP_196 = CONVERT _borrowAsset_1 to IERC20
TMP_197 = CONVERT this to address
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_12', 'protocolFeeFraction_9', 'protocolFeeFraction_1'])
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
TMP_192 = CONVERT _borrowAsset_1 to IERC20
TMP_193 = CONVERT this to address
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_12', 'protocolFeeFraction_9', 'protocolFeeFraction_8', 'protocolFeeFraction_1'])
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_8', 'protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
_balanceAfter_1(uint256) := TMP_194(uint256)
TMP_200 = CONVERT _borrowAsset_1 to IERC20
TMP_201 = CONVERT this to address
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_12', 'protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_1'])
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_11'])
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_1', '_tokenDiffBalance_2'])
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
TMP_205(uint256) = 10 ** 30
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
_protocolFee_1(uint256) := TMP_206(uint256)
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
TMP_208 = CONVERT 0 to address
TMP_209(bool) = _borrowAsset_1 == TMP_208
CONDITION TMP_209
TMP_212 = CONVERT _borrowAsset_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
TMP_214 = CONVERT _borrowAsset_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
Emit BorrowedFromCreditLine(_id_1,_tokenDiffBalance_4)
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
success_1(bool)= UNPACK TUPLE_2 index: 0 
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)


Propogating parameters and globals to SSA variables...
End popogation
Name: creditLineVariables, Num: 16
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
Name: creditLineConstants, Num: 20
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
Name: protocolFeeFraction, Num: 2
Globalname: protocolFeeFraction
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: protocolFeeCollector, Num: 2
Globalname: protocolFeeCollector
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
Phid
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_12', 'protocolFeeFraction_0', 'protocolFeeFraction_9', 'protocolFeeFraction_1'])
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_0', 'protocolFeeCollector_12', 'protocolFeeCollector_1', 'protocolFeeCollector_9'])
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 6
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
Name: creditLineConstants, Num: 22
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineConstants, Num: 47
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
INDEX
[i]Type for REF_318

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_319(address) -> REF_318.borrower
MEMBER
init
end
init
end
[i]Type for REF_319

Name: creditLineConstants.borrower Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_318, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_390(bool) = REF_319 == msg.sender
[i]Type for TMP_390

Name: TMP_390 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_391(None) = SOLIDITY_CALL require(bool,string)(TMP_390,Only credit line Borrower can access)
[i]Type for TMP_391

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
INDEX
[i]Type for REF_318

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_319(address) -> REF_318.borrower
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrower Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_319

Name: creditLineConstants.borrower Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_318, Field: borrower
init
end
_______________

Name: borrower Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_390(bool) = REF_319 == msg.sender
[i]Type for TMP_390

Name: TMP_390 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_391(None) = SOLIDITY_CALL require(bool,string)(TMP_390,Only credit line Borrower can access)
[i]Type for TMP_391

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: creditLineVariables, Num: 18
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
End popogation
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
INDEX
[i]Type for REF_129

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
MEMBER
init
end
init
end
[i]Type for REF_130

Name: REF_129.status Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_129, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
[i]Type for REF_131

Name: CreditLineStatus.ACTIVE Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_179(bool) = REF_130 == REF_131
[i]Type for TMP_179

Name: TMP_179 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowableAmount, Num: 1
Globalname: _borrowableAmount
End popogation
Name: creditLineVariables, Num: 19
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
Name: creditLineConstants, Num: 23
Globalname: creditLineConstants
global...

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Phid
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
XXXX
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _status, Num: 1
Globalname: _status
global...

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
INDEX
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_23, Field: status
init
end
_______________

Name: status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Converting priceOracle_2

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_29(address) -> REF_28.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_28, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> REF_30.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
Root: REF_30, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
High Call: getLatestPrice
Running querryfc
Written func info: PriceOracle, getLatestPrice
Handling balance function!
5
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac053883a0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac05388550>] ... )
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Finding type for _ratioOfPrices(uint256 ... )
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Finding type for _decimals(uint256 ... )
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _totalCollateralToken, Num: 1
Globalname: _totalCollateralToken
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
init
end
init
end
_______________

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalCollateralToken_1(uint256) := TMP_79(uint256)
asgn
init
end
_______________

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_80(uint256)
asgn
init
end
_______________

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
Name: _id, Num: 1
Globalname: _id
Name: _maxPossible, Num: 1
Globalname: _maxPossible
End popogation
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
testing mul...
init
end
init
end

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
MEMBER
init
end
init
end
init
end
_______________

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_34, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
testing mul...
init
end
init
end

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(uint256) = 10 ** _decimals_1
init
end
init
end
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
init
end
init
end
lnorm: 30 rnorm: u
init
end
_______________

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_maxPossible_1(uint256) := TMP_86(uint256)
asgn
init
end
_______________

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_39(uint256) -> REF_38.borrowLimit
MEMBER
init
end
init
end
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_38, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_borrowLimit_1(uint256) := REF_39(uint256)
asgn
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _maxPossible, Num: 3
Globalname: _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Phi
init
end
_______________

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: _maxPossible, Num: 2
Globalname: _maxPossible
End popogation
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
init
end
init
end
init
end
_______________

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN
init
end

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
XXXX
priceOracle_2(address) := ϕ(['priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _status, Num: 1
Globalname: _status
global...

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
INDEX
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_23, Field: status
init
end
_______________

Name: status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
asgn
init
end
_______________

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: REQUESTED
init
end
_______________

Name: REQUESTED Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
Phid
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Converting priceOracle_2

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
PriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_29(address) -> REF_28.collateralAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_28, Field: collateralAsset
init
end
_______________

Name: collateralAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
INDEX
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(address) -> REF_30.borrowAsset
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: -1
Fields: 
Finance Type: undef
Root: REF_30, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
High Call: getLatestPrice
Running querryfc
Written func info: PriceOracle, getLatestPrice
Handling balance function!
5
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac053883a0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fac05388550>] ... )
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17', 'creditLineConstants_3'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
priceOracle_3(address) := ϕ(['priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8'])
Phi
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
XXXX
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Finding type for _ratioOfPrices(uint256 ... )
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Finding type for _decimals(uint256 ... )
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _totalCollateralToken, Num: 1
Globalname: _totalCollateralToken
End popogation

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
init
end
init
end
_______________

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalCollateralToken_1(uint256) := TMP_79(uint256)
asgn
init
end
_______________

Name: TMP_79 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Phid
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_70(uint256)
asgn
init
end
_______________

Name: TMP_70 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _currentDebt, Num: 1
Globalname: _currentDebt
End popogation
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_15(uint256) -> REF_14.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_14, Field: principal
init
end
_______________

Name: principal Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_17, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
INDEX
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
Root: None, Field: None
XXXX
REF_22(uint256) -> REF_21.totalInterestRepaid
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: totalInterestRepaid
init
end
_______________

Name: totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
init
end
init
end
init
end
_______________

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_73(uint256)
asgn
init
end
_______________

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _currentDebt_1
RETURN
init
end

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_currentDebt_1(uint256) := TMP_80(uint256)
asgn
init
end
_______________

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _decimals, Num: 1
Globalname: _decimals
Name: _ratioOfPrices, Num: 1
Globalname: _ratioOfPrices
Name: _id, Num: 1
Globalname: _id
Name: _maxPossible, Num: 1
Globalname: _maxPossible
End popogation
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
testing mul...
init
end
init
end

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
MEMBER
init
end
init
end
init
end
_______________

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_34, Field: idealCollateralRatio
init
end
_______________

Name: idealCollateralRatio Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_83(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
testing mul...
init
end
init
end

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_82 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(uint256) = 10 ** _decimals_1
init
end
init
end
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
init
end
init
end
lnorm: 30 rnorm: u
init
end
_______________

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_maxPossible_1(uint256) := TMP_86(uint256)
asgn
init
end
_______________

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowLimit, Num: 1
Globalname: _borrowLimit
End popogation
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
INDEX
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Root: None, Field: None
XXXX
REF_39(uint256) -> REF_38.borrowLimit
MEMBER
init
end
init
end
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_38, Field: borrowLimit
init
end
_______________

Name: borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_borrowLimit_1(uint256) := REF_39(uint256)
asgn
init
end
_______________

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _maxPossible, Num: 3
Globalname: _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Phi
init
end
_______________

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
init
end
init
end
lnorm: 30 rnorm: u
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: _maxPossible, Num: 2
Globalname: _maxPossible
End popogation
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
asgn
init
end
_______________

Name: _borrowLimit Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
init
end
init
end
init
end
_______________

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_89
RETURN
init
end

Name: TMP_89 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for TMP_181

Name: TMP_181 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
XXXX
_borrowableAmount_1(uint256) := TMP_181(uint256)
asgn
init
end
_______________

Name: TMP_181 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowableAmount

Name: _borrowableAmount Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _amount, Num: 1
Globalname: _amount
End popogation
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _borrowableAmount Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _borrowableAmount Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_182

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _borrowAsset, Num: 1
Globalname: _borrowAsset
End popogation
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
INDEX
[i]Type for REF_132

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_133(address) -> REF_132.borrowAsset
MEMBER
init
end
init
end
[i]Type for REF_133

Name: creditLineConstants.borrowAsset Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_132, Field: borrowAsset
init
end
_______________

Name: borrowAsset Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_borrowAsset_1(address) := REF_133(address)
asgn
init
end
_______________

Name: creditLineConstants.borrowAsset Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lender, Num: 1
Globalname: _lender
End popogation
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
INDEX
[i]Type for REF_134

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
Root: None, Field: None
XXXX
REF_135(address) -> REF_134.lender
MEMBER
init
end
init
end
[i]Type for REF_135

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_134, Field: lender
init
end
_______________

Name: lender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lender_1(address) := REF_135(address)
asgn
init
end
_______________

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
Name: creditLineVariables, Num: 20
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: creditLineVariables, Num: 6
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
INDEX
[i]Type for REF_41

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
MEMBER
init
end
init
end
[i]Type for REF_42

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_41, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
[i]Type for REF_43

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_90(bool) = REF_42 == REF_43
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
Name: creditLineVariables, Num: 7
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_92(uint256)
asgn
init
end
_______________

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _newInterestAccrued, Num: 1
Globalname: _newInterestAccrued
End popogation
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
INDEX
[i]Type for REF_44

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
OUT KEY: updateinterestAccruedTillLastPrincipalUpdate_creditLineVariables_interestAccruedTillLastPrincipalUpdate
OUT KEY: updateinterestAccruedTillLastPrincipalUpdate_creditLineVariables_interestAccruedTillLastPrincipalUpdate
FTT: None
No field found
[i]Type for REF_45

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_44, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_newInterestAccrued_1(uint256) := TMP_93(uint256)
asgn
init
end
_______________

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: creditLineVariables, Num: 8
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
INDEX
[i]Type for REF_47

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
[i]Type for REF_48

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_47, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
XXXX
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
asgn
init
end
_______________

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_47, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1'])
Phi
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
INDEX
[i]Type for REF_41

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_41, Field: status
init
end
_______________

Name: status Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
MEMBER
init
init
end
init
end
_______________

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_43

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: CreditLineStatus, Field: ACTIVE
init
end
_______________

Name: ACTIVE Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_90(bool) = REF_42 == REF_43
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Phid
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _id, Num: 1
Globalname: _id

Name: _id_1 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Phid

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Phid
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_12', 'creditLineVariables_44', 'creditLineVariables_8', 'creditLineVariables_15', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_2', 'creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_39', 'creditLineVariables_5'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
XXXX
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_18', 'creditLineConstants_40', 'creditLineConstants_19', 'creditLineConstants_23', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_7', 'creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_32', 'creditLineConstants_24', 'creditLineConstants_6', 'creditLineConstants_48', 'creditLineConstants_17'])
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _lastPrincipalUpdateTime, Num: 1
Globalname: _lastPrincipalUpdateTime
End popogation
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_7, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
asgn
init
end
_______________

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
End popogation
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
init
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := TMP_68(uint256)
asgn
init
end
_______________

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interestAccrued, Num: 1
Globalname: _interestAccrued
End popogation
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
INDEX
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_11(uint256) -> REF_10.principal
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: principal
init
end
_______________

Name: principal Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
INDEX
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
Root: None, Field: None
XXXX
REF_13(uint256) -> REF_12.borrowRate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_12, Field: borrowRate
init
end
_______________

Name: borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _principal_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _borrowRate_1 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_principal_1(uint256) := ϕ(['REF_11'])
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_borrowRate_1(uint256) := ϕ(['REF_13'])
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timeElapsed, Num: 1
Globalname: _timeElapsed
Name: _interest, Num: 1
Globalname: _interest
End popogation
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
testing mul...
init
end
init
end

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
testing mul...
init
end
init
end

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _timeElapsed_1 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_64(uint256) = 10 ** 30
init
end
init
end
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
XXXX
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
init
end
init
end
lnorm: u rnorm: 30
init
end
_______________

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
init
end
init
end
lnorm: -30 rnorm: u
init
end
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interest_1(uint256) := TMP_66(uint256)
asgn
init
end
_______________

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interest_1
RETURN
init
end

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
asgn
init
end
_______________

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN _interestAccrued_1
RETURN
init
end

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: -30
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
XXXX
_interestAccrued_1(uint256) := TMP_92(uint256)
asgn
init
end
_______________

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: _newInterestAccrued, Num: 1
Globalname: _newInterestAccrued
End popogation
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
INDEX
[i]Type for REF_44

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Root: None, Field: None
XXXX
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_45

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_44, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
init
end
init
end
init
end
_______________

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_newInterestAccrued_1(uint256) := TMP_93(uint256)
asgn
init
end
_______________

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
End popogation

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Phid
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
INDEX
[i]Type for REF_47

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Root: None, Field: None
XXXX
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
MEMBER
init
end
init
end
init
end
_______________

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_48

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_47, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
XXXX
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
asgn
init
end
_______________

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_47, Field: interestAccruedTillLastPrincipalUpdate
init
end
_______________

Name: interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: creditLineVariables, Num: 21
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Phid
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
INDEX
[i]Type for REF_136

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_137(uint256) -> REF_136.principal
MEMBER
init
end
init
end
OUT KEY: borrow_creditLineVariables_principal
OUT KEY: borrow_creditLineVariables_principal
FTT: None
No field found
[i]Type for REF_137

Name: creditLineVariables.principal Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_136, Field: principal
init
end
_______________

Name: principal Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
INDEX
[i]Type for REF_138

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Root: None, Field: None
XXXX
REF_139(uint256) -> REF_138.principal
MEMBER
init
end
init
end
OUT KEY: borrow_creditLineVariables_principal
OUT KEY: borrow_creditLineVariables_principal
FTT: None
No field found
[i]Type for REF_139

Name: creditLineVariables.principal Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_138, Field: principal
init
end
_______________

Name: principal Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
init
end
init
end
init
end
_______________

Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_185

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal
Finance Type: undef
XXXX
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
asgn
init
end
_______________

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_136, Field: principal
init
end
_______________

Name: principal Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _id, Num: 1
Globalname: _id
Name: creditLineVariables, Num: 22
Globalname: creditLineVariables
global...

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal
Finance Type: undef
Phid
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
INDEX
[i]Type for REF_141

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal
Finance Type: undef
Root: None, Field: None
XXXX
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
MEMBER
init
end
init
end
OUT KEY: borrow_creditLineVariables_lastPrincipalUpdateTime
OUT KEY: borrow_creditLineVariables_lastPrincipalUpdateTime
FTT: None
No field found
[i]Type for REF_142

Name: creditLineVariables.lastPrincipalUpdateTime Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_141, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
XXXX
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
asgn
init
_______________

Name: block.timestamp Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_141, Field: lastPrincipalUpdateTime
init
end
_______________

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_186 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_186

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(bool) = _borrowAsset_1 != TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _balanceBefore, Num: 1
Globalname: _balanceBefore
End popogation
Name: protocolFeeFraction, Num: 7
Globalname: protocolFeeFraction
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: protocolFeeCollector, Num: 7
Globalname: protocolFeeCollector
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
Phid
TMP_188 = CONVERT _borrowAsset_1 to IERC20
Converting _borrowAsset_1

Name: _borrowAsset Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _borrowAsset Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_188

Name: TMP_188 Function: borrow
Num: -1
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189 = CONVERT this to address
Converting this
8
[i]Type for TMP_189

Name: TMP_189 Function: borrow
Num: -1
Den: -1
Address: 8
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
High Call: balanceOf
Running querryfc
Written func info: ERC20, balanceOf
Handling balance function!
u
Executing Group 19
[*] Tested 6 warnings for Sublime
Group 19 complete
Testing complete
