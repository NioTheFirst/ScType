Switched global version to 0.8.3
Checking BaseLending
Checking HourlyBondSubscriptionLending
Finance file: HourlyBondSubscriptionLending_ftypes.txt
IN KEY: global_hourlyBondAccounts_amount
IN KEY: global_hourlyBondMetadata_yieldAccumulator
IN KEY: global_hourlyBondMetadata.yieldAccumulator_accumulatorFP
IN KEY: updateHourlyBondAmount_bond_amount
Reading f file...
['[t*]', 'global', 'hourlyBondAccounts', 'amount', 'f: 0']
OUT KEY: global_hourlyBondAccounts_amount
IN KEY: global_hourlyBondAccounts_amount
['[t*]', 'global', 'hourlyBondMetadata.yieldAccumulator', 'accumulatorFP', 'f: 20']
OUT KEY: global_hourlyBondMetadata.yieldAccumulator_accumulatorFP
IN KEY: global_hourlyBondMetadata.yieldAccumulator_accumulatorFP
['[t*]', 'updateHourlyBondAmount', 'bond', 'amount', 'f:0']
OUT KEY: updateHourlyBondAmount_bond_amount
IN KEY: updateHourlyBondAmount_bond_amount
['']
Finding type for lendingMeta(mapping(address => BaseLending.LendingMetadata) ... )
Finding type for FP32(uint256 ... )
Finding type for hourlyBondMetadata(mapping(address => HourlyBondSubscriptionLending.HourlyBondMetadata) ... )
(-1, -1, 'u', 'u', None)
OUT KEY: global_hourlyBondMetadata_yieldAccumulator
([-1], [-1], ['u'], -1, None)
OUT KEY: global_hourlyBondMetadata.yieldAccumulator_accumulatorFP
([-1], [-1], ['u'], -1, None, 20)
OUT KEY: global_hourlyBondMetadata.yieldAccumulator_lastUpdated
OUT KEY: global_hourlyBondMetadata.yieldAccumulator_hourlyYieldFP
OUT KEY: global_hourlyBondMetadata_buyingSpeed
OUT KEY: global_hourlyBondMetadata_withdrawingSpeed
OUT KEY: global_hourlyBondMetadata_lastBought
OUT KEY: global_hourlyBondMetadata_lastWithdrawn
Finding type for borrowYieldAccumulators(mapping(address => BaseLending.YieldAccumulator) ... )
Finding type for borrowingFactorPercent(uint256 ... )
Finding type for maxHourlyYieldFP(uint256 ... )
Finding type for hourlyBondAccounts(mapping(address => mapping(address => HourlyBond)) ... )
Finding type for yieldChangePerSecondFP(uint256 ... )
Finding type for withdrawalWindow(uint256 ... )



setWithdrawalWindow
Finding type for window(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1


withdrawalWindow_1(uint256) := window_1(uint256)


Executing Group 1
[*] Tested 1 warning for MarginSwap
Group 1 complete
Testing complete
