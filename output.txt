Switched global version to 0.8.3
Analyzed_contracts_count: 2
total compilations: 1, contracts: 2
contract name: BaseLending
contract name: HourlyBondSubscriptionLending
Finance file: HourlyBondSubscriptionLending_ftypes.txt
Add to address_to_label {'updateHourlyBondAmount:issuer': -999}
Addr:updateHourlyBondAmount_issuer : 0
Add to address_to_label {'updateHourlyBondAmount:issuer': -999, 'viewHourlyBondAmount:issuer': -998}
Addr:viewHourlyBondAmount_issuer : 0
Add to address_to_label {'updateHourlyBondAmount:issuer': -999, 'viewHourlyBondAmount:issuer': -998, 'viewHourlyBondAmount:holder': -997}
Addr:viewHourlyBondAmount_holder : 0
Reading f file...
['[t*]', 'global', 'hourlyBondAccounts', 'amount', 'f: 0']
OUT KEY: global_hourlyBondAccounts_amount
IN KEY: global_hourlyBondAccounts_amount
OUT KEY: global_hourlyBondAccounts_amount
IN KEY: global_hourlyBondAccounts_amount
['[t*]', 'updateHourlyBondAmount', 'yA', 'accumulatorFP', 'f: 20']
OUT KEY: updateHourlyBondAmount_yA_accumulatorFP
IN KEY: updateHourlyBondAmount_yA_accumulatorFP
OUT KEY: updateHourlyBondAmount_yA_accumulatorFP
IN KEY: updateHourlyBondAmount_yA_accumulatorFP
['[t*]', 'updateHourlyBondAmount', 'bond', 'amount', 'f:0']
OUT KEY: updateHourlyBondAmount_bond_amount
IN KEY: updateHourlyBondAmount_bond_amount
OUT KEY: updateHourlyBondAmount_bond_amount
IN KEY: updateHourlyBondAmount_bond_amount
['[t]', '_makeHourlyBond', 'amount', 'f:0']
Adding _makeHourlyBond_amount: (-1, -1, 'u', None, 'u', 0)
['[t]', '_withdrawHourlyBond', 'amount', 'f:0']
Adding _withdrawHourlyBond_amount: (-1, -1, 'u', None, 'u', 0)
['[t*]', 'getUpdatedHourlyYield.accumulator', 'accumulatorFP', 'f: 20']
OUT KEY: getUpdatedHourlyYield.accumulator_accumulatorFP_f: 20
IN KEY: getUpdatedHourlyYield.accumulator_accumulatorFP_f: 20
OUT KEY: getUpdatedHourlyYield.accumulator_accumulatorFP_f: 20
IN KEY: getUpdatedHourlyYield.accumulator_accumulatorFP_f: 20
['']
Mark functions Adding: HourlyBondSubscriptionLending, setWithdrawalWindow, True
[X]No Binary
Mark functions Adding: HourlyBondSubscriptionLending, _makeHourlyBond, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, updateHourlyBondAmount, True
[*]Marked
Mark functions Adding: HourlyBondSubscriptionLending, viewHourlyBondAmount, True
[*]Marked
Mark functions Adding: HourlyBondSubscriptionLending, _withdrawHourlyBond, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, calcCumulativeYieldFP, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, getUpdatedHourlyYield, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, viewCumulativeYieldFP, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, slitherConstructorVariables, True
[x] Not visible 
Mark functions Adding: HourlyBondSubscriptionLending, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: hourlyBondMetadata
Finding type for hourlyBondMetadata(mapping(address => HourlyBondSubscriptionLending.HourlyBondMetadata) ... )
global
hourlyBondMetadata
yieldAccumulator
OUT KEY: global_hourlyBondMetadata_yieldAccumulator
global
hourlyBondMetadata
buyingSpeed
OUT KEY: global_hourlyBondMetadata_buyingSpeed
global
hourlyBondMetadata
withdrawingSpeed
OUT KEY: global_hourlyBondMetadata_withdrawingSpeed
global
hourlyBondMetadata
lastBought
OUT KEY: global_hourlyBondMetadata_lastBought
global
hourlyBondMetadata
lastWithdrawn
OUT KEY: global_hourlyBondMetadata_lastWithdrawn
Value: u
Source address: u
State_var: lendingMeta
Finding type for lendingMeta(mapping(address => BaseLending.LendingMetadata) ... )
global
lendingMeta
totalLending
OUT KEY: global_lendingMeta_totalLending
global
lendingMeta
totalBorrowed
OUT KEY: global_lendingMeta_totalBorrowed
global
lendingMeta
lendingBuffer
OUT KEY: global_lendingMeta_lendingBuffer
global
lendingMeta
lendingCap
OUT KEY: global_lendingMeta_lendingCap
Value: u
Source address: u
State_var: withdrawalWindow
Finding type for withdrawalWindow(uint256 ... )
Value: u
Source address: u
State_var: hourlyBondAccounts
Finding type for hourlyBondAccounts(mapping(address => mapping(address => HourlyBond)) ... )
global
hourlyBondAccounts
amount
OUT KEY: global_hourlyBondAccounts_amount
(-1, -1, 'u', 'u', 'u', 0)
global
hourlyBondAccounts
yieldQuotientFP
OUT KEY: global_hourlyBondAccounts_yieldQuotientFP
global
hourlyBondAccounts
moduloHour
OUT KEY: global_hourlyBondAccounts_moduloHour
Value: u
Source address: u
State_var: FP32
Finding type for FP32(uint256 ... )
Value: u
Source address: u
State_var: borrowYieldAccumulators
Finding type for borrowYieldAccumulators(mapping(address => BaseLending.YieldAccumulator) ... )
global
borrowYieldAccumulators
accumulatorFP
OUT KEY: global_borrowYieldAccumulators_accumulatorFP
global
borrowYieldAccumulators
lastUpdated
OUT KEY: global_borrowYieldAccumulators_lastUpdated
global
borrowYieldAccumulators
hourlyYieldFP
OUT KEY: global_borrowYieldAccumulators_hourlyYieldFP
Value: u
Source address: u
State_var: borrowingFactorPercent
Finding type for borrowingFactorPercent(uint256 ... )
Value: u
Source address: u
State_var: maxHourlyYieldFP
Finding type for maxHourlyYieldFP(uint256 ... )
Value: u
Source address: u
State_var: yieldChangePerSecondFP
Finding type for yieldChangePerSecondFP(uint256 ... )
Value: u
Source address: u
Running check on HourlyBondSubscriptionLending
Reading Function: setWithdrawalWindow
Function setWithdrawalWindow not marked
Reading Function: _makeHourlyBond
Function _makeHourlyBond not marked
Reading Function: updateHourlyBondAmount
Checking funcion...



updateHourlyBondAmount
Function name: updateHourlyBondAmount
Finding type for issuer(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for bond(HourlyBond ... )
updateHourlyBondAmount
bond
amount
OUT KEY: updateHourlyBondAmount_bond_amount
(-1, -1, 'u', 'u', 'u', 0)
updateHourlyBondAmount
bond
yieldQuotientFP
OUT KEY: updateHourlyBondAmount_bond_yieldQuotientFP
updateHourlyBondAmount
bond
moduloHour
OUT KEY: updateHourlyBondAmount_bond_moduloHour
Value: u
New param cache [[[], [], 0, 'issuer', [], -1, -999, 'u'], [[-1], [-1], 'u', None, [<slither.core.variables.structure_variable.StructureVariable object at 0x7faa54f7fc70>], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
updateHourlyBondAmount(address,HourlyBond)


issuer_1(address) := ϕ(['issuer_1'])
bond_1(HourlyBond) := ϕ(["bond_1 (-> ['hourlyBondAccounts'])"])
lendingMeta_5(mapping(address => BaseLending.LendingMetadata)) := ϕ(['lendingMeta_4', 'lendingMeta_12', 'lendingMeta_1', 'lendingMeta_10', 'lendingMeta_8', 'lendingMeta_0'])
hourlyBondMetadata_3(mapping(address => HourlyBondSubscriptionLending.HourlyBondMetadata)) := ϕ(['hourlyBondMetadata_0', 'hourlyBondMetadata_7', 'hourlyBondMetadata_4', 'hourlyBondMetadata_2', 'hourlyBondMetadata_6'])
REF_22(uint256) -> bond_1.yieldQuotientFP
yieldQuotientFP_1(uint256) := REF_22(uint256)
TMP_54(bool) = yieldQuotientFP_1 > 0
CONDITION TMP_54
REF_23(HourlyBondSubscriptionLending.HourlyBondMetadata) -> hourlyBondMetadata_3[issuer_1]
TMP_55(BaseLending.YieldAccumulator) = INTERNAL_CALL, HourlyBondSubscriptionLending.getUpdatedHourlyYield(address,HourlyBondSubscriptionLending.HourlyBondMetadata)(issuer_1,REF_23)
lendingMeta_6(mapping(address => BaseLending.LendingMetadata)) := ϕ(['lendingMeta_12'])
yA_1 (-> ['TMP_55'])(BaseLending.YieldAccumulator) := TMP_55(BaseLending.YieldAccumulator)
REF_24(uint256) -> bond_1.amount
oldAmount_1(uint256) := REF_24(uint256)
REF_25(uint256) -> bond_1.amount
REF_26(uint256) -> bond_1.amount
REF_27(uint256) -> yA_1 (-> ['TMP_55']).accumulatorFP
TMP_56(uint256) = INTERNAL_CALL, BaseLending.applyInterest(uint256,uint256,uint256)(REF_26,REF_27,yieldQuotientFP_1)
bond_2(HourlyBond) := ϕ(['bond_1'])
REF_25 (->bond_2) := TMP_56(uint256)
REF_28(uint256) -> bond_2.amount
TMP_57(uint256) = REF_28 (c)- oldAmount_1
deltaAmount_1(uint256) := TMP_57(uint256)
REF_29(BaseLending.LendingMetadata) -> lendingMeta_7[issuer_1]
REF_30(uint256) -> REF_29.totalLending
lendingMeta_8(mapping(address => BaseLending.LendingMetadata)) := ϕ(['lendingMeta_7'])
REF_30(-> lendingMeta_8) = REF_30 (c)+ deltaAmount_1


clearing ir...?
issuer_1(address) := ϕ(['issuer_1'])
Executing Group 1
[*] Tested 1 warning for MarginSwap
Group 1 complete
Elapsed time: 8.435987678 seconds
Testing complete
