Switched global version to 0.8.4



constructor
MAX_FEE_1(uint24) := ϕ(['MAX_FEE_0'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_0(address,address,uint24,uint160,uint24) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint24,uint160,uint24))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1(address)= UNPACK TUPLE_0 index: 0 
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -999
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token1_1(address)= UNPACK TUPLE_0 index: 1 
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -998
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_swapFee_1(uint24)= UNPACK TUPLE_0 index: 2 
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint160)= UNPACK TUPLE_0 index: 3 
[i]Type for _price

Name: _price Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tickSpacing_1(uint24)= UNPACK TUPLE_0 index: 4 
[i]Type for _tickSpacing

Name: _tickSpacing Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0 = CONVERT 0 to address
[i]Type for TMP_0

Name: TMP_0 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_1(bool) = _token0_1 != TMP_0
[i]Type for TMP_1

Name: TMP_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,ZERO_ADDRESS)
[i]Type for TMP_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_3 = CONVERT this to address
[i]Type for TMP_3

Name: TMP_3 Function: constructor
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_4(bool) = _token0_1 != TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,INVALID_TOKEN0)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_6 = CONVERT this to address
[i]Type for TMP_6

Name: TMP_6 Function: constructor
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_7(bool) = _token1_1 != TMP_6
[i]Type for TMP_7

Name: TMP_7 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8(None) = SOLIDITY_CALL require(bool,string)(TMP_7,INVALID_TOKEN1)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_9(bool) = _swapFee_1 <= MAX_FEE_1
[i]Type for TMP_9

Name: TMP_9 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,INVALID_SWAP_FEE)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := _token0_1(address)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_1(address) := _token1_1(address)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
swapFee_1(uint24) := _swapFee_1(uint24)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1(uint160) := _price_1(uint160)
[i]Type for price

Name: price Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tickSpacing_1(uint24) := _tickSpacing_1(uint24)
[i]Type for tickSpacing

Name: tickSpacing Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11(uint128) = LIBRARY_CALL, dest:Ticks, function:Ticks.getMaxLiquidity(uint24), arguments:['_tickSpacing_1'] 
[i]Type for TMP_11

Name: TMP_11 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_1(uint128) := TMP_11(uint128)
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(int24) -> TickMath.MIN_TICK
[i]Type for REF_2

Name: REF_2 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_3(Ticks.Tick) -> ticks_0[REF_2]
[i]Type for REF_3

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_5(int24) -> TickMath.MIN_TICK
[i]Type for REF_5

Name: REF_5 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_6(int24) -> TickMath.MAX_TICK
[i]Type for REF_6

Name: REF_6 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_12 = CONVERT 0 to uint128
[i]Type for TMP_12

Name: TMP_12 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_13 = new Tick(REF_5,REF_6,TMP_12,0,0,0)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_1(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_0'])
[i]Type for ticks

Name: ticks Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_3 (->ticks_1) := TMP_13(Ticks.Tick)
[i]Type for REF_3

Name: REF_3 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_7(int24) -> TickMath.MAX_TICK
[i]Type for REF_7

Name: REF_7 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(Ticks.Tick) -> ticks_1[REF_7]
[i]Type for REF_8

Name: ticks Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(int24) -> TickMath.MIN_TICK
[i]Type for REF_10

Name: REF_10 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(int24) -> TickMath.MAX_TICK
[i]Type for REF_11

Name: REF_11 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_14 = CONVERT 0 to uint128
[i]Type for TMP_14

Name: TMP_14 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_15 = new Tick(REF_10,REF_11,TMP_14,0,0,0)
[i]Type for TMP_15

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_2(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_1'])
[i]Type for ticks

Name: ticks Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8 (->ticks_2) := TMP_15(Ticks.Tick)
[i]Type for REF_8

Name: REF_8 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(int24) -> TickMath.MIN_TICK
[i]Type for REF_12

Name: REF_12 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_1(int24) := REF_12(int24)
[i]Type for nearestTick

Name: nearestTick Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_16(address) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:bento, arguments:[]  
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_17 = CONVERT TMP_16 to IBentoBoxMinimal
[i]Type for TMP_17

Name: TMP_17 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
bento_1(IBentoBoxMinimal) := TMP_17(IBentoBoxMinimal)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_18(address) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:barFeeTo, arguments:[]  
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFeeTo_1(address) := TMP_18(address)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
TMP_19(uint256) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:barFee, arguments:[]  
[i]Type for TMP_19

Name: TMP_19 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFee_1(uint256) := TMP_19(uint256)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
masterDeployer_1(IMasterDeployer) := _masterDeployer_1(IMasterDeployer)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_1(uint256) := 1(uint256)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAX_FEE_1(uint24) := ϕ(['MAX_FEE_0'])
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_0(address,address,uint24,uint160,uint24) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint24,uint160,uint24))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token0_1(address)= UNPACK TUPLE_0 index: 0 
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -999
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_token1_1(address)= UNPACK TUPLE_0 index: 1 
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -998
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_swapFee_1(uint24)= UNPACK TUPLE_0 index: 2 
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_price_1(uint160)= UNPACK TUPLE_0 index: 3 
[i]Type for _price

Name: _price Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tickSpacing_1(uint24)= UNPACK TUPLE_0 index: 4 
[i]Type for _tickSpacing

Name: _tickSpacing Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_0 = CONVERT 0 to address
[i]Type for TMP_0

Name: TMP_0 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_1(bool) = _token0_1 != TMP_0
[i]Type for TMP_1

Name: TMP_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,ZERO_ADDRESS)
[i]Type for TMP_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_3 = CONVERT this to address
[i]Type for TMP_3

Name: TMP_3 Function: constructor
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_4(bool) = _token0_1 != TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,INVALID_TOKEN0)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_6 = CONVERT this to address
[i]Type for TMP_6

Name: TMP_6 Function: constructor
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_7(bool) = _token1_1 != TMP_6
[i]Type for TMP_7

Name: TMP_7 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_8(None) = SOLIDITY_CALL require(bool,string)(TMP_7,INVALID_TOKEN1)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_9(bool) = _swapFee_1 <= MAX_FEE_1
[i]Type for TMP_9

Name: TMP_9 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,INVALID_SWAP_FEE)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := _token0_1(address)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_1(address) := _token1_1(address)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
swapFee_1(uint24) := _swapFee_1(uint24)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1(uint160) := _price_1(uint160)
[i]Type for price

Name: price Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tickSpacing_1(uint24) := _tickSpacing_1(uint24)
[i]Type for tickSpacing

Name: tickSpacing Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_11(uint128) = LIBRARY_CALL, dest:Ticks, function:Ticks.getMaxLiquidity(uint24), arguments:['_tickSpacing_1'] 
[i]Type for TMP_11

Name: TMP_11 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_1(uint128) := TMP_11(uint128)
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(int24) -> TickMath.MIN_TICK
[i]Type for REF_2

Name: REF_2 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_3(Ticks.Tick) -> ticks_0[REF_2]
[i]Type for REF_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_5(int24) -> TickMath.MIN_TICK
[i]Type for REF_5

Name: REF_5 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_6(int24) -> TickMath.MAX_TICK
[i]Type for REF_6

Name: REF_6 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_12 = CONVERT 0 to uint128
[i]Type for TMP_12

Name: TMP_12 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_13 = new Tick(REF_5,REF_6,TMP_12,0,0,0)
[i]Type for TMP_13

Name: TMP_13 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_1(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_0'])
[i]Type for ticks

Name: ticks Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_3 (->ticks_1) := TMP_13(Ticks.Tick)
[i]Type for REF_3

Name: REF_3 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_7(int24) -> TickMath.MAX_TICK
[i]Type for REF_7

Name: REF_7 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(Ticks.Tick) -> ticks_1[REF_7]
[i]Type for REF_8

Name: ticks Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(int24) -> TickMath.MIN_TICK
[i]Type for REF_10

Name: REF_10 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(int24) -> TickMath.MAX_TICK
[i]Type for REF_11

Name: REF_11 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_14 = CONVERT 0 to uint128
[i]Type for TMP_14

Name: TMP_14 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_15 = new Tick(REF_10,REF_11,TMP_14,0,0,0)
[i]Type for TMP_15

Name: TMP_15 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_2(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_1'])
[i]Type for ticks

Name: ticks Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8 (->ticks_2) := TMP_15(Ticks.Tick)
[i]Type for REF_8

Name: REF_8 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(int24) -> TickMath.MIN_TICK
[i]Type for REF_12

Name: REF_12 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_1(int24) := REF_12(int24)
[i]Type for nearestTick

Name: nearestTick Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_16(address) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:bento, arguments:[]  
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_17 = CONVERT TMP_16 to IBentoBoxMinimal
[i]Type for TMP_17

Name: TMP_17 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
bento_1(IBentoBoxMinimal) := TMP_17(IBentoBoxMinimal)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_18(address) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:barFeeTo, arguments:[]  
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFeeTo_1(address) := TMP_18(address)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
TMP_19(uint256) = HIGH_LEVEL_CALL, dest:_masterDeployer_1(IMasterDeployer), function:barFee, arguments:[]  
[i]Type for TMP_19

Name: TMP_19 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFee_1(uint256) := TMP_19(uint256)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
masterDeployer_1(IMasterDeployer) := _masterDeployer_1(IMasterDeployer)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_1(uint256) := 1(uint256)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



mint
MAX_TICK_LIQUIDITY_2(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_2(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: mint
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_2(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: mint
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_1(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsPerLiquidity_1(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_1(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_1(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
reserve0_1(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
reserve1_1(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
price_2(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_2(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_3(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
unlocked_2(uint256) := ϕ(['unlocked_0', 'unlocked_1', 'unlocked_4'])
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_243(bool) = unlocked_2 == 1
[i]Type for TMP_243

Name: TMP_243 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(None) = SOLIDITY_CALL require(bool,string)(TMP_243,LOCKED)
[i]Type for TMP_244

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_3(uint256) := 2(uint256)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
unlocked_4(uint256) := 1(uint256)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
unlocked_2(uint256) := ϕ(['unlocked_0', 'unlocked_1', 'unlocked_4'])
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_243(bool) = unlocked_2 == 1
[i]Type for TMP_243

Name: TMP_243 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(None) = SOLIDITY_CALL require(bool,string)(TMP_243,LOCKED)
[i]Type for TMP_244

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unlocked_3(uint256) := 2(uint256)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
unlocked_4(uint256) := 1(uint256)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_20(ConcentratedLiquidityPool.MintParams) = SOLIDITY_CALL abi.decode()(data_1,MintParams)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
mintParams_1(ConcentratedLiquidityPool.MintParams) := TMP_20(ConcentratedLiquidityPool.MintParams)
[i]Type for mintParams

Name: mintParams Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_18(int24) -> mintParams_1.lower
[i]Type for REF_18

Name: REF_18 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_18'] 
[i]Type for TMP_21

Name: TMP_21 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_22 = CONVERT TMP_21 to uint256
[i]Type for TMP_22

Name: TMP_22 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceLower_1(uint256) := TMP_22(uint256)
[i]Type for priceLower

Name: priceLower Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_20(int24) -> mintParams_1.upper
[i]Type for REF_20

Name: REF_20 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_23(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_20'] 
[i]Type for TMP_23

Name: TMP_23 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_24 = CONVERT TMP_23 to uint256
[i]Type for TMP_24

Name: TMP_24 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := TMP_24(uint256)
[i]Type for priceUpper

Name: priceUpper Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_25 = CONVERT price_3 to uint256
[i]Type for TMP_25

Name: TMP_25 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := TMP_25(uint256)
[i]Type for currentPrice

Name: currentPrice Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> mintParams_1.amount1Desired
[i]Type for REF_22

Name: REF_22 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_23(uint256) -> mintParams_1.amount0Desired
[i]Type for REF_23

Name: REF_23 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_26(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getLiquidityForAmounts(uint256,uint256,uint256,uint256,uint256), arguments:['priceLower_1', 'priceUpper_1', 'currentPrice_1', 'REF_22', 'REF_23'] 
[i]Type for TMP_26

Name: TMP_26 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidity_1(uint256) := TMP_26(uint256)
[i]Type for _liquidity

Name: _liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27(bool) = _liquidity_1 <= MAX_TICK_LIQUIDITY_3
[i]Type for TMP_27

Name: TMP_27 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_28(None) = SOLIDITY_CALL require(bool,string)(TMP_27,LIQUIDITY_OVERFLOW)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(address) -> mintParams_1.positionOwner
[i]Type for REF_24

Name: REF_24 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(int24) -> mintParams_1.lower
[i]Type for REF_25

Name: REF_25 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26(int24) -> mintParams_1.upper
[i]Type for REF_26

Name: REF_26 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_29 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_29

Name: TMP_29 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_30 = CONVERT TMP_29 to int128
[i]Type for TMP_30

Name: TMP_30 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(REF_24,REF_25,REF_26,TMP_30)
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
[i]Type for TUPLE_1

Name: TUPLE_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_1 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_31(bool) = amount0fees_1 > 0
[i]Type for TMP_31

Name: TMP_31 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(bool) = amount1fees_1 > 0
[i]Type for TMP_34

Name: TMP_34 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_28(address) -> mintParams_1.positionOwner
[i]Type for REF_28

Name: REF_28 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_5,amount1fees_1,REF_28,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
REF_27(address) -> mintParams_1.positionOwner
[i]Type for REF_27

Name: REF_27 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_4,amount0fees_1,REF_27,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_36

Name: TMP_36 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_6(uint128) = reserve1_5 (c)- TMP_36
Error with reserve1 in function mint
Error with: reserve1 in function mint
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_33

Name: TMP_33 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_5(uint128) = reserve0_4 (c)- TMP_33
Error with reserve0 in function mint
Error with: reserve0 in function mint
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = priceLower_1 < currentPrice_1
[i]Type for TMP_37

Name: TMP_37 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = currentPrice_1 < priceUpper_1
[i]Type for TMP_38

Name: TMP_38 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39(bool) = TMP_37 && TMP_38
[i]Type for TMP_39

Name: TMP_39 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_40

Name: TMP_40 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_6(uint128) = liquidity_5 (c)+ TMP_40
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(int24) -> mintParams_1.lower
[i]Type for REF_29

Name: REF_29 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(int24) -> mintParams_1.upper
[i]Type for REF_30

Name: REF_30 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._ensureTickSpacing(int24,int24)(REF_29,REF_30)
lower_1(int24) := ϕ(['REF_29'])
[i]Type for lower

Name: lower Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['REF_30'])
[i]Type for upper

Name: upper Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tickSpacing_2(uint24) := ϕ(['tickSpacing_1', 'tickSpacing_0'])
[i]Type for tickSpacing

Name: tickSpacing Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_162

Name: TMP_162 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163(int24) = lower_1 (c)% TMP_162
[i]Type for TMP_163

Name: TMP_163 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = TMP_163 == 0
[i]Type for TMP_164

Name: TMP_164 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(None) = SOLIDITY_CALL require(bool,string)(TMP_164,INVALID_TICK)
[i]Type for TMP_165

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_166

Name: TMP_166 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(int24) = lower_1 (c)/ TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(int24) = TMP_167 (c)% 2
[i]Type for TMP_168

Name: TMP_168 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = TMP_168 == 0
[i]Type for TMP_169

Name: TMP_169 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,LOWER_EVEN)
[i]Type for TMP_170

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_171

Name: TMP_171 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(int24) = upper_1 (c)% TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173(bool) = TMP_172 == 0
[i]Type for TMP_173

Name: TMP_173 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,INVALID_TICK)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_175

Name: TMP_175 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(int24) = upper_1 (c)/ TMP_175
[i]Type for TMP_176

Name: TMP_176 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(int24) = TMP_176 (c)% 2
[i]Type for TMP_177

Name: TMP_177 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_177 != 0
[i]Type for TMP_178

Name: TMP_178 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,UPPER_ODD)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['REF_29'])
[i]Type for lower

Name: lower Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['REF_30'])
[i]Type for upper

Name: upper Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tickSpacing_2(uint24) := ϕ(['tickSpacing_1', 'tickSpacing_0'])
[i]Type for tickSpacing

Name: tickSpacing Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_162

Name: TMP_162 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163(int24) = lower_1 (c)% TMP_162
[i]Type for TMP_163

Name: TMP_163 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = TMP_163 == 0
[i]Type for TMP_164

Name: TMP_164 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(None) = SOLIDITY_CALL require(bool,string)(TMP_164,INVALID_TICK)
[i]Type for TMP_165

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_166

Name: TMP_166 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(int24) = lower_1 (c)/ TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(int24) = TMP_167 (c)% 2
[i]Type for TMP_168

Name: TMP_168 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(bool) = TMP_168 == 0
[i]Type for TMP_169

Name: TMP_169 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,LOWER_EVEN)
[i]Type for TMP_170

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_171

Name: TMP_171 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(int24) = upper_1 (c)% TMP_171
[i]Type for TMP_172

Name: TMP_172 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173(bool) = TMP_172 == 0
[i]Type for TMP_173

Name: TMP_173 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_174(None) = SOLIDITY_CALL require(bool,string)(TMP_173,INVALID_TICK)
[i]Type for TMP_174

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175 = CONVERT tickSpacing_2 to int24
[i]Type for TMP_175

Name: TMP_175 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(int24) = upper_1 (c)/ TMP_175
[i]Type for TMP_176

Name: TMP_176 Function: _ensureTickSpacing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(int24) = TMP_176 (c)% 2
[i]Type for TMP_177

Name: TMP_177 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_177 != 0
[i]Type for TMP_178

Name: TMP_178 Function: _ensureTickSpacing
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,UPPER_ODD)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_32(int24) -> mintParams_1.lowerOld
[i]Type for REF_32

Name: REF_32 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_33(int24) -> mintParams_1.lower
[i]Type for REF_33

Name: REF_33 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34(int24) -> mintParams_1.upperOld
[i]Type for REF_34

Name: REF_34 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(int24) -> mintParams_1.upper
[i]Type for REF_35

Name: REF_35 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_42

Name: TMP_42 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43 = CONVERT currentPrice_1 to uint160
[i]Type for TMP_43

Name: TMP_43 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.insert(mapping(int24 => Ticks.Tick),uint256,uint256,uint160,int24,int24,int24,int24,uint128,int24,uint160), arguments:['ticks_8', 'feeGrowthGlobal0_6', 'feeGrowthGlobal1_6', 'secondsPerLiquidity_6', 'REF_32', 'REF_33', 'REF_34', 'REF_35', 'TMP_42', 'nearestTick_7', 'TMP_43'] 
[i]Type for TMP_44

Name: TMP_44 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_8(int24) := TMP_44(int24)
[i]Type for nearestTick

Name: nearestTick Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_2(uint128,uint128) = INTERNAL_CALL, ConcentratedLiquidityPool._getAmountsForLiquidity(uint256,uint256,uint256,uint256)(priceLower_1,priceUpper_1,currentPrice_1,_liquidity_1)
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
[i]Type for TUPLE_2

Name: TUPLE_2 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0Actual_1(uint128)= UNPACK TUPLE_2 index: 0 
[i]Type for amount0Actual

Name: amount0Actual Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1Actual_1(uint128)= UNPACK TUPLE_2 index: 1 
[i]Type for amount1Actual

Name: amount1Actual Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_46 = new ITridentRouter.TokenInput[](2)
[i]Type for TMP_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_1(ITridentRouter.TokenInput[]) := TMP_46(ITridentRouter.TokenInput)
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(ITridentRouter.TokenInput) -> callbackData_1[0]
[i]Type for REF_36

Name: callbackData Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(bool) -> mintParams_1.token0native
[i]Type for REF_38

Name: REF_38 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47 = new TokenInput(token0_8,REF_38,amount0Actual_1)
[i]Type for TMP_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_2(ITridentRouter.TokenInput[]) := ϕ(['callbackData_1'])
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36 (->callbackData_2) := TMP_47(ITridentRouter.TokenInput)
[i]Type for REF_36

Name: REF_36 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(ITridentRouter.TokenInput) -> callbackData_2[1]
[i]Type for REF_39

Name: callbackData Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(bool) -> mintParams_1.token1native
[i]Type for REF_41

Name: REF_41 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48 = new TokenInput(token1_8,REF_41,amount1Actual_1)
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_3(ITridentRouter.TokenInput[]) := ϕ(['callbackData_2'])
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39 (->callbackData_3) := TMP_48(ITridentRouter.TokenInput)
[i]Type for REF_39

Name: REF_39 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_49

Name: TMP_49 Function: mint
Num: -1
Den: -1
Address: 5
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_50(bytes) = SOLIDITY_CALL abi.encode()(callbackData_3)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_49(ITridentCallee), function:tridentMintCallback, arguments:['TMP_50']  
token0_9(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_8', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: mint
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_9(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_8', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: mint
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_9(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_8', 'reserve0_9', 'reserve0_23'])
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_9(uint128) := ϕ(['reserve1_10', 'reserve1_8', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(bool) = amount0Actual_1 != 0
[i]Type for TMP_52

Name: TMP_52 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(uint128) = amount0Actual_1 (c)+ reserve0_9
[i]Type for TMP_53

Name: TMP_53 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_54(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_9)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_54

Name: TMP_54 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(bool) = TMP_53 <= TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_56(None) = SOLIDITY_CALL require(bool,string)(TMP_55,TOKEN0_MISSING)
[i]Type for TMP_56

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_11(uint128) = reserve0_10 (c)+ amount0Actual_1
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_57(bool) = amount1Actual_1 != 0
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(uint128) = amount1Actual_1 (c)+ reserve1_10
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_59(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_10)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(bool) = TMP_58 <= TMP_59
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,TOKEN1_MISSING)
[i]Type for TMP_61

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_12(uint128) = reserve1_11 (c)+ amount1Actual_1
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_44(int24) -> mintParams_1.lower
[i]Type for REF_44

Name: REF_44 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(int24) -> mintParams_1.upper
[i]Type for REF_45

Name: REF_45 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_3(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(REF_44,REF_45)
[i]Type for TUPLE_3

Name: TUPLE_3 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowth0_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for feeGrowth0

Name: feeGrowth0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowth1_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for feeGrowth1

Name: feeGrowth1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_46(address) -> mintParams_1.positionRecipient
[i]Type for REF_46

Name: REF_46 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62 = CONVERT 0 to address
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(bool) = REF_46 != TMP_62
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> mintParams_1.positionOwner
[i]Type for REF_47

Name: REF_47 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64 = CONVERT REF_47 to IPositionManager
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: PositionManager
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> mintParams_1.positionRecipient
[i]Type for REF_49

Name: REF_49 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(int24) -> mintParams_1.lower
[i]Type for REF_50

Name: REF_50 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_51(int24) -> mintParams_1.upper
[i]Type for REF_51

Name: REF_51 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_65

Name: TMP_65 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:TMP_64(IPositionManager), function:positionMintCallback, arguments:['REF_49', 'REF_50', 'REF_51', 'TMP_65', 'feeGrowth0_1', 'feeGrowth1_1']  
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52(address) -> mintParams_1.positionOwner
[i]Type for REF_52

Name: REF_52 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> mintParams_1.positionRecipient
[i]Type for REF_53

Name: REF_53 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_2(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_2(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: mint
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_2(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: mint
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_1(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsPerLiquidity_1(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_1(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_1(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
reserve0_1(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
reserve1_1(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
price_2(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_2(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_3(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TMP_20(ConcentratedLiquidityPool.MintParams) = SOLIDITY_CALL abi.decode()(data_1,MintParams)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
mintParams_1(ConcentratedLiquidityPool.MintParams) := TMP_20(ConcentratedLiquidityPool.MintParams)
[i]Type for mintParams

Name: mintParams Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: lower, upper, amount1Desired, amount0Desired, positionOwner, lowerOld, upperOld, token0native, token1native, positionRecipient
Finance Type: undef
REF_18(int24) -> mintParams_1.lower
[i]Type for REF_18

Name: REF_18 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_18'] 
[i]Type for TMP_21

Name: TMP_21 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_22 = CONVERT TMP_21 to uint256
[i]Type for TMP_22

Name: TMP_22 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceLower_1(uint256) := TMP_22(uint256)
[i]Type for priceLower

Name: priceLower Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_20(int24) -> mintParams_1.upper
[i]Type for REF_20

Name: REF_20 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_23(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_20'] 
[i]Type for TMP_23

Name: TMP_23 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_24 = CONVERT TMP_23 to uint256
[i]Type for TMP_24

Name: TMP_24 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := TMP_24(uint256)
[i]Type for priceUpper

Name: priceUpper Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_25 = CONVERT price_3 to uint256
[i]Type for TMP_25

Name: TMP_25 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := TMP_25(uint256)
[i]Type for currentPrice

Name: currentPrice Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> mintParams_1.amount1Desired
[i]Type for REF_22

Name: REF_22 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_23(uint256) -> mintParams_1.amount0Desired
[i]Type for REF_23

Name: REF_23 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_26(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getLiquidityForAmounts(uint256,uint256,uint256,uint256,uint256), arguments:['priceLower_1', 'priceUpper_1', 'currentPrice_1', 'REF_22', 'REF_23'] 
[i]Type for TMP_26

Name: TMP_26 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidity_1(uint256) := TMP_26(uint256)
[i]Type for _liquidity

Name: _liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27(bool) = _liquidity_1 <= MAX_TICK_LIQUIDITY_3
[i]Type for TMP_27

Name: TMP_27 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_28(None) = SOLIDITY_CALL require(bool,string)(TMP_27,LIQUIDITY_OVERFLOW)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(address) -> mintParams_1.positionOwner
[i]Type for REF_24

Name: REF_24 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(int24) -> mintParams_1.lower
[i]Type for REF_25

Name: REF_25 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26(int24) -> mintParams_1.upper
[i]Type for REF_26

Name: REF_26 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_29 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_29

Name: TMP_29 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_30 = CONVERT TMP_29 to int128
[i]Type for TMP_30

Name: TMP_30 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(REF_24,REF_25,REF_26,TMP_30)
[i]Type for TUPLE_1

Name: TUPLE_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_1 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_1 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_31(bool) = amount0fees_1 > 0
[i]Type for TMP_31

Name: TMP_31 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34(bool) = amount1fees_1 > 0
[i]Type for TMP_34

Name: TMP_34 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_28(address) -> mintParams_1.positionOwner
[i]Type for REF_28

Name: REF_28 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_5,amount1fees_1,REF_28,False)
REF_27(address) -> mintParams_1.positionOwner
[i]Type for REF_27

Name: REF_27 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_4,amount0fees_1,REF_27,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_36 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_36

Name: TMP_36 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_6(uint128) = reserve1_5 (c)- TMP_36
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_33 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_33

Name: TMP_33 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_5(uint128) = reserve0_4 (c)- TMP_33
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37(bool) = priceLower_1 < currentPrice_1
[i]Type for TMP_37

Name: TMP_37 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_38(bool) = currentPrice_1 < priceUpper_1
[i]Type for TMP_38

Name: TMP_38 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39(bool) = TMP_37 && TMP_38
[i]Type for TMP_39

Name: TMP_39 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_40

Name: TMP_40 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_6(uint128) = liquidity_5 (c)+ TMP_40
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(int24) -> mintParams_1.lower
[i]Type for REF_29

Name: REF_29 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30(int24) -> mintParams_1.upper
[i]Type for REF_30

Name: REF_30 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._ensureTickSpacing(int24,int24)(REF_29,REF_30)
REF_32(int24) -> mintParams_1.lowerOld
[i]Type for REF_32

Name: REF_32 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_33(int24) -> mintParams_1.lower
[i]Type for REF_33

Name: REF_33 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34(int24) -> mintParams_1.upperOld
[i]Type for REF_34

Name: REF_34 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(int24) -> mintParams_1.upper
[i]Type for REF_35

Name: REF_35 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_42

Name: TMP_42 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43 = CONVERT currentPrice_1 to uint160
[i]Type for TMP_43

Name: TMP_43 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.insert(mapping(int24 => Ticks.Tick),uint256,uint256,uint160,int24,int24,int24,int24,uint128,int24,uint160), arguments:['ticks_8', 'feeGrowthGlobal0_6', 'feeGrowthGlobal1_6', 'secondsPerLiquidity_6', 'REF_32', 'REF_33', 'REF_34', 'REF_35', 'TMP_42', 'nearestTick_7', 'TMP_43'] 
[i]Type for TMP_44

Name: TMP_44 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_8(int24) := TMP_44(int24)
[i]Type for nearestTick

Name: nearestTick Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_2(uint128,uint128) = INTERNAL_CALL, ConcentratedLiquidityPool._getAmountsForLiquidity(uint256,uint256,uint256,uint256)(priceLower_1,priceUpper_1,currentPrice_1,_liquidity_1)
[i]Type for TUPLE_2

Name: TUPLE_2 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0Actual_1(uint128)= UNPACK TUPLE_2 index: 0 
[i]Type for amount0Actual

Name: amount0Actual Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1Actual_1(uint128)= UNPACK TUPLE_2 index: 1 
[i]Type for amount1Actual

Name: amount1Actual Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_46 = new ITridentRouter.TokenInput[](2)
[i]Type for TMP_46

Name: TMP_46 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_1(ITridentRouter.TokenInput[]) := TMP_46(ITridentRouter.TokenInput)
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(ITridentRouter.TokenInput) -> callbackData_1[0]
[i]Type for REF_36

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(bool) -> mintParams_1.token0native
[i]Type for REF_38

Name: REF_38 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_47 = new TokenInput(token0_8,REF_38,amount0Actual_1)
[i]Type for TMP_47

Name: TMP_47 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_2(ITridentRouter.TokenInput[]) := ϕ(['callbackData_1'])
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36 (->callbackData_2) := TMP_47(ITridentRouter.TokenInput)
[i]Type for REF_36

Name: REF_36 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(ITridentRouter.TokenInput) -> callbackData_2[1]
[i]Type for REF_39

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(bool) -> mintParams_1.token1native
[i]Type for REF_41

Name: REF_41 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_48 = new TokenInput(token1_8,REF_41,amount1Actual_1)
[i]Type for TMP_48

Name: TMP_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
callbackData_3(ITridentRouter.TokenInput[]) := ϕ(['callbackData_2'])
[i]Type for callbackData

Name: callbackData Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39 (->callbackData_3) := TMP_48(ITridentRouter.TokenInput)
[i]Type for REF_39

Name: REF_39 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49 = CONVERT msg.sender to ITridentCallee
[i]Type for TMP_49

Name: TMP_49 Function: mint
Num: 
Den: 
Address: 5
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_50(bytes) = SOLIDITY_CALL abi.encode()(callbackData_3)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_49(ITridentCallee), function:tridentMintCallback, arguments:['TMP_50']  
token0_9(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_8', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: mint
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_9(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_8', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: mint
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_9(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_8', 'reserve0_9', 'reserve0_23'])
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_9(uint128) := ϕ(['reserve1_10', 'reserve1_8', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(bool) = amount0Actual_1 != 0
[i]Type for TMP_52

Name: TMP_52 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(uint128) = amount0Actual_1 (c)+ reserve0_9
[i]Type for TMP_53

Name: TMP_53 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_54(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_9)
[i]Type for TMP_54

Name: TMP_54 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(bool) = TMP_53 <= TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_56(None) = SOLIDITY_CALL require(bool,string)(TMP_55,TOKEN0_MISSING)
[i]Type for TMP_56

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_11(uint128) = reserve0_10 (c)+ amount0Actual_1
[i]Type for reserve0

Name: reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_57(bool) = amount1Actual_1 != 0
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_58(uint128) = amount1Actual_1 (c)+ reserve1_10
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_59(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_10)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_60(bool) = TMP_58 <= TMP_59
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,TOKEN1_MISSING)
[i]Type for TMP_61

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_12(uint128) = reserve1_11 (c)+ amount1Actual_1
[i]Type for reserve1

Name: reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_44(int24) -> mintParams_1.lower
[i]Type for REF_44

Name: REF_44 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(int24) -> mintParams_1.upper
[i]Type for REF_45

Name: REF_45 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_3(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(REF_44,REF_45)
[i]Type for TUPLE_3

Name: TUPLE_3 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowth0_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for feeGrowth0

Name: feeGrowth0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowth1_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for feeGrowth1

Name: feeGrowth1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_46(address) -> mintParams_1.positionRecipient
[i]Type for REF_46

Name: REF_46 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62 = CONVERT 0 to address
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(bool) = REF_46 != TMP_62
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47(address) -> mintParams_1.positionOwner
[i]Type for REF_47

Name: REF_47 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64 = CONVERT REF_47 to IPositionManager
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: PositionManager
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> mintParams_1.positionRecipient
[i]Type for REF_49

Name: REF_49 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(int24) -> mintParams_1.lower
[i]Type for REF_50

Name: REF_50 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_51(int24) -> mintParams_1.upper
[i]Type for REF_51

Name: REF_51 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65 = CONVERT _liquidity_1 to uint128
[i]Type for TMP_65

Name: TMP_65 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(uint256) = HIGH_LEVEL_CALL, dest:TMP_64(IPositionManager), function:positionMintCallback, arguments:['REF_49', 'REF_50', 'REF_51', 'TMP_65', 'feeGrowth0_1', 'feeGrowth1_1']  
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52(address) -> mintParams_1.positionOwner
[i]Type for REF_52

Name: REF_52 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> mintParams_1.positionRecipient
[i]Type for REF_53

Name: REF_53 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



burn
token0_11(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_12(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_7(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_12(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
reserve1_13(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: raw balance
price_4(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_9(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_9(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_4(int24,int24,uint128,address,bool) = SOLIDITY_CALL abi.decode()(data_1(int24,int24,uint128,address,bool))
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1(int24)= UNPACK TUPLE_4 index: 0 
[i]Type for lower

Name: lower Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24)= UNPACK TUPLE_4 index: 1 
[i]Type for upper

Name: upper Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint128)= UNPACK TUPLE_4 index: 2 
[i]Type for amount

Name: amount Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
recipient_1(address)= UNPACK TUPLE_4 index: 3 
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_4 index: 4 
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['lower_1'] 
[i]Type for TMP_69

Name: TMP_69 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceLower_1(uint160) := TMP_69(uint160)
[i]Type for priceLower

Name: priceLower Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['upper_1'] 
[i]Type for TMP_70

Name: TMP_70 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint160) := TMP_70(uint160)
[i]Type for priceUpper

Name: priceUpper Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint160) := price_5(uint160)
[i]Type for currentPrice

Name: currentPrice Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(bool) = priceLower_1 < currentPrice_1
[i]Type for TMP_71

Name: TMP_71 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = currentPrice_1 < priceUpper_1
[i]Type for TMP_72

Name: TMP_72 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73(bool) = TMP_71 && TMP_72
[i]Type for TMP_73

Name: TMP_73 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_9(uint128) = liquidity_8 (c)- amount_1
[i]Type for liquidity

Name: liquidity Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_74 = CONVERT priceLower_1 to uint256
[i]Type for TMP_74

Name: TMP_74 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75 = CONVERT priceUpper_1 to uint256
[i]Type for TMP_75

Name: TMP_75 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT currentPrice_1 to uint256
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77 = CONVERT amount_1 to uint256
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TUPLE_5(uint128,uint128) = INTERNAL_CALL, ConcentratedLiquidityPool._getAmountsForLiquidity(uint256,uint256,uint256,uint256)(TMP_74,TMP_75,TMP_76,TMP_77)
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
[i]Type for TUPLE_5

Name: TUPLE_5 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_1(uint256)= UNPACK TUPLE_5 index: 0 
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256)= UNPACK TUPLE_5 index: 1 
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_78 = CONVERT amount_1 to int128
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_79(int128) = 0 (c)- TMP_78
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TUPLE_6(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(msg.sender,lower_1,upper_1,TMP_79)
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
[i]Type for TUPLE_6

Name: TUPLE_6 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0_2(uint256) = amount0_1 + amount0fees_1
Error with amount0 in function burn
Error with: amount0 in function burn
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_2(uint256) = amount1_1 + amount1fees_1
Error with amount1 in function burn
Error with: amount1 in function burn
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_81 = new IPool.TokenAmount[](2)
[i]Type for TMP_81

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_81(IPool.TokenAmount)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57(IPool.TokenAmount) -> withdrawnAmounts_1[0]
[i]Type for REF_57

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_82 = new TokenAmount(token0_14,amount0_2)
[i]Type for TMP_82

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57 (->withdrawnAmounts_2) := TMP_82(IPool.TokenAmount)
[i]Type for REF_57

Name: REF_57 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(IPool.TokenAmount) -> withdrawnAmounts_2[1]
[i]Type for REF_58

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83 = new TokenAmount(token1_15,amount1_2)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58 (->withdrawnAmounts_3) := TMP_83(IPool.TokenAmount)
[i]Type for REF_58

Name: REF_58 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_84

Name: TMP_84 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_16(uint128) = reserve0_15 - TMP_84
[i]Type for reserve0

Name: reserve0 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_85 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_17(uint128) = reserve1_16 - TMP_85
[i]Type for reserve1

Name: reserve1 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, ConcentratedLiquidityPool._transferBothTokens(address,uint256,uint256,bool)(recipient_1,amount0_2,amount1_2,unwrapBento_1)
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -997
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -997
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_87(int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.remove(mapping(int24 => Ticks.Tick),int24,int24,uint128,int24), arguments:['ticks_13', 'lower_1', 'upper_1', 'amount_1', 'nearestTick_13'] 
[i]Type for TMP_87

Name: TMP_87 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_14(int24) := TMP_87(int24)
[i]Type for nearestTick

Name: nearestTick Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_11(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_12(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_7(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
reserve0_12(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
reserve1_13(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
price_4(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_9(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_9(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_4(int24,int24,uint128,address,bool) = SOLIDITY_CALL abi.decode()(data_1(int24,int24,uint128,address,bool))
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1(int24)= UNPACK TUPLE_4 index: 0 
[i]Type for lower

Name: lower Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24)= UNPACK TUPLE_4 index: 1 
[i]Type for upper

Name: upper Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint128)= UNPACK TUPLE_4 index: 2 
[i]Type for amount

Name: amount Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
recipient_1(address)= UNPACK TUPLE_4 index: 3 
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_4 index: 4 
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['lower_1'] 
[i]Type for TMP_69

Name: TMP_69 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceLower_1(uint160) := TMP_69(uint160)
[i]Type for priceLower

Name: priceLower Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['upper_1'] 
[i]Type for TMP_70

Name: TMP_70 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint160) := TMP_70(uint160)
[i]Type for priceUpper

Name: priceUpper Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint160) := price_5(uint160)
[i]Type for currentPrice

Name: currentPrice Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(bool) = priceLower_1 < currentPrice_1
[i]Type for TMP_71

Name: TMP_71 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(bool) = currentPrice_1 < priceUpper_1
[i]Type for TMP_72

Name: TMP_72 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_73(bool) = TMP_71 && TMP_72
[i]Type for TMP_73

Name: TMP_73 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_9(uint128) = liquidity_8 (c)- amount_1
[i]Type for liquidity

Name: liquidity Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_74 = CONVERT priceLower_1 to uint256
[i]Type for TMP_74

Name: TMP_74 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_75 = CONVERT priceUpper_1 to uint256
[i]Type for TMP_75

Name: TMP_75 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76 = CONVERT currentPrice_1 to uint256
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77 = CONVERT amount_1 to uint256
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TUPLE_5(uint128,uint128) = INTERNAL_CALL, ConcentratedLiquidityPool._getAmountsForLiquidity(uint256,uint256,uint256,uint256)(TMP_74,TMP_75,TMP_76,TMP_77)
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
priceLower_1(uint256) := ϕ(['priceLower_1', 'TMP_74'])
[i]Type for priceLower

Name: priceLower Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceUpper_1(uint256) := ϕ(['priceUpper_1', 'TMP_75'])
[i]Type for priceUpper

Name: priceUpper Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentPrice_1(uint256) := ϕ(['currentPrice_1', 'TMP_76'])
[i]Type for currentPrice

Name: currentPrice Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityAmount_1(uint256) := ϕ(['TMP_77', '_liquidity_1'])
[i]Type for liquidityAmount

Name: liquidityAmount Function: _getAmountsForLiquidity
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_180(bool) = priceUpper_1 <= currentPrice_1
[i]Type for TMP_180

Name: TMP_180 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(bool) = currentPrice_1 <= priceLower_1
[i]Type for TMP_183

Name: TMP_183 Function: _getAmountsForLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_184

Name: TMP_184 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_185 = CONVERT TMP_184 to uint128
[i]Type for TMP_185

Name: TMP_185 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_1(uint128) := TMP_185(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_181(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_181

Name: TMP_181 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_182 = CONVERT TMP_181 to uint128
[i]Type for TMP_182

Name: TMP_182 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_1(uint128) := TMP_182(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_186(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'currentPrice_1', 'priceUpper_1', 'True'] 
[i]Type for TMP_186

Name: TMP_186 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_187 = CONVERT TMP_186 to uint128
[i]Type for TMP_187

Name: TMP_187 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0amount_2(uint128) := TMP_187(uint128)
[i]Type for token0amount

Name: token0amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['liquidityAmount_1', 'priceLower_1', 'currentPrice_1', 'True'] 
[i]Type for TMP_188

Name: TMP_188 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_189 = CONVERT TMP_188 to uint128
[i]Type for TMP_189

Name: TMP_189 Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token1amount_2(uint128) := TMP_189(uint128)
[i]Type for token1amount

Name: token1amount Function: _getAmountsForLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN token0amount_2,token1amount_2
[i]Type for TUPLE_5

Name: TUPLE_5 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0_1(uint256)= UNPACK TUPLE_5 index: 0 
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount1_1(uint256)= UNPACK TUPLE_5 index: 1 
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_78 = CONVERT amount_1 to int128
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_79(int128) = 0 (c)- TMP_78
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TUPLE_6(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(msg.sender,lower_1,upper_1,TMP_79)
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
[i]Type for TUPLE_6

Name: TUPLE_6 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0_2(uint256) = amount0_1 + amount0fees_1
[i]Type for amount0

Name: amount0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount1_2(uint256) = amount1_1 + amount1fees_1
[i]Type for amount1

Name: amount1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_81 = new IPool.TokenAmount[](2)
[i]Type for TMP_81

Name: TMP_81 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_81(IPool.TokenAmount)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57(IPool.TokenAmount) -> withdrawnAmounts_1[0]
[i]Type for REF_57

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_82 = new TokenAmount(token0_14,amount0_2)
[i]Type for TMP_82

Name: TMP_82 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57 (->withdrawnAmounts_2) := TMP_82(IPool.TokenAmount)
[i]Type for REF_57

Name: REF_57 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58(IPool.TokenAmount) -> withdrawnAmounts_2[1]
[i]Type for REF_58

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83 = new TokenAmount(token1_15,amount1_2)
[i]Type for TMP_83

Name: TMP_83 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_58 (->withdrawnAmounts_3) := TMP_83(IPool.TokenAmount)
[i]Type for REF_58

Name: REF_58 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_84

Name: TMP_84 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_16(uint128) = reserve0_15 - TMP_84
[i]Type for reserve0

Name: reserve0 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
TMP_85 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_17(uint128) = reserve1_16 - TMP_85
[i]Type for reserve1

Name: reserve1 Function: burn
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
INTERNAL_CALL, ConcentratedLiquidityPool._transferBothTokens(address,uint256,uint256,bool)(recipient_1,amount0_2,amount1_2,unwrapBento_1)
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -997
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -997
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_87(int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.remove(mapping(int24 => Ticks.Tick),int24,int24,uint128,int24), arguments:['ticks_13', 'lower_1', 'upper_1', 'amount_1', 'nearestTick_13'] 
[i]Type for TMP_87

Name: TMP_87 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_14(int24) := TMP_87(int24)
[i]Type for nearestTick

Name: nearestTick Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



collect
reserve0_17(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
reserve1_18(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: net balance
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_7(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(msg.sender,lower_1,upper_1,0)
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
[i]Type for TUPLE_7

Name: TUPLE_7 Function: collect
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
INTERNAL_CALL, ConcentratedLiquidityPool._transferBothTokens(address,uint256,uint256,bool)(recipient_1,amount0fees_1,amount1fees_1,unwrapBento_1)
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -996
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -996
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_92 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_92

Name: TMP_92 Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_21(uint128) = reserve0_20 (c)- TMP_92
Error with reserve0 in function collect
Error with: reserve0 in function collect
[i]Type for reserve0

Name: reserve0 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_93

Name: TMP_93 Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_22(uint128) = reserve1_21 (c)- TMP_93
Error with reserve1 in function collect
Error with: reserve1 in function collect
[i]Type for reserve1

Name: reserve1 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_17(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_18(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_7(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._updatePosition(address,int24,int24,int128)(msg.sender,lower_1,upper_1,0)
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
owner_1(address) := ϕ(['msg.sender', 'REF_24'])
[i]Type for owner

Name: owner Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: owner
Value: u
Fields: 
Finance Type: undef
lower_1(int24) := ϕ(['lower_1', 'lower_1', 'REF_25'])
[i]Type for lower

Name: lower Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1(int24) := ϕ(['upper_1', 'upper_1', 'REF_26'])
[i]Type for upper

Name: upper Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(int128) := ϕ(['TMP_79', 'TMP_30'])
[i]Type for amount

Name: amount Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_TICK_LIQUIDITY_4(uint128) := ϕ(['MAX_TICK_LIQUIDITY_0', 'MAX_TICK_LIQUIDITY_3', 'MAX_TICK_LIQUIDITY_5', 'MAX_TICK_LIQUIDITY_1'])
[i]Type for MAX_TICK_LIQUIDITY

Name: MAX_TICK_LIQUIDITY Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_1(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(['positions_0', 'positions_5'])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_144(mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position))) -> positions_1[owner_1]
[i]Type for REF_144

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_145(mapping(int24 => ConcentratedLiquidityPool.Position)) -> REF_144[lower_1]
[i]Type for REF_145

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(ConcentratedLiquidityPool.Position) -> REF_145[upper_1]
[i]Type for REF_146

Name: positions Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1 (-> ['positions'])(ConcentratedLiquidityPool.Position) := REF_146(ConcentratedLiquidityPool.Position)
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, ConcentratedLiquidityPool.rangeFeeGrowth(int24,int24)(lower_1,upper_1)
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN feeGrowthInside0_1,feeGrowthInside1_1
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
growth0current_1(uint256)= UNPACK TUPLE_12 index: 0 
[i]Type for growth0current

Name: growth0current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
growth1current_1(uint256)= UNPACK TUPLE_12 index: 1 
[i]Type for growth1current

Name: growth1current Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_148(uint256) -> position_1 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_148

Name: REF_148 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = growth0current_1 (c)- REF_148
[i]Type for TMP_202

Name: TMP_202 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_149(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_149

Name: REF_149 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_202', 'REF_149', '340282366920938463463374607431768211456'] 
[i]Type for TMP_203

Name: TMP_203 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount0fees_1(uint256) := TMP_203(uint256)
[i]Type for amount0fees

Name: amount0fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
REF_151(uint256) -> position_1 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_151

Name: REF_151 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(uint256) = growth1current_1 (c)- REF_151
[i]Type for TMP_204

Name: TMP_204 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
REF_152(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_152

Name: REF_152 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['TMP_204', 'REF_152', '340282366920938463463374607431768211456'] 
[i]Type for TMP_205

Name: TMP_205 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256) := TMP_205(uint256)
[i]Type for amount1fees

Name: amount1fees Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_206(bool) = amount_1 < 0
[i]Type for TMP_206

Name: TMP_206 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint128) -> position_1 (-> ['positions']).liquidity
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_207(int128) = 0 (c)- amount_1
[i]Type for TMP_207

Name: TMP_207 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_208 = CONVERT TMP_207 to uint128
[i]Type for TMP_208

Name: TMP_208 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
position_2 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_153(-> position_2 (-> ['positions'])) = REF_153 (c)- TMP_208
[i]Type for REF_153

Name: REF_153 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
positions_2(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_2 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_3 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_2 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
TMP_209(bool) = amount_1 > 0
[i]Type for TMP_209

Name: TMP_209 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_154(uint128) -> position_3 (-> ['positions']).liquidity
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210 = CONVERT amount_1 to uint128
[i]Type for TMP_210

Name: TMP_210 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_4 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_3 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_154(-> position_4 (-> ['positions'])) = REF_154 (c)+ TMP_210
[i]Type for REF_154

Name: REF_154 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
positions_3(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_4 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_5 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_4 (-> ['positions'])", "position_1 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_155(uint128) -> position_5 (-> ['positions']).liquidity
[i]Type for REF_155

Name: REF_155 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_155 < MAX_TICK_LIQUIDITY_5
[i]Type for TMP_211

Name: TMP_211 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,MAX_TICK_LIQUIDITY)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_156(uint256) -> position_5 (-> ['positions']).feeGrowthInside0Last
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_6 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_5 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_156 (->position_6 (-> ['positions'])) := growth0current_1(uint256)
[i]Type for REF_156

Name: REF_156 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_4(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157(uint256) -> position_6 (-> ['positions']).feeGrowthInside1Last
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_7 (-> ['positions'])(ConcentratedLiquidityPool.Position) := ϕ(["position_6 (-> ['positions'])"])
[i]Type for position

Name: position Function: _updatePosition
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthInside0Last, liquidity, feeGrowthInside1Last
Finance Type: undef
REF_157 (->position_7 (-> ['positions'])) := growth1current_1(uint256)
[i]Type for REF_157

Name: REF_157 Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
positions_5(mapping(address => mapping(int24 => mapping(int24 => ConcentratedLiquidityPool.Position)))) := ϕ(["position_7 (-> ['positions'])"])
[i]Type for positions

Name: positions Function: _updatePosition
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN amount0fees_1,amount1fees_1
[i]Type for TUPLE_7

Name: TUPLE_7 Function: collect
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount0fees_1(uint256)= UNPACK TUPLE_7 index: 0 
[i]Type for amount0fees

Name: amount0fees Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
amount1fees_1(uint256)= UNPACK TUPLE_7 index: 1 
[i]Type for amount1fees

Name: amount1fees Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
INTERNAL_CALL, ConcentratedLiquidityPool._transferBothTokens(address,uint256,uint256,bool)(recipient_1,amount0fees_1,amount1fees_1,unwrapBento_1)
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -996
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['recipient_1', 'recipient_1'])
[i]Type for to

Name: to Function: _transferBothTokens
Num: 
Den: 
Address: -996
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
shares0_1(uint256) := ϕ(['amount0fees_1', 'amount0_2'])
[i]Type for shares0

Name: shares0 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
shares1_1(uint256) := ϕ(['amount1fees_1', 'amount1_2'])
[i]Type for shares1

Name: shares1 Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_7(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_26(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_28(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_218 = CONVERT this to address
[i]Type for TMP_218

Name: TMP_218 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_14(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:withdraw, arguments:['token0_26', 'TMP_218', 'to_1', '0', 'shares0_1']  
[i]Type for TUPLE_14

Name: TUPLE_14 Function: _transferBothTokens
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_10(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_28(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_31(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT this to address
[i]Type for TMP_219

Name: TMP_219 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_10(IBentoBoxMinimal), function:withdraw, arguments:['token1_31', 'TMP_219', 'to_1', '0', 'shares1_1']  
[i]Type for TUPLE_15

Name: TUPLE_15 Function: _transferBothTokens
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_11(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_10', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_32(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_31', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_220 = CONVERT this to address
[i]Type for TMP_220

Name: TMP_220 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_7(IBentoBoxMinimal), function:transfer, arguments:['token0_26', 'TMP_220', 'to_1', 'shares0_1']  
bento_8(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_7', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token0_27(address) := ϕ(['token0_14', 'token0_20', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_26', 'token0_27'])
[i]Type for token0

Name: token0 Function: _transferBothTokens
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_29(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_28', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_222 = CONVERT this to address
[i]Type for TMP_222

Name: TMP_222 Function: _transferBothTokens
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_8(IBentoBoxMinimal), function:transfer, arguments:['token1_29', 'TMP_222', 'to_1', 'shares1_1']  
bento_9(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_8', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transferBothTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token1_30(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_30', 'token1_15', 'token1_21', 'token1_25', 'token1_32', 'token1_29', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _transferBothTokens
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TMP_92 = CONVERT amount0fees_1 to uint128
[i]Type for TMP_92

Name: TMP_92 Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve0_21(uint128) = reserve0_20 (c)- TMP_92
[i]Type for reserve0

Name: reserve0 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT amount1fees_1 to uint128
[i]Type for TMP_93

Name: TMP_93 Function: collect
Num: -1
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
reserve1_22(uint128) = reserve1_21 (c)- TMP_93
[i]Type for reserve1

Name: reserve1 Function: collect
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef



swap
swapFee_2(uint24) := ϕ(['swapFee_3', 'swapFee_0', 'swapFee_1'])
[i]Type for swapFee

Name: swapFee Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_15(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_16(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_10(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsPerLiquidity_7(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lastObservation_1(uint32) := ϕ(['lastObservation_3', 'lastObservation_2', 'lastObservation_0'])
[i]Type for lastObservation

Name: lastObservation Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_7(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
feeGrowthGlobal1_7(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
barFee_2(uint256) := ϕ(['barFee_4', 'barFee_3', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_6(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_15(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_14(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_8(bool,uint256,address,bool) = SOLIDITY_CALL abi.decode()(data_1(bool,uint256,address,bool))
[i]Type for TUPLE_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool)= UNPACK TUPLE_8 index: 0 
[i]Type for zeroForOne

Name: zeroForOne Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint256)= UNPACK TUPLE_8 index: 1 
[i]Type for inAmount

Name: inAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_8 index: 2 
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_8 index: 3 
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146 = CONVERT price_7 to uint256
[i]Type for TMP_146

Name: TMP_146 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147 = CONVERT liquidity_11 to uint256
[i]Type for TMP_147

Name: TMP_147 Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_148 = new SwapCache(0,0,0,feeGrowthGlobal1_8,TMP_146,TMP_147,inAmount_1,nearestTick_16)
[i]Type for TMP_148

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_1(ConcentratedLiquidityPool.SwapCache) := TMP_148(ConcentratedLiquidityPool.SwapCache)
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_149 = CONVERT price_7 to uint256
[i]Type for TMP_149

Name: TMP_149 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150 = CONVERT liquidity_11 to uint256
[i]Type for TMP_150

Name: TMP_150 Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_133(Ticks.Tick) -> ticks_15[nearestTick_16]
[i]Type for REF_133

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(int24) -> REF_133.nextTick
[i]Type for REF_134

Name: REF_134 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = new SwapCache(0,0,0,feeGrowthGlobal0_8,TMP_149,TMP_150,inAmount_1,REF_134)
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_2(ConcentratedLiquidityPool.SwapCache) := TMP_151(ConcentratedLiquidityPool.SwapCache)
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_3(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_1', 'cache_2'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timestamp_1(uint256) := block.timestamp(uint256)
[i]Type for timestamp

Name: timestamp Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT lastObservation_2 to uint256
[i]Type for TMP_96

Name: TMP_96 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_97(uint256) = timestamp_1 (c)- TMP_96
[i]Type for TMP_97

Name: TMP_97 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
diff_1(uint256) := TMP_97(uint256)
[i]Type for diff

Name: diff Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_98(bool) = diff_1 > 0
[i]Type for TMP_98

Name: TMP_98 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = liquidity_11 > 0
[i]Type for TMP_99

Name: TMP_99 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = TMP_98 && TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT timestamp_1 to uint32
[i]Type for TMP_101

Name: TMP_101 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lastObservation_3(uint32) := TMP_101(uint32)
[i]Type for lastObservation

Name: lastObservation Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = diff_1 << 128
[i]Type for TMP_102

Name: TMP_102 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = TMP_102 (c)/ liquidity_11
[i]Type for TMP_103

Name: TMP_103 Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104 = CONVERT TMP_103 to uint160
[i]Type for TMP_104

Name: TMP_104 Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsPerLiquidity_9(uint160) = secondsPerLiquidity_8 (c)+ TMP_104
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountOut_1(uint256) := ϕ(['amountOut_2', 'amountOut_0'])
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_4(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_0'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_61(uint256) -> cache_4.input
[i]Type for REF_61

Name: REF_61 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(bool) = REF_61 != 0
[i]Type for TMP_105

Name: TMP_105 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(uint256) -> cache_4.currentPrice
[i]Type for REF_129

Name: REF_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134 = CONVERT REF_129 to uint160
[i]Type for TMP_134

Name: TMP_134 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_8(uint160) := TMP_134(uint160)
[i]Type for price

Name: price Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(int24) -> cache_4.nextTickToCross
[i]Type for REF_63

Name: REF_63 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_63'] 
[i]Type for TMP_106

Name: TMP_106 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107 = CONVERT TMP_106 to uint256
[i]Type for TMP_107

Name: TMP_107 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nextTickPrice_1(uint256) := TMP_107(uint256)
[i]Type for nextTickPrice

Name: nextTickPrice Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := 0(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
REF_136(int24) -> cache_4.nextTickToCross
[i]Type for REF_136

Name: REF_136 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(Ticks.Tick) -> ticks_15[REF_136]
[i]Type for REF_137

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(int24) -> REF_137.previousTick
[i]Type for REF_138

Name: REF_138 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newNearestTick_1(int24) := REF_138(int24)
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_135(int24) -> cache_4.nextTickToCross
[i]Type for REF_135

Name: REF_135 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newNearestTick_2(int24) := REF_135(int24)
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_1(bool) := False(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
newNearestTick_3(int24) := ϕ(['newNearestTick_1', 'newNearestTick_2'])
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(bool) = nearestTick_16 != newNearestTick_3
[i]Type for TMP_135

Name: TMP_135 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_65(uint256) -> cache_4.currentLiquidity
[i]Type for REF_65

Name: REF_65 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> cache_4.currentPrice
[i]Type for REF_66

Name: REF_66 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_65', 'nextTickPrice_1', 'REF_66', 'False'] 
[i]Type for TMP_108

Name: TMP_108 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
maxDx_1(uint256) := TMP_108(uint256)
[i]Type for maxDx

Name: maxDx Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_88(uint256) -> cache_4.currentLiquidity
[i]Type for REF_88

Name: REF_88 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> cache_4.currentPrice
[i]Type for REF_89

Name: REF_89 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_88', 'REF_89', 'nextTickPrice_1', 'False'] 
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
maxDy_1(uint256) := TMP_125(uint256)
[i]Type for maxDy

Name: maxDy Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
nearestTick_17(int24) := newNearestTick_3(int24)
[i]Type for nearestTick

Name: nearestTick Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(uint256) -> cache_4.currentLiquidity
[i]Type for REF_130

Name: REF_130 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136 = CONVERT REF_130 to uint128
[i]Type for TMP_136

Name: TMP_136 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_12(uint128) := TMP_136(uint128)
[i]Type for liquidity

Name: liquidity Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_67(uint256) -> cache_4.input
[i]Type for REF_67

Name: REF_67 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(bool) = REF_67 <= maxDx_1
[i]Type for TMP_109

Name: TMP_109 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_68(uint256) -> cache_4.currentLiquidity
[i]Type for REF_68

Name: REF_68 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(uint256) = REF_68 << 96
[i]Type for TMP_110

Name: TMP_110 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityPadded_1(uint256) := TMP_110(uint256)
[i]Type for liquidityPadded

Name: liquidityPadded Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> cache_4.currentLiquidity
[i]Type for REF_83

Name: REF_83 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(uint256) -> cache_4.currentPrice
[i]Type for REF_84

Name: REF_84 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_83', 'nextTickPrice_1', 'REF_84', 'False'] 
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_3(uint256) := TMP_124(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_85(uint256) -> cache_4.currentPrice
[i]Type for REF_85

Name: REF_85 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_7(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_85 (->cache_7) := nextTickPrice_1(uint256)
[i]Type for REF_85

Name: REF_85 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> cache_4.input
[i]Type for REF_90

Name: REF_90 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = REF_90 <= maxDy_1
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_91(uint256) -> cache_4.currentPrice
[i]Type for REF_91

Name: REF_91 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_93(uint256) -> cache_4.input
[i]Type for REF_93

Name: REF_93 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_94(uint256) -> cache_4.currentLiquidity
[i]Type for REF_94

Name: REF_94 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['REF_93', '79228162514264337593543950336', 'REF_94'] 
[i]Type for TMP_127

Name: TMP_127 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_128(uint256) = REF_91 (c)+ TMP_127
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
newPrice_scope_0_1(uint256) := TMP_128(uint256)
[i]Type for newPrice_scope_0

Name: newPrice_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
REF_101(uint256) -> cache_4.currentLiquidity
[i]Type for REF_101

Name: REF_101 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_102(uint256) -> cache_4.currentPrice
[i]Type for REF_102

Name: REF_102 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_101', 'REF_102', 'nextTickPrice_1', 'False'] 
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_6(uint256) := TMP_130(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_70(uint256) -> cache_4.currentPrice
[i]Type for REF_70

Name: REF_70 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_71(uint256) -> cache_4.currentPrice
[i]Type for REF_71

Name: REF_71 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(uint256) -> cache_4.input
[i]Type for REF_72

Name: REF_72 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = REF_71 (c)* REF_72
[i]Type for TMP_111

Name: TMP_111 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = liquidityPadded_1 (c)+ TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDivRoundingUp(uint256,uint256,uint256), arguments:['liquidityPadded_1', 'REF_70', 'TMP_112'] 
[i]Type for TMP_113

Name: TMP_113 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_114 = CONVERT TMP_113 to uint256
[i]Type for TMP_114

Name: TMP_114 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
newPrice_1(uint256) := TMP_114(uint256)
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_137 = CONVERT inAmount_1 to uint128
[i]Type for TMP_137

Name: TMP_137 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._updateReserves(bool,uint128,uint256)(zeroForOne_1,TMP_137,amountOut_1)
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint128) := ϕ(['TMP_137'])
[i]Type for inAmount

Name: inAmount Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_24(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _updateReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _updateReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_25(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_27(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_24)
[i]Type for TMP_190

Name: TMP_190 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_190(uint256)
[i]Type for balance0

Name: balance0 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_26)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_196(uint256)
[i]Type for balance1

Name: balance1 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint128) = reserve0_26 (c)+ inAmount_1
[i]Type for TMP_191

Name: TMP_191 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(uint128) := TMP_191(uint128)
[i]Type for newBalance

Name: newBalance Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_197(uint128) = reserve1_30 (c)+ inAmount_1
[i]Type for TMP_197

Name: TMP_197 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_scope_0_1(uint128) := TMP_197(uint128)
[i]Type for newBalance_scope_0

Name: newBalance_scope_0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT newBalance_1 to uint256
[i]Type for TMP_192

Name: TMP_192 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(bool) = TMP_192 <= balance0_1
[i]Type for TMP_193

Name: TMP_193 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(None) = SOLIDITY_CALL require(bool,string)(TMP_193,TOKEN0_MISSING)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198 = CONVERT newBalance_scope_0_1 to uint256
[i]Type for TMP_198

Name: TMP_198 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = TMP_198 <= balance1_1
[i]Type for TMP_199

Name: TMP_199 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,TOKEN1_MISSING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_27(uint128) := newBalance_1(uint128)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_31(uint128) := newBalance_scope_0_1(uint128)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195 = CONVERT amountOut_1 to uint128
[i]Type for TMP_195

Name: TMP_195 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_29(uint128) = reserve1_28 (c)- TMP_195
Error with reserve1 in function _updateReserves
Error with: reserve1 in function _updateReserves
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT amountOut_1 to uint128
[i]Type for TMP_201

Name: TMP_201 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_29(uint128) = reserve0_28 (c)- TMP_201
Error with reserve0 in function _updateReserves
Error with: reserve0 in function _updateReserves
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_30(uint128) := ϕ(['reserve0_29', 'reserve0_27'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_32(uint128) := ϕ(['reserve1_31', 'reserve1_29'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint128) := ϕ(['TMP_137'])
[i]Type for inAmount

Name: inAmount Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_24(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _updateReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _updateReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_25(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_27(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_24)
[i]Type for TMP_190

Name: TMP_190 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_190(uint256)
[i]Type for balance0

Name: balance0 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_26)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_196(uint256)
[i]Type for balance1

Name: balance1 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint128) = reserve0_26 (c)+ inAmount_1
[i]Type for TMP_191

Name: TMP_191 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(uint128) := TMP_191(uint128)
[i]Type for newBalance

Name: newBalance Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_197(uint128) = reserve1_30 (c)+ inAmount_1
[i]Type for TMP_197

Name: TMP_197 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_scope_0_1(uint128) := TMP_197(uint128)
[i]Type for newBalance_scope_0

Name: newBalance_scope_0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT newBalance_1 to uint256
[i]Type for TMP_192

Name: TMP_192 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(bool) = TMP_192 <= balance0_1
[i]Type for TMP_193

Name: TMP_193 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(None) = SOLIDITY_CALL require(bool,string)(TMP_193,TOKEN0_MISSING)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198 = CONVERT newBalance_scope_0_1 to uint256
[i]Type for TMP_198

Name: TMP_198 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = TMP_198 <= balance1_1
[i]Type for TMP_199

Name: TMP_199 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,TOKEN1_MISSING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_27(uint128) := newBalance_1(uint128)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_31(uint128) := newBalance_scope_0_1(uint128)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195 = CONVERT amountOut_1 to uint128
[i]Type for TMP_195

Name: TMP_195 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_29(uint128) = reserve1_28 (c)- TMP_195
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT amountOut_1 to uint128
[i]Type for TMP_201

Name: TMP_201 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_29(uint128) = reserve0_28 (c)- TMP_201
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_30(uint128) := ϕ(['reserve0_29', 'reserve0_27'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_32(uint128) := ϕ(['reserve1_31', 'reserve1_29'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_17(address) := ϕ(['token0_25'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_18(address) := ϕ(['token1_27'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
cross_2(bool) := True(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_103(uint256) -> cache_4.currentPrice
[i]Type for REF_103

Name: REF_103 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_12(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_103 (->cache_12) := nextTickPrice_1(uint256)
[i]Type for REF_103

Name: REF_103 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(uint256) -> cache_4.currentLiquidity
[i]Type for REF_96

Name: REF_96 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_97(uint256) -> cache_4.currentPrice
[i]Type for REF_97

Name: REF_97 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_96', 'REF_97', 'newPrice_scope_0_1', 'False'] 
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_5(uint256) := TMP_129(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_115(bool) = nextTickPrice_1 <= newPrice_1
[i]Type for TMP_115

Name: TMP_115 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(uint256) -> cache_4.currentPrice
[i]Type for REF_73

Name: REF_73 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116(bool) = newPrice_1 < REF_73
[i]Type for TMP_116

Name: TMP_116 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_117(bool) = TMP_115 && TMP_116
[i]Type for TMP_117

Name: TMP_117 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118 = ! TMP_117 
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_86(uint256) -> cache_7.input
[i]Type for REF_86

Name: REF_86 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_8(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_7'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_86(-> cache_8) = REF_86 (c)- maxDx_1
[i]Type for REF_86

Name: REF_86 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
cross_4(bool) := True(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_98(uint256) -> cache_4.currentPrice
[i]Type for REF_98

Name: REF_98 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_10(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_98 (->cache_10) := newPrice_scope_0_1(uint256)
[i]Type for REF_98

Name: REF_98 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
REF_131(uint256) -> cache_4.feeGrowthGlobal
[i]Type for REF_131

Name: REF_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(uint256) -> cache_4.protocolFee
[i]Type for REF_132

Name: REF_132 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_139 = CONVERT REF_132 to uint128
[i]Type for TMP_139

Name: TMP_139 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._updateFees(bool,uint256,uint128)(zeroForOne_1,REF_131,TMP_139)
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal_1(uint256) := ϕ(['REF_131'])
[i]Type for feeGrowthGlobal

Name: feeGrowthGlobal Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFee_1(uint128) := ϕ(['TMP_139'])
[i]Type for protocolFee

Name: protocolFee Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_4(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_5(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_6(uint128) = token1ProtocolFee_5 (c)+ protocolFee_1
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_5(uint128) = token0ProtocolFee_4 (c)+ protocolFee_1
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal_1(uint256) := ϕ(['REF_131'])
[i]Type for feeGrowthGlobal

Name: feeGrowthGlobal Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFee_1(uint128) := ϕ(['TMP_139'])
[i]Type for protocolFee

Name: protocolFee Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_4(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_5(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_6(uint128) = token1ProtocolFee_5 (c)+ protocolFee_1
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_5(uint128) = token0ProtocolFee_4 (c)+ protocolFee_1
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> cache_12.input
[i]Type for REF_104

Name: REF_104 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_13(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_12'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_104(-> cache_13) = REF_104 (c)- maxDy_1
[i]Type for REF_104

Name: REF_104 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_99(uint256) -> cache_10.input
[i]Type for REF_99

Name: REF_99 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_11(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_10'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
REF_99 (->cache_11) := 0(uint256)
[i]Type for REF_99

Name: REF_99 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_18,amountOut_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
cache_9(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_8', 'cache_6', 'cache_0'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
output_4(uint256) := ϕ(['output_2', 'output_3', 'output_1'])
[i]Type for output

Name: output Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_3(bool) := ϕ(['cross_1', 'cross_2'])
[i]Type for cross

Name: cross Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newPrice_3(uint256) := ϕ(['newPrice_1', 'newPrice_2'])
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(uint256) -> cache_4.currentPrice
[i]Type for REF_75

Name: REF_75 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = liquidityPadded_1 (c)/ REF_75
[i]Type for TMP_119

Name: TMP_119 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_76(uint256) -> cache_4.input
[i]Type for REF_76

Name: REF_76 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = TMP_119 (c)+ REF_76
[i]Type for TMP_120

Name: TMP_120 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121(uint256) = LIBRARY_CALL, dest:UnsafeMath, function:UnsafeMath.divRoundingUp(uint256,uint256), arguments:['liquidityPadded_1', 'TMP_120'] 
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_122 = CONVERT TMP_121 to uint160
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
newPrice_2(uint256) := TMP_122(uint160)
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
cache_14(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_11', 'cache_13'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity
Finance Type: undef
output_7(uint256) := ϕ(['output_5', 'output_6'])
[i]Type for output

Name: output Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_5(bool) := ϕ(['cross_1', 'cross_4'])
[i]Type for cross

Name: cross Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_78(uint256) -> cache_4.currentLiquidity
[i]Type for REF_78

Name: REF_78 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(uint256) -> cache_4.currentPrice
[i]Type for REF_79

Name: REF_79 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_78', 'newPrice_3', 'REF_79', 'False'] 
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_2(uint256) := TMP_123(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_19,amountOut_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
REF_80(uint256) -> cache_4.currentPrice
[i]Type for REF_80

Name: REF_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_5(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, feeGrowthGlobal, protocolFee
Finance Type: undef
REF_80 (->cache_5) := newPrice_3(uint256)
[i]Type for REF_80

Name: REF_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256) -> cache_14.totalFeeAmount
[i]Type for REF_105

Name: REF_105 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> cache_14.protocolFee
[i]Type for REF_106

Name: REF_106 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_107(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_107

Name: REF_107 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_109(uint256) -> cache_14.currentLiquidity
[i]Type for REF_109

Name: REF_109 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_110(uint256) -> cache_14.totalFeeAmount
[i]Type for REF_110

Name: REF_110 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_111(uint256) -> cache_14.protocolFee
[i]Type for REF_111

Name: REF_111 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_112

Name: REF_112 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_9(uint256,uint256,uint256,uint256) = LIBRARY_CALL, dest:SwapLib, function:SwapLib.handleFees(uint256,uint24,uint256,uint256,uint256,uint256,uint256,uint256), arguments:['output_7', 'swapFee_3', 'barFee_3', 'REF_109', 'REF_110', 'amountOut_1', 'REF_111', 'REF_112'] 
[i]Type for TUPLE_9

Name: TUPLE_9 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256)= UNPACK TUPLE_9 index: 0 
[i]Type for REF_105

Name: REF_105 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256)= UNPACK TUPLE_9 index: 1 
[i]Type for amountOut

Name: amountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256)= UNPACK TUPLE_9 index: 2 
[i]Type for REF_106

Name: REF_106 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_107(uint256)= UNPACK TUPLE_9 index: 3 
[i]Type for REF_107

Name: REF_107 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> cache_5.input
[i]Type for REF_81

Name: REF_81 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_6(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_5'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, feeGrowthGlobal, protocolFee
Finance Type: undef
REF_81 (->cache_6) := 0(uint256)
[i]Type for REF_81

Name: REF_81 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
REF_113(uint256) -> cache_14.currentLiquidity
[i]Type for REF_113

Name: REF_113 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(int24) -> cache_14.nextTickToCross
[i]Type for REF_114

Name: REF_114 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_116(int24) -> cache_14.nextTickToCross
[i]Type for REF_116

Name: REF_116 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_117(uint256) -> cache_14.currentLiquidity
[i]Type for REF_117

Name: REF_117 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_118

Name: REF_118 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_10(uint256,int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.cross(mapping(int24 => Ticks.Tick),int24,uint160,uint256,uint256,bool), arguments:['ticks_15', 'REF_116', 'secondsPerLiquidity_9', 'REF_117', 'REF_118', 'zeroForOne_1'] 
[i]Type for TUPLE_10

Name: TUPLE_10 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113(uint256)= UNPACK TUPLE_10 index: 0 
[i]Type for REF_113

Name: REF_113 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(int24)= UNPACK TUPLE_10 index: 1 
[i]Type for REF_114

Name: REF_114 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_119(uint256) -> cache_14.currentLiquidity
[i]Type for REF_119

Name: REF_119 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = REF_119 == 0
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(uint256) -> cache_14.currentPrice
[i]Type for REF_120

Name: REF_120 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_122(int24) -> cache_14.nextTickToCross
[i]Type for REF_122

Name: REF_122 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_122'] 
[i]Type for TMP_132

Name: TMP_132 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133 = CONVERT TMP_132 to uint256
[i]Type for TMP_133

Name: TMP_133 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_15(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_120 (->cache_15) := TMP_133(uint256)
[i]Type for REF_120

Name: REF_120 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_17(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_14'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_123(uint256) -> cache_15.currentLiquidity
[i]Type for REF_123

Name: REF_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124(int24) -> cache_15.nextTickToCross
[i]Type for REF_124

Name: REF_124 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_126(int24) -> cache_15.nextTickToCross
[i]Type for REF_126

Name: REF_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(uint256) -> cache_15.currentLiquidity
[i]Type for REF_127

Name: REF_127 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(uint256) -> cache_15.feeGrowthGlobal
[i]Type for REF_128

Name: REF_128 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_11(uint256,int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.cross(mapping(int24 => Ticks.Tick),int24,uint160,uint256,uint256,bool), arguments:['ticks_15', 'REF_126', 'secondsPerLiquidity_9', 'REF_127', 'REF_128', 'zeroForOne_1'] 
[i]Type for TUPLE_11

Name: TUPLE_11 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_123(uint256)= UNPACK TUPLE_11 index: 0 
[i]Type for REF_123

Name: REF_123 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124(int24)= UNPACK TUPLE_11 index: 1 
[i]Type for REF_124

Name: REF_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_16(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_15'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
swapFee_2(uint24) := ϕ(['swapFee_3', 'swapFee_0', 'swapFee_1'])
[i]Type for swapFee

Name: swapFee Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_15(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_16(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
liquidity_10(uint128) := ϕ(['liquidity_0', 'liquidity_6', 'liquidity_11', 'liquidity_8', 'liquidity_12', 'liquidity_9', 'liquidity_4', 'liquidity_3', 'liquidity_5'])
[i]Type for liquidity

Name: liquidity Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
secondsPerLiquidity_7(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lastObservation_1(uint32) := ϕ(['lastObservation_3', 'lastObservation_2', 'lastObservation_0'])
[i]Type for lastObservation

Name: lastObservation Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_7(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_7(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
barFee_2(uint256) := ϕ(['barFee_4', 'barFee_3', 'barFee_0', 'barFee_1'])
[i]Type for barFee

Name: barFee Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_6(uint160) := ϕ(['price_3', 'price_1', 'price_5', 'price_0', 'price_8'])
[i]Type for price

Name: price Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_15(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_14(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TUPLE_8(bool,uint256,address,bool) = SOLIDITY_CALL abi.decode()(data_1(bool,uint256,address,bool))
[i]Type for TUPLE_8

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool)= UNPACK TUPLE_8 index: 0 
[i]Type for zeroForOne

Name: zeroForOne Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint256)= UNPACK TUPLE_8 index: 1 
[i]Type for inAmount

Name: inAmount Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address)= UNPACK TUPLE_8 index: 2 
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool)= UNPACK TUPLE_8 index: 3 
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146 = CONVERT price_7 to uint256
[i]Type for TMP_146

Name: TMP_146 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147 = CONVERT liquidity_11 to uint256
[i]Type for TMP_147

Name: TMP_147 Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_148 = new SwapCache(0,0,0,feeGrowthGlobal1_8,TMP_146,TMP_147,inAmount_1,nearestTick_16)
[i]Type for TMP_148

Name: TMP_148 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_1(ConcentratedLiquidityPool.SwapCache) := TMP_148(ConcentratedLiquidityPool.SwapCache)
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_149 = CONVERT price_7 to uint256
[i]Type for TMP_149

Name: TMP_149 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150 = CONVERT liquidity_11 to uint256
[i]Type for TMP_150

Name: TMP_150 Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_133(Ticks.Tick) -> ticks_15[nearestTick_16]
[i]Type for REF_133

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(int24) -> REF_133.nextTick
[i]Type for REF_134

Name: REF_134 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = new SwapCache(0,0,0,feeGrowthGlobal0_8,TMP_149,TMP_150,inAmount_1,REF_134)
[i]Type for TMP_151

Name: TMP_151 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_2(ConcentratedLiquidityPool.SwapCache) := TMP_151(ConcentratedLiquidityPool.SwapCache)
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_3(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_1', 'cache_2'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
timestamp_1(uint256) := block.timestamp(uint256)
[i]Type for timestamp

Name: timestamp Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT lastObservation_2 to uint256
[i]Type for TMP_96

Name: TMP_96 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_97(uint256) = timestamp_1 (c)- TMP_96
[i]Type for TMP_97

Name: TMP_97 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
diff_1(uint256) := TMP_97(uint256)
[i]Type for diff

Name: diff Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_98(bool) = diff_1 > 0
[i]Type for TMP_98

Name: TMP_98 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = liquidity_11 > 0
[i]Type for TMP_99

Name: TMP_99 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(bool) = TMP_98 && TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT timestamp_1 to uint32
[i]Type for TMP_101

Name: TMP_101 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lastObservation_3(uint32) := TMP_101(uint32)
[i]Type for lastObservation

Name: lastObservation Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(uint256) = diff_1 << 128
[i]Type for TMP_102

Name: TMP_102 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = TMP_102 (c)/ liquidity_11
[i]Type for TMP_103

Name: TMP_103 Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104 = CONVERT TMP_103 to uint160
[i]Type for TMP_104

Name: TMP_104 Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsPerLiquidity_9(uint160) = secondsPerLiquidity_8 (c)+ TMP_104
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: swap
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amountOut_1(uint256) := ϕ(['amountOut_2', 'amountOut_0'])
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_4(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_0'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_61(uint256) -> cache_4.input
[i]Type for REF_61

Name: REF_61 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(bool) = REF_61 != 0
[i]Type for TMP_105

Name: TMP_105 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_129(uint256) -> cache_4.currentPrice
[i]Type for REF_129

Name: REF_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134 = CONVERT REF_129 to uint160
[i]Type for TMP_134

Name: TMP_134 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_8(uint160) := TMP_134(uint160)
[i]Type for price

Name: price Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(int24) -> cache_4.nextTickToCross
[i]Type for REF_63

Name: REF_63 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_63'] 
[i]Type for TMP_106

Name: TMP_106 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107 = CONVERT TMP_106 to uint256
[i]Type for TMP_107

Name: TMP_107 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nextTickPrice_1(uint256) := TMP_107(uint256)
[i]Type for nextTickPrice

Name: nextTickPrice Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
output_1(uint256) := 0(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
REF_136(int24) -> cache_4.nextTickToCross
[i]Type for REF_136

Name: REF_136 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(Ticks.Tick) -> ticks_15[REF_136]
[i]Type for REF_137

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_138(int24) -> REF_137.previousTick
[i]Type for REF_138

Name: REF_138 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newNearestTick_1(int24) := REF_138(int24)
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_135(int24) -> cache_4.nextTickToCross
[i]Type for REF_135

Name: REF_135 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newNearestTick_2(int24) := REF_135(int24)
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_1(bool) := False(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
newNearestTick_3(int24) := ϕ(['newNearestTick_1', 'newNearestTick_2'])
[i]Type for newNearestTick

Name: newNearestTick Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(bool) = nearestTick_16 != newNearestTick_3
[i]Type for TMP_135

Name: TMP_135 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_65(uint256) -> cache_4.currentLiquidity
[i]Type for REF_65

Name: REF_65 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_66(uint256) -> cache_4.currentPrice
[i]Type for REF_66

Name: REF_66 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_65', 'nextTickPrice_1', 'REF_66', 'False'] 
[i]Type for TMP_108

Name: TMP_108 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
maxDx_1(uint256) := TMP_108(uint256)
[i]Type for maxDx

Name: maxDx Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_88(uint256) -> cache_4.currentLiquidity
[i]Type for REF_88

Name: REF_88 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(uint256) -> cache_4.currentPrice
[i]Type for REF_89

Name: REF_89 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_88', 'REF_89', 'nextTickPrice_1', 'False'] 
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
maxDy_1(uint256) := TMP_125(uint256)
[i]Type for maxDy

Name: maxDy Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
nearestTick_17(int24) := newNearestTick_3(int24)
[i]Type for nearestTick

Name: nearestTick Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(uint256) -> cache_4.currentLiquidity
[i]Type for REF_130

Name: REF_130 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136 = CONVERT REF_130 to uint128
[i]Type for TMP_136

Name: TMP_136 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidity_12(uint128) := TMP_136(uint128)
[i]Type for liquidity

Name: liquidity Function: swap
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_67(uint256) -> cache_4.input
[i]Type for REF_67

Name: REF_67 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(bool) = REF_67 <= maxDx_1
[i]Type for TMP_109

Name: TMP_109 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_68(uint256) -> cache_4.currentLiquidity
[i]Type for REF_68

Name: REF_68 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_110(uint256) = REF_68 << 96
[i]Type for TMP_110

Name: TMP_110 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityPadded_1(uint256) := TMP_110(uint256)
[i]Type for liquidityPadded

Name: liquidityPadded Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> cache_4.currentLiquidity
[i]Type for REF_83

Name: REF_83 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(uint256) -> cache_4.currentPrice
[i]Type for REF_84

Name: REF_84 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_83', 'nextTickPrice_1', 'REF_84', 'False'] 
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_3(uint256) := TMP_124(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_85(uint256) -> cache_4.currentPrice
[i]Type for REF_85

Name: REF_85 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_7(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_85 (->cache_7) := nextTickPrice_1(uint256)
[i]Type for REF_85

Name: REF_85 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> cache_4.input
[i]Type for REF_90

Name: REF_90 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = REF_90 <= maxDy_1
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_91(uint256) -> cache_4.currentPrice
[i]Type for REF_91

Name: REF_91 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_93(uint256) -> cache_4.input
[i]Type for REF_93

Name: REF_93 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_94(uint256) -> cache_4.currentLiquidity
[i]Type for REF_94

Name: REF_94 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDiv(uint256,uint256,uint256), arguments:['REF_93', '79228162514264337593543950336', 'REF_94'] 
[i]Type for TMP_127

Name: TMP_127 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: transaction fee
TMP_128(uint256) = REF_91 (c)+ TMP_127
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
newPrice_scope_0_1(uint256) := TMP_128(uint256)
[i]Type for newPrice_scope_0

Name: newPrice_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
REF_101(uint256) -> cache_4.currentLiquidity
[i]Type for REF_101

Name: REF_101 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_102(uint256) -> cache_4.currentPrice
[i]Type for REF_102

Name: REF_102 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_101', 'REF_102', 'nextTickPrice_1', 'False'] 
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_6(uint256) := TMP_130(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_70(uint256) -> cache_4.currentPrice
[i]Type for REF_70

Name: REF_70 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_71(uint256) -> cache_4.currentPrice
[i]Type for REF_71

Name: REF_71 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_72(uint256) -> cache_4.input
[i]Type for REF_72

Name: REF_72 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = REF_71 (c)* REF_72
[i]Type for TMP_111

Name: TMP_111 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = liquidityPadded_1 (c)+ TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = LIBRARY_CALL, dest:FullMath, function:FullMath.mulDivRoundingUp(uint256,uint256,uint256), arguments:['liquidityPadded_1', 'REF_70', 'TMP_112'] 
[i]Type for TMP_113

Name: TMP_113 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_114 = CONVERT TMP_113 to uint256
[i]Type for TMP_114

Name: TMP_114 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
newPrice_1(uint256) := TMP_114(uint256)
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_137 = CONVERT inAmount_1 to uint128
[i]Type for TMP_137

Name: TMP_137 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._updateReserves(bool,uint128,uint256)(zeroForOne_1,TMP_137,amountOut_1)
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint128) := ϕ(['TMP_137'])
[i]Type for inAmount

Name: inAmount Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_24(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _updateReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _updateReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_25(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_27(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_24)
[i]Type for TMP_190

Name: TMP_190 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_190(uint256)
[i]Type for balance0

Name: balance0 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_26)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_196(uint256)
[i]Type for balance1

Name: balance1 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint128) = reserve0_26 (c)+ inAmount_1
[i]Type for TMP_191

Name: TMP_191 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(uint128) := TMP_191(uint128)
[i]Type for newBalance

Name: newBalance Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_197(uint128) = reserve1_30 (c)+ inAmount_1
[i]Type for TMP_197

Name: TMP_197 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_scope_0_1(uint128) := TMP_197(uint128)
[i]Type for newBalance_scope_0

Name: newBalance_scope_0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT newBalance_1 to uint256
[i]Type for TMP_192

Name: TMP_192 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(bool) = TMP_192 <= balance0_1
[i]Type for TMP_193

Name: TMP_193 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(None) = SOLIDITY_CALL require(bool,string)(TMP_193,TOKEN0_MISSING)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198 = CONVERT newBalance_scope_0_1 to uint256
[i]Type for TMP_198

Name: TMP_198 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = TMP_198 <= balance1_1
[i]Type for TMP_199

Name: TMP_199 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,TOKEN1_MISSING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_27(uint128) := newBalance_1(uint128)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_31(uint128) := newBalance_scope_0_1(uint128)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195 = CONVERT amountOut_1 to uint128
[i]Type for TMP_195

Name: TMP_195 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_29(uint128) = reserve1_28 (c)- TMP_195
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT amountOut_1 to uint128
[i]Type for TMP_201

Name: TMP_201 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_29(uint128) = reserve0_28 (c)- TMP_201
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_30(uint128) := ϕ(['reserve0_29', 'reserve0_27'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_32(uint128) := ϕ(['reserve1_31', 'reserve1_29'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
inAmount_1(uint128) := ϕ(['TMP_137'])
[i]Type for inAmount

Name: inAmount Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_1(uint256) := ϕ(['amountOut_1'])
[i]Type for amountOut

Name: amountOut Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_24(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: _updateReserves
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_26(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: _updateReserves
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
reserve0_25(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_27(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token0_24)
[i]Type for TMP_190

Name: TMP_190 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1(uint256) := TMP_190(uint256)
[i]Type for balance0

Name: balance0 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, ConcentratedLiquidityPool._balance(address)(token1_26)
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_10', 'token1_26', 'token0_24', 'token0_9'])
[i]Type for token

Name: token Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
bento_2(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_213 = CONVERT this to address
[i]Type for TMP_213

Name: TMP_213 Function: _balance
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TMP_214(uint256) = HIGH_LEVEL_CALL, dest:bento_2(IBentoBoxMinimal), function:balanceOf, arguments:['token_1', 'TMP_213']  
[i]Type for TMP_214

Name: TMP_214 Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_3(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_2', 'bento_9'])
[i]Type for bento

Name: bento Function: _balance
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
balance_1(uint256) := TMP_214(uint256)
[i]Type for balance

Name: balance Function: _balance
Num: 2
Den: -1
Address: u
Norm: 'u'
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance1_1(uint256) := TMP_196(uint256)
[i]Type for balance1

Name: balance1 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(uint128) = reserve0_26 (c)+ inAmount_1
[i]Type for TMP_191

Name: TMP_191 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_1(uint128) := TMP_191(uint128)
[i]Type for newBalance

Name: newBalance Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_197(uint128) = reserve1_30 (c)+ inAmount_1
[i]Type for TMP_197

Name: TMP_197 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
newBalance_scope_0_1(uint128) := TMP_197(uint128)
[i]Type for newBalance_scope_0

Name: newBalance_scope_0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_192 = CONVERT newBalance_1 to uint256
[i]Type for TMP_192

Name: TMP_192 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_193(bool) = TMP_192 <= balance0_1
[i]Type for TMP_193

Name: TMP_193 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(None) = SOLIDITY_CALL require(bool,string)(TMP_193,TOKEN0_MISSING)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198 = CONVERT newBalance_scope_0_1 to uint256
[i]Type for TMP_198

Name: TMP_198 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = TMP_198 <= balance1_1
[i]Type for TMP_199

Name: TMP_199 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,TOKEN1_MISSING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_27(uint128) := newBalance_1(uint128)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_31(uint128) := newBalance_scope_0_1(uint128)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195 = CONVERT amountOut_1 to uint128
[i]Type for TMP_195

Name: TMP_195 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_29(uint128) = reserve1_28 (c)- TMP_195
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT amountOut_1 to uint128
[i]Type for TMP_201

Name: TMP_201 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_29(uint128) = reserve0_28 (c)- TMP_201
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_30(uint128) := ϕ(['reserve0_29', 'reserve0_27'])
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_32(uint128) := ϕ(['reserve1_31', 'reserve1_29'])
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_17(address) := ϕ(['token0_25'])
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_18(address) := ϕ(['token1_27'])
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
cross_2(bool) := True(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_103(uint256) -> cache_4.currentPrice
[i]Type for REF_103

Name: REF_103 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_12(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_103 (->cache_12) := nextTickPrice_1(uint256)
[i]Type for REF_103

Name: REF_103 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(uint256) -> cache_4.currentLiquidity
[i]Type for REF_96

Name: REF_96 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_97(uint256) -> cache_4.currentPrice
[i]Type for REF_97

Name: REF_97 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDx(uint256,uint256,uint256,bool), arguments:['REF_96', 'REF_97', 'newPrice_scope_0_1', 'False'] 
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_5(uint256) := TMP_129(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_115(bool) = nextTickPrice_1 <= newPrice_1
[i]Type for TMP_115

Name: TMP_115 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(uint256) -> cache_4.currentPrice
[i]Type for REF_73

Name: REF_73 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116(bool) = newPrice_1 < REF_73
[i]Type for TMP_116

Name: TMP_116 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_117(bool) = TMP_115 && TMP_116
[i]Type for TMP_117

Name: TMP_117 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118 = ! TMP_117 
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_86(uint256) -> cache_7.input
[i]Type for REF_86

Name: REF_86 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_8(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_7'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_86(-> cache_8) = REF_86 (c)- maxDx_1
[i]Type for REF_86

Name: REF_86 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
cross_4(bool) := True(bool)
[i]Type for cross

Name: cross Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
REF_98(uint256) -> cache_4.currentPrice
[i]Type for REF_98

Name: REF_98 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_10(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_98 (->cache_10) := newPrice_scope_0_1(uint256)
[i]Type for REF_98

Name: REF_98 Function: swap
Num: 
Den: 
Address: u
Norm: 'u'
LF: None
Value: u
Fields: 
Finance Type: transaction fee
REF_131(uint256) -> cache_4.feeGrowthGlobal
[i]Type for REF_131

Name: REF_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(uint256) -> cache_4.protocolFee
[i]Type for REF_132

Name: REF_132 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_139 = CONVERT REF_132 to uint128
[i]Type for TMP_139

Name: TMP_139 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._updateFees(bool,uint256,uint128)(zeroForOne_1,REF_131,TMP_139)
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal_1(uint256) := ϕ(['REF_131'])
[i]Type for feeGrowthGlobal

Name: feeGrowthGlobal Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFee_1(uint128) := ϕ(['TMP_139'])
[i]Type for protocolFee

Name: protocolFee Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_4(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_5(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_6(uint128) = token1ProtocolFee_5 (c)+ protocolFee_1
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_5(uint128) = token0ProtocolFee_4 (c)+ protocolFee_1
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
zeroForOne_1(bool) := ϕ(['zeroForOne_1'])
[i]Type for zeroForOne

Name: zeroForOne Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal_1(uint256) := ϕ(['REF_131'])
[i]Type for feeGrowthGlobal

Name: feeGrowthGlobal Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFee_1(uint128) := ϕ(['TMP_139'])
[i]Type for protocolFee

Name: protocolFee Function: _updateFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_4(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_5(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_6(uint128) = token1ProtocolFee_5 (c)+ protocolFee_1
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_9(uint256) := feeGrowthGlobal_1(uint256)
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_5(uint128) = token0ProtocolFee_4 (c)+ protocolFee_1
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: _updateFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> cache_12.input
[i]Type for REF_104

Name: REF_104 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_13(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_12'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_104(-> cache_13) = REF_104 (c)- maxDy_1
[i]Type for REF_104

Name: REF_104 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_99(uint256) -> cache_10.input
[i]Type for REF_99

Name: REF_99 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
cache_11(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_10'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_99 (->cache_11) := 0(uint256)
[i]Type for REF_99

Name: REF_99 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_18,amountOut_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
cache_9(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_8', 'cache_6', 'cache_0'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
output_4(uint256) := ϕ(['output_2', 'output_3', 'output_1'])
[i]Type for output

Name: output Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_3(bool) := ϕ(['cross_1', 'cross_2'])
[i]Type for cross

Name: cross Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newPrice_3(uint256) := ϕ(['newPrice_1', 'newPrice_2'])
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(uint256) -> cache_4.currentPrice
[i]Type for REF_75

Name: REF_75 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = liquidityPadded_1 (c)/ REF_75
[i]Type for TMP_119

Name: TMP_119 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_76(uint256) -> cache_4.input
[i]Type for REF_76

Name: REF_76 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = TMP_119 (c)+ REF_76
[i]Type for TMP_120

Name: TMP_120 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121(uint256) = LIBRARY_CALL, dest:UnsafeMath, function:UnsafeMath.divRoundingUp(uint256,uint256), arguments:['liquidityPadded_1', 'TMP_120'] 
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
TMP_122 = CONVERT TMP_121 to uint160
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
newPrice_2(uint256) := TMP_122(uint160)
[i]Type for newPrice

Name: newPrice Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
cache_14(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_11', 'cache_13'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
output_7(uint256) := ϕ(['output_5', 'output_6'])
[i]Type for output

Name: output Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cross_5(bool) := ϕ(['cross_1', 'cross_4'])
[i]Type for cross

Name: cross Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_78(uint256) -> cache_4.currentLiquidity
[i]Type for REF_78

Name: REF_78 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(uint256) -> cache_4.currentPrice
[i]Type for REF_79

Name: REF_79 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = LIBRARY_CALL, dest:DyDxMath, function:DyDxMath.getDy(uint256,uint256,uint256,bool), arguments:['REF_78', 'newPrice_3', 'REF_79', 'False'] 
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
output_2(uint256) := TMP_123(uint256)
[i]Type for output

Name: output Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_19,amountOut_1,recipient_1,unwrapBento_1)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -995
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
REF_80(uint256) -> cache_4.currentPrice
[i]Type for REF_80

Name: REF_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_5(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_4'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_80 (->cache_5) := newPrice_3(uint256)
[i]Type for REF_80

Name: REF_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256) -> cache_14.totalFeeAmount
[i]Type for REF_105

Name: REF_105 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> cache_14.protocolFee
[i]Type for REF_106

Name: REF_106 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_107(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_107

Name: REF_107 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_109(uint256) -> cache_14.currentLiquidity
[i]Type for REF_109

Name: REF_109 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_110(uint256) -> cache_14.totalFeeAmount
[i]Type for REF_110

Name: REF_110 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_111(uint256) -> cache_14.protocolFee
[i]Type for REF_111

Name: REF_111 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_112

Name: REF_112 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_9(uint256,uint256,uint256,uint256) = LIBRARY_CALL, dest:SwapLib, function:SwapLib.handleFees(uint256,uint24,uint256,uint256,uint256,uint256,uint256,uint256), arguments:['output_7', 'swapFee_3', 'barFee_3', 'REF_109', 'REF_110', 'amountOut_1', 'REF_111', 'REF_112'] 
[i]Type for TUPLE_9

Name: TUPLE_9 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256)= UNPACK TUPLE_9 index: 0 
[i]Type for REF_105

Name: REF_105 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amountOut_2(uint256)= UNPACK TUPLE_9 index: 1 
[i]Type for amountOut

Name: amountOut Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256)= UNPACK TUPLE_9 index: 2 
[i]Type for REF_106

Name: REF_106 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_107(uint256)= UNPACK TUPLE_9 index: 3 
[i]Type for REF_107

Name: REF_107 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> cache_5.input
[i]Type for REF_81

Name: REF_81 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
cache_6(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_5'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_81 (->cache_6) := 0(uint256)
[i]Type for REF_81

Name: REF_81 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
REF_113(uint256) -> cache_14.currentLiquidity
[i]Type for REF_113

Name: REF_113 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(int24) -> cache_14.nextTickToCross
[i]Type for REF_114

Name: REF_114 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_116(int24) -> cache_14.nextTickToCross
[i]Type for REF_116

Name: REF_116 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_117(uint256) -> cache_14.currentLiquidity
[i]Type for REF_117

Name: REF_117 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118(uint256) -> cache_14.feeGrowthGlobal
[i]Type for REF_118

Name: REF_118 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_10(uint256,int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.cross(mapping(int24 => Ticks.Tick),int24,uint160,uint256,uint256,bool), arguments:['ticks_15', 'REF_116', 'secondsPerLiquidity_9', 'REF_117', 'REF_118', 'zeroForOne_1'] 
[i]Type for TUPLE_10

Name: TUPLE_10 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113(uint256)= UNPACK TUPLE_10 index: 0 
[i]Type for REF_113

Name: REF_113 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(int24)= UNPACK TUPLE_10 index: 1 
[i]Type for REF_114

Name: REF_114 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_119(uint256) -> cache_14.currentLiquidity
[i]Type for REF_119

Name: REF_119 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = REF_119 == 0
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_120(uint256) -> cache_14.currentPrice
[i]Type for REF_120

Name: REF_120 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_122(int24) -> cache_14.nextTickToCross
[i]Type for REF_122

Name: REF_122 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132(uint160) = LIBRARY_CALL, dest:TickMath, function:TickMath.getSqrtRatioAtTick(int24), arguments:['REF_122'] 
[i]Type for TMP_132

Name: TMP_132 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133 = CONVERT TMP_132 to uint256
[i]Type for TMP_133

Name: TMP_133 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_15(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_120 (->cache_15) := TMP_133(uint256)
[i]Type for REF_120

Name: REF_120 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_17(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_14'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef
REF_123(uint256) -> cache_15.currentLiquidity
[i]Type for REF_123

Name: REF_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124(int24) -> cache_15.nextTickToCross
[i]Type for REF_124

Name: REF_124 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_126(int24) -> cache_15.nextTickToCross
[i]Type for REF_126

Name: REF_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_127(uint256) -> cache_15.currentLiquidity
[i]Type for REF_127

Name: REF_127 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(uint256) -> cache_15.feeGrowthGlobal
[i]Type for REF_128

Name: REF_128 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_11(uint256,int24) = LIBRARY_CALL, dest:Ticks, function:Ticks.cross(mapping(int24 => Ticks.Tick),int24,uint160,uint256,uint256,bool), arguments:['ticks_15', 'REF_126', 'secondsPerLiquidity_9', 'REF_127', 'REF_128', 'zeroForOne_1'] 
[i]Type for TUPLE_11

Name: TUPLE_11 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_123(uint256)= UNPACK TUPLE_11 index: 0 
[i]Type for REF_123

Name: REF_123 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_124(int24)= UNPACK TUPLE_11 index: 1 
[i]Type for REF_124

Name: REF_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
cache_16(ConcentratedLiquidityPool.SwapCache) := ϕ(['cache_14', 'cache_15'])
[i]Type for cache

Name: cache Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: input, currentPrice, nextTickToCross, currentLiquidity, totalFeeAmount, protocolFee, feeGrowthGlobal
Finance Type: undef



collectProtocolFee
barFeeTo_2(address) := ϕ(['barFeeTo_5', 'barFeeTo_4', 'barFeeTo_3', 'barFeeTo_0', 'barFeeTo_1'])
[i]Type for barFeeTo

Name: barFeeTo Function: collectProtocolFee
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
token0_21(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: collectProtocolFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_22(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: collectProtocolFee
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_1(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1ProtocolFee_1(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve0_22(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
reserve1_23(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TMP_155(bool) = token0ProtocolFee_2 > 1
[i]Type for TMP_155

Name: TMP_155 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(bool) = token1ProtocolFee_3 > 1
[i]Type for TMP_158

Name: TMP_158 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint128) = token0ProtocolFee_2 (c)- 1
[i]Type for TMP_156

Name: TMP_156 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
amount0_1(uint128) := TMP_156(uint128)
[i]Type for amount0

Name: amount0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_159(uint128) = token1ProtocolFee_3 (c)- 1
[i]Type for TMP_159

Name: TMP_159 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
amount1_1(uint128) := TMP_159(uint128)
[i]Type for amount1

Name: amount1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
token0ProtocolFee_3(uint128) := 1(uint256)
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
token1ProtocolFee_4(uint128) := 1(uint256)
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve0_24(uint128) = reserve0_23 (c)- amount0_1
[i]Type for reserve0

Name: reserve0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve1_26(uint128) = reserve1_25 (c)- amount1_1
[i]Type for reserve1

Name: reserve1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_22,amount0_1,barFeeTo_3,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_24,amount1_1,barFeeTo_4,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
barFeeTo_2(address) := ϕ(['barFeeTo_5', 'barFeeTo_4', 'barFeeTo_3', 'barFeeTo_0', 'barFeeTo_1'])
[i]Type for barFeeTo

Name: barFeeTo Function: collectProtocolFee
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
token0_21(address) := ϕ(['token0_14', 'token0_20', 'token0_0', 'token0_1', 'token0_25', 'token0_10', 'token0_22', 'token0_19', 'token0_9', 'token0_23', 'token0_28', 'token0_27'])
[i]Type for token0

Name: token0 Function: collectProtocolFee
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
token1_22(address) := ϕ(['token1_10', 'token1_23', 'token1_20', 'token1_9', 'token1_24', 'token1_27', 'token1_0', 'token1_15', 'token1_21', 'token1_25', 'token1_30', 'token1_32', 'token1_11', 'token1_1'])
[i]Type for token1

Name: token1 Function: collectProtocolFee
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
token0ProtocolFee_1(uint128) := ϕ(['token0ProtocolFee_5', 'token0ProtocolFee_0', 'token0ProtocolFee_3', 'token0ProtocolFee_2'])
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
token1ProtocolFee_1(uint128) := ϕ(['token1ProtocolFee_2', 'token1ProtocolFee_0', 'token1ProtocolFee_4', 'token1ProtocolFee_3', 'token1ProtocolFee_6'])
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve0_22(uint128) := ϕ(['reserve0_30', 'reserve0_24', 'reserve0_21', 'reserve0_11', 'reserve0_16', 'reserve0_9', 'reserve0_23', 'reserve0_0'])
[i]Type for reserve0

Name: reserve0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve1_23(uint128) := ϕ(['reserve1_10', 'reserve1_0', 'reserve1_9', 'reserve1_26', 'reserve1_25', 'reserve1_24', 'reserve1_12', 'reserve1_22', 'reserve1_32', 'reserve1_17'])
[i]Type for reserve1

Name: reserve1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MODIFIER_CALL, ConcentratedLiquidityPool.lock()()
TMP_155(bool) = token0ProtocolFee_2 > 1
[i]Type for TMP_155

Name: TMP_155 Function: collectProtocolFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(bool) = token1ProtocolFee_3 > 1
[i]Type for TMP_158

Name: TMP_158 Function: collectProtocolFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156(uint128) = token0ProtocolFee_2 (c)- 1
[i]Type for TMP_156

Name: TMP_156 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
amount0_1(uint128) := TMP_156(uint128)
[i]Type for amount0

Name: amount0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_159(uint128) = token1ProtocolFee_3 (c)- 1
[i]Type for TMP_159

Name: TMP_159 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
amount1_1(uint128) := TMP_159(uint128)
[i]Type for amount1

Name: amount1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
token0ProtocolFee_3(uint128) := 1(uint256)
[i]Type for token0ProtocolFee

Name: token0ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
token1ProtocolFee_4(uint128) := 1(uint256)
[i]Type for token1ProtocolFee

Name: token1ProtocolFee Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve0_24(uint128) = reserve0_23 (c)- amount0_1
[i]Type for reserve0

Name: reserve0 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
reserve1_26(uint128) = reserve1_25 (c)- amount1_1
[i]Type for reserve1

Name: reserve1 Function: collectProtocolFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token0_22,amount0_1,barFeeTo_3,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 1
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ConcentratedLiquidityPool._transfer(address,uint256,address,bool)(token1_24,amount1_1,barFeeTo_4,False)
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_18', 'token1_24', 'token1_5', 'token1_19', 'token0_22', 'token0_4'])
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
shares_1(uint256) := ϕ(['amount0_1', 'amount1_1', 'amount1fees_1', 'amountOut_1', 'amount0fees_1'])
[i]Type for shares

Name: shares Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
to_1(address) := ϕ(['REF_27', 'barFeeTo_3', 'barFeeTo_4', 'REF_28', 'recipient_1'])
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
bento_4(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_0', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_215 = CONVERT this to address
[i]Type for TMP_215

Name: TMP_215 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:withdraw, arguments:['token_1', 'TMP_215', 'to_1', '0', 'shares_1']  
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _transfer
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
bento_5(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_4', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: _transfer
Num: 
Den: 
Address: 4
Norm: u
LF: ConcentratedLiquidityPool
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:bento_4(IBentoBoxMinimal), function:transfer, arguments:['token_1', 'TMP_216', 'to_1', 'shares_1']  
bento_6(IBentoBoxMinimal) := ϕ(['bento_11', 'bento_6', 'bento_3', 'bento_1', 'bento_5', 'bento_9'])
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef



rangeFeeGrowth
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN feeGrowthInside0_1,feeGrowthInside1_1
lowerTick_1(int24) := ϕ(['lower_1', 'REF_44'])
[i]Type for lowerTick

Name: lowerTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upperTick_1(int24) := ϕ(['REF_45', 'upper_1'])
[i]Type for upperTick

Name: upperTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal0_10(uint256) := ϕ(['feeGrowthGlobal0_9', 'feeGrowthGlobal0_0', 'feeGrowthGlobal0_8', 'feeGrowthGlobal0_6'])
[i]Type for feeGrowthGlobal0

Name: feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthGlobal1_10(uint256) := ϕ(['feeGrowthGlobal1_9', 'feeGrowthGlobal1_6', 'feeGrowthGlobal1_0', 'feeGrowthGlobal1_8'])
[i]Type for feeGrowthGlobal1

Name: feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
nearestTick_18(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_16(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_18(int24)
[i]Type for currentTick

Name: currentTick Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_165(Ticks.Tick) -> ticks_16[lowerTick_1]
[i]Type for REF_165

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_165(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
REF_166(Ticks.Tick) -> ticks_16[upperTick_1]
[i]Type for REF_166

Name: ticks Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_166(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: feeGrowthOutside0, feeGrowthOutside1
Finance Type: undef
_feeGrowthGlobal0_1(uint256) := feeGrowthGlobal0_10(uint256)
[i]Type for _feeGrowthGlobal0

Name: _feeGrowthGlobal0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_feeGrowthGlobal1_1(uint256) := feeGrowthGlobal1_10(uint256)
[i]Type for _feeGrowthGlobal1

Name: _feeGrowthGlobal1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_224

Name: TMP_224 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_167

Name: REF_167 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_2(uint256) := REF_167(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_169

Name: REF_169 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = _feeGrowthGlobal0_1 (c)- REF_169
[i]Type for TMP_225

Name: TMP_225 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_1(uint256) := TMP_225(uint256)
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_168(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_168

Name: REF_168 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_2(uint256) := REF_168(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(uint256) -> lower_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_170

Name: REF_170 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(uint256) = _feeGrowthGlobal1_1 (c)- REF_170
[i]Type for TMP_226

Name: TMP_226 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_1(uint256) := TMP_226(uint256)
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow0_3(uint256) := ϕ(['feeGrowthBelow0_1', 'feeGrowthBelow0_2'])
[i]Type for feeGrowthBelow0

Name: feeGrowthBelow0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthBelow1_3(uint256) := ϕ(['feeGrowthBelow1_1', 'feeGrowthBelow1_2'])
[i]Type for feeGrowthBelow1

Name: feeGrowthBelow1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_227

Name: TMP_227 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_171

Name: REF_171 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_1(uint256) := REF_171(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_173(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside0
[i]Type for REF_173

Name: REF_173 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = _feeGrowthGlobal0_1 (c)- REF_173
[i]Type for TMP_228

Name: TMP_228 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_2(uint256) := TMP_228(uint256)
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_172(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_172

Name: REF_172 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_1(uint256) := REF_172(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_174(uint256) -> upper_1 (-> ['ticks']).feeGrowthOutside1
[i]Type for REF_174

Name: REF_174 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = _feeGrowthGlobal1_1 (c)- REF_174
[i]Type for TMP_229

Name: TMP_229 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_2(uint256) := TMP_229(uint256)
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove0_3(uint256) := ϕ(['feeGrowthAbove0_1', 'feeGrowthAbove0_2'])
[i]Type for feeGrowthAbove0

Name: feeGrowthAbove0 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthAbove1_3(uint256) := ϕ(['feeGrowthAbove1_1', 'feeGrowthAbove1_2'])
[i]Type for feeGrowthAbove1

Name: feeGrowthAbove1 Function: rangeFeeGrowth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(uint256) = _feeGrowthGlobal0_1 (c)- feeGrowthBelow0_3
[i]Type for TMP_230

Name: TMP_230 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = TMP_230 (c)- feeGrowthAbove0_3
[i]Type for TMP_231

Name: TMP_231 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthInside0_1(uint256) := TMP_231(uint256)
[i]Type for feeGrowthInside0

Name: feeGrowthInside0 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(uint256) = _feeGrowthGlobal1_1 (c)- feeGrowthBelow1_3
[i]Type for TMP_232

Name: TMP_232 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = TMP_232 (c)- feeGrowthAbove1_3
[i]Type for TMP_233

Name: TMP_233 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeGrowthInside1_1(uint256) := TMP_233(uint256)
[i]Type for feeGrowthInside1

Name: feeGrowthInside1 Function: rangeFeeGrowth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN feeGrowthInside0_1,feeGrowthInside1_1



rangeSecondsInside
secondsPerLiquidity_10(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
nearestTick_19(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_17(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_19(int24)
[i]Type for currentTick

Name: currentTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_175(Ticks.Tick) -> ticks_17[lowerTick_1]
[i]Type for REF_175

Name: ticks Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_175(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(Ticks.Tick) -> ticks_17[upperTick_1]
[i]Type for REF_176

Name: ticks Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_176(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsGlobal_1(uint256) := secondsPerLiquidity_10(uint160)
[i]Type for secondsGlobal

Name: secondsGlobal Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_234(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_234

Name: TMP_234 Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_178

Name: REF_178 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = secondsGlobal_1 (c)- REF_178
[i]Type for TMP_235

Name: TMP_235 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsBelow_1(uint256) := TMP_235(uint256)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_177(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_177

Name: REF_177 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_2(uint256) := REF_177(uint160)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_3(uint256) := ϕ(['secondsBelow_2', 'secondsBelow_1'])
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_236(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_236

Name: TMP_236 Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_179(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_179

Name: REF_179 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_2(uint256) := REF_179(uint160)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_3(uint256) := ϕ(['secondsAbove_2', 'secondsAbove_1'])
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_180

Name: REF_180 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = secondsGlobal_1 (c)- REF_180
[i]Type for TMP_237

Name: TMP_237 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsAbove_1(uint256) := TMP_237(uint256)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_238(uint256) = secondsGlobal_1 (c)- secondsBelow_3
[i]Type for TMP_238

Name: TMP_238 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_239(uint256) = TMP_238 (c)- secondsAbove_3
[i]Type for TMP_239

Name: TMP_239 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsInside_1(uint256) := TMP_239(uint256)
[i]Type for secondsInside

Name: secondsInside Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsPerLiquidity_10(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
nearestTick_19(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_17(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_19(int24)
[i]Type for currentTick

Name: currentTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_175(Ticks.Tick) -> ticks_17[lowerTick_1]
[i]Type for REF_175

Name: ticks Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_175(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: secondsPerLiquidityOutside
Finance Type: undef
REF_176(Ticks.Tick) -> ticks_17[upperTick_1]
[i]Type for REF_176

Name: ticks Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_176(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: secondsPerLiquidityOutside
Finance Type: undef
secondsGlobal_1(uint256) := secondsPerLiquidity_10(uint160)
[i]Type for secondsGlobal

Name: secondsGlobal Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_234(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_234

Name: TMP_234 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_178

Name: REF_178 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = secondsGlobal_1 (c)- REF_178
[i]Type for TMP_235

Name: TMP_235 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsBelow_1(uint256) := TMP_235(uint256)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_177(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_177

Name: REF_177 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_2(uint256) := REF_177(uint160)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_3(uint256) := ϕ(['secondsBelow_2', 'secondsBelow_1'])
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_236(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_236

Name: TMP_236 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_179(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_179

Name: REF_179 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_2(uint256) := REF_179(uint160)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_3(uint256) := ϕ(['secondsAbove_2', 'secondsAbove_1'])
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_180(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_180

Name: REF_180 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = secondsGlobal_1 (c)- REF_180
[i]Type for TMP_237

Name: TMP_237 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsAbove_1(uint256) := TMP_237(uint256)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_238(uint256) = secondsGlobal_1 (c)- secondsBelow_3
[i]Type for TMP_238

Name: TMP_238 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_239(uint256) = TMP_238 (c)- secondsAbove_3
[i]Type for TMP_239

Name: TMP_239 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsInside_1(uint256) := TMP_239(uint256)
[i]Type for secondsInside

Name: secondsInside Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsPerLiquidity_10(uint160) := ϕ(['secondsPerLiquidity_8', 'secondsPerLiquidity_6', 'secondsPerLiquidity_9', 'secondsPerLiquidity_0'])
[i]Type for secondsPerLiquidity

Name: secondsPerLiquidity Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
nearestTick_19(int24) := ϕ(['nearestTick_16', 'nearestTick_0', 'nearestTick_8', 'nearestTick_14', 'nearestTick_1', 'nearestTick_17'])
[i]Type for nearestTick

Name: nearestTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ticks_17(mapping(int24 => Ticks.Tick)) := ϕ(['ticks_16', 'ticks_13', 'ticks_0', 'ticks_2', 'ticks_17', 'ticks_8', 'ticks_15'])
[i]Type for ticks

Name: ticks Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentTick_1(int24) := nearestTick_19(int24)
[i]Type for currentTick

Name: currentTick Function: rangeSecondsInside
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_175(Ticks.Tick) -> ticks_17[lowerTick_1]
[i]Type for REF_175

Name: ticks Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lower_1 (-> ['ticks'])(Ticks.Tick) := REF_175(Ticks.Tick)
[i]Type for lower

Name: lower Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: secondsPerLiquidityOutside
Finance Type: undef
REF_176(Ticks.Tick) -> ticks_17[upperTick_1]
[i]Type for REF_176

Name: ticks Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
upper_1 (-> ['ticks'])(Ticks.Tick) := REF_176(Ticks.Tick)
[i]Type for upper

Name: upper Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: secondsPerLiquidityOutside
Finance Type: undef
secondsGlobal_1(uint256) := secondsPerLiquidity_10(uint160)
[i]Type for secondsGlobal

Name: secondsGlobal Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_234(bool) = lowerTick_1 <= currentTick_1
[i]Type for TMP_234

Name: TMP_234 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_178

Name: REF_178 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) = secondsGlobal_1 (c)- REF_178
[i]Type for TMP_235

Name: TMP_235 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsBelow_1(uint256) := TMP_235(uint256)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_177(uint160) -> lower_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_177

Name: REF_177 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_2(uint256) := REF_177(uint160)
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsBelow_3(uint256) := ϕ(['secondsBelow_2', 'secondsBelow_1'])
[i]Type for secondsBelow

Name: secondsBelow Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_236(bool) = currentTick_1 < upperTick_1
[i]Type for TMP_236

Name: TMP_236 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_179(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_179

Name: REF_179 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_2(uint256) := REF_179(uint160)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
secondsAbove_3(uint256) := ϕ(['secondsAbove_2', 'secondsAbove_1'])
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_180(uint160) -> upper_1 (-> ['ticks']).secondsPerLiquidityOutside
[i]Type for REF_180

Name: REF_180 Function: rangeSecondsInside
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(uint256) = secondsGlobal_1 (c)- REF_180
[i]Type for TMP_237

Name: TMP_237 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsAbove_1(uint256) := TMP_237(uint256)
[i]Type for secondsAbove

Name: secondsAbove Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_238(uint256) = secondsGlobal_1 (c)- secondsBelow_3
[i]Type for TMP_238

Name: TMP_238 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_239(uint256) = TMP_238 (c)- secondsAbove_3
[i]Type for TMP_239

Name: TMP_239 Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
secondsInside_1(uint256) := TMP_239(uint256)
[i]Type for secondsInside

Name: secondsInside Function: rangeSecondsInside
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Function count: 51
Executing Group 11
[*] Tested 12 warnings for Sushi Trident
Group 11 complete
Elapsed time: 17.121533204 seconds
Testing complete
