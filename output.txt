Switched global version to 0.8.12
Analyzed_contracts_count: 16
total compilations: 1, contracts: 16
contract name: StakedCitadel
Add to address_to_label {'global:strategist': 1}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988, 'setVesting:_vesting': -987}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988, 'setVesting:_vesting': -987, 'sweepExtraToken:_token': -986}
Mark functions Adding: StakedCitadel, initialize, True
[*]Marked
Mark functions Adding: StakedCitadel, _onlyAuthorizedPausers, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _onlyStrategy, True
[x] Not visible 
Mark functions Adding: StakedCitadel, version, True
[X]No Binary
Mark functions Adding: StakedCitadel, getPricePerFullShare, True
[*]Marked
Mark functions Adding: StakedCitadel, balance, True
[X]No Binary
Mark functions Adding: StakedCitadel, available, True
[*]Marked
Mark functions Adding: StakedCitadel, deposit, True
[X]No Binary
Mark functions Adding: StakedCitadel, deposit, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositFor, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositFor, True
[X]No Binary
Mark functions Adding: StakedCitadel, withdraw, True
[X]No Binary
Mark functions Adding: StakedCitadel, withdrawAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, reportHarvest, True
[*]Marked
Mark functions Adding: StakedCitadel, reportAdditionalToken, True
[*]Marked
Mark functions Adding: StakedCitadel, setTreasury, True
[*]Marked
Mark functions Adding: StakedCitadel, setStrategy, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxWithdrawalFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxPerformanceFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxManagementFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setGuardian, True
[*]Marked
Mark functions Adding: StakedCitadel, setVesting, True
[*]Marked
Mark functions Adding: StakedCitadel, setToEarnBps, True
[*]Marked
Mark functions Adding: StakedCitadel, setGuestList, True
[X]No Binary
Mark functions Adding: StakedCitadel, setWithdrawalFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setPerformanceFeeStrategist, True
[*]Marked
Mark functions Adding: StakedCitadel, setPerformanceFeeGovernance, True
[*]Marked
Mark functions Adding: StakedCitadel, setManagementFee, True
[*]Marked
Mark functions Adding: StakedCitadel, withdrawToVault, True
[X]No Binary
Mark functions Adding: StakedCitadel, emitNonProtectedToken, True
[X]No Binary
Mark functions Adding: StakedCitadel, sweepExtraToken, True
[*]Marked
Mark functions Adding: StakedCitadel, earn, True
[X]No Binary
Mark functions Adding: StakedCitadel, pauseDeposits, True
[X]No Binary
Mark functions Adding: StakedCitadel, unpauseDeposits, True
[X]No Binary
Mark functions Adding: StakedCitadel, pause, True
[X]No Binary
Mark functions Adding: StakedCitadel, unpause, True
[X]No Binary
Mark functions Adding: StakedCitadel, _depositFor, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _depositWithAuthorization, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _depositForWithAuthorization, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _withdraw, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _calculateFee, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _calculatePerformanceFee, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _mintSharesFor, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _handleFees, True
[x] Not visible 
Mark functions Adding: StakedCitadel, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: MAX_BPS
Finding type for MAX_BPS(uint256 ... )
Value: u
Source address: u
State_var: toEarnBps
Finding type for toEarnBps(uint256 ... )
Value: u
Source address: u
State_var: token
Finding type for token(IERC20Upgradeable ... )
Value: u
Source address: u
State_var: WITHDRAWAL_FEE_HARD_CAP
Finding type for WITHDRAWAL_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: pausedDeposit
Finding type for pausedDeposit(bool ... )
Source address: u
State_var: SECS_PER_YEAR
Finding type for SECS_PER_YEAR(uint256 ... )
Value: u
Source address: u
State_var: lastHarvestedAt
Finding type for lastHarvestedAt(uint256 ... )
Value: u
Source address: u
State_var: managementFee
Finding type for managementFee(uint256 ... )
Value: u
Source address: u
State_var: strategist
Finding type for strategist(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: treasury
Finding type for treasury(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: governance
Finding type for governance(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: guardian
Finding type for guardian(address ... )
prev address? u
Head Addr: 7
    Norm: 0
    Set: {7}
    Fin: NULL
Source address: 7
State_var: PERFORMANCE_FEE_HARD_CAP
Finding type for PERFORMANCE_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: _name
Finding type for _name(string ... )
Value: u
Source address: u
State_var: strategy
Finding type for strategy(address ... )
prev address? u
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Source address: 6
State_var: MANAGEMENT_FEE_HARD_CAP
Finding type for MANAGEMENT_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: guestList
Finding type for guestList(IBadgerGuestlist ... )
Value: u
Source address: u
State_var: lifeTimeEarned
Finding type for lifeTimeEarned(uint256 ... )
Value: u
Source address: u
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _status
Finding type for _status(uint256 ... )
Value: u
Source address: u
State_var: vesting
Finding type for vesting(address ... )
prev address? u
Head Addr: 8
    Norm: 0
    Set: {8}
    Fin: NULL
Source address: 8
State_var: withdrawalFee
Finding type for withdrawalFee(uint256 ... )
Value: u
Source address: u
State_var: _symbol
Finding type for _symbol(string ... )
Value: u
Source address: u
State_var: additionalTokensEarned
Finding type for additionalTokensEarned(mapping(address => uint256) ... )
Value: u
Source address: u
State_var: badgerTree
Finding type for badgerTree(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Source address: 5
State_var: performanceFeeGovernance
Finding type for performanceFeeGovernance(uint256 ... )
Value: u
Source address: u
State_var: performanceFeeStrategist
Finding type for performanceFeeStrategist(uint256 ... )
Value: u
Source address: u
State_var: _initialized
Finding type for _initialized(bool ... )
Source address: u
State_var: _initializing
Finding type for _initializing(bool ... )
Source address: u
State_var: ONE_ETH
Finding type for ONE_ETH(uint256 ... )
Value: u
Source address: u
State_var: _totalSupply
Finding type for _totalSupply(uint256 ... )
Value: u
Source address: u
State_var: _balances
Finding type for _balances(mapping(address => uint256) ... )
Value: u
Source address: u
State_var: _allowances
Finding type for _allowances(mapping(address => mapping(address => uint256)) ... )
Value: u
Source address: u
State_var: maxWithdrawalFee
Finding type for maxWithdrawalFee(uint256 ... )
Value: u
Source address: u
State_var: keeper
Finding type for keeper(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
Source address: 4
State_var: maxPerformanceFee
Finding type for maxPerformanceFee(uint256 ... )
Value: u
Source address: u
State_var: _defaultNamePrefix
Finding type for _defaultNamePrefix(string ... )
Value: u
Source address: u
State_var: _symbolSymbolPrefix
Finding type for _symbolSymbolPrefix(string ... )
Value: u
Source address: u
State_var: maxManagementFee
Finding type for maxManagementFee(uint256 ... )
Value: u
Source address: u
State_var: _paused
Finding type for _paused(bool ... )
Source address: u
contract name: IBadgerGuestlist
contract name: IStrategy
contract name: IVault
contract name: IVesting
contract name: IERC20
contract name: SettAccessControl
contract name: Initializable
contract name: PausableUpgradeable
contract name: ReentrancyGuardUpgradeable
contract name: ERC20Upgradeable
contract name: IERC20Upgradeable
contract name: IERC20MetadataUpgradeable
contract name: SafeERC20Upgradeable
contract name: AddressUpgradeable
contract name: ContextUpgradeable
Running check on StakedCitadel
Reading Function: initialize
Checking funcion...



initialize
Function name: initialize
Finding type for _token(address ... )
prev address? u
Head Addr: -999
    Norm: 6
    Set: {-999}
    Fin: NULL
Finding type for _governance(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _keeper(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Finding type for _guardian(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for _treasury(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for _strategist(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Finding type for _badgerTree(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for _vesting(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for _name(string ... )
Value: u
Finding type for _symbol(string ... )
Value: u
Finding type for _feeConfig(uint256[4] ... )
Value: u
New param cache [[[], [], 6, '_token', [], -1, -999, 'u'], [[], [], 0, '_governance', [], -1, -998, 'u'], [[], [], 0, '_keeper', [], -1, -997, 'u'], [[], [], 0, '_guardian', [], -1, -996, 'u'], [[], [], 0, '_treasury', [], -1, -995, 'u'], [[], [], 0, '_strategist', [], -1, -994, 'u'], [[], [], 0, '_badgerTree', [], -1, -993, 'u'], [[], [], 0, '_vesting', [], -1, -992, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
initialize(address,address,address,address,address,address,address,address,string,string,uint256[4])


_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_4', '_defaultNamePrefix_0', '_defaultNamePrefix_3'])
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_0', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_0'])
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_0'])
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
MODIFIER_CALL, Initializable.initializer()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_96 = CONVERT 0 to address
TMP_97(bool) = _token_1 != TMP_96
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
TMP_99 = CONVERT 0 to address
TMP_100(bool) = _governance_1 != TMP_99
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
TMP_102 = CONVERT 0 to address
TMP_103(bool) = _keeper_1 != TMP_102
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
TMP_105 = CONVERT 0 to address
TMP_106(bool) = _guardian_1 != TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
TMP_108 = CONVERT 0 to address
TMP_109(bool) = _treasury_1 != TMP_108
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
TMP_111 = CONVERT 0 to address
TMP_112(bool) = _strategist_1 != TMP_111
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
TMP_114 = CONVERT 0 to address
TMP_115(bool) = _badgerTree_1 != TMP_114
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
TMP_117 = CONVERT 0 to address
TMP_118(bool) = _vesting_1 != TMP_117
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
REF_16(uint256) -> _feeConfig_1[0]
TMP_120(bool) = REF_16 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,performanceFeeGovernance too high)
REF_17(uint256) -> _feeConfig_1[1]
TMP_122(bool) = REF_17 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,performanceFeeStrategist too high)
REF_18(uint256) -> _feeConfig_1[2]
TMP_124(bool) = REF_18 <= WITHDRAWAL_FEE_HARD_CAP_3
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,withdrawalFee too high)
REF_19(uint256) -> _feeConfig_1[3]
TMP_126(bool) = REF_19 <= MANAGEMENT_FEE_HARD_CAP_3
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,managementFee too high)
TMP_128 = CONVERT _token_1 to IERC20
namedToken_1(IERC20) := TMP_128(IERC20)
TMP_129(bytes) = SOLIDITY_CALL abi.encodePacked()(_name_1)
TMP_130(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_129)
TMP_131(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_132(bool) = TMP_130 != TMP_131
CONDITION TMP_132
name_1(string) := _name_1(string)
name_3(string) := ϕ(['name_1', 'name_2'])
TMP_133(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:name, arguments:[]  
_defaultNamePrefix_4(string) := ϕ(['_defaultNamePrefix_4', '_defaultNamePrefix_3'])
_symbolSymbolPrefix_4(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_4(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_3'])
PERFORMANCE_FEE_HARD_CAP_4(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_3', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_4(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_3', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_134(bytes) = SOLIDITY_CALL abi.encodePacked()(_defaultNamePrefix_4,TMP_133)
TMP_135 = CONVERT TMP_134 to string
name_2(string) := TMP_135(string)
TMP_136(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbol_1)
TMP_137(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_136)
TMP_138(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_139(bool) = TMP_137 != TMP_138
CONDITION TMP_139
TMP_140(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:symbol, arguments:[]  
_symbolSymbolPrefix_5(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_5(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_4'])
PERFORMANCE_FEE_HARD_CAP_5(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_4', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_5(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_4', 'MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbolSymbolPrefix_5,TMP_140)
TMP_142 = CONVERT TMP_141 to string
symbol_1(string) := TMP_142(string)
symbol_2(string) := _symbol_1(string)
symbol_3(string) := ϕ(['symbol_2', 'symbol_1'])
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init(string,string)(name_3,symbol_3)
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
TMP_146 = CONVERT _token_1 to IERC20Upgradeable
token_1(IERC20Upgradeable) := TMP_146(IERC20Upgradeable)
governance_5(address) := _governance_1(address)
treasury_1(address) := _treasury_1(address)
strategist_3(address) := _strategist_1(address)
keeper_3(address) := _keeper_1(address)
guardian_1(address) := _guardian_1(address)
badgerTree_1(address) := _badgerTree_1(address)
vesting_1(address) := _vesting_1(address)
lastHarvestedAt_1(uint256) := block.timestamp(uint256)
REF_26(uint256) -> _feeConfig_1[0]
performanceFeeGovernance_1(uint256) := REF_26(uint256)
REF_27(uint256) -> _feeConfig_1[1]
performanceFeeStrategist_1(uint256) := REF_27(uint256)
REF_28(uint256) -> _feeConfig_1[2]
withdrawalFee_1(uint256) := REF_28(uint256)
REF_29(uint256) -> _feeConfig_1[3]
managementFee_1(uint256) := REF_29(uint256)
maxPerformanceFee_1(uint256) := PERFORMANCE_FEE_HARD_CAP_8(uint256)
maxWithdrawalFee_1(uint256) := WITHDRAWAL_FEE_HARD_CAP_8(uint256)
maxManagementFee_1(uint256) := MANAGEMENT_FEE_HARD_CAP_8(uint256)
toEarnBps_1(uint256) := 9500(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _defaultNamePrefix_1, name: _defaultNamePrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _defaultNamePrefix, Num: 1
Globalname: _defaultNamePrefix, contract_name: StakedCitadel
global...

Name: PIC_38 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _symbolSymbolPrefix_1, name: _symbolSymbolPrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbolSymbolPrefix, Num: 1
Globalname: _symbolSymbolPrefix, contract_name: StakedCitadel
global...

Name: PIC_39 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_1, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 1
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_1, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 1
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MANAGEMENT_FEE_HARD_CAP_1, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 1
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_4', '_defaultNamePrefix_0', '_defaultNamePrefix_3'])
Phi
[i]Type for _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_0', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_0'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_0'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
New param cache []
FIND RETURN
ENTRY_POINT
initializer()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
isTopLevelCall_1
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
isTopLevelCall_1
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initialized_1, name: _initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initialized, Num: 1
Globalname: _initialized, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _initializing_1, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 1
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_initialized_1(bool) := ϕ(['_initialized_2', '_initialized_0'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_2', '_initializing_3', '_initializing_0', '_initializing_4'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_410 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_410(bool) = INTERNAL_CALL, Initializable._isConstructor()()
New param cache []
FIND RETURN
ENTRY_POINT
_isConstructor()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_3 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 9
9
9
[i]Type for TMP_3

Name: TMP_3 Function: _isConstructor
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_3'] 
[i]Type for TMP_4

Name: TMP_4 Function: _isConstructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5 = ! TMP_4 
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_3 = CONVERT this to address
Converting this
9
[i]Type for TMP_3

Name: TMP_3 Function: _isConstructor
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_3'] 
[i]Type for TMP_4

Name: TMP_4 Function: _isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5 = ! TMP_4 
[i]Type for TMP_5

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_410

Name: TMP_410 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_411(None) = SOLIDITY_CALL require(bool,string)(TMP_410,Initializable: contract is already initialized)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_412 = ! _initialized_1 
[i]Type for TMP_412

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_413(None) = SOLIDITY_CALL require(bool,string)(TMP_412,Initializable: contract is already initialized)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] isTopLevelCall cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 2
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
TMP_409 = ! _initializing_2 
[i]Type for TMP_409

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_409(bool)
asgn
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_3, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 3
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_3(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_2, name: _initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initialized, Num: 2
Globalname: _initialized, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initialized_2(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_4, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 4
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_4(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_initialized_1(bool) := ϕ(['_initialized_2', '_initialized_0'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_2', '_initializing_3', '_initializing_0', '_initializing_4'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_410 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_410(bool) = INTERNAL_CALL, Initializable._isConstructor()()
New param cache []
Old param cache: []
[i]Type for TMP_410

Name: TMP_410 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_411(None) = SOLIDITY_CALL require(bool,string)(TMP_410,Initializable: contract is already initialized)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_412 = ! _initialized_1 
[i]Type for TMP_412

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_413(None) = SOLIDITY_CALL require(bool,string)(TMP_412,Initializable: contract is already initialized)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] isTopLevelCall cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
TMP_409 = ! _initializing_2 
[i]Type for TMP_409

Name: TMP_409 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_409(bool)
asgn
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_3, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
_initializing_3(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_2, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
_initialized_2(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_4, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
End popogation
_initializing_4(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
FIND RETURN
ENTRY_POINT
whenNotPaused()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_415 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_415(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
New param cache []
FIND RETURN
ENTRY_POINT
paused()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _paused_2, name: _paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _paused, Num: 2
Globalname: _paused, contract_name: StakedCitadel
global...

Name: PIC_41 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_paused_2(bool) := ϕ(['_paused_4', '_paused_3', '_paused_1', '_paused_0'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _paused_2
RETURN

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_paused_2(bool) := ϕ(['_paused_4', '_paused_3', '_paused_1', '_paused_0'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _paused_2
RETURN

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_415

Name: TMP_415 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_416 = ! TMP_415 
[i]Type for TMP_416

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_417(None) = SOLIDITY_CALL require(bool,string)(TMP_416,Pausable: paused)
[i]Type for TMP_417

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_415 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_415(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_415

Name: TMP_415 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_416 = ! TMP_415 
[i]Type for TMP_416

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_417(None) = SOLIDITY_CALL require(bool,string)(TMP_416,Pausable: paused)
[i]Type for TMP_417

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_96 cleared
[i] TMP_97 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_96 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_96

Name: TMP_96 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_97(bool) = _token_1 != TMP_96
[i]Type for TMP_97

Name: TMP_97 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
[i]Type for TMP_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_99 cleared
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _governance_1, name: _governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_99 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_99

Name: TMP_99 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_100(bool) = _governance_1 != TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
[i]Type for TMP_101

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] TMP_103 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _keeper_1, name: _keeper

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_102 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_103(bool) = _keeper_1 != TMP_102
[i]Type for TMP_103

Name: TMP_103 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_105 cleared
[i] TMP_106 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_105 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(bool) = _guardian_1 != TMP_105
[i]Type for TMP_106

Name: TMP_106 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] TMP_109 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_108

Name: TMP_108 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(bool) = _treasury_1 != TMP_108
[i]Type for TMP_109

Name: TMP_109 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_111 cleared
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _strategist_1, name: _strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_111 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_111

Name: TMP_111 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(bool) = _strategist_1 != TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_114 cleared
[i] TMP_115 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _badgerTree_1, name: _badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_114 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_114

Name: TMP_114 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_115(bool) = _badgerTree_1 != TMP_114
[i]Type for TMP_115

Name: TMP_115 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_117 cleared
[i] TMP_118 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_117 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_117

Name: TMP_117 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118(bool) = _vesting_1 != TMP_117
[i]Type for TMP_118

Name: TMP_118 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
[i]Type for TMP_119

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_120 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 3
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
End popogation
REF_16(uint256) -> _feeConfig_1[0]
INDEX
_feeConfig
Executing Group 28
[*] Tested 0 warnings for Badger Dao p3
Group 28 complete
Testing complete
