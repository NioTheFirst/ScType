Switched global version to 0.8.4
Analyzed_contracts_count: 1
total compilations: 2, contracts: 1
contract name: IIdleToken
Finance file: IIdleToken_ftypes.txt
Add to address_to_label {'balanceOf:a': -999}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2}
Reading f file...
['[*c]', 'IIdleToken']
['']
['[xf]', 'redeemIdleToken']
['[t]', 'global', 'balance', 'f: 0']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
['[t]', 'global', 'tPWF', 'global:tokA', 'global:tokB', '12', 'f: 40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
['[ta]', 'global', 'tokA', '6']
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: undef
['[ta]', 'global', 'tokB', '18']
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: undef
['[t]', 'global', 'tokenToShare', 'global:tokB', 'global:tokA', '-12', 'f:40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4}
Mark functions Adding: IIdleToken, balanceOf, True
[X]No Binary
Mark functions Adding: IIdleToken, tokenPriceWithFee, True
[X]No Binary
Mark functions Adding: IIdleToken, mintIdleToken, True
[X]No Binary
Mark functions Adding: IIdleToken, redeemIdleToken, True
[*]Marked
Mark functions Adding: IIdleToken, slitherConstructorVariables, True
[x] Not visible 
State_var: tokenToShare
Finding type for tokenToShare(uint256 ... )
(2, 1, -12, 'u', 4, 40)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: tokenToShare

Name: PIC_1 Function: None
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
State_var: tPWF
Finding type for tPWF(uint256 ... )
(1, 2, 12, 'u', 4, 40)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: tPWF

Name: PIC_2 Function: None
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
State_var: balance
Finding type for balance(uint256 ... )
(-1, -1, 'u', 'u', 3, 0)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: balance

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Running check on IIdleToken
Reading Function: balanceOf
Function balanceOf not marked
Reading Function: tokenPriceWithFee
Function tokenPriceWithFee not marked
Reading Function: mintIdleToken
Function mintIdleToken not marked
Reading Function: redeemIdleToken
Checking funcion...



redeemIdleToken
Finding type for share(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
redeemIdleToken(uint256)
ENTRY_POINT
RETURN (share * tokenToShare)


tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
TMP_0(uint256) = share_1 (c)* tokenToShare_1
RETURN TMP_0


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenToShare, Num: 1
Globalname: tokenToShare
global...

Name: PIC_1 Function: None
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Source address: u

Name: None Function: None
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: share_1, name: share

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: share, Num: 1
Globalname: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: share, Num: 1
Globalname: share
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: u rnorm: -12
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate


tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
TMP_0(uint256) = share_1 (c)* tokenToShare_1
RETURN TMP_0


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: share, Num: 1
Globalname: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: share, Num: 1
Globalname: share
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: u rnorm: -12
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Source address: u
Reading Function: slitherConstructorVariables
Function slitherConstructorVariables not marked
Address: -999, Label: balanceOf:a
Address: -998, Label: tokenPriceWithFee:a
Address: -997, Label: mintIdleToken:a
Address: 1, Label: global:tokA
Address: 2, Label: global:tokB
Address: 3, Label: global:f: 0
Address: 4, Label: global:u
Head Addr: -999
    Norm: u
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: u
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: u
    Set: {-997}
    Fin: NULL
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: undef
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: undef
Head Addr: 3
    Norm: u
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Function count: 1
Analyzed_contracts_count: 2
total compilations: 2, contracts: 2
contract name: IdleYieldSource
Finance file: IdleYieldSource_ftypes.txt
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994}
Add to address_to_label {'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
Reading f file...
['[*c]', 'IdleYieldSource']
['[xf]', 'transferERC20']
['[t]', 'global', 'ONE_IDLE_TOKEN', '-1', '-1', '0']
['[t]', 'global', 'idleToken', '-1', '-1', '0', 'IIdleToken']
['[t]', 'global', 'underlyingAsset']
['[t]', 'redeemToken', 'redeemAmount', '1', '-1', '0', 'f:0']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
Mark functions Adding: IdleYieldSource, initialize, True
[X]No Binary
Mark functions Adding: IdleYieldSource, depositToken, True
[X]No Binary
Mark functions Adding: IdleYieldSource, _totalShare, True
[x] Not visible 
Mark functions Adding: IdleYieldSource, _tokenToShares, True
[x] Not visible 
Mark functions Adding: IdleYieldSource, _sharesToToken, True
[x] Not visible 
Mark functions Adding: IdleYieldSource, _price, True
[x] Not visible 
Mark functions Adding: IdleYieldSource, _depositToIdle, True
[x] Not visible 
Mark functions Adding: IdleYieldSource, supplyTokenTo, True
[X]No Binary
Mark functions Adding: IdleYieldSource, redeemToken, True
[*]Marked
Mark functions Adding: IdleYieldSource, transferERC20, True
[*]Marked
Mark functions Adding: IdleYieldSource, sponsor, True
[X]No Binary
Mark functions Adding: IdleYieldSource, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: idleToken
Finding type for idleToken(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
querrying!!!
Source address: 5
Saved name: idleToken

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
State_var: underlyingAsset
Finding type for underlyingAsset(address ... )
prev address? u
Head Addr: 6
    Norm: 6
    Set: {6}
    Fin: NULL
querrying!!!
Source address: 6
Saved name: underlyingAsset

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 6
Norm: 6
LF: underlyingAsset
Value: u
Fields: 
Finance Type: undef
State_var: ONE_IDLE_TOKEN
Finding type for ONE_IDLE_TOKEN(uint256 ... )
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
(-1, -1, 'u', None, 4, -1)
[*]Type fetched successfully
querrying!!!
Source address: u
Saved name: ONE_IDLE_TOKEN

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
contract name: IIdleToken
Finance file: IIdleToken_ftypes.txt
Reading f file...
['[*c]', 'IIdleToken']
['']
['[xf]', 'redeemIdleToken']
['[t]', 'global', 'balance', 'f: 0']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
['[t]', 'global', 'tPWF', 'global:tokA', 'global:tokB', '12', 'f: 40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
['[ta]', 'global', 'tokA', '6']
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: undef
['[ta]', 'global', 'tokB', '18']
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: undef
['[t]', 'global', 'tokenToShare', 'global:tokB', 'global:tokA', '-12', 'f:40']
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
{'balanceOf:a': -999, 'tokenPriceWithFee:a': -998, 'mintIdleToken:a': -997, 'global:tokA': 1, 'global:tokB': 2, 'global:f: 0': 3, 'global:u': 4, 'global:idleToken': 5, 'global:underlyingAsset': 6, 'initialize:_idleToken': -996, 'supplyTokenTo:to': -995, 'transferERC20:erc20Token': -994, 'transferERC20:to': -993}
Mark functions Adding: IIdleToken, balanceOf, True
[x] Not visible 
Mark functions Adding: IIdleToken, tokenPriceWithFee, True
[x] Not visible 
Mark functions Adding: IIdleToken, mintIdleToken, True
[x] Not visible 
Mark functions Adding: IIdleToken, redeemIdleToken, True
[x] Not visible 
Running check on IdleYieldSource
Reading Function: initialize
Function initialize not marked
Reading Function: depositToken
Function depositToken not marked
Reading Function: _totalShare
Function _totalShare not marked
Reading Function: _tokenToShares
Function _tokenToShares not marked
Reading Function: _sharesToToken
Function _sharesToToken not marked
Reading Function: _price
Function _price not marked
Reading Function: _depositToIdle
Function _depositToIdle not marked
Reading Function: supplyTokenTo
Function supplyTokenTo not marked
Reading Function: redeemToken
Checking funcion...



redeemToken
Finding type for redeemAmount(uint256 ... )
(2, -1, 18, 'u', 4, 0)
[*]Type fetched successfully
New param cache [[[2], [-1], 18, None, [], 0, 'u', 'u']]
Param: 0
    num: [2]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: 0
FIND RETURN
ENTRY_POINT
redeemToken(uint256)
ENTRY_POINT
NEW VARIABLE a = 1 + 1
NEW VARIABLE redeemedShare = _tokenToShares(redeemAmount)
EXPRESSION redeemedUnderlyingAsset = IIdleToken(idleToken).redeemIdleToken(redeemedShare)
EXPRESSION redeemedUnderlyingAsset += redeemedShare
EXPRESSION RedeemedToken(msg.sender,redeemedShare,redeemAmount)


idleToken_8(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
TMP_19(int256) = 1 (c)+ 1
a_1(int256) := TMP_19(int256)
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
redeemedShare_1(uint256) := TMP_20(uint256)
TMP_21 = CONVERT idleToken_9 to IIdleToken
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
idleToken_10(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9'])
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
Emit RedeemedToken(msg.sender,redeemedShare_1,redeemAmount_1)


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_8, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 8
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_8(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_19 cleared
[i] a cleared
Propogating parameters and globals to SSA variables...
[]
[]
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a
End popogation
TMP_19(int256) = 1 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_19 Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
a_1(int256) := TMP_19(int256)
asgn
init
end
_______________

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: a Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_20 cleared
[i] redeemedShare cleared
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578a30>]
redeemAmount_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: redeemAmount_1, name: redeemAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount
Ssa_name: redeemedShare_1, name: redeemedShare

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedShare, Num: 1
Globalname: redeemedShare
End popogation
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
init
end
New param cache [[[], [], 18, None, [], 0, 'u', 'u']]
[[], [], 18, None, [], 0, 'u', 'u']

Name: tokens Function: None
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_tokenToShares(uint256)
ENTRY_POINT
EXPRESSION shares = (tokens * ONE_IDLE_TOKEN) / _price()
RETURN shares
Propogating All
Propogating All
tokens_1
Ssa_name: tokens_1, name: tokens

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
shares_1
Ssa_name: shares_1, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokens cleared
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokens_1, name: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Phid
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE_IDLE_TOKEN, Num: 1
Globalname: ONE_IDLE_TOKEN
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokens_1(uint256) := ϕ(['redeemAmount_1', 'mintAmount_1'])
Phi

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokens

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_IDLE_TOKEN_1(uint256) := ϕ(['ONE_IDLE_TOKEN_4', 'ONE_IDLE_TOKEN_0', 'ONE_IDLE_TOKEN_2'])
Phi
[i]Type for ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d05cad00>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d05d6cd0>]
tokens_1

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: tokens_1, name: tokens

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
ONE_IDLE_TOKEN_1
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokens_1, name: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens
Ssa_name: shares_1, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares
End popogation
TMP_4(uint256) = tokens_1 (c)* ONE_IDLE_TOKEN_1
testing mul...
init
end
init
end

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 18 rnorm: u
init
end
_______________

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_5(uint256) = INTERNAL_CALL, IdleYieldSource._price()()
New param cache []
FIND RETURN
ENTRY_POINT
_price()
ENTRY_POINT
RETURN IIdleToken(idleToken).tokenPriceWithFee(address(this))
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_4, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 4
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_4(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] TMP_11 cleared
[i] TMP_12 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d05e3df0>]
[]
idleToken_4
Ssa_name: idleToken_4, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: idleToken_4, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: idleToken_5, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 5
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
TMP_10 = CONVERT idleToken_4 to IIdleToken
Converting idleToken_4

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: TMP_10 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 5
IdleToken
[i]Type for TMP_10

Name: TMP_10 Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_11 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 7
7
7
[i]Type for TMP_11

Name: TMP_11 Function: _price
Num: -1
Den: -1
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(uint256) = HIGH_LEVEL_CALL, dest:TMP_10(IIdleToken), function:tokenPriceWithFee, arguments:['TMP_11']  
High Call: tokenPriceWithFee
Running querryfc
Found: tokenPriceWithFee
init
end

Name: TMP_11 Function: _price
Num: -1
Den: -1
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: IdleYieldSource
    fields: []
    fintype: -1
New param cache [[[-1], [-1], 'u', 'IdleYieldSource', [], -1, 7, 'u']]
[[-1], [-1], 'u', 'IdleYieldSource', [], -1, 7, 'u']

Name: a Function: None
Num: -1
Den: -1
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
tokenPriceWithFee(address)
ENTRY_POINT
RETURN (tPWF)
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tPWF_1, name: tPWF

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tPWF_1(uint256) := ϕ(['tPWF_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d07b7fa0>]
[]
tPWF_1
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
End popogation
RETURN tPWF_1
RETURN
init
end

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tPWF_1(uint256) := ϕ(['tPWF_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d07b7fa0>]
[]
tPWF_1
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
End popogation
RETURN tPWF_1
RETURN
init
end

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
idleToken_5(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_4'])
Phi
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_12
RETURN
init
end

Name: TMP_12 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_4, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_4(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_10 cleared
[i] TMP_11 cleared
[i] TMP_12 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d05e3df0>]
[]
idleToken_4
Ssa_name: idleToken_4, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: idleToken_4, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: idleToken_5, name: idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
TMP_10 = CONVERT idleToken_4 to IIdleToken
Converting idleToken_4

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: TMP_10 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 5
IdleToken
[i]Type for TMP_10

Name: TMP_10 Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_11 = CONVERT this to address
Converting this
7
[i]Type for TMP_11

Name: TMP_11 Function: _price
Num: 
Den: 
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(uint256) = HIGH_LEVEL_CALL, dest:TMP_10(IIdleToken), function:tokenPriceWithFee, arguments:['TMP_11']  
High Call: tokenPriceWithFee
Running querryfc
Found: tokenPriceWithFee
init
end

Name: TMP_11 Function: _price
Num: 
Den: 
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
High level cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: IdleYieldSource
    fields: []
    fintype: -1
New param cache [[[], [], 'u', 'IdleYieldSource', [], -1, 7, 'u']]
Old param cache: [[[-1], [-1], 'u', 'IdleYieldSource', [], -1, 7]]
[[], [], 'u', 'IdleYieldSource', [], -1, 7, 'u']

Name: a Function: None
Num: 
Den: 
Address: 7
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
tokenPriceWithFee(address)
ENTRY_POINT
RETURN (tPWF)
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tPWF_1(uint256) := ϕ(['tPWF_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d07b7fa0>]
[]
tPWF_1
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
End popogation
RETURN tPWF_1
RETURN
init
end

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tPWF_1(uint256) := ϕ(['tPWF_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d07b7fa0>]
[]
tPWF_1
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
Ssa_name: tPWF_1, name: tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tPWF, Num: 1
Globalname: tPWF
End popogation
RETURN tPWF_1
RETURN
init
end

Name: tPWF Function: tokenPriceWithFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
idleToken_5(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_4'])
Phi
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_12
RETURN
init
end

Name: TMP_12 Function: _price
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_4 (c)/ TMP_5
init
end
init
end
lnorm: 18 rnorm: u
init
end
_______________

Name: TMP_4 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_6 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
init
end
init
end
lnorm: 18 rnorm: u
[i]Type for TMP_6

Name: TMP_6 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_6(uint256)
asgn
init
end
_______________

Name: TMP_6 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: shares Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d05e31f0>]
shares_1

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN shares_1
RETURN
init
end

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] tokens cleared
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokens_1, name: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Phid
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
tokens_1(uint256) := ϕ(['redeemAmount_1', 'mintAmount_1'])
Phi

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokens

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
ONE_IDLE_TOKEN_1(uint256) := ϕ(['ONE_IDLE_TOKEN_4', 'ONE_IDLE_TOKEN_0', 'ONE_IDLE_TOKEN_2'])
Phi
[i]Type for ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_4 cleared
[i] TMP_5 cleared
[i] TMP_6 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d05cad00>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d05d6cd0>]
tokens_1

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: tokens_1, name: tokens

Name: tokens Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
ONE_IDLE_TOKEN_1
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_IDLE_TOKEN_1, name: ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokens_1, name: tokens

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: tokens, Num: 1
Globalname: tokens
Ssa_name: shares_1, name: shares

Name: shares Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares
End popogation
TMP_4(uint256) = tokens_1 (c)* ONE_IDLE_TOKEN_1
testing mul...
init
end
init
end

Name: tokens_1 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 18 rnorm: u
init
end
_______________

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_5(uint256) = INTERNAL_CALL, IdleYieldSource._price()()
New param cache []
Old param cache: []
init
end
_______________

Name: PIC_10 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_4 (c)/ TMP_5
init
end
init
end
lnorm: 18 rnorm: u
init
end
_______________

Name: TMP_4 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_6 Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
init
end
init
end
lnorm: 18 rnorm: u
[i]Type for TMP_6

Name: TMP_6 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_6(uint256)
asgn
init
end
_______________

Name: TMP_6 Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: shares Function: _tokenToShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d05e31f0>]
shares_1

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN shares_1
RETURN
init
end

Name: shares Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
redeemedShare_1(uint256) := TMP_20(uint256)
asgn
init
end
_______________

Name: TMP_20 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] redeemedUnderlyingAsset cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0578df0>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
idleToken_9
Ssa_name: idleToken_9, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 9
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: idleToken_9, name: idleToken

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedUnderlyingAsset, Num: 1
Globalname: redeemedUnderlyingAsset
End popogation
Ssa_name: idleToken_10, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 10
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
TMP_21 = CONVERT idleToken_9 to IIdleToken
Converting idleToken_9

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: idleToken Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: TMP_21 Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 5
IdleToken
[i]Type for TMP_21

Name: TMP_21 Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
High Call: redeemIdleToken
Running querryfc
Found: redeemIdleToken
init
end

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: 0
New param cache [[[-1], [-1], 18, None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, None, [], 0, 'u', 'u']

Name: share Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
redeemIdleToken(uint256)
ENTRY_POINT
RETURN (share * tokenToShare)
Propogating All
Propogating All
share_1
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: 18 rnorm: -12
Finance type key: (0, 40)
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: 18 rnorm: -12
Finance type key: (0, 40)
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
idleToken_10(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9'])
Phi
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
asgn
init
end
_______________

Name: TMP_22 Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (0, -1)
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] redeemedUnderlyingAsset cleared
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582430>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemedUnderlyingAsset_1

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_2, name: redeemedUnderlyingAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedUnderlyingAsset, Num: 2
Globalname: redeemedUnderlyingAsset
End popogation
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
init
end
init
end
Finance type key: (0, 0)
init
end
_______________

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578a30>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemAmount_1

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation


idleToken_8(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
TMP_19(int256) = 1 (c)+ 1
a_1(int256) := TMP_19(int256)
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
redeemedShare_1(uint256) := TMP_20(uint256)
TMP_21 = CONVERT idleToken_9 to IIdleToken
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
idleToken_10(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9'])
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
Emit RedeemedToken(msg.sender,redeemedShare_1,redeemAmount_1)


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_8, name: idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_8(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_19 cleared
[i] a cleared
Propogating parameters and globals to SSA variables...
[]
[]
Ssa_name: a_1, name: a

Name: a Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a
End popogation
TMP_19(int256) = 1 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_19 Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
a_1(int256) := TMP_19(int256)
asgn
init
end
_______________

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: a Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_20 cleared
[i] redeemedShare cleared
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578a30>]
redeemAmount_1

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedShare, Num: 1
Globalname: redeemedShare
End popogation
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
init
end
New param cache [[[], [], 18, None, [], 0, 'u', 'u']]
Old param cache: [[[], [], 18, None, [], 0, 'u']]
init
end
_______________

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_20 Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
redeemedShare_1(uint256) := TMP_20(uint256)
asgn
init
end
_______________

Name: TMP_20 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] redeemedUnderlyingAsset cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0578df0>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
idleToken_9
Ssa_name: idleToken_9, name: idleToken

Name: idleToken Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: idleToken_9, name: idleToken

Name: idleToken Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedUnderlyingAsset, Num: 1
Globalname: redeemedUnderlyingAsset
End popogation
Ssa_name: idleToken_10, name: idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
TMP_21 = CONVERT idleToken_9 to IIdleToken
Converting idleToken_9

Name: idleToken Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: idleToken Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: TMP_21 Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 5
IdleToken
[i]Type for TMP_21

Name: TMP_21 Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
High Call: redeemIdleToken
Running querryfc
Found: redeemIdleToken
init
end

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 18
    link: None
    fields: []
    fintype: 0
New param cache [[[-1], [-1], 18, None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, None, [], 0, 'u', 'u']

Name: share Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
redeemIdleToken(uint256)
ENTRY_POINT
RETURN (share * tokenToShare)
Propogating All
Propogating All
share_1
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: 18 rnorm: -12
Finance type key: (0, 40)
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Phid
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
Phi
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
XXXX
[i] TMP_0 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0745b20>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0745ee0>]
share_1

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokenToShare_1
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: tokenToShare_1, name: tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
Ssa_name: share_1, name: share

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_0(uint256) = share_1 (c)* tokenToShare_1
testing mul...
init
end
init
end

Name: share_1 Function: redeemIdleToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
lnorm: 18 rnorm: -12
Finance type key: (0, 40)
init
end
_______________

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: -12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate

Name: TMP_0 Function: redeemIdleToken
Num: 
Den: 
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_0
RETURN
init
end

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
idleToken_10(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9'])
Phi
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
asgn
init
end
_______________

Name: TMP_22 Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (0, -1)
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] redeemedUnderlyingAsset cleared
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582430>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemedUnderlyingAsset_1

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_1, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedUnderlyingAsset_2, name: redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: redeemedUnderlyingAsset, Num: 2
Globalname: redeemedUnderlyingAsset
End popogation
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
init
end
init
end
Finance type key: (0, 0)
init
end
_______________

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578a30>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578f40>]
redeemAmount_1

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: redeemAmount_1, name: redeemAmount

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: redeemAmount_1 Function: redeemToken
Num: 
Den: 
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Name: redeemAmount, Num: 1
Globalname: redeemAmount
Ssa_name: redeemedShare_1, name: redeemedShare

Name: redeemedShare Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
Source address: u
Reading Function: transferERC20
Checking funcion...



transferERC20
Finding type for erc20Token(address ... )
prev address? u
Head Addr: -994
    Norm: 6
    Set: {-994}
    Fin: NULL
Finding type for to(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for amount(uint256 ... )
Value: u
New param cache [[[], [], 6, 'erc20Token', [], -1, -994, 'u'], [[], [], 0, 'to', [], -1, -993, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: 0
    num: []
    den: []
    norm: 6
    link: erc20Token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: 0
    link: to
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
transferERC20(address,address,uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(erc20Token != idleToken,IdleYieldSource/idleDai-transfer-not-allowed)
EXPRESSION TransferredERC20(msg.sender,to,amount,erc20Token)


idleToken_11(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
TMP_24(bool) = erc20Token_1 != idleToken_11
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
Emit TransferredERC20(msg.sender,to_1,amount_1,erc20Token_1)


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_11, name: idleToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: idleToken, Num: 11
Globalname: idleToken
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_11(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0582820>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582d60>]
erc20Token_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Copied ftype

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
idleToken_11
Ssa_name: idleToken_11, name: idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: idleToken_11, name: idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_24(bool) = erc20Token_1 != idleToken_11
[i]Type for TMP_24

Name: TMP_24 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
[i]Type for TMP_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578640>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582d60>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582670>]
to_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
erc20Token_1

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
amount_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount
End popogation


idleToken_11(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
TMP_24(bool) = erc20Token_1 != idleToken_11
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
Emit TransferredERC20(msg.sender,to_1,amount_1,erc20Token_1)


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Ssa_name: idleToken_11, name: idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Phid
idleToken_11(address) := ϕ(['idleToken_10', 'idleToken_3', 'idleToken_1', 'idleToken_0', 'idleToken_5', 'idleToken_7'])
Phi
[i]Type for idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f51d0582820>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582d60>]
erc20Token_1

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
idleToken_11
Ssa_name: idleToken_11, name: idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: idleToken_11, name: idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 5
Norm: 0
LF: idleToken
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_24(bool) = erc20Token_1 != idleToken_11
[i]Type for TMP_24

Name: TMP_24 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
[i]Type for TMP_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0578640>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582d60>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f51d0582670>]
to_1

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
erc20Token_1

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
amount_1

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to_1 Function: transferERC20
Num: 
Den: 
Address: -993
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: erc20Token_1, name: erc20Token

Name: erc20Token_1 Function: transferERC20
Num: 
Den: 
Address: -994
Norm: 6
LF: erc20Token
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount
End popogation
Reading Function: sponsor
Function sponsor not marked
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: -999, Label: balanceOf:a
Address: -998, Label: tokenPriceWithFee:a
Address: -997, Label: mintIdleToken:a
Address: 1, Label: global:tokA
Address: 2, Label: global:tokB
Address: 3, Label: global:f: 0
Address: 4, Label: global:u
Address: 5, Label: global:idleToken
Address: 6, Label: global:underlyingAsset
Address: -996, Label: initialize:_idleToken
Address: -995, Label: supplyTokenTo:to
Address: -994, Label: transferERC20:erc20Token
Address: -993, Label: transferERC20:to
Address: 7, Label: _price:TMP_11
Address: 7, Label: global:this
Head Addr: -999
    Norm: u
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: u
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: u
    Set: {-997}
    Fin: NULL
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: undef
Head Addr: 2
    Norm: u
    Set: {2}
    Fin: undef
Head Addr: 3
    Norm: u
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: 6
    Set: {6}
    Fin: NULL
Head Addr: -996
    Norm: u
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: u
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 6
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: 7
    Norm: u
    Set: {7}
    Fin: NULL
Function count: 9
Executing Group 3
[*] Tested 1 warning for PoolTogether
Group 3 complete
Testing complete
