Switched global version to 0.6.12
Finding type for manager...
IManager
Finding type for totalDepositCap...
uint256
Finding type for _balances...
mapping(address => uint256)
Finding type for _totalSupply...
uint256
Finding type for _allowances...
mapping(address => mapping(address => uint256))
Finding type for _name...
string
Finding type for _decimals...
uint8
Finding type for MAX...
uint256
Finding type for min...
uint256
Finding type for _symbol...
string



constructor
Finding type for _name...
string
Finding type for _symbol...
string
Finding type for _manager...
address
prev address? u
-999
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _manager
    fields: []
    fintype: -1
_name_0
_symbol_0
_manager_0


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_name_1
1
_1
_name

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_symbol_1
1
_1
_symbol

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters to local SSA variables...
_manager_1
1
_1
_manager

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Copied manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_name_1

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_symbol_1

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters to local SSA variables...
_manager_1

Name: _manager Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Copied manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setGauge
Finding type for _gauge...
address
prev address? u
-998
Param: 0
    num: []
    den: []
    norm: u
    link: _gauge
    fields: []
    fintype: -1
_gauge_0


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_gauge_1
1
_1
_gauge

Name: _gauge_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
End popogation
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_gauge_1

Name: _gauge Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
End popogation
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef



setMin
Finding type for _min...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_min_0


MAX_1(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MAX_1(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
manager_34(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_34

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_34', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
manager_34(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_34

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_34', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
End popogation
manager_38(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_38

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Written func info: Manager, strategist
Getting new address:
prev address? None
-997
-997
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -997
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_38', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
manager_38(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_38

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Written func info: Manager, strategist
Getting new address:
prev address? None
-996
-996
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -996
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_38', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
MAX_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_min_1
1
_1
_min

Name: _min_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_min_1

Name: _min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


MAX_1(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MAX_1(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
MAX_3

Name: MAX Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_min_1

Name: _min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_min_1

Name: _min Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setTotalDepositCap
Finding type for _totalDepositCap...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_totalDepositCap_0


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_totalDepositCap_1
1
_1
_totalDepositCap

Name: _totalDepositCap_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_totalDepositCap_1

Name: _totalDepositCap Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



swap
Finding type for _token0...
address
prev address? u
-995
Finding type for _token1...
address
prev address? u
-994
Finding type for _expectedAmount...
uint256
Param: 0
    num: []
    den: []
    norm: u
    link: _token0
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _token1
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_token0_0
_token1_0
_expectedAmount_0


manager_2(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
TMP_76 = CONVERT this to address
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
manager_5(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4', 'manager_35', 'manager_19', 'manager_28'])
TMP_78 = CONVERT TMP_77 to IController
TMP_79 = CONVERT this to address
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
manager_6(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_5', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_81 = CONVERT TMP_80 to IConverter
_converter_1(IConverter) := TMP_81(IConverter)
TMP_82 = CONVERT _token0_1 to IERC20
TMP_83 = CONVERT this to address
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
_balance_1(uint256) := TMP_84(uint256)
TMP_85 = CONVERT _token0_1 to IERC20
TMP_86 = CONVERT _converter_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
_balance_2(uint256) := TMP_88(uint256)


[[], [], 'u', '_token0', [], -1, -995]

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
[[], [], 'u', '_token1', [], -1, -994]

Name: _token1 Function: swap
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _expectedAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
manager_2(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_4

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_76 = CONVERT this to address
Converting this
new address made
prev address? u
global assignment: 1
1
1
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_78 = CONVERT TMP_77 to IController
Converting TMP_77

Name: TMP_77 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_79 = CONVERT this to address
Converting this
1
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_6(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_5', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_81 = CONVERT TMP_80 to IConverter
Converting TMP_80

Name: TMP_80 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_converter_1(IConverter) := TMP_81(IConverter)
[i]Type for _converter

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token0_1
1
_1
_token0

Name: _token0_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_82 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_83 = CONVERT this to address
Converting this
1
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_84(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_converter_1

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_86 = CONVERT _converter_1 to address
Converting _converter_1

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
Propogating parameters to local SSA variables...
_converter_1

Name: _converter Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_token1_1
1
_1
_token1

Name: _token1_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_expectedAmount_1
1
_1
_expectedAmount

Name: _expectedAmount_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_88(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


manager_2(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
TMP_76 = CONVERT this to address
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
manager_5(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4', 'manager_35', 'manager_19', 'manager_28'])
TMP_78 = CONVERT TMP_77 to IController
TMP_79 = CONVERT this to address
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
manager_6(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_5', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_81 = CONVERT TMP_80 to IConverter
_converter_1(IConverter) := TMP_81(IConverter)
TMP_82 = CONVERT _token0_1 to IERC20
TMP_83 = CONVERT this to address
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
_balance_1(uint256) := TMP_84(uint256)
TMP_85 = CONVERT _token0_1 to IERC20
TMP_86 = CONVERT _converter_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
_balance_2(uint256) := TMP_88(uint256)


[[], [], 'u', '_token0', [], -1, -995]

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
[[], [], 'u', '_token1', [], -1, -994]

Name: _token1 Function: swap
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _expectedAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
manager_2(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_4

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_76 = CONVERT this to address
Converting this
1
[i]Type for TMP_76

Name: TMP_76 Function: swap
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
[i]Type for TMP_77

Name: TMP_77 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_5(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_4', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_78 = CONVERT TMP_77 to IController
Converting TMP_77

Name: TMP_77 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_78

Name: TMP_78 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
TMP_79 = CONVERT this to address
Converting this
1
[i]Type for TMP_79

Name: TMP_79 Function: swap
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
[i]Type for TMP_80

Name: TMP_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_6(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_5', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_81 = CONVERT TMP_80 to IConverter
Converting TMP_80

Name: TMP_80 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Converter
[i]Type for TMP_81

Name: TMP_81 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_converter_1(IConverter) := TMP_81(IConverter)
[i]Type for _converter

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_82 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_82

Name: TMP_82 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_83 = CONVERT this to address
Converting this
1
[i]Type for TMP_83

Name: TMP_83 Function: swap
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
[i]Type for TMP_84

Name: TMP_84 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_84(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_converter_1
1
_1
_converter

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_85 = CONVERT _token0_1 to IERC20
Converting _token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_85

Name: TMP_85 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_86 = CONVERT _converter_1 to address
Converting _converter_1

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
Propogating parameters to local SSA variables...
_converter_1
1
_1
_converter

Name: _converter Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: Converter
Fields: 
Finance Type: undef
_token1_1

Name: _token1_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_expectedAmount_1

Name: _expectedAmount_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token0_1

Name: _token0 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
End popogation
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
[i]Type for TMP_88

Name: TMP_88 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_88(uint256)
[i]Type for _balance

Name: _balance Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



earn
Finding type for _token...
address
prev address? u
-993
Finding type for _strategy...
address
prev address? u
-992
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _strategy
    fields: []
    fintype: -1
_token_0
_strategy_0


manager_7(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
manager_11(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_10', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
TMP_93 = CONVERT this to address
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
manager_12(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_95 = CONVERT TMP_94 to IController
_controller_1(IController) := TMP_95(IController)
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
CONDITION TMP_96
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
_balance_1(uint256) := TMP_97(uint256)
TMP_98 = CONVERT _token_1 to IERC20
TMP_99 = CONVERT _controller_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Emit Earn(_token_1,_balance_1)


[[], [], 'u', '_token', [], -1, -993]

Name: _token Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[], [], 'u', '_strategy', [], -1, -992]

Name: _strategy Function: earn
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
manager_7(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_10

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_strategy_1
1
_1
_strategy

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
End popogation
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_10', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_11

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_93 = CONVERT this to address
Converting this
1
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_95 = CONVERT TMP_94 to IController
Converting TMP_94

Name: TMP_94 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_95(IController)
[i]Type for _controller

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
End popogation
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_97(uint256)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_99 = CONVERT _controller_1 to address
Converting _controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
Propogating parameters to local SSA variables...
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
_controller_1

Name: _controller Function: earn
Num: -1
Den: -1
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_strategy_1

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation


manager_7(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
manager_11(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_10', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
TMP_93 = CONVERT this to address
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
manager_12(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_95 = CONVERT TMP_94 to IController
_controller_1(IController) := TMP_95(IController)
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
CONDITION TMP_96
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
_balance_1(uint256) := TMP_97(uint256)
TMP_98 = CONVERT _token_1 to IERC20
TMP_99 = CONVERT _controller_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Emit Earn(_token_1,_balance_1)


[[], [], 'u', '_token', [], -1, -993]

Name: _token Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[], [], 'u', '_strategy', [], -1, -992]

Name: _strategy Function: earn
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
manager_7(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
manager_8(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
manager_9(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.onlyHarvester()()
manager_10(IManager) := ϕ(['manager_37'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_10

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_strategy_1

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
End popogation
TMP_91(bool) = HIGH_LEVEL_CALL, dest:manager_10(IManager), function:allowedStrategies, arguments:['_strategy_1']  
[i]Type for TMP_91

Name: TMP_91 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_11(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_10', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_92(None) = SOLIDITY_CALL require(bool,string)(TMP_91,!_strategy)
[i]Type for TMP_92

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_11

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_93 = CONVERT this to address
Converting this
1
[i]Type for TMP_93

Name: TMP_93 Function: earn
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_94(address) = HIGH_LEVEL_CALL, dest:manager_11(IManager), function:controllers, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_12(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_11', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: earn
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_95 = CONVERT TMP_94 to IController
Converting TMP_94

Name: TMP_94 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_95

Name: TMP_95 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_95(IController)
[i]Type for _controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_controller_1
1
_1
_controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
End popogation
TMP_96(bool) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:investEnabled, arguments:[]  
[i]Type for TMP_96

Name: TMP_96 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_97(uint256) = INTERNAL_CALL, Vault.available(address)(_token_1)
[i]Type for TMP_97

Name: TMP_97 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_97(uint256)
[i]Type for _balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_controller_1
1
_1
_controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_98

Name: TMP_98 Function: earn
Num: 
Den: 
Address: -993
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_99 = CONVERT _controller_1 to address
Converting _controller_1

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_98', 'TMP_99', '_balance_1'] 
Propogating parameters to local SSA variables...
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
_controller_1
1
_1
_controller

Name: _controller Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: Controller
Fields: 
Finance Type: undef
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_strategy_1

Name: _strategy_1 Function: None
Num: 
Den: 
Address: -992
Norm: u
LF: _strategy
Fields: 
Finance Type: undef
End popogation
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:earn, arguments:['_strategy_1', '_token_1', '_balance_1']  
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: earn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token Function: None
Num: 
Den: 
Address: -993
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation



deposit
Finding type for _token...
address
prev address? u
-991
Finding type for _amount...
uint256
Param: 0
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
_token_0
_amount_0


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
Emit Deposit(msg.sender,_shares_2)


[[], [], 'u', '_token', [], -1, -991]

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amount Function: deposit
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-990
-990
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -990
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-989
-989
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -989
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
Propogating parameters to local SSA variables...
End popogation
manager_21(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
Propogating parameters to local SSA variables...
End popogation
manager_25(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_25

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_183 = CONVERT this to address
Converting this
1
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
Written func info: Manager, getTokens
Getting new address:
prev address? None
-988
-988
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_184(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_tokens_1

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_balance_1(uint256) := ϕ(['_balance_0', '_balance_2'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_0', 'i_2'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_185(bool) = i_1 < REF_73
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_tokens_1

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: None
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: -988
Norm: 0
LF: ERC20
Fields: 
Finance Type: undef
TMP_187 = CONVERT this to address
Converting this
1
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
Written func info: ERC20, balanceOf
Handling balance function!
-988
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-988
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -988
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-988
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -988
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_190(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
i_1
1
_1
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
Propogating parameters to local SSA variables...
End popogation
manager_25(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_25

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_183 = CONVERT this to address
Converting this
1
[i]Type for TMP_183

Name: TMP_183 Function: balanceOfThis
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_184(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_183']  
Written func info: Manager, getTokens
Getting new address:
prev address? None
-987
-987
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_25', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_184(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_tokens_1

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_balance_1(uint256) := ϕ(['_balance_0', '_balance_2'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_0', 'i_2'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_185(bool) = i_1 < REF_73
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_tokens_1

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_186 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: None
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: -1
Den: -1
Address: -987
Norm: 0
LF: ERC20
Fields: 
Finance Type: undef
TMP_187 = CONVERT this to address
Converting this
1
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_188(uint256) = HIGH_LEVEL_CALL, dest:TMP_186(IERC20), function:balanceOf, arguments:['TMP_187']  
Written func info: ERC20, balanceOf
Handling balance function!
-987
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_189(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_188)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: -1
Den: -1
Address: -987
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-987
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -987
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_190(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_1', 'TMP_189'] 
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_2(uint256) := TMP_190(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
i_1
1
_1
i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_191(uint8) := i_1(uint8)
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_balance_1
1
_1
_balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _balance_1
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
Converting this
1
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
Written func info: Manager, controllers
Getting new address:
prev address? Controller
None
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_22', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: Controller
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
Written func info: Controller, balanceOf
Getting new address:
prev address? None
-986
-986
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 1
Den: -1
Address: -986
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_24(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_23', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 1
Den: -1
Address: -986
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN TMP_182
Propogating parameters to local SSA variables...
End popogation
manager_21(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_22

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
Converting this
1
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
Written func info: Manager, controllers
Getting new address:
prev address? Controller
None
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_22', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
Converting TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: None
Fields: 
Finance Type: undef
Controller
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: Controller
Norm: 0
LF: Controller
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
Written func info: Controller, balanceOf
Getting new address:
prev address? None
-985
-985
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_24(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_23', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
RETURN TMP_182
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: -1
Den: -1
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
End popogation
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1
1
_1
account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_39 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_42 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_totalSupply_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
_balances_7

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1
1
_1
account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_39 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_42 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
Propogating parameters to local SSA variables...
_totalSupply_3

Name: _totalSupply Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
_balances_7

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_21(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
uint256
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1
1
_1
amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_46 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
Propogating parameters to local SSA variables...
End popogation
_totalSupply_1(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_totalSupply_1

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
Propogating parameters to local SSA variables...
End popogation
_totalSupply_1(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_totalSupply_1

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: 0
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation


_token_1(address) := ϕ(['REF_50'])
_amount_1(uint256) := ϕ(['REF_51'])
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
_balance_1(uint256) := TMP_108(uint256)
TMP_109 = CONVERT _token_1 to IERC20
TMP_110 = CONVERT this to address
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
_before_1(uint256) := TMP_111(uint256)
TMP_112 = CONVERT _token_1 to IERC20
TMP_113 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
TMP_116 = CONVERT this to address
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
_amount_2(uint256) := TMP_118(uint256)
TMP_119(bool) = _amount_2 > 0
CONDITION TMP_119
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
TMP_126(bool) = _shares_2 > 0
CONDITION TMP_126
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_amount_3(uint256) := TMP_120(uint256)
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_122(bool) = TMP_121 > 0
CONDITION TMP_122
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_129(bool) = TMP_128 <= totalDepositCap_13
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
_shares_1(uint256) := _amount_5(uint256)
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
_amount_4(uint256) := TMP_125(uint256)
Emit Deposit(msg.sender,_shares_2)


[[], [], 'u', '_token', [], -1, -991]

Name: _token Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amount Function: deposit
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-991
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -991
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-991
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -991
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: totalDepositCap Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation



depositMultiple
Finding type for _tokens...
address[]
prev address? u
-984
Finding type for _amounts...
uint256[]
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
_tokens_0 (-> ['STORAGE__tokens'])
_amounts_0 (-> ['STORAGE__amounts'])


REF_46 -> LENGTH _tokens_1 (-> [])
REF_47 -> LENGTH _amounts_1 (-> [])
TMP_134(bool) = REF_46 == REF_47
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_48 -> LENGTH _amounts_1 (-> [])
TMP_136(bool) = i_1 < REF_48
CONDITION TMP_136
REF_50(address) -> _tokens_1 (-> [])[i_1]
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
_shares_2(uint256) := TMP_138(uint256)
TMP_139(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1


[[], [], 'u', None, [], -1, -984]

Name: _tokens Function: depositMultiple
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amounts Function: depositMultiple
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])
)
])
[]
 [
> 
->
(-
 (
1 
_1
_amounts

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_tokens_1 (-> [])
)
])
[]
 [
> 
->
(-
 (
1 
_1
_tokens

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_0', 'i_2'])
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_136(bool) = i_1 < REF_48
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1
1
_1
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_tokens_1 (-> [])

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _tokens_1 (-> [])[i_1]
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-983
-983
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -983
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-982
-982
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -982
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: totalDepositCap Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-981
-981
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -981
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-980
-980
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -980
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: totalDepositCap Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_2(uint256) := TMP_138(uint256)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
i_1
1
_1
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_139(uint8) := i_1(uint8)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef


REF_46 -> LENGTH _tokens_1 (-> [])
REF_47 -> LENGTH _amounts_1 (-> [])
TMP_134(bool) = REF_46 == REF_47
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
i_1(uint8) := ϕ(['i_0', 'i_2'])
REF_48 -> LENGTH _amounts_1 (-> [])
TMP_136(bool) = i_1 < REF_48
CONDITION TMP_136
REF_50(address) -> _tokens_1 (-> [])[i_1]
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
_shares_2(uint256) := TMP_138(uint256)
TMP_139(uint8) := i_1(uint8)
i_2(uint8) = i_1 + 1


[[], [], 'u', None, [], -1, -984]

Name: _tokens Function: depositMultiple
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
[[1], [-1], 0, None, [], -1, 'u']

Name: _amounts Function: depositMultiple
Num: 1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_tokens_1 (-> [])

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := ϕ(['_shares_2', '_shares_0'])
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_0', 'i_2'])
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: REF_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_136(bool) = i_1 < REF_48
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
_amounts_1 (-> [])

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_1
1
_1
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_1
1
_1
_shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_tokens_1 (-> [])

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _tokens_1 (-> [])[i_1]
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: None
Num: 
Den: 
Address: -984
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: None
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-979
-979
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -979
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-978
-978
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -978
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: totalDepositCap Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_8', 'totalDepositCap_11', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-977
-977
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -977
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-976
-976
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -976
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
_amount_1
1
_1
_amount

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_109 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
Converting this
1
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_6'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_1

Name: _amount_1 Function: deposit
Num: 1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_112 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
Converting this
1
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
Propogating parameters to local SSA variables...
_before_1

Name: _before Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: ERC20
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
Converting this
1
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
Written func info: ERC20, balanceOf
Handling balance function!
-984
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_13', 'totalDepositCap_11', 'totalDepositCap_8', 'totalDepositCap_2', 'totalDepositCap_1', 'totalDepositCap_10', 'totalDepositCap_7'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_2(uint256) := ϕ(['_shares_1', '_shares_0'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
Propogating parameters to local SSA variables...
_amount_2

Name: _amount Function: deposit
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_token_1

Name: _token_1 Function: deposit
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['TMP_188', '_amount_2'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
End popogation
TMP_204 = CONVERT _token_1 to ExtendedIERC20
Converting _token_1

Name: _token_1 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: _token
Fields: 
Finance Type: undef
UNKNOWN
[i]Type for TMP_204

Name: TMP_204 Function: _normalizeDecimals
Num: 
Den: 
Address: -984
Norm: u
LF: UNKNOWN
Fields: 
Finance Type: undef
TMP_205(uint8) = HIGH_LEVEL_CALL, dest:TMP_204(ExtendedIERC20), function:decimals, arguments:[]  
Written func info: UNKNOWN, decimals
Handling balance function!
-984
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_206 = CONVERT TMP_205 to uint256
Converting TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_206(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_207(bool) = _decimals_1 < 18
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_decimals_1
1
_1
_decimals

Name: _decimals Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1
1
_1
_amount

Name: _amount_1 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -984
Den: 
Address: u
Norm: *
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
RETURN _amount_3
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
totalDepositCap_13
3
13
_1
totalDepositCap

Name: totalDepositCap Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_5

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_amount_3

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balance_1

Name: _balance Function: deposit
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: 1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_2

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_shares_2(uint256) := TMP_138(uint256)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
i_1
1
_1
i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_139(uint8) := i_1(uint8)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef



withdraw
Finding type for _shares...
uint256
Finding type for _output...
address
prev address? u
-975
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _output
    fields: []
    fintype: -1
_shares_0
_output_0


_shares_1(uint256) := ϕ(['TMP_170'])
_output_1(address) := ϕ(['_output_1'])
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
manager_13(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
manager_14(IManager) := ϕ(['manager_33'])
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
manager_15(IManager) := ϕ(['manager_24'])
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
_amount_1(uint256) := TMP_143(uint256)
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
MAX_9(uint256) := ϕ(['MAX_8', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
manager_18(IManager) := ϕ(['manager_17', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
CONDITION TMP_146
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
_withdrawalProtection_1(uint256) := TMP_148(uint256)
TMP_150 = CONVERT _output_1 to IERC20
TMP_151 = CONVERT this to address
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
manager_19(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_18', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
_balance_1(uint256) := TMP_152(uint256)
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
_amount_2(uint256) := TMP_149(uint256)
TMP_153(bool) = _balance_1 < _amount_3
CONDITION TMP_153
TMP_154 = CONVERT this to address
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
manager_20(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
TMP_156 = CONVERT TMP_155 to IController
_controller_1(IController) := TMP_156(IController)
TMP_166 = CONVERT _output_1 to IERC20
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
_toWithdraw_1(uint256) := TMP_157(uint256)
Emit Withdraw(msg.sender,_amount_5)
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
TMP_159(bool) = TMP_158 > 0
CONDITION TMP_159
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
TMP_161 = CONVERT _output_1 to IERC20
TMP_162 = CONVERT this to address
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
_after_1(uint256) := TMP_163(uint256)
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
_diff_1(uint256) := TMP_164(uint256)
TMP_165(bool) = _diff_1 < _toWithdraw_1
CONDITION TMP_165
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])
_amount_4(uint256) := _after_1(uint256)


[[-1], [-1], 0, None, [], -1, 'u']

Name: _shares Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_output', [], -1, -975]

Name: _output Function: withdraw
Num: 
Den: 
Address: -975
Norm: u
LF: _output
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
_shares_1(uint256) := ϕ(['TMP_170'])
[i]Type for _shares

Name: _shares Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_output_1(address) := ϕ(['_output_1'])
[i]Type for _output

Name: _output Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
MAX_4(uint256) := ϕ(['MAX_0', 'MAX_11', 'MAX_13', 'MAX_3', 'MAX_9'])
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_13(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_output_1
1
_1
_output

Name: _output_1 Function: withdraw
Num: 
Den: 
Address: -975
Norm: u
LF: _output
Fields: 
Finance Type: undef
End popogation
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -975
Norm: u
LF: _output
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-974
-974
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -974
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
Propogating parameters to local SSA variables...
End popogation
_token_1(address) := ϕ(['_output_1', '_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: _output
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_33', 'manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_0', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_token_1
1
_1
_token

Name: _token_1 Function: checkToken
Num: 
Den: 
Address: -975
Norm: u
LF: _output
Fields: 
Finance Type: undef
manager_32

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_31

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
End popogation
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_31', 'manager_37', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
Written func info: Manager, vaults
Getting new address:
prev address? None
-973
-973
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: 
Den: -1
Address: -973
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_6', 'manager_1', 'manager_12', 'manager_26', 'manager_30', 'manager_37', 'manager_32', 'manager_33', 'manager_24', 'manager_39', 'manager_35', 'manager_19', 'manager_28'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
Converting this
1
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 1
Norm: u
LF: Vault
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
manager_14(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_1
1
_1
_shares

Name: _shares_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_140(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_140

Name: TMP_140 Function: withdraw
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_15(IManager) := ϕ(['manager_24'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
[i]Type for TMP_141

Name: TMP_141 Function: withdraw
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_142

Name: TMP_142 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
[i]Type for TMP_143

Name: TMP_143 Function: withdraw
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
_amount_1(uint256) := TMP_143(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 1
Den: -1
Address: -985
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_shares_1

Name: _shares_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
Propogating parameters to local SSA variables...
End popogation
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_9(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1
1
_1
account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_48 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1
1
_1
amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_51 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
_balances_10
0
10
_1
_balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_24(uint256) -> _balances_10[account_1]
uint256
[i]Type for REF_24

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_25(uint256) -> _balances_10[account_1]
uint256
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_24 (->_balances_11) := TMP_53(uint256)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_totalSupply_6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_7(uint256) := TMP_54(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_55 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_1'])
[i]Type for amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_9(mapping(address => uint256)) := ϕ(['_balances_8', '_balances_5', '_balances_11', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
account_1
1
_1
account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_48 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1
1
_1
amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_51 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
End popogation
from_1(address) := ϕ(['account_1', 'sender_1', 'TMP_42'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
_balances_10
0
10
_1
_balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
REF_24(uint256) -> _balances_10[account_1]
uint256
[i]Type for REF_24

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_25(uint256) -> _balances_10[account_1]
uint256
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
REF_24 (->_balances_11) := TMP_53(uint256)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_totalSupply_6

Name: _totalSupply Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_totalSupply_7(uint256) := TMP_54(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
amount_1

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
account_1

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Fields: 
Finance Type: undef
End popogation
TMP_55 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_17
7
17
_1
manager

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
End popogation
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
Written func info: None, withdrawalProtectionFee
Handling balance function!
u
Executing Group 7
[*] Tested 3 warnings for yAxis
Group 7 complete
Testing complete
