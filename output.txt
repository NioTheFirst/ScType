Switched global version to 0.8.6
Checking DrawCalculator
Checking PrizeDistributionBuffer
Checking PrizeDistributor
Checking IControlledToken
Checking IDrawBeacon
Checking IDrawBuffer
Checking IDrawCalculator
Checking IPrizeDistributionBuffer
Checking IPrizeDistributor
Checking ITicket
Checking DrawRingBufferLib
Checking ExtendedSafeCastLib
Checking ObservationLib
Checking OverflowSafeComparatorLib
Checking RingBufferLib
Checking TwabLib
Checking IERC20
Checking SafeERC20
Checking Address
Checking SafeCast
Checking Manageable
Checking Ownable
Checking RNGInterface
Add to address_to_label {'global:_owner': 1}
Add to address_to_label {'global:_owner': 1, 'global:_pendingOwner': 2}
Add to address_to_label {'global:_owner': 1, 'global:_pendingOwner': 2, 'constructor:_owner': -999}
Add to address_to_label {'global:_owner': 1, 'global:_pendingOwner': 2, 'constructor:_owner': -999, 'calculate:_user': -998}
Add to address_to_label {'global:_owner': 1, 'global:_pendingOwner': 2, 'constructor:_owner': -999, 'calculate:_user': -998, 'getNormalizedBalancesForDrawIds:_user': -997}
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
State_var: TIERS_LENGTH
Finding type for TIERS_LENGTH(uint8 ... )
State_var: drawBuffer
Finding type for drawBuffer(IDrawBuffer ... )
State_var: _pendingOwner
Finding type for _pendingOwner(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
State_var: prizeDistributionBuffer
Finding type for prizeDistributionBuffer(IPrizeDistributionBuffer ... )
State_var: ticket
Finding type for ticket(ITicket ... )



constructor
Finding type for _owner(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for _ticket(ITicket ... )
Finding type for _drawBuffer(IDrawBuffer ... )
Finding type for _prizeDistributionBuffer(IPrizeDistributionBuffer ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _owner
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


INTERNAL_CALL, Ownable.constructor(address)(_owner_1)
TMP_13 = CONVERT _ticket_1 to address
TMP_14 = CONVERT 0 to address
TMP_15(bool) = TMP_13 != TMP_14
TMP_16(None) = SOLIDITY_CALL require(bool,string)(TMP_15,DrawCalc/ticket-not-zero)
TMP_17 = CONVERT _prizeDistributionBuffer_1 to address
TMP_18 = CONVERT 0 to address
TMP_19(bool) = TMP_17 != TMP_18
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,DrawCalc/pdb-not-zero)
TMP_21 = CONVERT _drawBuffer_1 to address
TMP_22 = CONVERT 0 to address
TMP_23(bool) = TMP_21 != TMP_22
TMP_24(None) = SOLIDITY_CALL require(bool,string)(TMP_23,DrawCalc/dh-not-zero)
ticket_1(ITicket) := _ticket_1(ITicket)
drawBuffer_1(IDrawBuffer) := _drawBuffer_1(IDrawBuffer)
prizeDistributionBuffer_1(IPrizeDistributionBuffer) := _prizeDistributionBuffer_1(IPrizeDistributionBuffer)
Emit Deployed(_ticket_1,_drawBuffer_1,_prizeDistributionBuffer_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable.constructor(address)(_owner_1)
init
end
[[], [], 'u', '_owner', [], -1, -999, 'u']

Name: _initialOwner Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _initialOwner_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_initialOwner_1(address) := ϕ(['_owner_1', '_owner_1', '_owner_1'])
Phi
[i]Type for _initialOwner

Name: _initialOwner Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._setOwner(address)(_initialOwner_1)
init
end
[[], [], 'u', '_owner', [], -1, -999, 'u']

Name: _newOwner Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _newOwner_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
Name: _owner, Num: 2
Globalname: _owner
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_newOwner_1(address) := ϕ(['TMP_580', '_pendingOwner_4', '_initialOwner_1'])
Phi
[i]Type for _newOwner

Name: _newOwner Function: _setOwner
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _oldOwner, Num: 1
Globalname: _oldOwner
End popogation
_oldOwner_1(address) := _owner_2(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _oldOwner

Name: _oldOwner Function: _setOwner
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _owner, Num: 3
Globalname: _owner
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
_owner_3(address) := _newOwner_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: _newOwner_1 Function: _setOwner
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_newOwner_1(address) := ϕ(['TMP_580', '_pendingOwner_4', '_initialOwner_1'])
Phi
[i]Type for _newOwner

Name: _newOwner Function: _setOwner
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _oldOwner, Num: 1
Globalname: _oldOwner
End popogation
_oldOwner_1(address) := _owner_2(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _oldOwner

Name: _oldOwner Function: _setOwner
Num: -1
Den: -1
Address: 1
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
_owner_3(address) := _newOwner_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: _initialOwner_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Phid
_initialOwner_1(address) := ϕ(['_owner_1', '_owner_1', '_owner_1'])
Phi
[i]Type for _initialOwner

Name: _initialOwner Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._setOwner(address)(_initialOwner_1)
init
end
Propogating parameters and globals to SSA variables...
Name: _ticket, Num: 1
Globalname: _ticket
End popogation
TMP_13 = CONVERT _ticket_1 to address
Converting _ticket_1

Name: _ticket_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_13

Name: TMP_13 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_14

Name: TMP_14 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(bool) = TMP_13 != TMP_14
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(None) = SOLIDITY_CALL require(bool,string)(TMP_15,DrawCalc/ticket-not-zero)
[i]Type for TMP_16

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
End popogation
TMP_17 = CONVERT _prizeDistributionBuffer_1 to address
Converting _prizeDistributionBuffer_1

Name: _prizeDistributionBuffer_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_17

Name: TMP_17 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(bool) = TMP_17 != TMP_18
[i]Type for TMP_19

Name: TMP_19 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,DrawCalc/pdb-not-zero)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
End popogation
TMP_21 = CONVERT _drawBuffer_1 to address
Converting _drawBuffer_1

Name: _drawBuffer_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_21

Name: TMP_21 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_22

Name: TMP_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = TMP_21 != TMP_22
[i]Type for TMP_23

Name: TMP_23 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(None) = SOLIDITY_CALL require(bool,string)(TMP_23,DrawCalc/dh-not-zero)
[i]Type for TMP_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _ticket, Num: 1
Globalname: _ticket
Name: ticket, Num: 1
Globalname: ticket
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
ticket_1(ITicket) := _ticket_1(ITicket)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for ticket

Name: ticket Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
Name: drawBuffer, Num: 1
Globalname: drawBuffer
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
drawBuffer_1(IDrawBuffer) := _drawBuffer_1(IDrawBuffer)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for drawBuffer

Name: drawBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
Name: prizeDistributionBuffer, Num: 1
Globalname: prizeDistributionBuffer
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
prizeDistributionBuffer_1(IPrizeDistributionBuffer) := _prizeDistributionBuffer_1(IPrizeDistributionBuffer)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for prizeDistributionBuffer

Name: prizeDistributionBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
Name: _ticket, Num: 1
Globalname: _ticket
End popogation


INTERNAL_CALL, Ownable.constructor(address)(_owner_1)
TMP_13 = CONVERT _ticket_1 to address
TMP_14 = CONVERT 0 to address
TMP_15(bool) = TMP_13 != TMP_14
TMP_16(None) = SOLIDITY_CALL require(bool,string)(TMP_15,DrawCalc/ticket-not-zero)
TMP_17 = CONVERT _prizeDistributionBuffer_1 to address
TMP_18 = CONVERT 0 to address
TMP_19(bool) = TMP_17 != TMP_18
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,DrawCalc/pdb-not-zero)
TMP_21 = CONVERT _drawBuffer_1 to address
TMP_22 = CONVERT 0 to address
TMP_23(bool) = TMP_21 != TMP_22
TMP_24(None) = SOLIDITY_CALL require(bool,string)(TMP_23,DrawCalc/dh-not-zero)
ticket_1(ITicket) := _ticket_1(ITicket)
drawBuffer_1(IDrawBuffer) := _drawBuffer_1(IDrawBuffer)
prizeDistributionBuffer_1(IPrizeDistributionBuffer) := _prizeDistributionBuffer_1(IPrizeDistributionBuffer)
Emit Deployed(_ticket_1,_drawBuffer_1,_prizeDistributionBuffer_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable.constructor(address)(_owner_1)
init
end
Propogating parameters and globals to SSA variables...
Name: _ticket, Num: 1
Globalname: _ticket
End popogation
TMP_13 = CONVERT _ticket_1 to address
Converting _ticket_1

Name: _ticket_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_13

Name: TMP_13 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_14 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_14

Name: TMP_14 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(bool) = TMP_13 != TMP_14
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(None) = SOLIDITY_CALL require(bool,string)(TMP_15,DrawCalc/ticket-not-zero)
[i]Type for TMP_16

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
End popogation
TMP_17 = CONVERT _prizeDistributionBuffer_1 to address
Converting _prizeDistributionBuffer_1

Name: _prizeDistributionBuffer_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_17

Name: TMP_17 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(bool) = TMP_17 != TMP_18
[i]Type for TMP_19

Name: TMP_19 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(None) = SOLIDITY_CALL require(bool,string)(TMP_19,DrawCalc/pdb-not-zero)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
End popogation
TMP_21 = CONVERT _drawBuffer_1 to address
Converting _drawBuffer_1

Name: _drawBuffer_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_21

Name: TMP_21 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_22

Name: TMP_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = TMP_21 != TMP_22
[i]Type for TMP_23

Name: TMP_23 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(None) = SOLIDITY_CALL require(bool,string)(TMP_23,DrawCalc/dh-not-zero)
[i]Type for TMP_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _ticket, Num: 1
Globalname: _ticket
End popogation
ticket_1(ITicket) := _ticket_1(ITicket)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for ticket

Name: ticket Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
End popogation
drawBuffer_1(IDrawBuffer) := _drawBuffer_1(IDrawBuffer)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for drawBuffer

Name: drawBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
End popogation
prizeDistributionBuffer_1(IPrizeDistributionBuffer) := _prizeDistributionBuffer_1(IPrizeDistributionBuffer)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for prizeDistributionBuffer

Name: prizeDistributionBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _prizeDistributionBuffer, Num: 1
Globalname: _prizeDistributionBuffer
Name: _drawBuffer, Num: 1
Globalname: _drawBuffer
Name: _ticket, Num: 1
Globalname: _ticket
End popogation



calculate
Finding type for _user(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _drawIds(uint32[] ... )
Finding type for _pickIndicesForDraws(bytes ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _user
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1


drawBuffer_2(IDrawBuffer) := ϕ(['drawBuffer_6', 'drawBuffer_0', 'drawBuffer_3', 'drawBuffer_1'])
prizeDistributionBuffer_2(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_0', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_4', 'prizeDistributionBuffer_8'])
TMP_27(uint64[][]) = SOLIDITY_CALL abi.decode()(_pickIndicesForDraws_1,uint64[][])
pickIndices_1(uint64[][]) := TMP_27(uint64[][])
REF_1 -> LENGTH pickIndices_1
REF_2 -> LENGTH _drawIds_1 (-> [])
TMP_28(bool) = REF_1 == REF_2
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,DrawCalc/invalid-pick-indices-length)
TMP_30(IDrawBeacon.Draw[]) = HIGH_LEVEL_CALL, dest:drawBuffer_2(IDrawBuffer), function:getDraws, arguments:['_drawIds_1 (-> [])']  
drawBuffer_3(IDrawBuffer) := ϕ(['drawBuffer_6', 'drawBuffer_2', 'drawBuffer_3', 'drawBuffer_1'])
prizeDistributionBuffer_3(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_4', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_2', 'prizeDistributionBuffer_8'])
draws_1(IDrawBeacon.Draw[]) := TMP_30(IDrawBeacon.Draw[])
TMP_31(IPrizeDistributionBuffer.PrizeDistribution[]) = HIGH_LEVEL_CALL, dest:prizeDistributionBuffer_3(IPrizeDistributionBuffer), function:getPrizeDistributions, arguments:['_drawIds_1 (-> [])']  
prizeDistributionBuffer_4(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_3', 'prizeDistributionBuffer_4', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_8'])
_prizeDistributions_1(IPrizeDistributionBuffer.PrizeDistribution[]) := TMP_31(IPrizeDistributionBuffer.PrizeDistribution[])
TMP_32(uint256[]) = INTERNAL_CALL, DrawCalculator._getNormalizedBalancesAt(address,IDrawBeacon.Draw[],IPrizeDistributionBuffer.PrizeDistribution[])(_user_1,draws_1,_prizeDistributions_1)
userBalances_1(uint256[]) := TMP_32(uint256[])
TMP_33(bytes) = SOLIDITY_CALL abi.encodePacked()(_user_1)
TMP_34(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_33)
_userRandomNumber_1(bytes32) := TMP_34(bytes32)
TUPLE_0(uint256[],bytes) = INTERNAL_CALL, DrawCalculator._calculatePrizesAwardable(uint256[],bytes32,IDrawBeacon.Draw[],uint64[][],IPrizeDistributionBuffer.PrizeDistribution[])(userBalances_1,_userRandomNumber_1,draws_1,pickIndices_1,_prizeDistributions_1)
RETURN TUPLE_0


Propogating parameters and globals to SSA variables...
End popogation
Name: drawBuffer, Num: 2
Globalname: drawBuffer
global...

Name: drawBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: prizeDistributionBuffer, Num: 2
Globalname: prizeDistributionBuffer
global...

Name: prizeDistributionBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
drawBuffer_2(IDrawBuffer) := ϕ(['drawBuffer_6', 'drawBuffer_0', 'drawBuffer_3', 'drawBuffer_1'])
Phi
[i]Type for drawBuffer

Name: drawBuffer Function: calculate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
prizeDistributionBuffer_2(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_0', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_4', 'prizeDistributionBuffer_8'])
Phi
[i]Type for prizeDistributionBuffer

Name: prizeDistributionBuffer Function: calculate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _pickIndicesForDraws, Num: 1
Globalname: _pickIndicesForDraws
Name: pickIndices, Num: 1
Globalname: pickIndices
End popogation
TMP_27(uint64[][]) = SOLIDITY_CALL abi.decode()(_pickIndicesForDraws_1,uint64[][])
[i]Type for TMP_27

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pickIndices_1(uint64[][]) := TMP_27(uint64[][])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for pickIndices

Name: pickIndices Function: calculate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pickIndices, Num: 1
Globalname: pickIndices
Name: _drawIds, Num: 1 (-> [])
Globalname: _drawIds
End popogation
REF_1 -> LENGTH pickIndices_1
[i]Type for REF_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_2 -> LENGTH _drawIds_1 (-> [])
[i]Type for REF_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_28(bool) = REF_1 == REF_2
[i]Type for TMP_28

Name: TMP_28 Function: calculate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,DrawCalc/invalid-pick-indices-length)
[i]Type for TMP_29

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawIds, Num: 1 (-> [])
Globalname: _drawIds
Name: draws, Num: 1
Globalname: draws
End popogation
Name: drawBuffer, Num: 3
Globalname: drawBuffer
global...

Name: drawBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: prizeDistributionBuffer, Num: 3
Globalname: prizeDistributionBuffer
global...

Name: prizeDistributionBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_30(IDrawBeacon.Draw[]) = HIGH_LEVEL_CALL, dest:drawBuffer_2(IDrawBuffer), function:getDraws, arguments:['_drawIds_1 (-> [])']  
High Call: getDraws
Running querryfc
Written func info: DrawBuffer, getDraws
Retvar: ('c', [-1], [-1], 'u', 'u', None)
([-1], [-1], 'u', 'u', None, -1)
calculate
TMP_30
winningRandomNumber
OUT KEY: calculate_TMP_30_winningRandomNumber
calculate
TMP_30
drawId
OUT KEY: calculate_TMP_30_drawId
calculate
TMP_30
timestamp
OUT KEY: calculate_TMP_30_timestamp
calculate
TMP_30
beaconPeriodStartedAt
OUT KEY: calculate_TMP_30_beaconPeriodStartedAt
calculate
TMP_30
beaconPeriodSeconds
OUT KEY: calculate_TMP_30_beaconPeriodSeconds
[i]Type for TMP_30

Name: TMP_30 Function: calculate
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
drawBuffer_3(IDrawBuffer) := ϕ(['drawBuffer_6', 'drawBuffer_2', 'drawBuffer_3', 'drawBuffer_1'])
Phi
[i]Type for drawBuffer

Name: drawBuffer Function: calculate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
prizeDistributionBuffer_3(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_4', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_2', 'prizeDistributionBuffer_8'])
Phi
[i]Type for prizeDistributionBuffer

Name: prizeDistributionBuffer Function: calculate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
draws_1(IDrawBeacon.Draw[]) := TMP_30(IDrawBeacon.Draw[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for draws

Name: draws Function: calculate
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _drawIds, Num: 1 (-> [])
Globalname: _drawIds
Name: _prizeDistributions, Num: 1
Globalname: _prizeDistributions
End popogation
Name: prizeDistributionBuffer, Num: 4
Globalname: prizeDistributionBuffer
global...

Name: prizeDistributionBuffer Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_31(IPrizeDistributionBuffer.PrizeDistribution[]) = HIGH_LEVEL_CALL, dest:prizeDistributionBuffer_3(IPrizeDistributionBuffer), function:getPrizeDistributions, arguments:['_drawIds_1 (-> [])']  
High Call: getPrizeDistributions
Running querryfc
Written func info: PrizeDistributionBuffer, getPrizeDistributions
Retvar: ('c', [-1], [-1], 'u', 'u', None)
([-1], [-1], 'u', 'u', None, -1)
calculate
TMP_31
bitRangeSize
OUT KEY: calculate_TMP_31_bitRangeSize
calculate
TMP_31
matchCardinality
OUT KEY: calculate_TMP_31_matchCardinality
calculate
TMP_31
startTimestampOffset
OUT KEY: calculate_TMP_31_startTimestampOffset
calculate
TMP_31
endTimestampOffset
OUT KEY: calculate_TMP_31_endTimestampOffset
calculate
TMP_31
maxPicksPerUser
OUT KEY: calculate_TMP_31_maxPicksPerUser
calculate
TMP_31
numberOfPicks
OUT KEY: calculate_TMP_31_numberOfPicks
calculate
TMP_31
tiers
OUT KEY: calculate_TMP_31_tiers
calculate
TMP_31
prize
OUT KEY: calculate_TMP_31_prize
[i]Type for TMP_31

Name: TMP_31 Function: calculate
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
prizeDistributionBuffer_4(IPrizeDistributionBuffer) := ϕ(['prizeDistributionBuffer_3', 'prizeDistributionBuffer_4', 'prizeDistributionBuffer_1', 'prizeDistributionBuffer_8'])
Phi
[i]Type for prizeDistributionBuffer

Name: prizeDistributionBuffer Function: calculate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_prizeDistributions_1(IPrizeDistributionBuffer.PrizeDistribution[]) := TMP_31(IPrizeDistributionBuffer.PrizeDistribution[])
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _prizeDistributions

Name: _prizeDistributions Function: calculate
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userBalances, Num: 1
Globalname: userBalances
End popogation
TMP_32(uint256[]) = INTERNAL_CALL, DrawCalculator._getNormalizedBalancesAt(address,IDrawBeacon.Draw[],IPrizeDistributionBuffer.PrizeDistribution[])(_user_1,draws_1,_prizeDistributions_1)
init
end
init
end
init
end
[[], [], 'u', '_user', [], -1, -998, 'u']

Name: _user Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _user
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, None, 'u']

Name: _draws Function: None
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, None, 'u']

Name: _prizeDistributions Function: None
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _user_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _user
Value: u
Fields: 
Finance Type: undef
Phid

Name: _draws_1 Function: None
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _prizeDistributions_1 Function: None
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: ticket, Num: 2
Globalname: ticket
global...

Name: ticket Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_user_1(address) := ϕ(['_user_1', '_user_1'])
Phi
[i]Type for _user

Name: _user Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: -998
Norm: u
LF: _user
Value: u
Fields: 
Finance Type: undef
XXXX
_draws_1(IDrawBeacon.Draw[]) := ϕ(['draws_1', '_draws_1'])
Phi
[i]Type for _draws

Name: _draws Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_prizeDistributions_1(IPrizeDistributionBuffer.PrizeDistribution[]) := ϕ(['_prizeDistributions_1', '_prizeDistributions_1'])
Phi
[i]Type for _prizeDistributions

Name: _prizeDistributions Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ticket_2(ITicket) := ϕ(['ticket_4', 'ticket_1', 'ticket_0'])
Phi
[i]Type for ticket

Name: ticket Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timestampsWithStartCutoffTimes, Num: 1
Globalname: _timestampsWithStartCutoffTimes
End popogation
REF_21 -> LENGTH _draws_1
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_50 = new uint64[](REF_21)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timestampsWithStartCutoffTimes_1(uint64[]) := TMP_50(uint64)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _timestampsWithStartCutoffTimes

Name: _timestampsWithStartCutoffTimes Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timestampsWithEndCutoffTimes, Num: 1
Globalname: _timestampsWithEndCutoffTimes
End popogation
REF_22 -> LENGTH _draws_1
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_52 = new uint64[](REF_22)
[i]Type for TMP_52

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timestampsWithEndCutoffTimes_1(uint64[]) := TMP_52(uint64)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for _timestampsWithEndCutoffTimes

Name: _timestampsWithEndCutoffTimes Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint32) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: i, Num: 2
Globalname: i
End popogation
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
i_2(uint32) := ϕ(['i_1', 'i_3'])
Phi
init
end
[i]Type for i

Name: i Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
REF_23 -> LENGTH _draws_1
[i]Type for REF_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_53(bool) = i_2 < REF_23
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_53

Name: TMP_53 Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _timestampsWithStartCutoffTimes, Num: 2
Globalname: _timestampsWithStartCutoffTimes
End popogation
Name: _timestampsWithStartCutoffTimes, Num: 2
Globalname: _timestampsWithStartCutoffTimes

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_24(uint64) -> _timestampsWithStartCutoffTimes_1[i_2]
INDEX
[i]Type for REF_24

Name: _timestampsWithStartCutoffTimes Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_25(IDrawBeacon.Draw) -> _draws_1[i_2]
INDEX
[i]Type for REF_25

Name: _draws Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_26(uint64) -> REF_25.timestamp
MEMBER
init
end
init
end
OUT KEY: _getNormalizedBalancesAt__draws_timestamp
OUT KEY: _getNormalizedBalancesAt__timestamp
No field found
[i]Type for REF_26

Name: _draws.timestamp Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_25, Field: timestamp
init
end
Finance type key: (-1, -1)
XXXX
REF_27(IPrizeDistributionBuffer.PrizeDistribution) -> _prizeDistributions_1[i_2]
INDEX
[i]Type for REF_27

Name: _prizeDistributions Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_28(uint32) -> REF_27.startTimestampOffset
MEMBER
init
end
init
end
OUT KEY: _getNormalizedBalancesAt__prizeDistributions_startTimestampOffset
OUT KEY: _getNormalizedBalancesAt__startTimestampOffset
No field found
[i]Type for REF_28

Name: _prizeDistributions.startTimestampOffset Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_27, Field: startTimestampOffset
init
end
Finance type key: (-1, -1)
XXXX
TMP_54(uint64) = REF_26 - REF_28
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_54

Name: TMP_54 Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timestampsWithStartCutoffTimes_2(uint64[]) := ϕ(['_timestampsWithStartCutoffTimes_1'])
Phi
[i]Type for _timestampsWithStartCutoffTimes

Name: _timestampsWithStartCutoffTimes Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_24 (->_timestampsWithStartCutoffTimes_2) := TMP_54(uint64)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_24

Name: REF_24 Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _timestampsWithEndCutoffTimes, Num: 2
Globalname: _timestampsWithEndCutoffTimes
End popogation
Name: _timestampsWithEndCutoffTimes, Num: 2
Globalname: _timestampsWithEndCutoffTimes

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_29(uint64) -> _timestampsWithEndCutoffTimes_1[i_2]
INDEX
[i]Type for REF_29

Name: _timestampsWithEndCutoffTimes Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_30(IDrawBeacon.Draw) -> _draws_1[i_2]
INDEX
[i]Type for REF_30

Name: _draws Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: timestamp
Finance Type: undef
Root: None, Field: None
XXXX
REF_31(uint64) -> REF_30.timestamp
MEMBER
init
end
init
end
[i]Type for REF_31

Name: _draws.timestamp Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_30, Field: timestamp
init
end
Finance type key: (-1, -1)
XXXX
REF_32(IPrizeDistributionBuffer.PrizeDistribution) -> _prizeDistributions_1[i_2]
INDEX
[i]Type for REF_32

Name: _prizeDistributions Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: None
Norm: u
LF: None
Value: u
Fields: startTimestampOffset
Finance Type: undef
Root: None, Field: None
XXXX
REF_33(uint32) -> REF_32.endTimestampOffset
MEMBER
init
end
init
end
OUT KEY: _getNormalizedBalancesAt__prizeDistributions_endTimestampOffset
OUT KEY: _getNormalizedBalancesAt__endTimestampOffset
No field found
[i]Type for REF_33

Name: _prizeDistributions.endTimestampOffset Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_32, Field: endTimestampOffset
init
end
Finance type key: (-1, -1)
XXXX
TMP_55(uint64) = REF_31 - REF_33
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_55

Name: TMP_55 Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_timestampsWithEndCutoffTimes_2(uint64[]) := ϕ(['_timestampsWithEndCutoffTimes_1'])
Phi
[i]Type for _timestampsWithEndCutoffTimes

Name: _timestampsWithEndCutoffTimes Function: _getNormalizedBalancesAt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_29 (->_timestampsWithEndCutoffTimes_2) := TMP_55(uint64)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_29

Name: REF_29 Function: _getNormalizedBalancesAt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: _timestampsWithStartCutoffTimes, Num: 1
Globalname: _timestampsWithStartCutoffTimes
Name: _timestampsWithEndCutoffTimes, Num: 1
Globalname: _timestampsWithEndCutoffTimes
Name: balances, Num: 1
Globalname: balances
End popogation
Name: ticket, Num: 3
Globalname: ticket
global...

Name: ticket Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_57(uint256[]) = HIGH_LEVEL_CALL, dest:ticket_2(ITicket), function:getAverageBalancesBetween, arguments:['_user_1', '_timestampsWithStartCutoffTimes_1', '_timestampsWithEndCutoffTimes_1']  
High Call: getAverageBalancesBetween
Running querryfc
Written func info: Ticket, getAverageBalancesBetween
Retvar: ('c', ['global:tokenA'], ['-1'], 6, "'u'", None)
{'global:_owner': 1, 'global:_pendingOwner': 2, 'constructor:_owner': -999, 'calculate:_user': -998, 'getNormalizedBalancesForDrawIds:_user': -997}
Add to address_to_label {'global:_owner': 1, 'global:_pendingOwner': 2, 'constructor:_owner': -999, 'calculate:_user': -998, 'getNormalizedBalancesForDrawIds:_user': -997, 'global:global:tokenA': 3}
Executing Group 10
[*] Tested 1 warnings for Pool Together v4
Group 10 complete
Testing complete
