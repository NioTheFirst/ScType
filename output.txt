Switched global version to 0.8.7
Analyzed_contracts_count: 12
Add to address_to_label {'global:vaultToken': 1}
Add to address_to_label {'global:vaultToken': 1, 'pendingPremium:_index': -999}
Add to address_to_label {'global:vaultToken': 1, 'pendingPremium:_index': -999, 'allocatedCredit:_index': -998}
['[t]', 'global', 'lockedAmount', 'f:0']
['[t]', 'global', 'totalCredit', 'f:0']
['[t]', 'deposite', '_amount', 'f:0']
['[t]', 'allocateCredit', '_credit', 'f:0']
['[t]', 'worth', '_value', 'f:0']
['[t]', '_beforeTokenTransfer', 'amount', 'f:0']
State_var: initialized
Finding type for initialized(bool ... )
State_var: parameters
Finding type for parameters(IParameters ... )
Value: u
State_var: _balances
Finding type for _balances(mapping(address => uint256) ... )
Value: u
State_var: _totalSupply
Finding type for _totalSupply(uint256 ... )
Value: u
State_var: incident
Finding type for incident(PoolTemplate.Incident ... )
OUT KEY: global_incident_payoutNumerator
OUT KEY: global_incident_payoutDenominator
OUT KEY: global_incident_incidentTimestamp
OUT KEY: global_incident_merkleRoot
Value: u
State_var: indexList
Finding type for indexList(address[] ... )
prev address? u
global assignment: 2
2
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
State_var: indicies
Finding type for indicies(mapping(address => PoolTemplate.IndexInfo) ... )
OUT KEY: global_indicies_credit
OUT KEY: global_indicies_rewardDebt
OUT KEY: global_indicies_exist
Value: u
State_var: marketStatus
Finding type for marketStatus(PoolTemplate.MarketStatus ... )
Value: u
State_var: paused
Finding type for paused(bool ... )
State_var: _allowances
Finding type for _allowances(mapping(address => mapping(address => uint256)) ... )
Value: u
State_var: insurances
Finding type for insurances(mapping(uint256 => PoolTemplate.Insurance) ... )
OUT KEY: global_insurances_id
OUT KEY: global_insurances_startTime
OUT KEY: global_insurances_endTime
OUT KEY: global_insurances_amount
OUT KEY: global_insurances_target
OUT KEY: global_insurances_insured
OUT KEY: global_insurances_status
Value: u
State_var: lockedAmount
Finding type for lockedAmount(uint256 ... )

Name: lockedAmount Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
State_var: vault
Finding type for vault(IVault ... )
Value: u
State_var: withdrawalReq
Finding type for withdrawalReq(mapping(address => PoolTemplate.Withdrawal) ... )
OUT KEY: global_withdrawalReq_timestamp
OUT KEY: global_withdrawalReq_amount
Value: u
State_var: attributionDebt
Finding type for attributionDebt(uint256 ... )
Value: u
State_var: MAGIC_SCALE_1E6
Finding type for MAGIC_SCALE_1E6(uint256 ... )
Value: u
State_var: registry
Finding type for registry(IRegistry ... )
Value: u
State_var: rewardPerCredit
Finding type for rewardPerCredit(uint256 ... )
Value: u
State_var: totalCredit
Finding type for totalCredit(uint256 ... )

Name: totalCredit Function: global
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
State_var: pendingEnd
Finding type for pendingEnd(uint256 ... )
Value: u
State_var: _name
Finding type for _name(string ... )
Value: u
State_var: _decimals
Finding type for _decimals(uint8 ... )
Value: u
State_var: allInsuranceCount
Finding type for allInsuranceCount(uint256 ... )
Value: u
State_var: _symbol
Finding type for _symbol(string ... )
Value: u
State_var: tokenInitialized
Finding type for tokenInitialized(bool ... )



initialize
Function name: initialize
Finding type for _metaData(string ... )
Value: u
Param1: 
Name: _metaData Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _conditions(uint256[] ... )
Value: u
Param1: 
Name: _conditions Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _references(address[] ... )
prev address? u
-997
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Param1: 
Name: _references Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, -997, 'u']]
FIND RETURN
ENTRY_POINT
initialize(string,uint256[],address[])


initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
TMP_126(bool) = initialized_2 == False
TMP_127 = CONVERT _metaData_1 to bytes
REF_34 -> LENGTH TMP_127
TMP_128(bool) = REF_34 > 0
TMP_129(bool) = TMP_126 && TMP_128
REF_35(address) -> _references_1 (-> [])[0]
TMP_130 = CONVERT 0 to address
TMP_131(bool) = REF_35 != TMP_130
TMP_132(bool) = TMP_129 && TMP_131
REF_36(address) -> _references_1 (-> [])[1]
TMP_133 = CONVERT 0 to address
TMP_134(bool) = REF_36 != TMP_133
TMP_135(bool) = TMP_132 && TMP_134
REF_37(address) -> _references_1 (-> [])[2]
TMP_136 = CONVERT 0 to address
TMP_137(bool) = REF_37 != TMP_136
TMP_138(bool) = TMP_135 && TMP_137
REF_38(address) -> _references_1 (-> [])[3]
TMP_139 = CONVERT 0 to address
TMP_140(bool) = REF_38 != TMP_139
TMP_141(bool) = TMP_138 && TMP_140
REF_39(address) -> _references_1 (-> [])[4]
TMP_142 = CONVERT 0 to address
TMP_143(bool) = REF_39 != TMP_142
TMP_144(bool) = TMP_141 && TMP_143
REF_40(uint256) -> _conditions_1 (-> [])[0]
REF_41(uint256) -> _conditions_1 (-> [])[1]
TMP_145(bool) = REF_40 <= REF_41
TMP_146(bool) = TMP_144 && TMP_145
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
initialized_3(bool) := True(bool)
REF_43(address) -> _references_1 (-> [])[1]
TMP_148 = CONVERT REF_43 to IERC20Metadata
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
TMP_151 = CONVERT TMP_150 to string
_name_1(string) := TMP_151(string)
REF_46(address) -> _references_1 (-> [])[1]
TMP_152 = CONVERT REF_46 to IERC20Metadata
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
TMP_155 = CONVERT TMP_154 to string
_symbol_1(string) := TMP_155(string)
REF_48(address) -> _references_1 (-> [])[0]
TMP_156 = CONVERT REF_48 to IERC20Metadata
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
_decimals_1(uint8) := TMP_157(uint8)
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
REF_50(address) -> _references_1 (-> [])[2]
TMP_159 = CONVERT REF_50 to IRegistry
registry_1(IRegistry) := TMP_159(IRegistry)
REF_51(address) -> _references_1 (-> [])[3]
TMP_160 = CONVERT REF_51 to IParameters
parameters_1(IParameters) := TMP_160(IParameters)
REF_53(address) -> _references_1 (-> [])[1]
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
TMP_162 = CONVERT TMP_161 to IVault
vault_1(IVault) := TMP_162(IVault)
metadata_1(string) := _metaData_1(string)
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
REF_55(uint256) -> _conditions_1 (-> [])[1]
TMP_163(bool) = REF_55 > 0
CONDITION TMP_163
REF_56(uint256) -> _conditions_1 (-> [])[1]
REF_57(address) -> _references_1 (-> [])[4]
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _metaData Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _conditions Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, -997, 'u']
Param:
Name: _references Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
[i] initialized cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: initialized_2, name: initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: initialized, Num: 2
Globalname: initialized, contract_name: PoolTemplate
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
[i]Type for initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_126(bool) = initialized_2 == False
[i] TMP_126 cleared
clearing ir...?
TMP_127 = CONVERT _metaData_1 to bytes
[i] TMP_127 cleared
clearing ir...?
REF_34 -> LENGTH TMP_127
clearing ir...?
TMP_128(bool) = REF_34 > 0
[i] TMP_128 cleared
clearing ir...?
TMP_129(bool) = TMP_126 && TMP_128
[i] TMP_129 cleared
clearing ir...?
REF_35(address) -> _references_1 (-> [])[0]
[i] REF_35 cleared
clearing ir...?
TMP_130 = CONVERT 0 to address
[i] TMP_130 cleared
clearing ir...?
TMP_131(bool) = REF_35 != TMP_130
[i] TMP_131 cleared
clearing ir...?
TMP_132(bool) = TMP_129 && TMP_131
[i] TMP_132 cleared
clearing ir...?
REF_36(address) -> _references_1 (-> [])[1]
[i] REF_36 cleared
clearing ir...?
TMP_133 = CONVERT 0 to address
[i] TMP_133 cleared
clearing ir...?
TMP_134(bool) = REF_36 != TMP_133
[i] TMP_134 cleared
clearing ir...?
TMP_135(bool) = TMP_132 && TMP_134
[i] TMP_135 cleared
clearing ir...?
REF_37(address) -> _references_1 (-> [])[2]
[i] REF_37 cleared
clearing ir...?
TMP_136 = CONVERT 0 to address
[i] TMP_136 cleared
clearing ir...?
TMP_137(bool) = REF_37 != TMP_136
[i] TMP_137 cleared
clearing ir...?
TMP_138(bool) = TMP_135 && TMP_137
[i] TMP_138 cleared
clearing ir...?
REF_38(address) -> _references_1 (-> [])[3]
[i] REF_38 cleared
clearing ir...?
TMP_139 = CONVERT 0 to address
[i] TMP_139 cleared
clearing ir...?
TMP_140(bool) = REF_38 != TMP_139
[i] TMP_140 cleared
clearing ir...?
TMP_141(bool) = TMP_138 && TMP_140
[i] TMP_141 cleared
clearing ir...?
REF_39(address) -> _references_1 (-> [])[4]
[i] REF_39 cleared
clearing ir...?
TMP_142 = CONVERT 0 to address
[i] TMP_142 cleared
clearing ir...?
TMP_143(bool) = REF_39 != TMP_142
[i] TMP_143 cleared
clearing ir...?
TMP_144(bool) = TMP_141 && TMP_143
[i] TMP_144 cleared
clearing ir...?
REF_40(uint256) -> _conditions_1 (-> [])[0]
[i] REF_40 cleared
clearing ir...?
REF_41(uint256) -> _conditions_1 (-> [])[1]
[i] REF_41 cleared
clearing ir...?
TMP_145(bool) = REF_40 <= REF_41
[i] TMP_145 cleared
clearing ir...?
TMP_146(bool) = TMP_144 && TMP_145
[i] TMP_146 cleared
clearing ir...?
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _metaData_1, name: _metaData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _metaData Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _references_1 (-> []), name: _references

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _references Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _conditions Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: initialized_2, name: initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: initialized_2, name: initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = initialized_2 == False
[i]Type for TMP_126

Name: TMP_126 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT _metaData_1 to bytes

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34 -> LENGTH TMP_127
[i]Type for REF_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(bool) = REF_34 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_128

Name: TMP_128 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_126 && TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(address) -> _references_1 (-> [])[0]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_35

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = REF_35 != TMP_130
[i]Type for TMP_131

Name: TMP_131 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132(bool) = TMP_129 && TMP_131
[i]Type for TMP_132

Name: TMP_132 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_36

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = REF_36 != TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(bool) = TMP_132 && TMP_134
[i]Type for TMP_135

Name: TMP_135 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(address) -> _references_1 (-> [])[2]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_37

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_137(bool) = REF_37 != TMP_136
[i]Type for TMP_137

Name: TMP_137 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(bool) = TMP_135 && TMP_137
[i]Type for TMP_138

Name: TMP_138 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(address) -> _references_1 (-> [])[3]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_38

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_139 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_140(bool) = REF_38 != TMP_139
[i]Type for TMP_140

Name: TMP_140 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_141(bool) = TMP_138 && TMP_140
[i]Type for TMP_141

Name: TMP_141 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(address) -> _references_1 (-> [])[4]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_39

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(bool) = REF_39 != TMP_142
[i]Type for TMP_143

Name: TMP_143 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(bool) = TMP_141 && TMP_143
[i]Type for TMP_144

Name: TMP_144 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_40(uint256) -> _conditions_1 (-> [])[0]
[i]Type for REF_40

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_41

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_145(bool) = REF_40 <= REF_41
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_145

Name: TMP_145 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = TMP_144 && TMP_145
[i]Type for TMP_146

Name: TMP_146 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
initialized_3(bool) := True(bool)
[i] initialized cleared
Propogating parameters and globals to SSA variables...
Ssa_name: initialized_3, name: initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: initialized, Num: 3
Globalname: initialized, contract_name: PoolTemplate
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
initialized_3(bool) := True(bool)
[i]Type for initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Copied initialized
clearing ir...?
REF_43(address) -> _references_1 (-> [])[1]
[i] REF_43 cleared
clearing ir...?
TMP_148 = CONVERT REF_43 to IERC20Metadata
[i] TMP_148 cleared
clearing ir...?
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
[i] TMP_149 cleared
clearing ir...?
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
clearing ir...?
TMP_151 = CONVERT TMP_150 to string
[i] TMP_151 cleared
clearing ir...?
_name_1(string) := TMP_151(string)
[i] _name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _name, Num: 1
Globalname: _name, contract_name: PoolTemplate
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_43(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_43

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148 = CONVERT REF_43 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_148

Name: TMP_148 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
High Call: name
Running querryfc
Found: None
Written func info: IERC20Metadata, name
[i]Type for TMP_149

Name: TMP_149 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT TMP_150 to string

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_name_1(string) := TMP_151(string)
[i]Type for _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _name
clearing ir...?
REF_46(address) -> _references_1 (-> [])[1]
[i] REF_46 cleared
clearing ir...?
TMP_152 = CONVERT REF_46 to IERC20Metadata
[i] TMP_152 cleared
clearing ir...?
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
[i] TMP_153 cleared
clearing ir...?
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
clearing ir...?
TMP_155 = CONVERT TMP_154 to string
[i] TMP_155 cleared
clearing ir...?
_symbol_1(string) := TMP_155(string)
[i] _symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: PoolTemplate
global...

Name: PIC_24 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_152 = CONVERT REF_46 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_152

Name: TMP_152 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
High Call: symbol
Running querryfc
Found: None
Written func info: IERC20Metadata, symbol
[i]Type for TMP_153

Name: TMP_153 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
[i]Type for TMP_154

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_155 = CONVERT TMP_154 to string

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_155

Name: TMP_155 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_symbol_1(string) := TMP_155(string)
[i]Type for _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _symbol
clearing ir...?
REF_48(address) -> _references_1 (-> [])[0]
[i] REF_48 cleared
clearing ir...?
TMP_156 = CONVERT REF_48 to IERC20Metadata
[i] TMP_156 cleared
clearing ir...?
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
[i] TMP_157 cleared
clearing ir...?
_decimals_1(uint8) := TMP_157(uint8)
[i] _decimals cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals, Num: 1
Globalname: _decimals, contract_name: PoolTemplate
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_48(address) -> _references_1 (-> [])[0]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT REF_48 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_156

Name: TMP_156 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
[i]Type for TMP_157

Name: TMP_157 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
_decimals_1(uint8) := TMP_157(uint8)
[i]Type for _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied _decimals
clearing ir...?
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 18]]
Param: name_
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: symbol_
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: decimals_
[[-1], [-1], 'u', None, [], -1, 'u', 18]

Name: decimals_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
initializeToken(string,string,uint8)
ENTRY_POINT
Propogating All
EXPRESSION assert(bool)(! tokenInitialized)
Propogating All
EXPRESSION tokenInitialized = true
Propogating All
EXPRESSION _name = name_
Propogating All
name__1
Ssa_name: name__1, name: name_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: name__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _symbol = symbol_
Propogating All
symbol__1
Ssa_name: symbol__1, name: symbol_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: symbol__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _decimals = decimals_
Propogating All
decimals__1
Ssa_name: decimals__1, name: decimals_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: decimals_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef

Name: decimals__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
name__1(string) := ϕ(['_name_1'])
[i] name_ cleared
clearing ir...?
symbol__1(string) := ϕ(['_symbol_1'])
[i] symbol_ cleared
clearing ir...?
decimals__1(uint8) := ϕ(['_decimals_1'])
[i] decimals_ cleared
clearing ir...?
tokenInitialized_1(bool) := ϕ(['tokenInitialized_2', 'tokenInitialized_0'])
[i] tokenInitialized cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name__1 Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: name__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol__1 Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: symbol__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: decimals__1, name: decimals_

Name: decimals__1 Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
saved parameter: 
Name: decimals_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef

Name: decimals__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenInitialized, Num: 1
Globalname: tokenInitialized, contract_name: PoolTemplate
global...

Name: PIC_25 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
name__1(string) := ϕ(['_name_1'])
[i]Type for name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
symbol__1(string) := ϕ(['_symbol_1'])
[i]Type for symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals__1(uint8) := ϕ(['_decimals_1'])
[i]Type for decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
tokenInitialized_1(bool) := ϕ(['tokenInitialized_2', 'tokenInitialized_0'])
[i]Type for tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_63 = ! tokenInitialized_1 
clearing ir...?
TMP_64(None) = SOLIDITY_CALL assert(bool)(TMP_63)
Propogating parameters and globals to SSA variables...
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_63 = ! tokenInitialized_1 
[i]Type for TMP_63

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(None) = SOLIDITY_CALL assert(bool)(TMP_63)
[i]Type for TMP_64

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
tokenInitialized_2(bool) := True(bool)
[i] tokenInitialized cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenInitialized_2, name: tokenInitialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenInitialized, Num: 2
Globalname: tokenInitialized, contract_name: PoolTemplate
global...

Name: PIC_25 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
tokenInitialized_2(bool) := True(bool)
[i]Type for tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Copied tokenInitialized
clearing ir...?
_name_1(string) := name__1(string)
[i] _name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: name__1, name: name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _name, Num: 1
Globalname: _name, contract_name: PoolTemplate
global...

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_name_1(string) := name__1(string)
[i]Type for _name

Name: _name Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _name
clearing ir...?
_symbol_1(string) := symbol__1(string)
[i] _symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: PoolTemplate
global...

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_symbol_1(string) := symbol__1(string)
[i]Type for _symbol

Name: _symbol Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _symbol
clearing ir...?
_decimals_1(uint8) := decimals__1(uint8)
[i] _decimals cleared
Propogating parameters and globals to SSA variables...
Ssa_name: decimals__1, name: decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: decimals__1, name: decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals, Num: 1
Globalname: _decimals, contract_name: PoolTemplate
global...

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
End popogation
_decimals_1(uint8) := decimals__1(uint8)
[i]Type for _decimals

Name: _decimals Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied _decimals
clearing ir...?
name__1(string) := ϕ(['_name_1'])
[i] name_ cleared
clearing ir...?
symbol__1(string) := ϕ(['_symbol_1'])
[i] symbol_ cleared
clearing ir...?
decimals__1(uint8) := ϕ(['_decimals_1'])
[i] decimals_ cleared
clearing ir...?
tokenInitialized_1(bool) := ϕ(['tokenInitialized_2', 'tokenInitialized_0'])
[i] tokenInitialized cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name_ Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: name__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: symbol__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: decimals__1, name: decimals_

Name: decimals_ Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
saved parameter: 
Name: decimals_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef

Name: decimals__1 Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenInitialized, Num: 1
Globalname: tokenInitialized, contract_name: PoolTemplate
global...

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
name__1(string) := ϕ(['_name_1'])
[i]Type for name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
symbol__1(string) := ϕ(['_symbol_1'])
[i]Type for symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals__1(uint8) := ϕ(['_decimals_1'])
[i]Type for decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
tokenInitialized_1(bool) := ϕ(['tokenInitialized_2', 'tokenInitialized_0'])
[i]Type for tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
clearing ir...?
TMP_63 = ! tokenInitialized_1 
clearing ir...?
TMP_64(None) = SOLIDITY_CALL assert(bool)(TMP_63)
Propogating parameters and globals to SSA variables...
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Ssa_name: tokenInitialized_1, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
TMP_63 = ! tokenInitialized_1 
[i]Type for TMP_63

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(None) = SOLIDITY_CALL assert(bool)(TMP_63)
[i]Type for TMP_64

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
tokenInitialized_2(bool) := True(bool)
[i] tokenInitialized cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenInitialized_2, name: tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Name: tokenInitialized, Num: 2
Globalname: tokenInitialized, contract_name: PoolTemplate
global...

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
tokenInitialized_2(bool) := True(bool)
[i]Type for tokenInitialized

Name: tokenInitialized Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Copied tokenInitialized
clearing ir...?
_name_1(string) := name__1(string)
[i] _name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: name__1, name: name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _name, Num: 1
Globalname: _name, contract_name: PoolTemplate
global...

Name: _name Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_name_1(string) := name__1(string)
[i]Type for _name

Name: _name Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _name
clearing ir...?
_symbol_1(string) := symbol__1(string)
[i] _symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: PoolTemplate
global...

Name: _symbol Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_symbol_1(string) := symbol__1(string)
[i]Type for _symbol

Name: _symbol Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _symbol
clearing ir...?
_decimals_1(uint8) := decimals__1(uint8)
[i] _decimals cleared
Propogating parameters and globals to SSA variables...
Ssa_name: decimals__1, name: decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: decimals__1, name: decimals_

Name: decimals_ Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initializeToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Name: _decimals, Num: 1
Globalname: _decimals, contract_name: PoolTemplate
global...

Name: _decimals Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
End popogation
_decimals_1(uint8) := decimals__1(uint8)
[i]Type for _decimals

Name: _decimals Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied _decimals
clearing ir...?
REF_50(address) -> _references_1 (-> [])[2]
[i] REF_50 cleared
clearing ir...?
TMP_159 = CONVERT REF_50 to IRegistry
[i] TMP_159 cleared
clearing ir...?
registry_1(IRegistry) := TMP_159(IRegistry)
[i] registry cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_1, name: registry

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 1
Globalname: registry, contract_name: PoolTemplate
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _references_1 (-> [])[2]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_50

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159 = CONVERT REF_50 to IRegistry

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Registry
[i]Type for TMP_159

Name: TMP_159 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
registry_1(IRegistry) := TMP_159(IRegistry)
[i]Type for registry

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Copied registry
clearing ir...?
REF_51(address) -> _references_1 (-> [])[3]
[i] REF_51 cleared
clearing ir...?
TMP_160 = CONVERT REF_51 to IParameters
[i] TMP_160 cleared
clearing ir...?
parameters_1(IParameters) := TMP_160(IParameters)
[i] parameters cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 1
Globalname: parameters, contract_name: PoolTemplate
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_51(address) -> _references_1 (-> [])[3]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_51

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160 = CONVERT REF_51 to IParameters

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Parameters
[i]Type for TMP_160

Name: TMP_160 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
parameters_1(IParameters) := TMP_160(IParameters)
[i]Type for parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Copied parameters
clearing ir...?
REF_53(address) -> _references_1 (-> [])[1]
[i] REF_53 cleared
clearing ir...?
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
[i] TMP_161 cleared
clearing ir...?
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
[i] parameters cleared
clearing ir...?
TMP_162 = CONVERT TMP_161 to IVault
[i] TMP_162 cleared
clearing ir...?
vault_1(IVault) := TMP_162(IVault)
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_1, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 1
Globalname: vault, contract_name: PoolTemplate
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_2, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 2
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_53

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
High Call: getVault
Running querryfc
Found: None
Written func info: IParameters, getVault
[i]Type for TMP_161

Name: TMP_161 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
[i]Type for parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT TMP_161 to IVault

Name: TMP_161 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Vault
[i]Type for TMP_162

Name: TMP_162 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
vault_1(IVault) := TMP_162(IVault)
[i]Type for vault

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Copied vault
clearing ir...?
metadata_1(string) := _metaData_1(string)
[i] metadata cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: metadata_1, name: metadata

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: metadata, Num: 1
Globalname: metadata, contract_name: PoolTemplate
End popogation
metadata_1(string) := _metaData_1(string)
[i]Type for metadata

Name: metadata Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_54 cleared
clearing ir...?
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_1, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 1
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_54

Name: REF_54 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_54 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
REF_55(uint256) -> _conditions_1 (-> [])[1]
[i] REF_55 cleared
clearing ir...?
TMP_163(bool) = REF_55 > 0
[i] TMP_163 cleared
clearing ir...?
CONDITION TMP_163
Propogating parameters and globals to SSA variables...
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_55(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_55

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163(bool) = REF_55 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_163

Name: TMP_163 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_56(uint256) -> _conditions_1 (-> [])[1]
[i] REF_56 cleared
clearing ir...?
REF_57(address) -> _references_1 (-> [])[4]
[i] REF_57 cleared
clearing ir...?
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)
[i] TMP_164 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_56(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_56

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57(address) -> _references_1 (-> [])[4]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_57

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, -997, 'u']]
Param: _amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: _from
[[], [], 'u', None, [], -1, -997, 'u']

Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_depositFrom(uint256,address)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(marketStatus == MarketStatus.Trading && paused == false,ERROR: DEPOSIT_DISABLED)
Propogating All
EXPRESSION require(bool,string)(_amount > 0,ERROR: DEPOSIT_ZERO)
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _mintAmount = worth(_amount)
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION vault.addValue(_amount,_from,address(this))
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Deposit(_from,_amount,_mintAmount)
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_mintAmount_1
Ssa_name: _mintAmount_1, name: _mintAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _mint(_from,_mintAmount)
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_mintAmount_1
Ssa_name: _mintAmount_1, name: _mintAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_1(uint256) := ϕ(['REF_56'])
[i] _amount cleared
clearing ir...?
_from_1(address) := ϕ(['REF_57'])
[i] _from cleared
clearing ir...?
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: paused_2, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 2
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_5, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 5
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 3
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_56'])
[i]Type for _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_from_1(address) := ϕ(['REF_57'])
[i]Type for _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_60 cleared
clearing ir...?
TMP_176(bool) = marketStatus_3 == REF_60
[i] TMP_176 cleared
clearing ir...?
TMP_177(bool) = paused_2 == False
[i] TMP_177 cleared
clearing ir...?
TMP_178(bool) = TMP_176 && TMP_177
[i] TMP_178 cleared
clearing ir...?
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_60

Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(bool) = marketStatus_3 == REF_60
[i]Type for TMP_176

Name: TMP_176 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = paused_2 == False
[i]Type for TMP_177

Name: TMP_177 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_176 && TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_180(bool) = _amount_1 > 0
[i] TMP_180 cleared
clearing ir...?
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_180(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_180

Name: TMP_180 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_182 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_182(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: _value
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
worth(uint256)
ENTRY_POINT
Propogating All
NEW VARIABLE _supply = totalSupply()
Propogating All
NEW VARIABLE _originalLiquidity = originalLiquidity()
Propogating All
IF _supply > 0 && _originalLiquidity > 0
Propogating All
_originalLiquidity_1
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
EXPRESSION _amount = (_value * _supply) / _originalLiquidity
Propogating All
_originalLiquidity_1
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_value_1
Ssa_name: _value_1, name: _value

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF _supply > 0 && _originalLiquidity == 0
Propogating All
_originalLiquidity_1
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
EXPRESSION _amount = _value
Propogating All
_value_1
Ssa_name: _value_1, name: _value

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION _amount = _value * _supply
Propogating All
_supply_1
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_value_1
Ssa_name: _value_1, name: _value

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
END_IF
clearing ir...?
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i] _value cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _value_1, name: _value

Name: _value_1 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i]Type for _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_390 cleared
clearing ir...?
_supply_1(uint256) := TMP_390(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
FIND RETURN
ENTRY_POINT
totalSupply()
ENTRY_POINT
Propogating All
RETURN _totalSupply
Propogating All
clearing ir...?
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _totalSupply_1, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN _totalSupply_1
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
clearing ir...?
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN _totalSupply_1
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
[i]Type for TMP_390

Name: TMP_390 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_390(uint256)
[i]Type for _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_391 cleared
clearing ir...?
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i] _originalLiquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _originalLiquidity, Num: 1
Globalname: _originalLiquidity, contract_name: PoolTemplate
End popogation
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
FIND RETURN
ENTRY_POINT
originalLiquidity()
ENTRY_POINT
Propogating All
RETURN vault.underlyingValue(address(this)) - vault.attributionValue(attributionDebt)
Propogating All
clearing ir...?
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_43, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 43
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_21, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 21
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_411 = CONVERT this to address
[i] TMP_411 cleared
clearing ir...?
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
[i] TMP_412 cleared
clearing ir...?
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
[i] TMP_413 cleared
clearing ir...?
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_414(uint256) = TMP_412 (c)- TMP_413
[i] TMP_414 cleared
clearing ir...?
RETURN TMP_414
Propogating parameters and globals to SSA variables...
Ssa_name: attributionDebt_22, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 22
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_44, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 44
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_44, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_44, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_45, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 45
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_23, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 23
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411 = CONVERT this to address
prev address? u
global assignment: 3
3
[i]Type for TMP_411

Name: TMP_411 Function: originalLiquidity
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
High Call: underlyingValue
Running querryfc
Found: None
Written func info: IVault, underlyingValue
[i]Type for TMP_412

Name: TMP_412 Function: originalLiquidity
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
High Call: attributionValue
Running querryfc
Found: None
Written func info: IVault, attributionValue
[i]Type for TMP_413

Name: TMP_413 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414(uint256) = TMP_412 (c)- TMP_413
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_414

Name: TMP_414 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_414
clearing ir...?
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 43
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_21, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 21
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_411 = CONVERT this to address
[i] TMP_411 cleared
clearing ir...?
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
[i] TMP_412 cleared
clearing ir...?
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
[i] TMP_413 cleared
clearing ir...?
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_414(uint256) = TMP_412 (c)- TMP_413
[i] TMP_414 cleared
clearing ir...?
RETURN TMP_414
Propogating parameters and globals to SSA variables...
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 22
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 44
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_45, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 45
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_23, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 23
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_411 = CONVERT this to address
[i]Type for TMP_411

Name: TMP_411 Function: originalLiquidity
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
High Call: underlyingValue
Running querryfc
Found: None
Written func info: IVault, underlyingValue
[i]Type for TMP_412

Name: TMP_412 Function: originalLiquidity
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
High Call: attributionValue
Running querryfc
Found: None
Written func info: IVault, attributionValue
[i]Type for TMP_413

Name: TMP_413 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_414(uint256) = TMP_412 (c)- TMP_413
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_414

Name: TMP_414 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_414
[i]Type for TMP_391

Name: TMP_391 Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i]Type for _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_392(bool) = _supply_1 > 0
[i] TMP_392 cleared
clearing ir...?
TMP_393(bool) = _originalLiquidity_1 > 0
[i] TMP_393 cleared
clearing ir...?
TMP_394(bool) = TMP_392 && TMP_393
[i] TMP_394 cleared
clearing ir...?
CONDITION TMP_394
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_392

Name: TMP_392 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_393(bool) = _originalLiquidity_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_393

Name: TMP_393 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_394(bool) = TMP_392 && TMP_393
[i]Type for TMP_394

Name: TMP_394 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_395(uint256) = _value_1 (c)* _supply_1
[i] TMP_395 cleared
clearing ir...?
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
[i] TMP_396 cleared
clearing ir...?
_amount_3(uint256) := TMP_396(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_3, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 3
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_395(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_395

Name: TMP_395 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_396

Name: TMP_396 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_396(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_397(bool) = _supply_1 > 0
[i] TMP_397 cleared
clearing ir...?
TMP_398(bool) = _originalLiquidity_1 == 0
[i] TMP_398 cleared
clearing ir...?
TMP_399(bool) = TMP_397 && TMP_398
[i] TMP_399 cleared
clearing ir...?
CONDITION TMP_399
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_397(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_397

Name: TMP_397 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_398(bool) = _originalLiquidity_1 == 0
[i]Type for TMP_398

Name: TMP_398 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = TMP_397 && TMP_398
[i]Type for TMP_399

Name: TMP_399 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_2(uint256) := _value_1(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_2, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 2
Globalname: _amount, contract_name: PoolTemplate
End popogation
_amount_2(uint256) := _value_1(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_400(uint256) = _value_1 (c)* _supply_1
[i] TMP_400 cleared
clearing ir...?
_amount_1(uint256) := TMP_400(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_400(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_400

Name: TMP_400 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := TMP_400(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i] _value cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i]Type for _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_390 cleared
clearing ir...?
_supply_1(uint256) := TMP_390(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_390

Name: TMP_390 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_390(uint256)
[i]Type for _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_391 cleared
clearing ir...?
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i] _originalLiquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _originalLiquidity, Num: 1
Globalname: _originalLiquidity, contract_name: PoolTemplate
End popogation
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_391

Name: TMP_391 Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i]Type for _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_392(bool) = _supply_1 > 0
[i] TMP_392 cleared
clearing ir...?
TMP_393(bool) = _originalLiquidity_1 > 0
[i] TMP_393 cleared
clearing ir...?
TMP_394(bool) = TMP_392 && TMP_393
[i] TMP_394 cleared
clearing ir...?
CONDITION TMP_394
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_392

Name: TMP_392 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_393(bool) = _originalLiquidity_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_393

Name: TMP_393 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_394(bool) = TMP_392 && TMP_393
[i]Type for TMP_394

Name: TMP_394 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_395(uint256) = _value_1 (c)* _supply_1
[i] TMP_395 cleared
clearing ir...?
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
[i] TMP_396 cleared
clearing ir...?
_amount_3(uint256) := TMP_396(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_3, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 3
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_395(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_395

Name: TMP_395 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_396

Name: TMP_396 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := TMP_396(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_397(bool) = _supply_1 > 0
[i] TMP_397 cleared
clearing ir...?
TMP_398(bool) = _originalLiquidity_1 == 0
[i] TMP_398 cleared
clearing ir...?
TMP_399(bool) = TMP_397 && TMP_398
[i] TMP_399 cleared
clearing ir...?
CONDITION TMP_399
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_397(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_397

Name: TMP_397 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_398(bool) = _originalLiquidity_1 == 0
[i]Type for TMP_398

Name: TMP_398 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = TMP_397 && TMP_398
[i]Type for TMP_399

Name: TMP_399 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_2(uint256) := _value_1(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_2, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 2
Globalname: _amount, contract_name: PoolTemplate
End popogation
_amount_2(uint256) := _value_1(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_400(uint256) = _value_1 (c)* _supply_1
[i] TMP_400 cleared
clearing ir...?
_amount_1(uint256) := TMP_400(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_400(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_400

Name: TMP_400 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := TMP_400(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i]Type for TMP_182

Name: TMP_182 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_182(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_183 = CONVERT this to address
[i] TMP_183 cleared
clearing ir...?
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
[i] TMP_184 cleared
clearing ir...?
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 6
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_7, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 7
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: _depositFrom
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_184

Name: TMP_184 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(_from_1,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
New param cache [[[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Param: account
[[], [], 'u', '_from', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(account != address(0),ERC20: mint to the zero address)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _beforeTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _totalSupply += amount
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _balances[account] += amount
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Transfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _afterTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[], [], 'u', '_from', [], -1, -997, 'u']

Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[], [], 'u', '_from', [], -1, -997, 'u']

Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Param: account
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
balanceOf(address)
ENTRY_POINT
Propogating All
RETURN _balances[account]
Propogating All
account_1
Ssa_name: account_1, name: account

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 15
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 3
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_29

Name: None Function: None
Num: -997
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: -997
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[], [], 'u', '_from', [], -1, -997, 'u']

Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_29

Name: None Function: None
Num: -997
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: -997
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
clearing ir...?
_amount_1(uint256) := ϕ(['REF_56'])
[i] _amount cleared
clearing ir...?
_from_1(address) := ϕ(['REF_57'])
[i] _from cleared
clearing ir...?
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 2
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_5, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 5
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 3
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_56'])
[i]Type for _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_from_1(address) := ϕ(['REF_57'])
[i]Type for _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_60 cleared
clearing ir...?
TMP_176(bool) = marketStatus_3 == REF_60
[i] TMP_176 cleared
clearing ir...?
TMP_177(bool) = paused_2 == False
[i] TMP_177 cleared
clearing ir...?
TMP_178(bool) = TMP_176 && TMP_177
[i] TMP_178 cleared
clearing ir...?
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_60

Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(bool) = marketStatus_3 == REF_60
[i]Type for TMP_176

Name: TMP_176 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = paused_2 == False
[i]Type for TMP_177

Name: TMP_177 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_176 && TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_180(bool) = _amount_1 > 0
[i] TMP_180 cleared
clearing ir...?
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_180(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_180

Name: TMP_180 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_182 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_182(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_182

Name: TMP_182 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_182(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_183 = CONVERT this to address
[i] TMP_183 cleared
clearing ir...?
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
[i] TMP_184 cleared
clearing ir...?
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_7, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 7
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: _depositFrom
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_184

Name: TMP_184 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(_from_1,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
New param cache [[[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_164

Name: TMP_164 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
TMP_126(bool) = initialized_2 == False
TMP_127 = CONVERT _metaData_1 to bytes
REF_34 -> LENGTH TMP_127
TMP_128(bool) = REF_34 > 0
TMP_129(bool) = TMP_126 && TMP_128
REF_35(address) -> _references_1 (-> [])[0]
TMP_130 = CONVERT 0 to address
TMP_131(bool) = REF_35 != TMP_130
TMP_132(bool) = TMP_129 && TMP_131
REF_36(address) -> _references_1 (-> [])[1]
TMP_133 = CONVERT 0 to address
TMP_134(bool) = REF_36 != TMP_133
TMP_135(bool) = TMP_132 && TMP_134
REF_37(address) -> _references_1 (-> [])[2]
TMP_136 = CONVERT 0 to address
TMP_137(bool) = REF_37 != TMP_136
TMP_138(bool) = TMP_135 && TMP_137
REF_38(address) -> _references_1 (-> [])[3]
TMP_139 = CONVERT 0 to address
TMP_140(bool) = REF_38 != TMP_139
TMP_141(bool) = TMP_138 && TMP_140
REF_39(address) -> _references_1 (-> [])[4]
TMP_142 = CONVERT 0 to address
TMP_143(bool) = REF_39 != TMP_142
TMP_144(bool) = TMP_141 && TMP_143
REF_40(uint256) -> _conditions_1 (-> [])[0]
REF_41(uint256) -> _conditions_1 (-> [])[1]
TMP_145(bool) = REF_40 <= REF_41
TMP_146(bool) = TMP_144 && TMP_145
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
initialized_3(bool) := True(bool)
REF_43(address) -> _references_1 (-> [])[1]
TMP_148 = CONVERT REF_43 to IERC20Metadata
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
TMP_151 = CONVERT TMP_150 to string
_name_1(string) := TMP_151(string)
REF_46(address) -> _references_1 (-> [])[1]
TMP_152 = CONVERT REF_46 to IERC20Metadata
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
TMP_155 = CONVERT TMP_154 to string
_symbol_1(string) := TMP_155(string)
REF_48(address) -> _references_1 (-> [])[0]
TMP_156 = CONVERT REF_48 to IERC20Metadata
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
_decimals_1(uint8) := TMP_157(uint8)
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
REF_50(address) -> _references_1 (-> [])[2]
TMP_159 = CONVERT REF_50 to IRegistry
registry_1(IRegistry) := TMP_159(IRegistry)
REF_51(address) -> _references_1 (-> [])[3]
TMP_160 = CONVERT REF_51 to IParameters
parameters_1(IParameters) := TMP_160(IParameters)
REF_53(address) -> _references_1 (-> [])[1]
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
TMP_162 = CONVERT TMP_161 to IVault
vault_1(IVault) := TMP_162(IVault)
metadata_1(string) := _metaData_1(string)
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
REF_55(uint256) -> _conditions_1 (-> [])[1]
TMP_163(bool) = REF_55 > 0
CONDITION TMP_163
REF_56(uint256) -> _conditions_1 (-> [])[1]
REF_57(address) -> _references_1 (-> [])[4]
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _metaData Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _conditions Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, -997, 'u']
Param:
Name: _references Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
[i] initialized cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: initialized_2, name: initialized

Name: initialized Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: initialized, Num: 2
Globalname: initialized, contract_name: PoolTemplate
global...

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
initialized_2(bool) := ϕ(['initialized_1', 'initialized_0', 'initialized_3'])
[i]Type for initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
clearing ir...?
TMP_126(bool) = initialized_2 == False
[i] TMP_126 cleared
clearing ir...?
TMP_127 = CONVERT _metaData_1 to bytes
[i] TMP_127 cleared
clearing ir...?
REF_34 -> LENGTH TMP_127
clearing ir...?
TMP_128(bool) = REF_34 > 0
[i] TMP_128 cleared
clearing ir...?
TMP_129(bool) = TMP_126 && TMP_128
[i] TMP_129 cleared
clearing ir...?
REF_35(address) -> _references_1 (-> [])[0]
[i] REF_35 cleared
clearing ir...?
TMP_130 = CONVERT 0 to address
[i] TMP_130 cleared
clearing ir...?
TMP_131(bool) = REF_35 != TMP_130
[i] TMP_131 cleared
clearing ir...?
TMP_132(bool) = TMP_129 && TMP_131
[i] TMP_132 cleared
clearing ir...?
REF_36(address) -> _references_1 (-> [])[1]
[i] REF_36 cleared
clearing ir...?
TMP_133 = CONVERT 0 to address
[i] TMP_133 cleared
clearing ir...?
TMP_134(bool) = REF_36 != TMP_133
[i] TMP_134 cleared
clearing ir...?
TMP_135(bool) = TMP_132 && TMP_134
[i] TMP_135 cleared
clearing ir...?
REF_37(address) -> _references_1 (-> [])[2]
[i] REF_37 cleared
clearing ir...?
TMP_136 = CONVERT 0 to address
[i] TMP_136 cleared
clearing ir...?
TMP_137(bool) = REF_37 != TMP_136
[i] TMP_137 cleared
clearing ir...?
TMP_138(bool) = TMP_135 && TMP_137
[i] TMP_138 cleared
clearing ir...?
REF_38(address) -> _references_1 (-> [])[3]
[i] REF_38 cleared
clearing ir...?
TMP_139 = CONVERT 0 to address
[i] TMP_139 cleared
clearing ir...?
TMP_140(bool) = REF_38 != TMP_139
[i] TMP_140 cleared
clearing ir...?
TMP_141(bool) = TMP_138 && TMP_140
[i] TMP_141 cleared
clearing ir...?
REF_39(address) -> _references_1 (-> [])[4]
[i] REF_39 cleared
clearing ir...?
TMP_142 = CONVERT 0 to address
[i] TMP_142 cleared
clearing ir...?
TMP_143(bool) = REF_39 != TMP_142
[i] TMP_143 cleared
clearing ir...?
TMP_144(bool) = TMP_141 && TMP_143
[i] TMP_144 cleared
clearing ir...?
REF_40(uint256) -> _conditions_1 (-> [])[0]
[i] REF_40 cleared
clearing ir...?
REF_41(uint256) -> _conditions_1 (-> [])[1]
[i] REF_41 cleared
clearing ir...?
TMP_145(bool) = REF_40 <= REF_41
[i] TMP_145 cleared
clearing ir...?
TMP_146(bool) = TMP_144 && TMP_145
[i] TMP_146 cleared
clearing ir...?
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: initialized_2, name: initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: initialized_2, name: initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = initialized_2 == False
[i]Type for TMP_126

Name: TMP_126 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT _metaData_1 to bytes

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34 -> LENGTH TMP_127
[i]Type for REF_34

Name: REF_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(bool) = REF_34 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_128

Name: TMP_128 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_126 && TMP_128
[i]Type for TMP_129

Name: TMP_129 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(address) -> _references_1 (-> [])[0]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_35

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(bool) = REF_35 != TMP_130
[i]Type for TMP_131

Name: TMP_131 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132(bool) = TMP_129 && TMP_131
[i]Type for TMP_132

Name: TMP_132 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_36

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = REF_36 != TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(bool) = TMP_132 && TMP_134
[i]Type for TMP_135

Name: TMP_135 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_37(address) -> _references_1 (-> [])[2]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_37

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_137(bool) = REF_37 != TMP_136
[i]Type for TMP_137

Name: TMP_137 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(bool) = TMP_135 && TMP_137
[i]Type for TMP_138

Name: TMP_138 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_38(address) -> _references_1 (-> [])[3]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_38

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_139 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_140(bool) = REF_38 != TMP_139
[i]Type for TMP_140

Name: TMP_140 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_141(bool) = TMP_138 && TMP_140
[i]Type for TMP_141

Name: TMP_141 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(address) -> _references_1 (-> [])[4]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_39

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_142 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(bool) = REF_39 != TMP_142
[i]Type for TMP_143

Name: TMP_143 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(bool) = TMP_141 && TMP_143
[i]Type for TMP_144

Name: TMP_144 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_40(uint256) -> _conditions_1 (-> [])[0]
[i]Type for REF_40

Name: _conditions_1 (-> []) Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_41(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_41

Name: _conditions_1 (-> []) Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_145(bool) = REF_40 <= REF_41
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_145

Name: TMP_145 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146(bool) = TMP_144 && TMP_145
[i]Type for TMP_146

Name: TMP_146 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,ERROR: INITIALIZATION_BAD_CONDITIONS)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
initialized_3(bool) := True(bool)
[i] initialized cleared
Propogating parameters and globals to SSA variables...
Ssa_name: initialized_3, name: initialized

Name: initialized Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Name: initialized, Num: 3
Globalname: initialized, contract_name: PoolTemplate
global...

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
initialized_3(bool) := True(bool)
[i]Type for initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Copied initialized
clearing ir...?
REF_43(address) -> _references_1 (-> [])[1]
[i] REF_43 cleared
clearing ir...?
TMP_148 = CONVERT REF_43 to IERC20Metadata
[i] TMP_148 cleared
clearing ir...?
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
[i] TMP_149 cleared
clearing ir...?
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
clearing ir...?
TMP_151 = CONVERT TMP_150 to string
[i] TMP_151 cleared
clearing ir...?
_name_1(string) := TMP_151(string)
[i] _name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _name, Num: 1
Globalname: _name, contract_name: PoolTemplate
global...

Name: _name Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_43(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_43

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148 = CONVERT REF_43 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_148

Name: TMP_148 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_149(string) = HIGH_LEVEL_CALL, dest:TMP_148(IERC20Metadata), function:name, arguments:[]  
High Call: name
Running querryfc
Found: None
Written func info: IERC20Metadata, name
[i]Type for TMP_149

Name: TMP_149 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150(bytes) = SOLIDITY_CALL abi.encodePacked()(InsureDAO-,TMP_149,-PoolInsurance)
[i]Type for TMP_150

Name: TMP_150 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT TMP_150 to string

Name: TMP_150 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_name_1(string) := TMP_151(string)
[i]Type for _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _name
clearing ir...?
REF_46(address) -> _references_1 (-> [])[1]
[i] REF_46 cleared
clearing ir...?
TMP_152 = CONVERT REF_46 to IERC20Metadata
[i] TMP_152 cleared
clearing ir...?
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
[i] TMP_153 cleared
clearing ir...?
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
clearing ir...?
TMP_155 = CONVERT TMP_154 to string
[i] TMP_155 cleared
clearing ir...?
_symbol_1(string) := TMP_155(string)
[i] _symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: PoolTemplate
global...

Name: _symbol Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_46(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_152 = CONVERT REF_46 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_152

Name: TMP_152 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_153(string) = HIGH_LEVEL_CALL, dest:TMP_152(IERC20Metadata), function:symbol, arguments:[]  
High Call: symbol
Running querryfc
Found: None
Written func info: IERC20Metadata, symbol
[i]Type for TMP_153

Name: TMP_153 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154(bytes) = SOLIDITY_CALL abi.encodePacked()(i-,TMP_153)
[i]Type for TMP_154

Name: TMP_154 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_155 = CONVERT TMP_154 to string

Name: TMP_154 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_155

Name: TMP_155 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_symbol_1(string) := TMP_155(string)
[i]Type for _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _symbol
clearing ir...?
REF_48(address) -> _references_1 (-> [])[0]
[i] REF_48 cleared
clearing ir...?
TMP_156 = CONVERT REF_48 to IERC20Metadata
[i] TMP_156 cleared
clearing ir...?
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
[i] TMP_157 cleared
clearing ir...?
_decimals_1(uint8) := TMP_157(uint8)
[i] _decimals cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Name: _decimals, Num: 1
Globalname: _decimals, contract_name: PoolTemplate
global...

Name: _decimals Function: initializeToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
End popogation
REF_48(address) -> _references_1 (-> [])[0]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT REF_48 to IERC20Metadata

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20Metadata
[i]Type for TMP_156

Name: TMP_156 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
TMP_157(uint8) = HIGH_LEVEL_CALL, dest:TMP_156(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
[i]Type for TMP_157

Name: TMP_157 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
_decimals_1(uint8) := TMP_157(uint8)
[i]Type for _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Copied _decimals
clearing ir...?
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals_1, name: _decimals

Name: _decimals Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20.initializeToken(string,string,uint8)(_name_1,_symbol_1,_decimals_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 18]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
clearing ir...?
REF_50(address) -> _references_1 (-> [])[2]
[i] REF_50 cleared
clearing ir...?
TMP_159 = CONVERT REF_50 to IRegistry
[i] TMP_159 cleared
clearing ir...?
registry_1(IRegistry) := TMP_159(IRegistry)
[i] registry cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_1, name: registry

Name: registry Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 1
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
End popogation
REF_50(address) -> _references_1 (-> [])[2]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_50

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159 = CONVERT REF_50 to IRegistry

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Registry
[i]Type for TMP_159

Name: TMP_159 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
registry_1(IRegistry) := TMP_159(IRegistry)
[i]Type for registry

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Copied registry
clearing ir...?
REF_51(address) -> _references_1 (-> [])[3]
[i] REF_51 cleared
clearing ir...?
TMP_160 = CONVERT REF_51 to IParameters
[i] TMP_160 cleared
clearing ir...?
parameters_1(IParameters) := TMP_160(IParameters)
[i] parameters cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: parameters Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 1
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
End popogation
REF_51(address) -> _references_1 (-> [])[3]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_51

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_160 = CONVERT REF_51 to IParameters

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Parameters
[i]Type for TMP_160

Name: TMP_160 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
parameters_1(IParameters) := TMP_160(IParameters)
[i]Type for parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Copied parameters
clearing ir...?
REF_53(address) -> _references_1 (-> [])[1]
[i] REF_53 cleared
clearing ir...?
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
[i] TMP_161 cleared
clearing ir...?
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
[i] parameters cleared
clearing ir...?
TMP_162 = CONVERT TMP_161 to IVault
[i] TMP_162 cleared
clearing ir...?
vault_1(IVault) := TMP_162(IVault)
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_1, name: parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_1, name: vault

Name: vault Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 1
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_2, name: parameters

Name: parameters Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 2
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> _references_1 (-> [])[1]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_53

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161(address) = HIGH_LEVEL_CALL, dest:parameters_1(IParameters), function:getVault, arguments:['REF_53']  
High Call: getVault
Running querryfc
Found: None
Written func info: IParameters, getVault
[i]Type for TMP_161

Name: TMP_161 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_2(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_1'])
[i]Type for parameters

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT TMP_161 to IVault

Name: TMP_161 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Vault
[i]Type for TMP_162

Name: TMP_162 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
vault_1(IVault) := TMP_162(IVault)
[i]Type for vault

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Copied vault
clearing ir...?
metadata_1(string) := _metaData_1(string)
[i] metadata cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _metaData_1, name: _metaData

Name: _metaData_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: metadata_1, name: metadata

Name: metadata Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: metadata, Num: 1
Globalname: metadata, contract_name: PoolTemplate
End popogation
metadata_1(string) := _metaData_1(string)
[i]Type for metadata

Name: metadata Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_54 cleared
clearing ir...?
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_1, name: marketStatus

Name: marketStatus Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 1
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_54(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_54

Name: REF_54 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_54 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_1(PoolTemplate.MarketStatus) := REF_54(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
REF_55(uint256) -> _conditions_1 (-> [])[1]
[i] REF_55 cleared
clearing ir...?
TMP_163(bool) = REF_55 > 0
[i] TMP_163 cleared
clearing ir...?
CONDITION TMP_163
Propogating parameters and globals to SSA variables...
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_55(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_55

Name: _conditions_1 (-> []) Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163(bool) = REF_55 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_163

Name: TMP_163 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_56(uint256) -> _conditions_1 (-> [])[1]
[i] REF_56 cleared
clearing ir...?
REF_57(address) -> _references_1 (-> [])[4]
[i] REF_57 cleared
clearing ir...?
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)
[i] TMP_164 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _conditions_1 (-> []), name: _conditions

Name: _conditions_1 (-> []) Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _references_1 (-> []), name: _references

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_56(uint256) -> _conditions_1 (-> [])[1]
[i]Type for REF_56

Name: _conditions_1 (-> []) Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_57(address) -> _references_1 (-> [])[4]
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_57

Name: _references_1 (-> []) Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(uint256) = INTERNAL_CALL, PoolTemplate._depositFrom(uint256,address)(REF_56,REF_57)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, -997, 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, -997]]
Param: _amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: _from
[[], [], 'u', None, [], -1, -997, 'u']

Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_depositFrom(uint256,address)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(marketStatus == MarketStatus.Trading && paused == false,ERROR: DEPOSIT_DISABLED)
Propogating All
EXPRESSION require(bool,string)(_amount > 0,ERROR: DEPOSIT_ZERO)
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _mintAmount = worth(_amount)
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION vault.addValue(_amount,_from,address(this))
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Deposit(_from,_amount,_mintAmount)
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_mintAmount_1
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _mint(_from,_mintAmount)
Propogating All
_from_1
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
_mintAmount_1
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_1(uint256) := ϕ(['REF_56'])
[i] _amount cleared
clearing ir...?
_from_1(address) := ϕ(['REF_57'])
[i] _from cleared
clearing ir...?
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 2
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_5, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 5
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 3
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_56'])
[i]Type for _amount

Name: _amount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_from_1(address) := ϕ(['REF_57'])
[i]Type for _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_60 cleared
clearing ir...?
TMP_176(bool) = marketStatus_3 == REF_60
[i] TMP_176 cleared
clearing ir...?
TMP_177(bool) = paused_2 == False
[i] TMP_177 cleared
clearing ir...?
TMP_178(bool) = TMP_176 && TMP_177
[i] TMP_178 cleared
clearing ir...?
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_60

Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(bool) = marketStatus_3 == REF_60
[i]Type for TMP_176

Name: TMP_176 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = paused_2 == False
[i]Type for TMP_177

Name: TMP_177 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_176 && TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_180(bool) = _amount_1 > 0
[i] TMP_180 cleared
clearing ir...?
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_180(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_180

Name: TMP_180 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_182 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_182(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_182

Name: TMP_182 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_182(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_183 = CONVERT this to address
[i] TMP_183 cleared
clearing ir...?
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
[i] TMP_184 cleared
clearing ir...?
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_7, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 7
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: _depositFrom
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_184

Name: TMP_184 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(_from_1,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
New param cache [[[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
clearing ir...?
_amount_1(uint256) := ϕ(['REF_56'])
[i] _amount cleared
clearing ir...?
_from_1(address) := ϕ(['REF_57'])
[i] _from cleared
clearing ir...?
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _from Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: _from_1 Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 2
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_5, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 5
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 3
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_56'])
[i]Type for _amount

Name: _amount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_from_1(address) := ϕ(['REF_57'])
[i]Type for _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
paused_2(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_5(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_3(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_60 cleared
clearing ir...?
TMP_176(bool) = marketStatus_3 == REF_60
[i] TMP_176 cleared
clearing ir...?
TMP_177(bool) = paused_2 == False
[i] TMP_177 cleared
clearing ir...?
TMP_178(bool) = TMP_176 && TMP_177
[i] TMP_178 cleared
clearing ir...?
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_3, name: marketStatus

Name: marketStatus Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_2, name: paused

Name: paused Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_60(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_60

Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_60 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(bool) = marketStatus_3 == REF_60
[i]Type for TMP_176

Name: TMP_176 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = paused_2 == False
[i]Type for TMP_177

Name: TMP_177 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(bool) = TMP_176 && TMP_177
[i]Type for TMP_178

Name: TMP_178 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_180(bool) = _amount_1 > 0
[i] TMP_180 cleared
clearing ir...?
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_180(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_180

Name: TMP_180 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_181

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_182 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_182(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_182(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_182

Name: TMP_182 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_182(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_183 = CONVERT this to address
[i] TMP_183 cleared
clearing ir...?
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
[i] TMP_184 cleared
clearing ir...?
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_6, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_7, name: vault

Name: vault Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 7
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_183 = CONVERT this to address
[i]Type for TMP_183

Name: TMP_183 Function: _depositFrom
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_184(uint256) = HIGH_LEVEL_CALL, dest:vault_6(IVault), function:addValue, arguments:['_amount_1', '_from_1', 'TMP_183']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_184

Name: TMP_184 Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_7(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_6', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(_from_1,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _depositFrom
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _from_1, name: _from

Name: _from Function: _depositFrom
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: _depositFrom
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(_from_1,_mintAmount_1)
New param cache [[[], [], 'u', '_from', [], -1, -997, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_164

Name: TMP_164 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



deposit
Function name: deposit
Finding type for _amount(uint256 ... )
Value: u
Param1: 
Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
deposit(uint256)


paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_165(bool) = marketStatus_2 == REF_58
TMP_166(bool) = paused_1 == False
TMP_167(bool) = TMP_165 && TMP_166
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
TMP_169(bool) = _amount_1 > 0
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
_mintAmount_1(uint256) := TMP_171(uint256)
TMP_172 = CONVERT this to address
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
Emit Deposit(msg.sender,_amount_1,_mintAmount_1)
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_1, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 1
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_2, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 2
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_2, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 2
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_58 cleared
clearing ir...?
TMP_165(bool) = marketStatus_2 == REF_58
[i] TMP_165 cleared
clearing ir...?
TMP_166(bool) = paused_1 == False
[i] TMP_166 cleared
clearing ir...?
TMP_167(bool) = TMP_165 && TMP_166
[i] TMP_167 cleared
clearing ir...?
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_2, name: marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_1, name: paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_2, name: marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_1, name: paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_58

Name: REF_58 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_58 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = marketStatus_2 == REF_58
[i]Type for TMP_165

Name: TMP_165 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = paused_1 == False
[i]Type for TMP_166

Name: TMP_166 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(bool) = TMP_165 && TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_168

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_169(bool) = _amount_1 > 0
[i] TMP_169 cleared
clearing ir...?
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_169

Name: TMP_169 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_170

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_171 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_171(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_171

Name: TMP_171 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_171(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_172 = CONVERT this to address
[i] TMP_172 cleared
clearing ir...?
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
[i] TMP_173 cleared
clearing ir...?
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_3, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 3
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_3, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_4, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 4
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT this to address
[i]Type for TMP_172

Name: TMP_172 Function: deposit
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_173

Name: TMP_173 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(msg.sender,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: account
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(account != address(0),ERC20: mint to the zero address)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _beforeTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _totalSupply += amount
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _balances[account] += amount
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Transfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _afterTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: -997
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
[i]Type for REF_29

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
[i]Type for REF_29

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_165(bool) = marketStatus_2 == REF_58
TMP_166(bool) = paused_1 == False
TMP_167(bool) = TMP_165 && TMP_166
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
TMP_169(bool) = _amount_1 > 0
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
_mintAmount_1(uint256) := TMP_171(uint256)
TMP_172 = CONVERT this to address
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
Emit Deposit(msg.sender,_amount_1,_mintAmount_1)
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_1, name: paused

Name: paused Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 1
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_2, name: vault

Name: vault Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 2
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_2, name: marketStatus

Name: marketStatus Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 2
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_1(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_2(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_2(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_58 cleared
clearing ir...?
TMP_165(bool) = marketStatus_2 == REF_58
[i] TMP_165 cleared
clearing ir...?
TMP_166(bool) = paused_1 == False
[i] TMP_166 cleared
clearing ir...?
TMP_167(bool) = TMP_165 && TMP_166
[i] TMP_167 cleared
clearing ir...?
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_2, name: marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_1, name: paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_2, name: marketStatus

Name: marketStatus Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_1, name: paused

Name: paused Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_58(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_58

Name: REF_58 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_58 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = marketStatus_2 == REF_58
[i]Type for TMP_165

Name: TMP_165 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = paused_1 == False
[i]Type for TMP_166

Name: TMP_166 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167(bool) = TMP_165 && TMP_166
[i]Type for TMP_167

Name: TMP_167 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_168(None) = SOLIDITY_CALL require(bool,string)(TMP_167,ERROR: DEPOSIT_DISABLED)
[i]Type for TMP_168

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_169(bool) = _amount_1 > 0
[i] TMP_169 cleared
clearing ir...?
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_169(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_169

Name: TMP_169 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(None) = SOLIDITY_CALL require(bool,string)(TMP_169,ERROR: DEPOSIT_ZERO)
[i]Type for TMP_170

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
[i] TMP_171 cleared
clearing ir...?
_mintAmount_1(uint256) := TMP_171(uint256)
[i] _mintAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
TMP_171(uint256) = INTERNAL_CALL, PoolTemplate.worth(uint256)(_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_171

Name: TMP_171 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_mintAmount_1(uint256) := TMP_171(uint256)
[i]Type for _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_172 = CONVERT this to address
[i] TMP_172 cleared
clearing ir...?
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
[i] TMP_173 cleared
clearing ir...?
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_3, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_3, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_4, name: vault

Name: vault Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 4
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT this to address
[i]Type for TMP_172

Name: TMP_172 Function: deposit
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:vault_3(IVault), function:addValue, arguments:['_amount_1', 'msg.sender', 'TMP_172']  
High Call: addValue
Running querryfc
Found: None
Written func info: IVault, addValue
[i]Type for TMP_173

Name: TMP_173 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_4(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_3', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Deposit(msg.sender,_amount_1,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
Ssa_name: _mintAmount_1, name: _mintAmount

Name: _mintAmount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _mintAmount, Num: 1
Globalname: _mintAmount, contract_name: PoolTemplate
End popogation
INTERNAL_CALL, InsureDAOERC20._mint(address,uint256)(msg.sender,_mintAmount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: account
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(account != address(0),ERC20: mint to the zero address)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _beforeTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _totalSupply += amount
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _balances[account] += amount
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Transfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _afterTokenTransfer(address(0),account,amount)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
[i]Type for REF_29

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i] amount cleared
clearing ir...?
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['_from_1', 'msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_mintAmount_1', '_mintAmount_1'])
[i]Type for amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT 0 to address
[i] TMP_98 cleared
clearing ir...?
TMP_99(bool) = account_1 != TMP_98
[i] TMP_99 cleared
clearing ir...?
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_98 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = account_1 != TMP_98
[i]Type for TMP_99

Name: TMP_99 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100(None) = SOLIDITY_CALL require(bool,string)(TMP_99,ERC20: mint to the zero address)
[i]Type for TMP_100

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT 0 to address
[i] TMP_101 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_101 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(TMP_101,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'from', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
REF_29(uint256) -> _balances_7[account_1]
[i] REF_29 cleared
clearing ir...?
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i] _balances cleared
clearing ir...?
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
[i] REF_29 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(uint256) -> _balances_7[account_1]
[i]Type for REF_29

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(-> _balances_8) = REF_29 (c)+ amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_29

Name: REF_29 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
TMP_103 = CONVERT 0 to address
[i] TMP_103 cleared
clearing ir...?
Emit Transfer(TMP_103,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_103 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_105 = CONVERT 0 to address
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
End popogation
TMP_105 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(TMP_105,account_1,amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: PoolTemplate
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



requestWithdraw
Function name: requestWithdraw
Finding type for _amount(uint256 ... )
Value: u
Param1: 
Name: _amount Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
requestWithdraw(uint256)


withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
_balance_1(uint256) := TMP_187(uint256)
TMP_188(bool) = _balance_1 >= _amount_1
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
TMP_190(bool) = _amount_1 > 0
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
REF_63(uint256) -> REF_62.timestamp
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
REF_65(uint256) -> REF_64.amount
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
Emit WithdrawRequested(msg.sender,_amount_1,block.timestamp)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: withdrawalReq_1, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 1
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
clearing ir...?
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
[i] TMP_187 cleared
clearing ir...?
_balance_1(uint256) := TMP_187(uint256)
[i] _balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_187

Name: TMP_187 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_187(uint256)
[i]Type for _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_188(bool) = _balance_1 >= _amount_1
[i] TMP_188 cleared
clearing ir...?
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balance_1, name: _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_188(bool) = _balance_1 >= _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_188

Name: TMP_188 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_190(bool) = _amount_1 > 0
[i] TMP_190 cleared
clearing ir...?
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_190(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_190

Name: TMP_190 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
[i] REF_62 cleared
clearing ir...?
REF_63(uint256) -> REF_62.timestamp
[i] REF_63 cleared
clearing ir...?
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
[i] withdrawalReq cleared
clearing ir...?
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
[i] REF_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: withdrawalReq_3, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 3
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_3, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
[i]Type for REF_62

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(uint256) -> REF_62.timestamp
OUT KEY: requestWithdraw_REF_62_timestamp
OUT KEY: requestWithdraw_REF_timestamp
FTT: None
No field found
[i]Type for REF_63

Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
[i]Type for REF_63

Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
[i] REF_64 cleared
clearing ir...?
REF_65(uint256) -> REF_64.amount
[i] REF_65 cleared
clearing ir...?
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
[i] withdrawalReq cleared
clearing ir...?
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
[i] REF_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_4, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 4
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_4, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
[i]Type for REF_64

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_65(uint256) -> REF_64.amount
OUT KEY: requestWithdraw_withdrawalReq_amount
OUT KEY: requestWithdraw_withdrawalReq_amount
FTT: None
No field found
[i]Type for REF_65

Name: REF_65 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_65 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
[i]Type for REF_65

Name: REF_65 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_65 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
Emit WithdrawRequested(msg.sender,_amount_1,block.timestamp)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
_balance_1(uint256) := TMP_187(uint256)
TMP_188(bool) = _balance_1 >= _amount_1
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
TMP_190(bool) = _amount_1 > 0
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
REF_63(uint256) -> REF_62.timestamp
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
REF_65(uint256) -> REF_64.amount
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
Emit WithdrawRequested(msg.sender,_amount_1,block.timestamp)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: withdrawalReq_1, name: withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 1
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
withdrawalReq_1(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
[i] TMP_187 cleared
clearing ir...?
_balance_1(uint256) := TMP_187(uint256)
[i] _balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_187(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(msg.sender)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_187

Name: TMP_187 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_187(uint256)
[i]Type for _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_188(bool) = _balance_1 >= _amount_1
[i] TMP_188 cleared
clearing ir...?
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_188(bool) = _balance_1 >= _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_188

Name: TMP_188 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_189(None) = SOLIDITY_CALL require(bool,string)(TMP_188,ERROR: REQUEST_EXCEED_BALANCE)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_190(bool) = _amount_1 > 0
[i] TMP_190 cleared
clearing ir...?
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_190(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_190

Name: TMP_190 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_191(None) = SOLIDITY_CALL require(bool,string)(TMP_190,ERROR: REQUEST_ZERO)
[i]Type for TMP_191

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
[i] REF_62 cleared
clearing ir...?
REF_63(uint256) -> REF_62.timestamp
[i] REF_63 cleared
clearing ir...?
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
[i] withdrawalReq cleared
clearing ir...?
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
[i] REF_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: withdrawalReq_3, name: withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 3
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_3, name: withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_62(PoolTemplate.Withdrawal) -> withdrawalReq_2[msg.sender]
[i]Type for REF_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(uint256) -> REF_62.timestamp
OUT KEY: requestWithdraw_REF_62_timestamp
OUT KEY: requestWithdraw_REF_timestamp
FTT: None
No field found
[i]Type for REF_63

Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_3(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_2'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_63 (->withdrawalReq_3) := block.timestamp(uint256)
[i]Type for REF_63

Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_63 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
[i] REF_64 cleared
clearing ir...?
REF_65(uint256) -> REF_64.amount
[i] REF_65 cleared
clearing ir...?
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
[i] withdrawalReq cleared
clearing ir...?
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
[i] REF_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_4, name: withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 4
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_4, name: withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_64(PoolTemplate.Withdrawal) -> withdrawalReq_3[msg.sender]
[i]Type for REF_64

Name: withdrawalReq Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_65(uint256) -> REF_64.amount
OUT KEY: requestWithdraw_withdrawalReq_amount
OUT KEY: requestWithdraw_withdrawalReq_amount
FTT: None
No field found
[i]Type for REF_65

Name: REF_65 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_65 Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_4(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_3'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_65 (->withdrawalReq_4) := _amount_1(uint256)
[i]Type for REF_65

Name: REF_65 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_65 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
Emit WithdrawRequested(msg.sender,_amount_1,block.timestamp)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation



withdraw
Function name: withdraw
Finding type for _amount(uint256 ... )
Value: u
Param1: 
Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
withdraw(uint256)


parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
_supply_1(uint256) := TMP_193(uint256)
TMP_194(bool) = _supply_1 != 0
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
vault_10(IVault) := ϕ(['vault_45'])
_liquidity_1(uint256) := TMP_196(uint256)
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
TMP_198(uint256) = TMP_197 (c)/ _supply_1
_retVal_1(uint256) := TMP_198(uint256)
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_199(bool) = marketStatus_6 == REF_66
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
REF_68(uint256) -> REF_67.timestamp
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_202(uint256) = REF_68 (c)+ TMP_201
TMP_203(bool) = TMP_202 < block.timestamp
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
REF_71(uint256) -> REF_70.timestamp
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_206(uint256) = REF_71 (c)+ TMP_205
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_208(uint256) = TMP_206 (c)+ TMP_207
TMP_209(bool) = TMP_208 > block.timestamp
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
REF_75(uint256) -> REF_74.amount
TMP_211(bool) = REF_75 >= _amount_1
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
TMP_213(bool) = _amount_1 > 0
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
TMP_216(bool) = _retVal_1 <= TMP_215
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
REF_77(uint256) -> REF_76.amount
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
Emit Withdraw(msg.sender,_amount_1,_retVal_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: parameters_3, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 3
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_8, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 8
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_4, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 4
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_5, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 5
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_193 cleared
clearing ir...?
_supply_1(uint256) := TMP_193(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_193

Name: TMP_193 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_193(uint256)
[i]Type for _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_194(bool) = _supply_1 != 0
[i] TMP_194 cleared
clearing ir...?
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_194(bool) = _supply_1 != 0
[i]Type for TMP_194

Name: TMP_194 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_196 cleared
clearing ir...?
vault_10(IVault) := ϕ(['vault_45'])
[i] vault cleared
clearing ir...?
_liquidity_1(uint256) := TMP_196(uint256)
[i] _liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _liquidity_1, name: _liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _liquidity, Num: 1
Globalname: _liquidity, contract_name: PoolTemplate
End popogation
Ssa_name: vault_10, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 10
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_196

Name: TMP_196 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
vault_10(IVault) := ϕ(['vault_45'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
_liquidity_1(uint256) := TMP_196(uint256)
[i]Type for _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
[i] TMP_197 cleared
clearing ir...?
TMP_198(uint256) = TMP_197 (c)/ _supply_1
[i] TMP_198 cleared
clearing ir...?
_retVal_1(uint256) := TMP_198(uint256)
[i] _retVal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _retVal, Num: 1
Globalname: _retVal, contract_name: PoolTemplate
End popogation
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
Mul...

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_197

Name: TMP_197 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = TMP_197 (c)/ _supply_1
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_198

Name: TMP_198 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_retVal_1(uint256) := TMP_198(uint256)
[i]Type for _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_66 cleared
clearing ir...?
TMP_199(bool) = marketStatus_6 == REF_66
[i] TMP_199 cleared
clearing ir...?
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_6, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 6
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_6, name: marketStatus

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_66

Name: REF_66 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_66 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = marketStatus_6 == REF_66
[i]Type for TMP_199

Name: TMP_199 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
[i] REF_67 cleared
clearing ir...?
REF_68(uint256) -> REF_67.timestamp
[i] REF_68 cleared
clearing ir...?
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
[i] TMP_201 cleared
clearing ir...?
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
[i] parameters cleared
clearing ir...?
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_202(uint256) = REF_68 (c)+ TMP_201
[i] TMP_202 cleared
clearing ir...?
TMP_203(bool) = TMP_202 < block.timestamp
[i] TMP_203 cleared
clearing ir...?
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_5, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 5
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_7, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 7
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_5, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_7, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: parameters_6, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 6
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_11, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 11
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 8
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
[i]Type for REF_67

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_68(uint256) -> REF_67.timestamp
OUT KEY: withdraw_REF_67_timestamp
OUT KEY: withdraw_REF_timestamp
FTT: None
No field found
[i]Type for REF_68

Name: REF_68 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_68 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
High Call: getLockup
Running querryfc
Found: None
Written func info: IParameters, getLockup
[i]Type for TMP_201

Name: TMP_201 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_202(uint256) = REF_68 (c)+ TMP_201
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_202

Name: TMP_202 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(bool) = TMP_202 < block.timestamp
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_203

Name: TMP_203 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
[i]Type for TMP_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
[i] REF_70 cleared
clearing ir...?
REF_71(uint256) -> REF_70.timestamp
[i] REF_71 cleared
clearing ir...?
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
[i] TMP_205 cleared
clearing ir...?
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
[i] parameters cleared
clearing ir...?
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_206(uint256) = REF_71 (c)+ TMP_205
[i] TMP_206 cleared
clearing ir...?
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
[i] TMP_207 cleared
clearing ir...?
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_208(uint256) = TMP_206 (c)+ TMP_207
[i] TMP_208 cleared
clearing ir...?
TMP_209(bool) = TMP_208 > block.timestamp
[i] TMP_209 cleared
clearing ir...?
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_7, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 7
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_6, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_7, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_6, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: parameters_7, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_12, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 12
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_9, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 9
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_8, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 8
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_13, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 13
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 10
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
[i]Type for REF_70

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_71(uint256) -> REF_70.timestamp
OUT KEY: withdraw_withdrawalReq_timestamp
OUT KEY: withdraw_withdrawalReq_timestamp
FTT: None
No field found
[i]Type for REF_71

Name: REF_71 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_71 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
High Call: getLockup
Running querryfc
Found: None
Written func info: IParameters, getLockup
[i]Type for TMP_205

Name: TMP_205 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_206(uint256) = REF_71 (c)+ TMP_205
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_206

Name: TMP_206 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
High Call: getWithdrawable
Running querryfc
Found: None
Written func info: IParameters, getWithdrawable
[i]Type for TMP_207

Name: TMP_207 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_208(uint256) = TMP_206 (c)+ TMP_207
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_208

Name: TMP_208 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(bool) = TMP_208 > block.timestamp
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_209

Name: TMP_209 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
[i] REF_74 cleared
clearing ir...?
REF_75(uint256) -> REF_74.amount
[i] REF_75 cleared
clearing ir...?
TMP_211(bool) = REF_75 >= _amount_1
[i] TMP_211 cleared
clearing ir...?
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
[i]Type for REF_74

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(uint256) -> REF_74.amount
OUT KEY: withdraw_withdrawalReq_amount
OUT KEY: withdraw_withdrawalReq_amount
FTT: None
No field found
[i]Type for REF_75

Name: REF_75 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_75 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_75 >= _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_213(bool) = _amount_1 > 0
[i] TMP_213 cleared
clearing ir...?
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_213(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_213

Name: TMP_213 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
[i]Type for TMP_214

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_215 cleared
clearing ir...?
TMP_216(bool) = _retVal_1 <= TMP_215
[i] TMP_216 cleared
clearing ir...?
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
Propogating parameters and globals to SSA variables...
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
FIND RETURN
ENTRY_POINT
availableBalance()
ENTRY_POINT
Propogating All
IF totalLiquidity() > 0
Propogating All
RETURN totalLiquidity() - lockedAmount
Propogating All
RETURN 0
Propogating All
clearing ir...?
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_18, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 18
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_401 cleared
clearing ir...?
TMP_402(bool) = TMP_401 > 0
[i] TMP_402 cleared
clearing ir...?
CONDITION TMP_402
Propogating parameters and globals to SSA variables...
End popogation
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
FIND RETURN
ENTRY_POINT
totalLiquidity()
ENTRY_POINT
Propogating All
RETURN originalLiquidity() + totalCredit
Propogating All
clearing ir...?
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalCredit_19, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 19
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_409 cleared
clearing ir...?
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
[i] TMP_410 cleared
clearing ir...?
RETURN TMP_410
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_20, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 20
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_20, name: totalCredit

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_409

Name: TMP_409 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_410

Name: TMP_410 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_410
clearing ir...?
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalCredit_19, name: totalCredit

Name: totalCredit Function: totalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 19
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_409 cleared
clearing ir...?
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
[i] TMP_410 cleared
clearing ir...?
RETURN TMP_410
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_409

Name: TMP_409 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_410

Name: TMP_410 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_410
[i]Type for TMP_401

Name: TMP_401 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_402(bool) = TMP_401 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_402

Name: TMP_402 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_403 cleared
clearing ir...?
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
[i] TMP_404 cleared
clearing ir...?
RETURN TMP_404
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_20, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 20
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_20, name: lockedAmount

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_403

Name: TMP_403 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_404

Name: TMP_404 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_404
clearing ir...?
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_18, name: lockedAmount

Name: lockedAmount Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 18
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_401 cleared
clearing ir...?
TMP_402(bool) = TMP_401 > 0
[i] TMP_402 cleared
clearing ir...?
CONDITION TMP_402
Propogating parameters and globals to SSA variables...
End popogation
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_401

Name: TMP_401 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_402(bool) = TMP_401 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_402

Name: TMP_402 Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_403 cleared
clearing ir...?
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
[i] TMP_404 cleared
clearing ir...?
RETURN TMP_404
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_403

Name: TMP_403 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_404

Name: TMP_404 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_404
[i]Type for TMP_215

Name: TMP_215 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_216(bool) = _retVal_1 <= TMP_215
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_216

Name: TMP_216 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
[i] REF_76 cleared
clearing ir...?
REF_77(uint256) -> REF_76.amount
[i] REF_77 cleared
clearing ir...?
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
[i] withdrawalReq cleared
clearing ir...?
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
[i] REF_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalReq, Num: 12
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: requestWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
[i]Type for REF_76

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.amount
OUT KEY: withdraw_REF_76_amount
OUT KEY: withdraw_REF_amount
FTT: None
No field found
[i]Type for REF_77

Name: REF_77 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_77 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_77

Name: REF_77 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_77 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: account
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_burn(address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(account != address(0),ERC20: burn from the zero address)
Propogating All
account_1
Ssa_name: account_1, name: account

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _beforeTokenTransfer(account,address(0),amount)
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE accountBalance = _balances[account]
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION require(bool,string)(accountBalance >= amount,ERC20: burn amount exceeds balance)
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
accountBalance_1
Ssa_name: accountBalance_1, name: accountBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
EXPRESSION _balances[account] = accountBalance - amount
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
accountBalance_1
Ssa_name: accountBalance_1, name: accountBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _totalSupply -= amount
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Transfer(account,address(0),amount)
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION _afterTokenTransfer(account,address(0),amount)
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_amount_1'])
[i] amount cleared
clearing ir...?
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_5(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_9, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 9
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_5, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 5
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_107 = CONVERT 0 to address
[i] TMP_107 cleared
clearing ir...?
TMP_108(bool) = account_1 != TMP_107
[i] TMP_108 cleared
clearing ir...?
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,ERC20: burn from the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_107 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(bool) = account_1 != TMP_107
[i]Type for TMP_108

Name: TMP_108 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,ERC20: burn from the zero address)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_110 = CONVERT 0 to address
[i] TMP_110 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(account_1,TMP_110,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_110 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_110

Name: TMP_110 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(account_1,TMP_110,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
REF_30(uint256) -> _balances_10[account_1]
[i] REF_30 cleared
clearing ir...?
accountBalance_1(uint256) := REF_30(uint256)
[i] accountBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_10, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 10
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_10, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: accountBalance, Num: 1
Globalname: accountBalance, contract_name: PoolTemplate
End popogation
REF_30(uint256) -> _balances_10[account_1]
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accountBalance_1(uint256) := REF_30(uint256)
[i]Type for accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_112(bool) = accountBalance_1 >= amount_1
[i] TMP_112 cleared
clearing ir...?
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,ERC20: burn amount exceeds balance)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_112(bool) = accountBalance_1 >= amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_112

Name: TMP_112 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,ERC20: burn amount exceeds balance)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_31(uint256) -> _balances_10[account_1]
[i] REF_31 cleared
clearing ir...?
TMP_114(uint256) = accountBalance_1 (c)- amount_1
[i] TMP_114 cleared
clearing ir...?
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i] _balances cleared
clearing ir...?
REF_31 (->_balances_11) := TMP_114(uint256)
[i] REF_31 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_11, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 11
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_11, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(uint256) -> _balances_10[account_1]
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(uint256) = accountBalance_1 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_114

Name: TMP_114 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31 (->_balances_11) := TMP_114(uint256)
[i]Type for REF_31

Name: REF_31 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
_totalSupply_7(uint256) = _totalSupply_6 (c)- amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_6, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 6
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_6, name: _totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_7, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 7
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_7(uint256) = _totalSupply_6 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
TMP_115 = CONVERT 0 to address
[i] TMP_115 cleared
clearing ir...?
Emit Transfer(account_1,TMP_115,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_117 = CONVERT 0 to address
[i] TMP_117 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(account_1,TMP_117,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_117 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(account_1,TMP_117,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
account_1(address) := ϕ(['msg.sender'])
[i] account cleared
clearing ir...?
amount_1(uint256) := ϕ(['_amount_1'])
[i] amount cleared
clearing ir...?
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
clearing ir...?
_totalSupply_5(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_9, name: _balances

Name: _balances Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 9
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_5, name: _totalSupply

Name: _totalSupply Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 5
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_4', '_totalSupply_0', '_totalSupply_7'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_107 = CONVERT 0 to address
[i] TMP_107 cleared
clearing ir...?
TMP_108(bool) = account_1 != TMP_107
[i] TMP_108 cleared
clearing ir...?
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,ERC20: burn from the zero address)
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_107 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(bool) = account_1 != TMP_107
[i]Type for TMP_108

Name: TMP_108 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,ERC20: burn from the zero address)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_110 = CONVERT 0 to address
[i] TMP_110 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(account_1,TMP_110,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_110 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_110

Name: TMP_110 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate._beforeTokenTransfer(address,address,uint256)(account_1,TMP_110,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
EXPRESSION super._beforeTokenTransfer(from,to,amount)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
IF from != address(0)
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
NEW VARIABLE _after = balanceOf(from) - amount
Propogating All
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
IF _after < withdrawalReq[from].amount
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
Propogating All
EXPRESSION withdrawalReq[from].amount = _after
Propogating All
_after_1
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
END_IF
END_IF
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
clearing ir...?
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: withdrawalReq_13, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 13
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
from_1(address) := ϕ(['account_1', 'TMP_101', 'sender_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_110'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_13(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._beforeTokenTransfer(address,address,uint256)(from_1,to_1,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', '_from', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', '_from', [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['from_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['to_1'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['to_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_421 = CONVERT 0 to address
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = from_1 != TMP_421
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_421 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_422(bool) = from_1 != TMP_421
[i]Type for TMP_422

Name: TMP_422 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
[i] TMP_423 cleared
clearing ir...?
TMP_424(uint256) = TMP_423 (c)- amount_1
[i] TMP_424 cleared
clearing ir...?
_after_1(uint256) := TMP_424(uint256)
[i] _after cleared
Propogating parameters and globals to SSA variables...
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _after, Num: 1
Globalname: _after, contract_name: PoolTemplate
End popogation
TMP_423(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(from_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
[i]Type for TMP_423

Name: TMP_423 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_424(uint256) = TMP_423 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_424

Name: TMP_424 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_after_1(uint256) := TMP_424(uint256)
[i]Type for _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_183 cleared
clearing ir...?
REF_184(uint256) -> REF_183.amount
[i] REF_184 cleared
clearing ir...?
TMP_425(bool) = _after_1 < REF_184
[i] TMP_425 cleared
clearing ir...?
CONDITION TMP_425
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_15, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
End popogation
REF_183(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_184(uint256) -> REF_183.amount
OUT KEY: _beforeTokenTransfer_REF_183_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_184

Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_184 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_425(bool) = _after_1 < REF_184
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_425

Name: TMP_425 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i] REF_185 cleared
clearing ir...?
REF_186(uint256) -> REF_185.amount
[i] REF_186 cleared
clearing ir...?
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i] withdrawalReq cleared
clearing ir...?
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i] REF_186 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _after_1, name: _after

Name: _after Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 16
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_16, name: withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_185(PoolTemplate.Withdrawal) -> withdrawalReq_15[from_1]
[i]Type for REF_185

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(uint256) -> REF_185.amount
OUT KEY: _beforeTokenTransfer_REF_185_amount
OUT KEY: _beforeTokenTransfer_REF_amount
FTT: None
No field found
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_16(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_15'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_186 (->withdrawalReq_16) := _after_1(uint256)
[i]Type for REF_186

Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_186 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
REF_30(uint256) -> _balances_10[account_1]
[i] REF_30 cleared
clearing ir...?
accountBalance_1(uint256) := REF_30(uint256)
[i] accountBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_10, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_10, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: accountBalance, Num: 1
Globalname: accountBalance, contract_name: PoolTemplate
End popogation
REF_30(uint256) -> _balances_10[account_1]
[i]Type for REF_30

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
accountBalance_1(uint256) := REF_30(uint256)
[i]Type for accountBalance

Name: accountBalance Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_112(bool) = accountBalance_1 >= amount_1
[i] TMP_112 cleared
clearing ir...?
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,ERC20: burn amount exceeds balance)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: accountBalance, Num: 1
Globalname: accountBalance, contract_name: PoolTemplate
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: accountBalance, Num: 1
Globalname: accountBalance, contract_name: PoolTemplate
End popogation
TMP_112(bool) = accountBalance_1 >= amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_112

Name: TMP_112 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,ERC20: burn amount exceeds balance)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_31(uint256) -> _balances_10[account_1]
[i] REF_31 cleared
clearing ir...?
TMP_114(uint256) = accountBalance_1 (c)- amount_1
[i] TMP_114 cleared
clearing ir...?
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i] _balances cleared
clearing ir...?
REF_31 (->_balances_11) := TMP_114(uint256)
[i] REF_31 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: accountBalance_1, name: accountBalance

Name: accountBalance Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_11, name: _balances

Name: _balances Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 11
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_11, name: _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(uint256) -> _balances_10[account_1]
[i]Type for REF_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(uint256) = accountBalance_1 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_114

Name: TMP_114 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31 (->_balances_11) := TMP_114(uint256)
[i]Type for REF_31

Name: REF_31 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _balances
clearing ir...?
_totalSupply_7(uint256) = _totalSupply_6 (c)- amount_1
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_6, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_6, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_7, name: _totalSupply

Name: _totalSupply Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 7
Globalname: _totalSupply, contract_name: PoolTemplate
global...

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_totalSupply_7(uint256) = _totalSupply_6 (c)- amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied _totalSupply
clearing ir...?
TMP_115 = CONVERT 0 to address
[i] TMP_115 cleared
clearing ir...?
Emit Transfer(account_1,TMP_115,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_115 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_117 = CONVERT 0 to address
[i] TMP_117 cleared
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(account_1,TMP_117,amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_117 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, InsureDAOERC20._afterTokenTransfer(address,address,uint256)(account_1,TMP_117,amount_1)
New param cache [[[-1], [-1], 'u', 'account', [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', '_from', [], -1, -997], [[], [], 'u', None, [], -1, 'u']]
Param: from
[[-1], [-1], 'u', 'account', [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Param: to
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Param: amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
ENTRY_POINT
Propogating All
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i] from cleared
clearing ir...?
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i] to cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: to Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['TMP_105', 'sender_1', 'account_1'])
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['account_1', 'recipient_1', 'TMP_117'])
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: _from
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
[i] TMP_219 cleared
clearing ir...?
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_15, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 15
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_15, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_16, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 16
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
High Call: withdrawValue
Running querryfc
Found: None
Written func info: IVault, withdrawValue
[i]Type for TMP_219

Name: TMP_219 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Withdraw(msg.sender,_amount_1,_retVal_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
_supply_1(uint256) := TMP_193(uint256)
TMP_194(bool) = _supply_1 != 0
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
vault_10(IVault) := ϕ(['vault_45'])
_liquidity_1(uint256) := TMP_196(uint256)
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
TMP_198(uint256) = TMP_197 (c)/ _supply_1
_retVal_1(uint256) := TMP_198(uint256)
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_199(bool) = marketStatus_6 == REF_66
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
REF_68(uint256) -> REF_67.timestamp
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_202(uint256) = REF_68 (c)+ TMP_201
TMP_203(bool) = TMP_202 < block.timestamp
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
REF_71(uint256) -> REF_70.timestamp
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_206(uint256) = REF_71 (c)+ TMP_205
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
TMP_208(uint256) = TMP_206 (c)+ TMP_207
TMP_209(bool) = TMP_208 > block.timestamp
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
REF_75(uint256) -> REF_74.amount
TMP_211(bool) = REF_75 >= _amount_1
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
TMP_213(bool) = _amount_1 > 0
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
TMP_216(bool) = _retVal_1 <= TMP_215
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
REF_77(uint256) -> REF_76.amount
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
Emit Withdraw(msg.sender,_amount_1,_retVal_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: parameters_3, name: parameters

Name: parameters Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 3
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_8, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 8
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_4, name: marketStatus

Name: marketStatus Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 4
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_5, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 5
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
parameters_3(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_8(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
marketStatus_4(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_5(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_0', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
clearing ir...?
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_193 cleared
clearing ir...?
_supply_1(uint256) := TMP_193(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_193(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_193

Name: TMP_193 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_193(uint256)
[i]Type for _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_194(bool) = _supply_1 != 0
[i] TMP_194 cleared
clearing ir...?
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_194(bool) = _supply_1 != 0
[i]Type for TMP_194

Name: TMP_194 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,ERROR: NO_AVAILABLE_LIQUIDITY)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_196 cleared
clearing ir...?
vault_10(IVault) := ϕ(['vault_45'])
[i] vault cleared
clearing ir...?
_liquidity_1(uint256) := TMP_196(uint256)
[i] _liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _liquidity, Num: 1
Globalname: _liquidity, contract_name: PoolTemplate
End popogation
Ssa_name: vault_10, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 10
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_196

Name: TMP_196 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
vault_10(IVault) := ϕ(['vault_45'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
_liquidity_1(uint256) := TMP_196(uint256)
[i]Type for _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
[i] TMP_197 cleared
clearing ir...?
TMP_198(uint256) = TMP_197 (c)/ _supply_1
[i] TMP_198 cleared
clearing ir...?
_retVal_1(uint256) := TMP_198(uint256)
[i] _retVal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _retVal, Num: 1
Globalname: _retVal, contract_name: PoolTemplate
End popogation
TMP_197(uint256) = _amount_1 (c)* _liquidity_1
Mul...

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _liquidity Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_197

Name: TMP_197 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = TMP_197 (c)/ _supply_1
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_198

Name: TMP_198 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_retVal_1(uint256) := TMP_198(uint256)
[i]Type for _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_66 cleared
clearing ir...?
TMP_199(bool) = marketStatus_6 == REF_66
[i] TMP_199 cleared
clearing ir...?
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_6, name: marketStatus

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_6, name: marketStatus

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_66(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_66

Name: REF_66 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_66 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_199(bool) = marketStatus_6 == REF_66
[i]Type for TMP_199

Name: TMP_199 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,ERROR: WITHDRAWAL_PENDING)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
[i] REF_67 cleared
clearing ir...?
REF_68(uint256) -> REF_67.timestamp
[i] REF_68 cleared
clearing ir...?
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
[i] TMP_201 cleared
clearing ir...?
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
[i] parameters cleared
clearing ir...?
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_202(uint256) = REF_68 (c)+ TMP_201
[i] TMP_202 cleared
clearing ir...?
TMP_203(bool) = TMP_202 < block.timestamp
[i] TMP_203 cleared
clearing ir...?
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_5, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_7, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_5, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_7, name: withdrawalReq

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: parameters_6, name: parameters

Name: parameters Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 6
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_11, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 11
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 8
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_67(PoolTemplate.Withdrawal) -> withdrawalReq_7[msg.sender]
[i]Type for REF_67

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_68(uint256) -> REF_67.timestamp
OUT KEY: withdraw_REF_67_timestamp
OUT KEY: withdraw_REF_timestamp
FTT: None
No field found
[i]Type for REF_68

Name: REF_68 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_68 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_201(uint256) = HIGH_LEVEL_CALL, dest:parameters_5(IParameters), function:getLockup, arguments:['msg.sender']  
High Call: getLockup
Running querryfc
Found: None
Written func info: IParameters, getLockup
[i]Type for TMP_201

Name: TMP_201 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_6(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_5'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_11(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_10', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_8(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_7', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_202(uint256) = REF_68 (c)+ TMP_201
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_202

Name: TMP_202 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(bool) = TMP_202 < block.timestamp
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_203

Name: TMP_203 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,ERROR: WITHDRAWAL_QUEUE)
[i]Type for TMP_204

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
[i] REF_70 cleared
clearing ir...?
REF_71(uint256) -> REF_70.timestamp
[i] REF_71 cleared
clearing ir...?
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
[i] TMP_205 cleared
clearing ir...?
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
[i] parameters cleared
clearing ir...?
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_206(uint256) = REF_71 (c)+ TMP_205
[i] TMP_206 cleared
clearing ir...?
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
[i] TMP_207 cleared
clearing ir...?
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
[i] vault cleared
clearing ir...?
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
[i] withdrawalReq cleared
clearing ir...?
TMP_208(uint256) = TMP_206 (c)+ TMP_207
[i] TMP_208 cleared
clearing ir...?
TMP_209(bool) = TMP_208 > block.timestamp
[i] TMP_209 cleared
clearing ir...?
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_7, name: parameters

Name: parameters Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 7
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_6, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_7, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_6, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_8, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: parameters_7, name: parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_12, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 12
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_9, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 9
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: parameters_8, name: parameters

Name: parameters Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 8
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_13, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 13
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 10
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_70(PoolTemplate.Withdrawal) -> withdrawalReq_8[msg.sender]
[i]Type for REF_70

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_71(uint256) -> REF_70.timestamp
OUT KEY: withdraw_withdrawalReq_timestamp
OUT KEY: withdraw_withdrawalReq_timestamp
FTT: None
No field found
[i]Type for REF_71

Name: REF_71 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: timestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_71 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: timestamp Function: requestWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_205(uint256) = HIGH_LEVEL_CALL, dest:parameters_6(IParameters), function:getLockup, arguments:['msg.sender']  
High Call: getLockup
Running querryfc
Found: None
Written func info: IParameters, getLockup
[i]Type for TMP_205

Name: TMP_205 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_7(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_6'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_12(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_11', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_9(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_8', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_206(uint256) = REF_71 (c)+ TMP_205
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_206

Name: TMP_206 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_207(uint256) = HIGH_LEVEL_CALL, dest:parameters_7(IParameters), function:getWithdrawable, arguments:['msg.sender']  
High Call: getWithdrawable
Running querryfc
Found: None
Written func info: IParameters, getWithdrawable
[i]Type for TMP_207

Name: TMP_207 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_8(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_7', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: withdraw
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_13(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_12', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
withdrawalReq_10(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_14', 'withdrawalReq_12', 'withdrawalReq_16', 'withdrawalReq_9', 'withdrawalReq_15', 'withdrawalReq_4'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
TMP_208(uint256) = TMP_206 (c)+ TMP_207
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_208

Name: TMP_208 Function: withdraw
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(bool) = TMP_208 > block.timestamp
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_209

Name: TMP_209 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_210(None) = SOLIDITY_CALL require(bool,string)(TMP_209,ERROR: WITHDRAWAL_NO_ACTIVE_REQUEST)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
[i] REF_74 cleared
clearing ir...?
REF_75(uint256) -> REF_74.amount
[i] REF_75 cleared
clearing ir...?
TMP_211(bool) = REF_75 >= _amount_1
[i] TMP_211 cleared
clearing ir...?
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_10, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
REF_74(PoolTemplate.Withdrawal) -> withdrawalReq_10[msg.sender]
[i]Type for REF_74

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(uint256) -> REF_74.amount
OUT KEY: withdraw_withdrawalReq_amount
OUT KEY: withdraw_withdrawalReq_amount
FTT: None
No field found
[i]Type for REF_75

Name: REF_75 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_75 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(bool) = REF_75 >= _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_211

Name: TMP_211 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,ERROR: WITHDRAWAL_EXCEEDED_REQUEST)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_213(bool) = _amount_1 > 0
[i] TMP_213 cleared
clearing ir...?
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_213(bool) = _amount_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_213

Name: TMP_213 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(None) = SOLIDITY_CALL require(bool,string)(TMP_213,ERROR: WITHDRAWAL_ZERO)
[i]Type for TMP_214

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_215 cleared
clearing ir...?
TMP_216(bool) = _retVal_1 <= TMP_215
[i] TMP_216 cleared
clearing ir...?
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
Propogating parameters and globals to SSA variables...
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_215(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
Old param cache: []
[i]Type for TMP_215

Name: TMP_215 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216(bool) = _retVal_1 <= TMP_215
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_216

Name: TMP_216 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,ERROR: WITHDRAW_INSUFFICIENT_LIQUIDITY)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
[i] REF_76 cleared
clearing ir...?
REF_77(uint256) -> REF_76.amount
[i] REF_77 cleared
clearing ir...?
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
[i] withdrawalReq cleared
clearing ir...?
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
[i] REF_77 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Name: withdrawalReq, Num: 12
Globalname: withdrawalReq, contract_name: PoolTemplate
global...

Name: withdrawalReq Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
End popogation
Ssa_name: withdrawalReq_12, name: withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_76(PoolTemplate.Withdrawal) -> withdrawalReq_11[msg.sender]
[i]Type for REF_76

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.amount
OUT KEY: withdraw_REF_76_amount
OUT KEY: withdraw_REF_amount
FTT: None
No field found
[i]Type for REF_77

Name: REF_77 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_77 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
withdrawalReq_12(mapping(address => PoolTemplate.Withdrawal)) := ϕ(['withdrawalReq_11'])
[i]Type for withdrawalReq

Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
REF_77(-> withdrawalReq_12) = REF_77 (c)- _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_77

Name: REF_77 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: withdrawalReq Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: amount, timestamp
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_77 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied withdrawalReq
clearing ir...?
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, InsureDAOERC20._burn(address,uint256)(msg.sender,_amount_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
clearing ir...?
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
[i] TMP_219 cleared
clearing ir...?
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_15, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_15, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_16, name: vault

Name: vault Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 16
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_219(uint256) = HIGH_LEVEL_CALL, dest:vault_15(IVault), function:withdrawValue, arguments:['_retVal_1', 'msg.sender']  
High Call: withdrawValue
Running querryfc
Found: None
Written func info: IVault, withdrawValue
[i]Type for TMP_219

Name: TMP_219 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_16(IVault) := ϕ(['vault_4', 'vault_15', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
Emit Withdraw(msg.sender,_amount_1,_retVal_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _retVal_1, name: _retVal

Name: _retVal Function: withdraw
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation



unlockBatch
Function name: unlockBatch
Finding type for _ids(uint256[] ... )
Value: u
Param1: 
Name: _ids Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
unlockBatch(uint256[])


i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
REF_79 -> LENGTH _ids_1 (-> [])
TMP_221(bool) = i_2 < REF_79
CONDITION TMP_221
REF_80(uint256) -> _ids_1 (-> [])[i_2]
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
TMP_223(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _ids Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i] i cleared
clearing ir...?
REF_79 -> LENGTH _ids_1 (-> [])
clearing ir...?
TMP_221(bool) = i_2 < REF_79
[i] TMP_221 cleared
clearing ir...?
CONDITION TMP_221
Propogating parameters and globals to SSA variables...
Ssa_name: _ids_1 (-> []), name: _ids

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _ids Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79 -> LENGTH _ids_1 (-> [])
[i]Type for REF_79

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(bool) = i_2 < REF_79
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_221

Name: TMP_221 Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_80(uint256) -> _ids_1 (-> [])[i_2]
[i] REF_80 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
Propogating parameters and globals to SSA variables...
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
REF_80(uint256) -> _ids_1 (-> [])[i_2]
[i]Type for REF_80

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: _id
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
unlock(uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(insurances[_id].status == true && marketStatus == MarketStatus.Trading && insurances[_id].endTime + parameters.getGrace(msg.sender) < block.timestamp,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION insurances[_id].status == false
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION lockedAmount = lockedAmount - insurances[_id].amount
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Unlocked(_id,insurances[_id].amount)
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_9, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_10, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Fieldf: 
Name: endTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_3, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_10, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_3, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_223(uint256) := i_2(uint256)
[i] TMP_223 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_223(uint256) := i_2(uint256)
[i]Type for TMP_223

Name: TMP_223 Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef


i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
REF_79 -> LENGTH _ids_1 (-> [])
TMP_221(bool) = i_2 < REF_79
CONDITION TMP_221
REF_80(uint256) -> _ids_1 (-> [])[i_2]
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
TMP_223(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _ids Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i] i cleared
clearing ir...?
REF_79 -> LENGTH _ids_1 (-> [])
clearing ir...?
TMP_221(bool) = i_2 < REF_79
[i] TMP_221 cleared
clearing ir...?
CONDITION TMP_221
Propogating parameters and globals to SSA variables...
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79 -> LENGTH _ids_1 (-> [])
[i]Type for REF_79

Name: REF_79 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221(bool) = i_2 < REF_79
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_221

Name: TMP_221 Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_80(uint256) -> _ids_1 (-> [])[i_2]
[i] REF_80 cleared
clearing ir...?
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
Propogating parameters and globals to SSA variables...
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _ids_1 (-> []), name: _ids

Name: _ids_1 (-> []) Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
REF_80(uint256) -> _ids_1 (-> [])[i_2]
[i]Type for REF_80

Name: _ids_1 (-> []) Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, PoolTemplate.unlock(uint256)(REF_80)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
Param: _id
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
unlock(uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(insurances[_id].status == true && marketStatus == MarketStatus.Trading && insurances[_id].endTime + parameters.getGrace(msg.sender) < block.timestamp,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION insurances[_id].status == false
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION lockedAmount = lockedAmount - insurances[_id].amount
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
EXPRESSION Unlocked(_id,insurances[_id].amount)
Propogating All
_id_1
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_10, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: lockedAmount_3, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_10, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: lockedAmount_3, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_223(uint256) := i_2(uint256)
[i] TMP_223 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: i Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_223(uint256) := i_2(uint256)
[i]Type for TMP_223

Name: TMP_223 Function: unlockBatch
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: unlockBatch
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



unlock
Function name: unlock
Finding type for _id(uint256 ... )
Value: u
Param1: 
Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
unlock(uint256)


_id_1(uint256) := ϕ(['REF_80'])
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
REF_82(bool) -> REF_81.status
TMP_224(bool) = REF_82 == True
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_225(bool) = marketStatus_7 == REF_83
TMP_226(bool) = TMP_224 && TMP_225
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
REF_85(uint256) -> REF_84.endTime
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
TMP_228(uint256) = REF_85 (c)+ TMP_227
TMP_229(bool) = TMP_228 < block.timestamp
TMP_230(bool) = TMP_226 && TMP_229
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_88(bool) -> REF_87.status
TMP_232(bool) = REF_88 == False
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_90(uint256) -> REF_89.amount
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
lockedAmount_3(uint256) := TMP_233(uint256)
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_92(uint256) -> REF_91.amount
Emit Unlocked(_id_1,REF_92)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id_1 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_10, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_3, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


_id_1(uint256) := ϕ(['REF_80'])
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
REF_82(bool) -> REF_81.status
TMP_224(bool) = REF_82 == True
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_225(bool) = marketStatus_7 == REF_83
TMP_226(bool) = TMP_224 && TMP_225
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
REF_85(uint256) -> REF_84.endTime
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
TMP_228(uint256) = REF_85 (c)+ TMP_227
TMP_229(bool) = TMP_228 < block.timestamp
TMP_230(bool) = TMP_226 && TMP_229
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_88(bool) -> REF_87.status
TMP_232(bool) = REF_88 == False
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_90(uint256) -> REF_89.amount
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
lockedAmount_3(uint256) := TMP_233(uint256)
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
REF_92(uint256) -> REF_91.amount
Emit Unlocked(_id_1,REF_92)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := ϕ(['REF_80'])
[i] _id cleared
clearing ir...?
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 9
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_1, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 1
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 7
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Name: insurances, Num: 1
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['REF_80'])
[i]Type for _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_9(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_1(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_7(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_1(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
clearing ir...?
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_81 cleared
clearing ir...?
REF_82(bool) -> REF_81.status
[i] REF_82 cleared
clearing ir...?
TMP_224(bool) = REF_82 == True
[i] TMP_224 cleared
clearing ir...?
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_83 cleared
clearing ir...?
TMP_225(bool) = marketStatus_7 == REF_83
[i] TMP_225 cleared
clearing ir...?
TMP_226(bool) = TMP_224 && TMP_225
[i] TMP_226 cleared
clearing ir...?
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i] REF_84 cleared
clearing ir...?
REF_85(uint256) -> REF_84.endTime
[i] REF_85 cleared
clearing ir...?
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
[i] TMP_227 cleared
clearing ir...?
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i] parameters cleared
clearing ir...?
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i] insurances cleared
clearing ir...?
TMP_228(uint256) = REF_85 (c)+ TMP_227
[i] TMP_228 cleared
clearing ir...?
TMP_229(bool) = TMP_228 < block.timestamp
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_226 && TMP_229
[i] TMP_230 cleared
clearing ir...?
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_1, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Ssa_name: parameters_9, name: parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_7, name: marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_10, name: parameters

Name: parameters Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 10
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 2
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_8, name: marketStatus

Name: marketStatus Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 8
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Name: insurances, Num: 2
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_81

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_82(bool) -> REF_81.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_82

Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_82 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_82 == True
[i]Type for TMP_224

Name: TMP_224 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_83

Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_83 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(bool) = marketStatus_7 == REF_83
[i]Type for TMP_225

Name: TMP_225 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = TMP_224 && TMP_225
[i]Type for TMP_226

Name: TMP_226 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_84(PoolTemplate.Insurance) -> insurances_1[_id_1]
[i]Type for REF_84

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(uint256) -> REF_84.endTime
OUT KEY: unlock_insurances_endTime
OUT KEY: unlock_insurances_endTime
FTT: None
No field found
[i]Type for REF_85

Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, endTime
Finance Type: undef
Fieldf: 
Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_85 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(uint256) = HIGH_LEVEL_CALL, dest:parameters_9(IParameters), function:getGrace, arguments:['msg.sender']  
High Call: getGrace
Running querryfc
Found: None
Written func info: IParameters, getGrace
[i]Type for TMP_227

Name: TMP_227 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_10(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_9'])
[i]Type for parameters

Name: parameters Function: unlock
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_2(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_1', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_8(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_7', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_2(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_5', 'insurances_7', 'insurances_1'])
[i]Type for insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
TMP_228(uint256) = REF_85 (c)+ TMP_227
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(bool) = TMP_228 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_229

Name: TMP_229 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_226 && TMP_229
[i]Type for TMP_230

Name: TMP_230 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(None) = SOLIDITY_CALL require(bool,string)(TMP_230,ERROR: UNLOCK_BAD_COINDITIONS)
[i]Type for TMP_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_87 cleared
clearing ir...?
REF_88(bool) -> REF_87.status
[i] REF_88 cleared
clearing ir...?
TMP_232(bool) = REF_88 == False
[i] TMP_232 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_87(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_87

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_88(bool) -> REF_87.status
OUT KEY: unlock_insurances_status
OUT KEY: unlock_insurances_status
FTT: None
No field found
[i]Type for REF_88

Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_88 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(bool) = REF_88 == False
[i]Type for TMP_232

Name: TMP_232 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_89 cleared
clearing ir...?
REF_90(uint256) -> REF_89.amount
[i] REF_90 cleared
clearing ir...?
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
[i] TMP_233 cleared
clearing ir...?
lockedAmount_3(uint256) := TMP_233(uint256)
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: lockedAmount_2, name: lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_3, name: lockedAmount

Name: lockedAmount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 3
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_89(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_89

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_90(uint256) -> REF_89.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_90

Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_90 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = lockedAmount_2 (c)- REF_90
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_3(uint256) := TMP_233(uint256)
[i]Type for lockedAmount

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_91 cleared
clearing ir...?
REF_92(uint256) -> REF_91.amount
[i] REF_92 cleared
clearing ir...?
Emit Unlocked(_id_1,REF_92)
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: insurances_2, name: insurances

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_91(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_91

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_92(uint256) -> REF_91.amount
OUT KEY: unlock_insurances_amount
OUT KEY: unlock_insurances_amount
FTT: None
No field found
[i]Type for REF_92

Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_92 Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



allocateCredit
Function name: allocateCredit
Finding type for _credit(uint256 ... )

Name: _credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
Param1: 
Name: _credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u']]
FIND RETURN
ENTRY_POINT
allocateCredit(uint256)


registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_235 = CONVERT registry_2 to IRegistry
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
REF_95(bool) -> _index_1 (-> ['indicies']).exist
TMP_238(bool) = REF_95 == False
CONDITION TMP_238
REF_96(bool) -> _index_1 (-> ['indicies']).exist
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
TMP_242(bool) = REF_100 > 0
CONDITION TMP_242
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
_pending_1(uint256) := TMP_245(uint256)
REF_98 -> LENGTH indexList_2
TMP_240(uint256) := REF_98(uint256)
TMP_241(uint256) = TMP_240 (c)+ 1
indexList_3(address[]) := ϕ(['indexList_2'])
REF_98 (->indexList_3) := TMP_241(uint256)
REF_99(address) -> indexList_3[TMP_240]
indexList_4(address[]) := ϕ(['indexList_3'])
REF_99 (->indexList_4) := msg.sender(address)
TMP_248(bool) = _credit_1 > 0
CONDITION TMP_248
TMP_246(bool) = _pending_1 > 0
CONDITION TMP_246
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
Emit CreditIncrease(msg.sender,_credit_1)
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])


[[-1], [-1], 'u', None, [], 0, 'u', 'u']
Param:
Name: _credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: registry_2, name: registry

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 2
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_17, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 17
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_1, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 1
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_1, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 1
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_1, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 1
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_1, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 1
Globalname: indicies, contract_name: PoolTemplate
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_1, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 1
Globalname: indexList, contract_name: PoolTemplate
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_1, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 1
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i]Type for registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_235 = CONVERT registry_2 to IRegistry
[i] TMP_235 cleared
clearing ir...?
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
[i] TMP_236 cleared
clearing ir...?
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
[i] registry cleared
clearing ir...?
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: registry_2, name: registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_2, name: registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: registry_3, name: registry

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 3
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_18, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 18
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_2, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 2
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_2, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 2
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 2
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_2, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 2
Globalname: indicies, contract_name: PoolTemplate
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_2, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 2
Globalname: indexList, contract_name: PoolTemplate
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 2
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235 = CONVERT registry_2 to IRegistry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
High Call: isListed
Running querryfc
[i]Type for TMP_236

Name: TMP_236 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
[i]Type for registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
[i]Type for TMP_237

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
[i] REF_94 cleared
clearing ir...?
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indicies_2, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_2, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
[i]Type for REF_94

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
[i]Type for _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
[i] _rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _rewardPerCredit, Num: 1
Globalname: _rewardPerCredit, contract_name: PoolTemplate
End popogation
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
[i]Type for _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_95(bool) -> _index_1 (-> ['indicies']).exist
[i] REF_95 cleared
clearing ir...?
TMP_238(bool) = REF_95 == False
[i] TMP_238 cleared
clearing ir...?
CONDITION TMP_238
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_95(bool) -> _index_1 (-> ['indicies']).exist
OUT KEY: allocateCredit__index_exist
OUT KEY: allocateCredit__exist
FTT: None
No field found
[i]Type for REF_95

Name: REF_95 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: exist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_95 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_238(bool) = REF_95 == False
[i]Type for TMP_238

Name: TMP_238 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_96(bool) -> _index_1 (-> ['indicies']).exist
[i] REF_96 cleared
clearing ir...?
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
[i] REF_96 cleared
clearing ir...?
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_3, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 3
Globalname: indicies, contract_name: PoolTemplate
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_3, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(bool) -> _index_1 (-> ['indicies']).exist
OUT KEY: allocateCredit__index_exist
OUT KEY: allocateCredit__exist
FTT: None
No field found
[i]Type for REF_96

Name: REF_96 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: exist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_96 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
[i]Type for REF_96

Name: REF_96 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Fieldf: 
Name: exist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_96 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: exist Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_100 cleared
clearing ir...?
TMP_242(bool) = REF_100 > 0
[i] TMP_242 cleared
clearing ir...?
CONDITION TMP_242
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
End popogation
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_100

Name: REF_100 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_100 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_242(bool) = REF_100 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
clearing ir...?
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_101 cleared
clearing ir...?
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
[i] TMP_243 cleared
clearing ir...?
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
[i] TMP_244 cleared
clearing ir...?
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
[i] REF_102 cleared
clearing ir...?
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
[i] TMP_245 cleared
clearing ir...?
_pending_1(uint256) := TMP_245(uint256)
[i] _pending cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_101

Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
Mul...

Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_243

Name: TMP_243 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_244

Name: TMP_244 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
OUT KEY: allocateCredit__index_rewardDebt
OUT KEY: allocateCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_102

Name: REF_102 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_102 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Param: a
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: b
[[], [], 'u', None, [], -1, 'u', 'u']

Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_sub(uint256,uint256)
ENTRY_POINT
Propogating All
IF a < b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
RETURN 0
Propogating All
RETURN a - b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
[i]Type for TMP_245

Name: TMP_245 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_pending_1(uint256) := TMP_245(uint256)
[i]Type for _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_98 -> LENGTH indexList_2
clearing ir...?
TMP_240(uint256) := REF_98(uint256)
[i] TMP_240 cleared
clearing ir...?
TMP_241(uint256) = TMP_240 (c)+ 1
[i] TMP_241 cleared
clearing ir...?
indexList_3(address[]) := ϕ(['indexList_2'])
[i] indexList cleared
clearing ir...?
REF_98 (->indexList_3) := TMP_241(uint256)
[i] REF_98 cleared
clearing ir...?
REF_99(address) -> indexList_3[TMP_240]
[i] REF_99 cleared
clearing ir...?
indexList_4(address[]) := ϕ(['indexList_3'])
[i] indexList cleared
clearing ir...?
REF_99 (->indexList_4) := msg.sender(address)
[i] REF_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indexList_2, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 3
Globalname: indexList, contract_name: PoolTemplate
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_2, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_4, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 4
Globalname: indexList, contract_name: PoolTemplate
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: indexList_3, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_4, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98 -> LENGTH indexList_2
[i]Type for REF_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(uint256) := REF_98(uint256)
[i]Type for TMP_240

Name: TMP_240 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_241

Name: TMP_241 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
indexList_3(address[]) := ϕ(['indexList_2'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98 (->indexList_3) := TMP_241(uint256)
[i]Type for REF_98

Name: REF_98 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_99(address) -> indexList_3[TMP_240]
[i]Type for REF_99

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_4(address[]) := ϕ(['indexList_3'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_99 (->indexList_4) := msg.sender(address)
[i]Type for REF_99

Name: REF_99 Function: allocateCredit
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indexList
Copied indexList
clearing ir...?
TMP_248(bool) = _credit_1 > 0
[i] TMP_248 cleared
clearing ir...?
CONDITION TMP_248
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_248(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_248

Name: TMP_248 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_246(bool) = _pending_1 > 0
[i] TMP_246 cleared
clearing ir...?
CONDITION TMP_246
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = _pending_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
clearing ir...?
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_4, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 4
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_4, name: totalCredit

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_5, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 5
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied totalCredit
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
clearing ir...?
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_19, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 19
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_19, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_20, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 20
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 4
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_4, name: totalCredit

Name: totalCredit Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 4
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 4
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
High Call: transferAttribution
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
[i] REF_104 cleared
clearing ir...?
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
[i] REF_104 cleared
clearing ir...?
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_5, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 5
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_5, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_104

Name: REF_104 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_104 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_104

Name: REF_104 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_104 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_5, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 5
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied attributionDebt
clearing ir...?
Emit CreditIncrease(msg.sender,_credit_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
clearing ir...?
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
[i] REF_105 cleared
clearing ir...?
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
[i] REF_106 cleared
clearing ir...?
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
[i] TMP_250 cleared
clearing ir...?
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
[i] TMP_251 cleared
clearing ir...?
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
[i] REF_105 cleared
clearing ir...?
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_6 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 6 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_4, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 4
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_6 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 6 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_4, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
OUT KEY: allocateCredit__index_rewardDebt
OUT KEY: allocateCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_105

Name: REF_105 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_105 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_106

Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
Mul...

Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_250

Name: TMP_250 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_251

Name: TMP_251 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
[i]Type for REF_105

Name: REF_105 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_105 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies


registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_235 = CONVERT registry_2 to IRegistry
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
REF_95(bool) -> _index_1 (-> ['indicies']).exist
TMP_238(bool) = REF_95 == False
CONDITION TMP_238
REF_96(bool) -> _index_1 (-> ['indicies']).exist
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
TMP_242(bool) = REF_100 > 0
CONDITION TMP_242
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
_pending_1(uint256) := TMP_245(uint256)
REF_98 -> LENGTH indexList_2
TMP_240(uint256) := REF_98(uint256)
TMP_241(uint256) = TMP_240 (c)+ 1
indexList_3(address[]) := ϕ(['indexList_2'])
REF_98 (->indexList_3) := TMP_241(uint256)
REF_99(address) -> indexList_3[TMP_240]
indexList_4(address[]) := ϕ(['indexList_3'])
REF_99 (->indexList_4) := msg.sender(address)
TMP_248(bool) = _credit_1 > 0
CONDITION TMP_248
TMP_246(bool) = _pending_1 > 0
CONDITION TMP_246
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
Emit CreditIncrease(msg.sender,_credit_1)
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])


[[-1], [-1], 'u', None, [], 0, 'u', 'u']
Param:
Name: _credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: registry_2, name: registry

Name: registry Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 2
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_17, name: vault

Name: vault Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 17
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_1, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 1
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_1, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 1
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_1, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 1
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_1, name: indicies

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 1
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_1, name: indexList

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 1
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_1, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 1
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_2(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i]Type for registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_17(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_1(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_1(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_1(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_1(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_1(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_1(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_235 = CONVERT registry_2 to IRegistry
[i] TMP_235 cleared
clearing ir...?
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
[i] TMP_236 cleared
clearing ir...?
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
[i] registry cleared
clearing ir...?
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: registry_2, name: registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_2, name: registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: registry_3, name: registry

Name: registry Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 3
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_18, name: vault

Name: vault Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 18
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_2, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 2
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_2, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 2
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 2
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_2, name: indicies

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 2
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_2, name: indexList

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 2
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 2
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235 = CONVERT registry_2 to IRegistry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
TMP_236(bool) = HIGH_LEVEL_CALL, dest:TMP_235(IRegistry), function:isListed, arguments:['msg.sender']  
High Call: isListed
Running querryfc
[i]Type for TMP_236

Name: TMP_236 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_3(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_3', 'registry_2'])
[i]Type for registry

Name: registry Function: allocateCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_18(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_17', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_2(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_1', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_2(uint256) := ϕ(['totalCredit_1', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_2(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_1', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_2(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_1', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_2(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_1'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_2(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_1', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,ERROR: ALLOCATE_CREDIT_BAD_CONDITIONS)
[i]Type for TMP_237

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
[i] REF_94 cleared
clearing ir...?
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indicies_2, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_2, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_94(PoolTemplate.IndexInfo) -> indicies_2[msg.sender]
[i]Type for REF_94

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_94(PoolTemplate.IndexInfo)
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
clearing ir...?
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
[i] _rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_2, name: rewardPerCredit

Name: rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _rewardPerCredit, Num: 1
Globalname: _rewardPerCredit, contract_name: PoolTemplate
End popogation
_rewardPerCredit_1(uint256) := rewardPerCredit_2(uint256)
[i]Type for _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_95(bool) -> _index_1 (-> ['indicies']).exist
[i] REF_95 cleared
clearing ir...?
TMP_238(bool) = REF_95 == False
[i] TMP_238 cleared
clearing ir...?
CONDITION TMP_238
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_95(bool) -> _index_1 (-> ['indicies']).exist
OUT KEY: allocateCredit__index_exist
OUT KEY: allocateCredit__exist
FTT: None
No field found
[i]Type for REF_95

Name: REF_95 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: exist Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_95 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: exist Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_238(bool) = REF_95 == False
[i]Type for TMP_238

Name: TMP_238 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_96(bool) -> _index_1 (-> ['indicies']).exist
[i] REF_96 cleared
clearing ir...?
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
[i] REF_96 cleared
clearing ir...?
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_3, name: indicies

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 3
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_3, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(bool) -> _index_1 (-> ['indicies']).exist
OUT KEY: allocateCredit__index_exist
OUT KEY: allocateCredit__exist
FTT: None
No field found
[i]Type for REF_96

Name: REF_96 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist
Finance Type: undef
Fieldf: 
Name: exist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_96 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: exist Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
REF_96 (->_index_2 (-> ['indicies'])) := True(bool)
[i]Type for REF_96

Name: REF_96 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: exist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_96 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: exist Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
indicies_3(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_100 cleared
clearing ir...?
TMP_242(bool) = REF_100 > 0
[i] TMP_242 cleared
clearing ir...?
CONDITION TMP_242
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_100(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_100

Name: REF_100 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_100 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_242(bool) = REF_100 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_2 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
clearing ir...?
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_101 cleared
clearing ir...?
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
[i] TMP_243 cleared
clearing ir...?
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
[i] TMP_244 cleared
clearing ir...?
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
[i] REF_102 cleared
clearing ir...?
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
[i] TMP_245 cleared
clearing ir...?
_pending_1(uint256) := TMP_245(uint256)
[i] _pending cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_2, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
REF_101(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_101

Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_243(uint256) = REF_101 (c)* _rewardPerCredit_1
Mul...

Name: REF_101 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_243

Name: TMP_243 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244(uint256) = TMP_243 (c)/ MAGIC_SCALE_1E6_2
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_244

Name: TMP_244 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_102(uint256) -> _index_1 (-> ['indicies']).rewardDebt
OUT KEY: allocateCredit__index_rewardDebt
OUT KEY: allocateCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_102

Name: REF_102 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_102 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_245(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_244,REF_102)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_245

Name: TMP_245 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_pending_1(uint256) := TMP_245(uint256)
[i]Type for _pending

Name: _pending Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_98 -> LENGTH indexList_2
clearing ir...?
TMP_240(uint256) := REF_98(uint256)
[i] TMP_240 cleared
clearing ir...?
TMP_241(uint256) = TMP_240 (c)+ 1
[i] TMP_241 cleared
clearing ir...?
indexList_3(address[]) := ϕ(['indexList_2'])
[i] indexList cleared
clearing ir...?
REF_98 (->indexList_3) := TMP_241(uint256)
[i] REF_98 cleared
clearing ir...?
REF_99(address) -> indexList_3[TMP_240]
[i] REF_99 cleared
clearing ir...?
indexList_4(address[]) := ϕ(['indexList_3'])
[i] indexList cleared
clearing ir...?
REF_99 (->indexList_4) := msg.sender(address)
[i] REF_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indexList_2, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 3
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_2, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_4, name: indexList

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 4
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_3, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: indexList_3, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_4, name: indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98 -> LENGTH indexList_2
[i]Type for REF_98

Name: REF_98 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_240(uint256) := REF_98(uint256)
[i]Type for TMP_240

Name: TMP_240 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_241(uint256) = TMP_240 (c)+ 1
A: u B: u
lnorm: 0 rnorm: 0
[i]Type for TMP_241

Name: TMP_241 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
indexList_3(address[]) := ϕ(['indexList_2'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98 (->indexList_3) := TMP_241(uint256)
[i]Type for REF_98

Name: REF_98 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
REF_99(address) -> indexList_3[TMP_240]
[i]Type for REF_99

Name: indexList Function: allocateCredit
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_4(address[]) := ϕ(['indexList_3'])
[i]Type for indexList

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_99 (->indexList_4) := msg.sender(address)
[i]Type for REF_99

Name: REF_99 Function: allocateCredit
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indexList
Copied indexList
clearing ir...?
TMP_248(bool) = _credit_1 > 0
[i] TMP_248 cleared
clearing ir...?
CONDITION TMP_248
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_248(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_248

Name: TMP_248 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_246(bool) = _pending_1 > 0
[i] TMP_246 cleared
clearing ir...?
CONDITION TMP_246
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
TMP_246(bool) = _pending_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_246

Name: TMP_246 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_5 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_4 (-> ['indicies'])", "_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
clearing ir...?
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_4, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_4, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_5, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 5
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
totalCredit_5(uint256) = totalCredit_4 (c)+ _credit_1
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied totalCredit
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
clearing ir...?
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_19, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_19, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_20, name: vault

Name: vault Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 20
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 4
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_4, name: totalCredit

Name: totalCredit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 4
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 4
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_19(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
High Call: transferAttribution
vault_20(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_4(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_4(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_4(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
[i] REF_104 cleared
clearing ir...?
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
[i] REF_104 cleared
clearing ir...?
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_5, name: indicies

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 5
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_5, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_104(uint256) -> _index_3 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_104

Name: REF_104 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_104 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
REF_104(-> _index_4 (-> ['indicies'])) = REF_104 (c)+ _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_104

Name: REF_104 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_104 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_5(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_4, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_5, name: attributionDebt

Name: attributionDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 5
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
attributionDebt_5(uint256) = attributionDebt_4 (c)- _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied attributionDebt
clearing ir...?
Emit CreditIncrease(msg.sender,_credit_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
clearing ir...?
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
[i] REF_105 cleared
clearing ir...?
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
[i] REF_106 cleared
clearing ir...?
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
[i] TMP_250 cleared
clearing ir...?
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
[i] TMP_251 cleared
clearing ir...?
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
[i] REF_105 cleared
clearing ir...?
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_4, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_5 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 5 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _index_6 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 6 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_4, name: indicies

Name: indicies Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 4
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_6 (-> ['indicies']), name: _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Name: _index, Num: 6 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_4, name: indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_105(uint256) -> _index_5 (-> ['indicies']).rewardDebt
OUT KEY: allocateCredit__index_rewardDebt
OUT KEY: allocateCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_105

Name: REF_105 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_105 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(uint256) -> _index_5 (-> ['indicies']).credit
OUT KEY: allocateCredit__index_credit
OUT KEY: allocateCredit__credit
FTT: None
No field found
[i]Type for REF_106

Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_250(uint256) = REF_106 (c)* _rewardPerCredit_1
Mul...

Name: REF_106 Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_250

Name: TMP_250 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(uint256) = TMP_250 (c)/ MAGIC_SCALE_1E6_4
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_251

Name: TMP_251 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_6 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_5 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
REF_105 (->_index_6 (-> ['indicies'])) := TMP_251(uint256)
[i]Type for REF_105

Name: REF_105 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: allocateCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exist, credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_105 Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_4(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_6 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies



withdrawCredit
Function name: withdrawCredit
Finding type for _credit(uint256 ... )
Value: u
Param1: 
Name: _credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
withdrawCredit(uint256)


registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
TMP_252 = CONVERT registry_4 to IRegistry
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
TMP_254(bool) = REF_109 >= _credit_1
TMP_255(bool) = TMP_253 && TMP_254
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
TMP_257(bool) = _credit_1 <= TMP_256
TMP_258(bool) = TMP_255 && TMP_257
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
_pending_1(uint256) := TMP_262(uint256)
TMP_263(bool) = _credit_1 > 0
CONDITION TMP_263
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
TMP_265(bool) = _pending_1 > 0
CONDITION TMP_265
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
Emit CreditDecrease(msg.sender,_credit_1)
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: registry_4, name: registry

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 4
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_21, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 21
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_6, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 6
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_6, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 6
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 3
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_6, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 6
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_5, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 5
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i]Type for registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
[i] REF_107 cleared
clearing ir...?
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indicies_6, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_6, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
[i]Type for REF_107

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
[i]Type for _index

Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
[i] _rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _rewardPerCredit, Num: 1
Globalname: _rewardPerCredit, contract_name: PoolTemplate
End popogation
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
[i]Type for _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_252 = CONVERT registry_4 to IRegistry
[i] TMP_252 cleared
clearing ir...?
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
[i] TMP_253 cleared
clearing ir...?
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_109 cleared
clearing ir...?
TMP_254(bool) = REF_109 >= _credit_1
[i] TMP_254 cleared
clearing ir...?
TMP_255(bool) = TMP_253 && TMP_254
[i] TMP_255 cleared
clearing ir...?
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_256 cleared
clearing ir...?
TMP_257(bool) = _credit_1 <= TMP_256
[i] TMP_257 cleared
clearing ir...?
TMP_258(bool) = TMP_255 && TMP_257
[i] TMP_258 cleared
clearing ir...?
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: registry_4, name: registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_4, name: registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: registry_5, name: registry

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 5
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_22, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 22
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_7, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 7
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_7, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 7
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_6, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 6
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_252 = CONVERT registry_4 to IRegistry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_252

Name: TMP_252 Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
High Call: isListed
Running querryfc
[i]Type for TMP_253

Name: TMP_253 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
[i]Type for registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_109

Name: REF_109 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_109 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_254(bool) = REF_109 >= _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_254

Name: TMP_254 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = TMP_253 && TMP_254
[i]Type for TMP_255

Name: TMP_255 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
Old param cache: []
[i]Type for TMP_256

Name: TMP_256 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_257(bool) = _credit_1 <= TMP_256
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_257

Name: TMP_257 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_258(bool) = TMP_255 && TMP_257
[i]Type for TMP_258

Name: TMP_258 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
[i]Type for TMP_259

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_110 cleared
clearing ir...?
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
[i] TMP_260 cleared
clearing ir...?
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
[i] TMP_261 cleared
clearing ir...?
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
[i] REF_111 cleared
clearing ir...?
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
[i] TMP_262 cleared
clearing ir...?
_pending_1(uint256) := TMP_262(uint256)
[i] _pending cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_7, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 7
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_7, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_110

Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
Mul...

Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_260

Name: TMP_260 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_261

Name: TMP_261 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
OUT KEY: withdrawCredit__index_rewardDebt
OUT KEY: withdrawCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_111

Name: REF_111 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_111 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_262

Name: TMP_262 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_pending_1(uint256) := TMP_262(uint256)
[i]Type for _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_263(bool) = _credit_1 > 0
[i] TMP_263 cleared
clearing ir...?
CONDITION TMP_263
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_263(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_263

Name: TMP_263 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
clearing ir...?
TMP_265(bool) = _pending_1 > 0
[i] TMP_265 cleared
clearing ir...?
CONDITION TMP_265
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
TMP_265(bool) = _pending_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_265

Name: TMP_265 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_9, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 9
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_9, name: totalCredit

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_10, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 10
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied totalCredit
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
clearing ir...?
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_24, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 24
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_24, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_25, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 25
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 10
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 9
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
High Call: transferAttribution
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_112 cleared
clearing ir...?
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
[i] REF_112 cleared
clearing ir...?
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_8, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 8
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_8, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_112

Name: REF_112 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_112 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_112

Name: REF_112 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_112 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_11, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 11
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: allocateCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied attributionDebt
clearing ir...?
Emit CreditDecrease(msg.sender,_credit_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
[i] REF_114 cleared
clearing ir...?
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
[i] REF_115 cleared
clearing ir...?
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
[i] TMP_267 cleared
clearing ir...?
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
[i] TMP_268 cleared
clearing ir...?
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
[i] REF_114 cleared
clearing ir...?
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_7, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 7
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_7, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
OUT KEY: withdrawCredit__index_rewardDebt
OUT KEY: withdrawCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_114

Name: REF_114 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_114 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_115

Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
Mul...

Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_267

Name: TMP_267 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_268

Name: TMP_268 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
[i]Type for REF_114

Name: REF_114 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_114 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies


registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
TMP_252 = CONVERT registry_4 to IRegistry
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
TMP_254(bool) = REF_109 >= _credit_1
TMP_255(bool) = TMP_253 && TMP_254
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
TMP_257(bool) = _credit_1 <= TMP_256
TMP_258(bool) = TMP_255 && TMP_257
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
_pending_1(uint256) := TMP_262(uint256)
TMP_263(bool) = _credit_1 > 0
CONDITION TMP_263
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
TMP_265(bool) = _pending_1 > 0
CONDITION TMP_265
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
Emit CreditDecrease(msg.sender,_credit_1)
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: registry_4, name: registry

Name: registry Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 4
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_21, name: vault

Name: vault Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 21
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_6, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 6
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_6, name: totalCredit

Name: totalCredit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 6
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 3
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_6, name: indicies

Name: indicies Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 6
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_5, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 5
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_4(IRegistry) := ϕ(['registry_1', 'registry_6', 'registry_0', 'registry_3'])
[i]Type for registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_21(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_6(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_6(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_3(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_6(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_5(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
[i] REF_107 cleared
clearing ir...?
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: indicies_6, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_6, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_107(PoolTemplate.IndexInfo) -> indicies_6[msg.sender]
[i]Type for REF_107

Name: indicies Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1 (-> ['indicies'])(PoolTemplate.IndexInfo) := REF_107(PoolTemplate.IndexInfo)
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
clearing ir...?
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
[i] _rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_3, name: rewardPerCredit

Name: rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _rewardPerCredit, Num: 1
Globalname: _rewardPerCredit, contract_name: PoolTemplate
End popogation
_rewardPerCredit_1(uint256) := rewardPerCredit_3(uint256)
[i]Type for _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_252 = CONVERT registry_4 to IRegistry
[i] TMP_252 cleared
clearing ir...?
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
[i] TMP_253 cleared
clearing ir...?
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
[i] registry cleared
clearing ir...?
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_109 cleared
clearing ir...?
TMP_254(bool) = REF_109 >= _credit_1
[i] TMP_254 cleared
clearing ir...?
TMP_255(bool) = TMP_253 && TMP_254
[i] TMP_255 cleared
clearing ir...?
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_256 cleared
clearing ir...?
TMP_257(bool) = _credit_1 <= TMP_256
[i] TMP_257 cleared
clearing ir...?
TMP_258(bool) = TMP_255 && TMP_257
[i] TMP_258 cleared
clearing ir...?
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: registry_4, name: registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: registry_4, name: registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: registry_5, name: registry

Name: registry Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Name: registry, Num: 5
Globalname: registry, contract_name: PoolTemplate
global...

Name: registry Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_22, name: vault

Name: vault Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 22
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_7, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 7
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_7, name: totalCredit

Name: totalCredit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 7
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_6, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 6
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_252 = CONVERT registry_4 to IRegistry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_252

Name: TMP_252 Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
TMP_253(bool) = HIGH_LEVEL_CALL, dest:TMP_252(IRegistry), function:isListed, arguments:['msg.sender']  
High Call: isListed
Running querryfc
[i]Type for TMP_253

Name: TMP_253 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
registry_5(IRegistry) := ϕ(['registry_1', 'registry_4', 'registry_6', 'registry_3'])
[i]Type for registry

Name: registry Function: withdrawCredit
Num: -1
Den: -1
Address: -997
Norm: u
LF: Registry
Value: u
Fields: 
Finance Type: undef
vault_22(IVault) := ϕ(['vault_4', 'vault_21', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_7(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_6', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalCredit_7(uint256) := ϕ(['totalCredit_6', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_6(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_5', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_109(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_109

Name: REF_109 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_109 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(bool) = REF_109 >= _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_254

Name: TMP_254 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_255(bool) = TMP_253 && TMP_254
[i]Type for TMP_255

Name: TMP_255 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_256(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
Old param cache: []
[i]Type for TMP_256

Name: TMP_256 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_257(bool) = _credit_1 <= TMP_256
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_257

Name: TMP_257 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_258(bool) = TMP_255 && TMP_257
[i]Type for TMP_258

Name: TMP_258 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS)
[i]Type for TMP_259

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_110 cleared
clearing ir...?
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
[i] TMP_260 cleared
clearing ir...?
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
[i] TMP_261 cleared
clearing ir...?
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
[i] REF_111 cleared
clearing ir...?
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
[i] TMP_262 cleared
clearing ir...?
_pending_1(uint256) := TMP_262(uint256)
[i] _pending cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_7, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_7, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 1 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
REF_110(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_110

Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_260(uint256) = REF_110 (c)* _rewardPerCredit_1
Mul...

Name: REF_110 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_260

Name: TMP_260 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_261(uint256) = TMP_260 (c)/ MAGIC_SCALE_1E6_7
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_261

Name: TMP_261 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_111(uint256) -> _index_1 (-> ['indicies']).rewardDebt
OUT KEY: withdrawCredit__index_rewardDebt
OUT KEY: withdrawCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_111

Name: REF_111 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_111 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_262(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_261,REF_111)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_262

Name: TMP_262 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_pending_1(uint256) := TMP_262(uint256)
[i]Type for _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_263(bool) = _credit_1 > 0
[i] TMP_263 cleared
clearing ir...?
CONDITION TMP_263
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_263(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_263

Name: TMP_263 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
[i] _index cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
_index_3 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])", "_index_2 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
clearing ir...?
TMP_265(bool) = _pending_1 > 0
[i] TMP_265 cleared
clearing ir...?
CONDITION TMP_265
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pending, Num: 1
Globalname: _pending, contract_name: PoolTemplate
End popogation
TMP_265(bool) = _pending_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_265

Name: TMP_265 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_9, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_9, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_10, name: totalCredit

Name: totalCredit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 10
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
totalCredit_10(uint256) = totalCredit_9 (c)- _credit_1
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for totalCredit

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied totalCredit
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
clearing ir...?
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_24, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_24, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_25, name: vault

Name: vault Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 25
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 10
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 9
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_24(IVault), function:transferAttribution, arguments:['_pending_1', 'msg.sender']  
High Call: transferAttribution
vault_25(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_10(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_9(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
[i] REF_112 cleared
clearing ir...?
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
[i] REF_112 cleared
clearing ir...?
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_8, name: indicies

Name: indicies Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 8
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _index_2 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 2 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_8, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(uint256) -> _index_1 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_112

Name: REF_112 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_112 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_2 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_1 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
REF_112(-> _index_2 (-> ['indicies'])) = REF_112 (c)- _credit_1
A: u B: u
lnorm: u rnorm: u
[i]Type for REF_112

Name: REF_112 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_112 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_8(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_2 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies
clearing ir...?
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_10, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_11, name: attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 11
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
attributionDebt_11(uint256) = attributionDebt_10 (c)- _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied attributionDebt
clearing ir...?
Emit CreditDecrease(msg.sender,_credit_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit_1 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
[i] REF_114 cleared
clearing ir...?
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
[i] REF_115 cleared
clearing ir...?
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
[i] TMP_267 cleared
clearing ir...?
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
[i] TMP_268 cleared
clearing ir...?
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i] _index cleared
clearing ir...?
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
[i] REF_114 cleared
clearing ir...?
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i] indicies cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rewardPerCredit_1, name: _rewardPerCredit

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_3 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 3 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_9, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_7, name: indicies

Name: indicies Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 7
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
End popogation
Ssa_name: _index_4 (-> ['indicies']), name: _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: _index, Num: 4 (-> ['indicies'])
Globalname: _index, contract_name: PoolTemplate
Ssa_name: indicies_7, name: indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(uint256) -> _index_3 (-> ['indicies']).rewardDebt
OUT KEY: withdrawCredit__index_rewardDebt
OUT KEY: withdrawCredit__rewardDebt
FTT: None
No field found
[i]Type for REF_114

Name: REF_114 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_114 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_115(uint256) -> _index_3 (-> ['indicies']).credit
OUT KEY: withdrawCredit__index_credit
OUT KEY: withdrawCredit__credit
FTT: None
No field found
[i]Type for REF_115

Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_267(uint256) = REF_115 (c)* _rewardPerCredit_1
Mul...

Name: REF_115 Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rewardPerCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_267

Name: TMP_267 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_268(uint256) = TMP_267 (c)/ MAGIC_SCALE_1E6_9
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_268

Name: TMP_268 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_4 (-> ['indicies'])(PoolTemplate.IndexInfo) := ϕ(["_index_3 (-> ['indicies'])"])
[i]Type for _index

Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
REF_114 (->_index_4 (-> ['indicies'])) := TMP_268(uint256)
[i]Type for REF_114

Name: REF_114 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _index Function: withdrawCredit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_114 Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_7(mapping(address => PoolTemplate.IndexInfo)) := ϕ(["_index_4 (-> ['indicies'])"])
[i]Type for indicies

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied indicies



insure
Function name: insure
Finding type for _amount(uint256 ... )
Value: u
Param1: 
Name: _amount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _maxCost(uint256 ... )
Value: u
Param1: 
Name: _maxCost Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _span(uint256 ... )
Value: u
Param1: 
Name: _span Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _target(bytes32 ... )
Value: u
Param1: 
Name: _target Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
insure(uint256,uint256,uint256,bytes32)


paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_269(uint256) = _span_1 (c)+ block.timestamp
_endTime_1(uint256) := TMP_269(uint256)
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
parameters_12(IParameters) := ϕ(['parameters_21'])
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
_premium_1(uint256) := TMP_270(uint256)
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_fee_1(uint256) := TMP_271(uint256)
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
TMP_273(bool) = _amount_1 <= TMP_272
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
TMP_275(bool) = _premium_1 <= _maxCost_1
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
TMP_277(bool) = _span_1 <= 31536000
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_280(bool) = TMP_279 <= _span_1
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_282(bool) = marketStatus_13 == REF_118
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
TMP_284(bool) = paused_7 == False
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
_liquidity_1(uint256) := TMP_286(uint256)
_totalCredit_1(uint256) := totalCredit_16(uint256)
TMP_287 = CONVERT this to address
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
_id_1(uint256) := allInsuranceCount_8(uint256)
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
TMP_292(bool) = _totalCredit_1 > 0
CONDITION TMP_292
REF_122(uint256) -> _newAttribution_1[0]
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
_attributionForIndex_1(uint256) := TMP_294(uint256)
Emit Insured(_id_1,_amount_1,_target_1,block.timestamp,_endTime_1,msg.sender,_premium_1)
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
RETURN _id_1
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _maxCost Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _span Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _target Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_3, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 3
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_11, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 11
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_26, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 26
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_12, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 12
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_4, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 4
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_11, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 11
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_4, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 4
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_9, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 9
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_1, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 1
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_10, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 10
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_269(uint256) = _span_1 (c)+ block.timestamp
[i] TMP_269 cleared
clearing ir...?
_endTime_1(uint256) := TMP_269(uint256)
[i] _endTime cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _span Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _endTime, Num: 1
Globalname: _endTime, contract_name: PoolTemplate
End popogation
TMP_269(uint256) = _span_1 (c)+ block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_269

Name: TMP_269 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_endTime_1(uint256) := TMP_269(uint256)
[i]Type for _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
[i] TMP_270 cleared
clearing ir...?
parameters_12(IParameters) := ϕ(['parameters_21'])
[i] parameters cleared
clearing ir...?
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
[i] lockedAmount cleared
clearing ir...?
_premium_1(uint256) := TMP_270(uint256)
[i] _premium cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _premium, Num: 1
Globalname: _premium, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_12, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 12
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_5, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 5
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Param: _amount
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Param: _span
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _span Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
getPremium(uint256,uint256)
ENTRY_POINT
Propogating All
RETURN parameters.getPremium(_amount,_span,totalLiquidity(),lockedAmount,address(this))
Propogating All
_span_1
Ssa_name: _span_1, name: _span

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _span Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _span_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_amount_1
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1'])
[i] _amount cleared
clearing ir...?
_span_1(uint256) := ϕ(['_span_1'])
[i] _span cleared
clearing ir...?
parameters_19(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_15(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _span_1, name: _span

Name: _span_1 Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _span Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _span_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_19, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 19
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_15, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 15
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_span_1(uint256) := ϕ(['_span_1'])
[i]Type for _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_19(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: getPremium
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_15(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_333(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_333 cleared
clearing ir...?
TMP_334 = CONVERT this to address
[i] TMP_334 cleared
clearing ir...?
TMP_335(uint256) = HIGH_LEVEL_CALL, dest:parameters_20(IParameters), function:getPremium, arguments:['_amount_1', '_span_1', 'TMP_333', 'lockedAmount_16', 'TMP_334']  
[i] TMP_335 cleared
clearing ir...?
parameters_21(IParameters) := ϕ(['parameters_20', 'parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
lockedAmount_17(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_16', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
RETURN TMP_335
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_20, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 20
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_16, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 16
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: parameters_20, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_16, name: lockedAmount

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_21, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 21
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_17, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 17
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_333(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_333

Name: TMP_333 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: getPremium
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = HIGH_LEVEL_CALL, dest:parameters_20(IParameters), function:getPremium, arguments:['_amount_1', '_span_1', 'TMP_333', 'lockedAmount_16', 'TMP_334']  
High Call: getPremium
Running querryfc
Found: None
Written func info: IParameters, getPremium
[i]Type for TMP_335

Name: TMP_335 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_21(IParameters) := ϕ(['parameters_20', 'parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: getPremium
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_17(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_16', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_335
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1'])
[i] _amount cleared
clearing ir...?
_span_1(uint256) := ϕ(['_span_1'])
[i] _span cleared
clearing ir...?
parameters_19(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
lockedAmount_15(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _amount_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _span_1, name: _span

Name: _span Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _span Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _span_1 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: parameters_19, name: parameters

Name: parameters Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 19
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_15, name: lockedAmount

Name: lockedAmount Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 15
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_span_1(uint256) := ϕ(['_span_1'])
[i]Type for _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_19(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: getPremium
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_15(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_333(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_333 cleared
clearing ir...?
TMP_334 = CONVERT this to address
[i] TMP_334 cleared
clearing ir...?
TMP_335(uint256) = HIGH_LEVEL_CALL, dest:parameters_20(IParameters), function:getPremium, arguments:['_amount_1', '_span_1', 'TMP_333', 'lockedAmount_16', 'TMP_334']  
[i] TMP_335 cleared
clearing ir...?
parameters_21(IParameters) := ϕ(['parameters_20', 'parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
lockedAmount_17(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_16', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
RETURN TMP_335
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_20, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_16, name: lockedAmount

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: parameters_20, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_16, name: lockedAmount

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_21, name: parameters

Name: parameters Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 21
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_17, name: lockedAmount

Name: lockedAmount Function: getPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 17
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_333(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_333

Name: TMP_333 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_334 = CONVERT this to address
[i]Type for TMP_334

Name: TMP_334 Function: getPremium
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = HIGH_LEVEL_CALL, dest:parameters_20(IParameters), function:getPremium, arguments:['_amount_1', '_span_1', 'TMP_333', 'lockedAmount_16', 'TMP_334']  
High Call: getPremium
Running querryfc
Found: None
Written func info: IParameters, getPremium
[i]Type for TMP_335

Name: TMP_335 Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_21(IParameters) := ϕ(['parameters_20', 'parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: getPremium
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_17(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_16', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: getPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_335
[i]Type for TMP_270

Name: TMP_270 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_12(IParameters) := ϕ(['parameters_21'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_premium_1(uint256) := TMP_270(uint256)
[i]Type for _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
clearing ir...?
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
[i] TMP_271 cleared
clearing ir...?
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
[i] paused cleared
clearing ir...?
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_fee_1(uint256) := TMP_271(uint256)
[i] _fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_12, name: parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_12, name: parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fee_1, name: _fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _fee, Num: 1
Globalname: _fee, contract_name: PoolTemplate
End popogation
Ssa_name: paused_5, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 5
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_13, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 13
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_28, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 28
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_14, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 14
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_6, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 6
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_13, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 13
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_6, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 6
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_11, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 11
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_3, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 3
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_12, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 12
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
High Call: getFeeRate
Running querryfc
Found: None
Written func info: IParameters, getFeeRate
[i]Type for TMP_271

Name: TMP_271 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_271(uint256)
[i]Type for _fee

Name: _fee Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_272 cleared
clearing ir...?
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
[i] lockedAmount cleared
clearing ir...?
TMP_273(bool) = _amount_1 <= TMP_272
[i] TMP_273 cleared
clearing ir...?
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: lockedAmount_7, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 7
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
Old param cache: []
[i]Type for TMP_272

Name: TMP_272 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_273(bool) = _amount_1 <= TMP_272
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_273

Name: TMP_273 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_275(bool) = _premium_1 <= _maxCost_1
[i] TMP_275 cleared
clearing ir...?
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
Propogating parameters and globals to SSA variables...
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _maxCost_1, name: _maxCost

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _maxCost Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _maxCost_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _maxCost_1, name: _maxCost

Name: _maxCost_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_275(bool) = _premium_1 <= _maxCost_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_277(bool) = _span_1 <= 31536000
[i] TMP_277 cleared
clearing ir...?
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_277(bool) = _span_1 <= 31536000
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_277

Name: TMP_277 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
[i] TMP_279 cleared
clearing ir...?
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
[i] paused cleared
clearing ir...?
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_280(bool) = TMP_279 <= _span_1
[i] TMP_280 cleared
clearing ir...?
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_14, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 14
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_14, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: paused_7, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 7
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_15, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 15
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_30, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 30
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_16, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 16
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_8, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 8
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_15, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 15
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_8, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 8
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_13, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 13
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_5, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 5
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_14, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 14
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
High Call: getMinDate
Running querryfc
Found: None
Written func info: IParameters, getMinDate
[i]Type for TMP_279

Name: TMP_279 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(bool) = TMP_279 <= _span_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_280

Name: TMP_280 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_118 cleared
clearing ir...?
TMP_282(bool) = marketStatus_13 == REF_118
[i] TMP_282 cleared
clearing ir...?
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_13, name: marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_13, name: marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_118

Name: REF_118 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_118 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(bool) = marketStatus_13 == REF_118
[i]Type for TMP_282

Name: TMP_282 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
[i]Type for TMP_283

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_284(bool) = paused_7 == False
[i] TMP_284 cleared
clearing ir...?
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
Propogating parameters and globals to SSA variables...
Ssa_name: paused_7, name: paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_7, name: paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_284(bool) = paused_7 == False
[i]Type for TMP_284

Name: TMP_284 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
[i]Type for TMP_285

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_286 cleared
clearing ir...?
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
[i] totalCredit cleared
clearing ir...?
_liquidity_1(uint256) := TMP_286(uint256)
[i] _liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _liquidity_1, name: _liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _liquidity, Num: 1
Globalname: _liquidity, contract_name: PoolTemplate
End popogation
Ssa_name: totalCredit_16, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 16
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_286

Name: TMP_286 Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_liquidity_1(uint256) := TMP_286(uint256)
[i]Type for _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_totalCredit_1(uint256) := totalCredit_16(uint256)
[i] _totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_16, name: totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_16, name: totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalCredit, Num: 1
Globalname: _totalCredit, contract_name: PoolTemplate
End popogation
_totalCredit_1(uint256) := totalCredit_16(uint256)
[i]Type for _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_287 = CONVERT this to address
[i] TMP_287 cleared
clearing ir...?
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
[i] TMP_288 cleared
clearing ir...?
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
[i] TMP_289 cleared
clearing ir...?
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
[i] TMP_290 cleared
clearing ir...?
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
[i] _newAttribution cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fee_1, name: _fee

Name: _fee Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 16
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_16, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 16
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 32
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_16, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fee_1, name: _fee

Name: _fee Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newAttribution_1, name: _newAttribution

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _newAttribution, Num: 1
Globalname: _newAttribution, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_17, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 17
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_18, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 18
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_10, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 10
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_10, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 10
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_7, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 7
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_18, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 18
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_33, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 33
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_19, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 19
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_11, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 11
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 11
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 8
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 17
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: insure
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
High Call: getOwner
Running querryfc
Found: None
Written func info: IParameters, getOwner
[i]Type for TMP_288

Name: TMP_288 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_289

Name: TMP_289 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
High Call: addValueBatch
Running querryfc
Found: None
Written func info: IVault, addValueBatch
[i]Type for TMP_290

Name: TMP_290 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
[i]Type for _newAttribution

Name: _newAttribution Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := allInsuranceCount_8(uint256)
[i] _id cleared
Propogating parameters and globals to SSA variables...
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
_id_1(uint256) := allInsuranceCount_8(uint256)
[i]Type for _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_11, name: lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_11, name: lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_12, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 12
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
clearing ir...?
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
[i] _insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _target_1, name: _target

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _target Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1, name: _insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
End popogation
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
[i]Type for TMP_291

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
[i]Type for _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_121 cleared
clearing ir...?
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
[i] insurances cleared
clearing ir...?
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
[i] REF_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1, name: _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1, name: _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_3, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 3
Globalname: insurances, contract_name: PoolTemplate
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: insurances_3, name: insurances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_121

Name: insurances Function: unlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
[i]Type for insurances

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
[i]Type for REF_121

Name: REF_121 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
[i] allInsuranceCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_9, name: allInsuranceCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 9
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: PIC_23 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Copied allInsuranceCount
clearing ir...?
TMP_292(bool) = _totalCredit_1 > 0
[i] TMP_292 cleared
clearing ir...?
CONDITION TMP_292
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_292(bool) = _totalCredit_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_292

Name: TMP_292 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_122(uint256) -> _newAttribution_1[0]
[i] REF_122 cleared
clearing ir...?
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
[i] TMP_293 cleared
clearing ir...?
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
[i] TMP_294 cleared
clearing ir...?
_attributionForIndex_1(uint256) := TMP_294(uint256)
[i] _attributionForIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _newAttribution_1, name: _newAttribution

Name: _newAttribution Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _newAttribution_1, name: _newAttribution

Name: _newAttribution Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _attributionForIndex, Num: 1
Globalname: _attributionForIndex, contract_name: PoolTemplate
End popogation
REF_122(uint256) -> _newAttribution_1[0]
[i]Type for REF_122

Name: _newAttribution Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
Mul...

Name: _newAttribution Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_293

Name: TMP_293 Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
A: 18 B: 18
lnorm: 18 rnorm: 18
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_294

Name: TMP_294 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_attributionForIndex_1(uint256) := TMP_294(uint256)
[i]Type for _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
Emit Insured(_id_1,_amount_1,_target_1,block.timestamp,_endTime_1,msg.sender,_premium_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: attributionDebt_19, name: attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_19, name: attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: attributionDebt_20, name: attributionDebt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 20
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied attributionDebt
clearing ir...?
RETURN _id_1
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _id_1
clearing ir...?
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
[i] TMP_295 cleared
clearing ir...?
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
[i] TMP_296 cleared
clearing ir...?
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296
[i] rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_12, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 12
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
Mul...

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_295

Name: TMP_295 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_296

Name: TMP_296 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296
A: u B: u
lnorm: u rnorm: u
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied rewardPerCredit


paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_269(uint256) = _span_1 (c)+ block.timestamp
_endTime_1(uint256) := TMP_269(uint256)
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
parameters_12(IParameters) := ϕ(['parameters_21'])
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
_premium_1(uint256) := TMP_270(uint256)
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_fee_1(uint256) := TMP_271(uint256)
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
TMP_273(bool) = _amount_1 <= TMP_272
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
TMP_275(bool) = _premium_1 <= _maxCost_1
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
TMP_277(bool) = _span_1 <= 31536000
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_280(bool) = TMP_279 <= _span_1
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
TMP_282(bool) = marketStatus_13 == REF_118
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
TMP_284(bool) = paused_7 == False
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
_liquidity_1(uint256) := TMP_286(uint256)
_totalCredit_1(uint256) := totalCredit_16(uint256)
TMP_287 = CONVERT this to address
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
_id_1(uint256) := allInsuranceCount_8(uint256)
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
TMP_292(bool) = _totalCredit_1 > 0
CONDITION TMP_292
REF_122(uint256) -> _newAttribution_1[0]
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
_attributionForIndex_1(uint256) := TMP_294(uint256)
Emit Insured(_id_1,_amount_1,_target_1,block.timestamp,_endTime_1,msg.sender,_premium_1)
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
RETURN _id_1
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _amount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _maxCost Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _span Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _target Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
clearing ir...?
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_3, name: paused

Name: paused Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 3
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_11, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 11
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_26, name: vault

Name: vault Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 26
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_12, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 12
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_4, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 4
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_11, name: totalCredit

Name: totalCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 11
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_4, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 4
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_9, name: marketStatus

Name: marketStatus Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 9
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_1, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 1
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_10, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 10
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_3(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_11(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_26(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_12(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_4(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_11(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_4(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_9(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_1(uint256) := ϕ(['allInsuranceCount_0', 'allInsuranceCount_9'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_10(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_269(uint256) = _span_1 (c)+ block.timestamp
[i] TMP_269 cleared
clearing ir...?
_endTime_1(uint256) := TMP_269(uint256)
[i] _endTime cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _endTime, Num: 1
Globalname: _endTime, contract_name: PoolTemplate
End popogation
TMP_269(uint256) = _span_1 (c)+ block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_269

Name: TMP_269 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_endTime_1(uint256) := TMP_269(uint256)
[i]Type for _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
[i] TMP_270 cleared
clearing ir...?
parameters_12(IParameters) := ϕ(['parameters_21'])
[i] parameters cleared
clearing ir...?
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
[i] lockedAmount cleared
clearing ir...?
_premium_1(uint256) := TMP_270(uint256)
[i] _premium cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _premium, Num: 1
Globalname: _premium, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_12, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 12
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_5, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 5
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_270(uint256) = INTERNAL_CALL, PoolTemplate.getPremium(uint256,uint256)(_amount_1,_span_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_270

Name: TMP_270 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
parameters_12(IParameters) := ϕ(['parameters_21'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
lockedAmount_5(uint256) := ϕ(['lockedAmount_17'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_premium_1(uint256) := TMP_270(uint256)
[i]Type for _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
clearing ir...?
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
[i] TMP_271 cleared
clearing ir...?
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
[i] paused cleared
clearing ir...?
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_fee_1(uint256) := TMP_271(uint256)
[i] _fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_12, name: parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_12, name: parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fee_1, name: _fee

Name: _fee Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _fee, Num: 1
Globalname: _fee, contract_name: PoolTemplate
End popogation
Ssa_name: paused_5, name: paused

Name: paused Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 5
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_13, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 13
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_28, name: vault

Name: vault Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 28
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_14, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 14
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_6, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 6
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_13, name: totalCredit

Name: totalCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 13
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_6, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 6
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_11, name: marketStatus

Name: marketStatus Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 11
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_3, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 3
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_12, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 12
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_271(uint256) = HIGH_LEVEL_CALL, dest:parameters_12(IParameters), function:getFeeRate, arguments:['msg.sender']  
High Call: getFeeRate
Running querryfc
Found: None
Written func info: IParameters, getFeeRate
[i]Type for TMP_271

Name: TMP_271 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_5(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_4'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_13(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_12', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_28(IVault) := ϕ(['vault_4', 'vault_27', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_14(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_13', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_6(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_5', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_13(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_12', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_6(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_5', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_11(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18', 'marketStatus_10'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_3(uint256) := ϕ(['allInsuranceCount_2', 'allInsuranceCount_9'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_12(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_11', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fee_1(uint256) := TMP_271(uint256)
[i]Type for _fee

Name: _fee Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
[i] TMP_272 cleared
clearing ir...?
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
[i] lockedAmount cleared
clearing ir...?
TMP_273(bool) = _amount_1 <= TMP_272
[i] TMP_273 cleared
clearing ir...?
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: lockedAmount_7, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 7
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_272(uint256) = INTERNAL_CALL, PoolTemplate.availableBalance()()
New param cache []
Old param cache: []
[i]Type for TMP_272

Name: TMP_272 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_7(uint256) := ϕ(['lockedAmount_19', 'lockedAmount_20'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_273(bool) = _amount_1 <= TMP_272
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_273

Name: TMP_273 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,ERROR: INSURE_EXCEEDED_AVAILABLE_BALANCE)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_275(bool) = _premium_1 <= _maxCost_1
[i] TMP_275 cleared
clearing ir...?
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
Propogating parameters and globals to SSA variables...
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _maxCost_1, name: _maxCost

Name: _maxCost_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _maxCost_1, name: _maxCost

Name: _maxCost_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_275(bool) = _premium_1 <= _maxCost_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,ERROR: INSURE_EXCEEDED_MAX_COST)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_277(bool) = _span_1 <= 31536000
[i] TMP_277 cleared
clearing ir...?
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_277(bool) = _span_1 <= 31536000
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_277

Name: TMP_277 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,ERROR: INSURE_EXCEEDED_MAX_SPAN)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
[i] TMP_279 cleared
clearing ir...?
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
[i] paused cleared
clearing ir...?
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_280(bool) = TMP_279 <= _span_1
[i] TMP_280 cleared
clearing ir...?
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
Propogating parameters and globals to SSA variables...
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_14, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _span_1, name: _span

Name: _span_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_14, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: paused_7, name: paused

Name: paused Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 7
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_15, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 15
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_30, name: vault

Name: vault Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 30
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_16, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 16
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_8, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 8
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_15, name: totalCredit

Name: totalCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 15
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_8, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 8
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_13, name: marketStatus

Name: marketStatus Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 13
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_5, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 5
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_14, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 14
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_279(uint256) = HIGH_LEVEL_CALL, dest:parameters_14(IParameters), function:getMinDate, arguments:['msg.sender']  
High Call: getMinDate
Running querryfc
Found: None
Written func info: IParameters, getMinDate
[i]Type for TMP_279

Name: TMP_279 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_7(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_6'])
[i]Type for paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_15(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_14', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_30(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_29', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_16(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_15', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_8(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_7', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_15(uint256) := ϕ(['totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_14', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_8(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_7', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_13(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_12', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
allInsuranceCount_5(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_4'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_14(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_13', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(bool) = TMP_279 <= _span_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_280

Name: TMP_280 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_281(None) = SOLIDITY_CALL require(bool,string)(TMP_280,ERROR: INSURE_SPAN_BELOW_MIN)
[i]Type for TMP_281

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_118 cleared
clearing ir...?
TMP_282(bool) = marketStatus_13 == REF_118
[i] TMP_282 cleared
clearing ir...?
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_13, name: marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_13, name: marketStatus

Name: marketStatus Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_118(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_118

Name: REF_118 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_118 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(bool) = marketStatus_13 == REF_118
[i]Type for TMP_282

Name: TMP_282 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_283(None) = SOLIDITY_CALL require(bool,string)(TMP_282,ERROR: INSURE_MARKET_PENDING)
[i]Type for TMP_283

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_284(bool) = paused_7 == False
[i] TMP_284 cleared
clearing ir...?
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
Propogating parameters and globals to SSA variables...
Ssa_name: paused_7, name: paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_7, name: paused

Name: paused Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_284(bool) = paused_7 == False
[i]Type for TMP_284

Name: TMP_284 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_285(None) = SOLIDITY_CALL require(bool,string)(TMP_284,ERROR: INSURE_MARKET_PAUSED)
[i]Type for TMP_285

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_286 cleared
clearing ir...?
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
[i] totalCredit cleared
clearing ir...?
_liquidity_1(uint256) := TMP_286(uint256)
[i] _liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _liquidity, Num: 1
Globalname: _liquidity, contract_name: PoolTemplate
End popogation
Ssa_name: totalCredit_16, name: totalCredit

Name: totalCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 16
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_286(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_286

Name: TMP_286 Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_16(uint256) := ϕ(['totalCredit_20'])
[i]Type for totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_liquidity_1(uint256) := TMP_286(uint256)
[i]Type for _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_totalCredit_1(uint256) := totalCredit_16(uint256)
[i] _totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_16, name: totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_16, name: totalCredit

Name: totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalCredit, Num: 1
Globalname: _totalCredit, contract_name: PoolTemplate
End popogation
_totalCredit_1(uint256) := totalCredit_16(uint256)
[i]Type for _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_287 = CONVERT this to address
[i] TMP_287 cleared
clearing ir...?
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
[i] TMP_288 cleared
clearing ir...?
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
[i] TMP_289 cleared
clearing ir...?
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
[i] TMP_290 cleared
clearing ir...?
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
[i] parameters cleared
clearing ir...?
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
[i] allInsuranceCount cleared
clearing ir...?
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
[i] _newAttribution cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fee_1, name: _fee

Name: _fee Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _fee, Num: 1
Globalname: _fee, contract_name: PoolTemplate
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 16
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_16, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: vault Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 32
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_16, name: parameters

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fee_1, name: _fee

Name: _fee Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _fee, Num: 1
Globalname: _fee, contract_name: PoolTemplate
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newAttribution_1, name: _newAttribution

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _newAttribution, Num: 1
Globalname: _newAttribution, contract_name: PoolTemplate
End popogation
Ssa_name: parameters_17, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 17
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_32, name: vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_18, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 18
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_10, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 10
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_10, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 10
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: allInsuranceCount_7, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 7
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_16, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_18, name: parameters

Name: parameters Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 18
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_33, name: vault

Name: vault Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 33
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_19, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 19
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_11, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 11
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 11
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 8
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 17
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287 = CONVERT this to address
[i]Type for TMP_287

Name: TMP_287 Function: insure
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_288(address) = HIGH_LEVEL_CALL, dest:parameters_16(IParameters), function:getOwner, arguments:[]  
High Call: getOwner
Running querryfc
Found: None
Written func info: IParameters, getOwner
[i]Type for TMP_288

Name: TMP_288 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_17(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_16', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_32(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_31', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_18(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_17', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_10(uint256) := ϕ(['lockedAmount_9', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_10(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_9', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
allInsuranceCount_7(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_6'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_16(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_15', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = MAGIC_SCALE_1E6_16 (c)- _fee_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_289

Name: TMP_289 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256[2]) = HIGH_LEVEL_CALL, dest:vault_32(IVault), function:addValueBatch, arguments:['_premium_1', 'msg.sender', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822190>]', '[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdc70822a90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7fdc7087a370>]']  
High Call: addValueBatch
Running querryfc
Found: None
Written func info: IVault, addValueBatch
[i]Type for TMP_290

Name: TMP_290 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_18(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_17', 'parameters_18', 'parameters_10', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: insure
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
vault_33(IVault) := ϕ(['vault_4', 'vault_32', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_19(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_18', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_11(uint256) := ϕ(['lockedAmount_10', 'lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_11(uint256) := ϕ(['rewardPerCredit_2', 'rewardPerCredit_11', 'rewardPerCredit_10', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
allInsuranceCount_8(uint256) := ϕ(['allInsuranceCount_9', 'allInsuranceCount_7'])
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_17(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_16', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newAttribution_1(uint256[2]) := TMP_290(uint256[2])
[i]Type for _newAttribution

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_id_1(uint256) := allInsuranceCount_8(uint256)
[i] _id cleared
Propogating parameters and globals to SSA variables...
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _id, Num: 1
Globalname: _id, contract_name: PoolTemplate
End popogation
_id_1(uint256) := allInsuranceCount_8(uint256)
[i]Type for _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
clearing ir...?
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_11, name: lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_11, name: lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_12, name: lockedAmount

Name: lockedAmount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 12
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
lockedAmount_12(uint256) = lockedAmount_11 (c)+ _amount_1
A: u B: u
lnorm: u rnorm: u
[i]Type for lockedAmount

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
clearing ir...?
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
[i] _insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _insurance_1, name: _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
End popogation
TMP_291 = new Insurance(_id_1,block.timestamp,_endTime_1,_amount_1,_target_1,msg.sender,True)
[i]Type for TMP_291

Name: TMP_291 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_insurance_1(PoolTemplate.Insurance) := TMP_291(PoolTemplate.Insurance)
[i]Type for _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i] REF_121 cleared
clearing ir...?
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
[i] insurances cleared
clearing ir...?
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
[i] REF_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1, name: _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _insurance_1, name: _insurance

Name: _insurance Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: insurances_3, name: insurances

Name: insurances Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 3
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: insurances_3, name: insurances

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121(PoolTemplate.Insurance) -> insurances_2[_id_1]
[i]Type for REF_121

Name: insurances Function: unlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_3(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2'])
[i]Type for insurances

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121 (->insurances_3) := _insurance_1(PoolTemplate.Insurance)
[i]Type for REF_121

Name: REF_121 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
[i] allInsuranceCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_8, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: allInsuranceCount_9, name: allInsuranceCount

Name: allInsuranceCount Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: allInsuranceCount, Num: 9
Globalname: allInsuranceCount, contract_name: PoolTemplate
global...

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
allInsuranceCount_9(uint256) = allInsuranceCount_8 (c)+ 1
A: u B: u
lnorm: 0 rnorm: 0
[i]Type for allInsuranceCount

Name: allInsuranceCount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Copied allInsuranceCount
clearing ir...?
TMP_292(bool) = _totalCredit_1 > 0
[i] TMP_292 cleared
clearing ir...?
CONDITION TMP_292
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_292(bool) = _totalCredit_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_292

Name: TMP_292 Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_122(uint256) -> _newAttribution_1[0]
[i] REF_122 cleared
clearing ir...?
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
[i] TMP_293 cleared
clearing ir...?
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
[i] TMP_294 cleared
clearing ir...?
_attributionForIndex_1(uint256) := TMP_294(uint256)
[i] _attributionForIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _newAttribution_1, name: _newAttribution

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _newAttribution, Num: 1
Globalname: _newAttribution, contract_name: PoolTemplate
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _newAttribution_1, name: _newAttribution

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _newAttribution, Num: 1
Globalname: _newAttribution, contract_name: PoolTemplate
Ssa_name: _liquidity_1, name: _liquidity

Name: _liquidity Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _attributionForIndex, Num: 1
Globalname: _attributionForIndex, contract_name: PoolTemplate
End popogation
REF_122(uint256) -> _newAttribution_1[0]
[i]Type for REF_122

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293(uint256) = REF_122 (c)* _totalCredit_1
Mul...

Name: _newAttribution Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_293

Name: TMP_293 Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_294(uint256) = TMP_293 (c)/ _liquidity_1
A: 18 B: 18
lnorm: 18 rnorm: 18
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_294

Name: TMP_294 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_attributionForIndex_1(uint256) := TMP_294(uint256)
[i]Type for _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
Emit Insured(_id_1,_amount_1,_target_1,block.timestamp,_endTime_1,msg.sender,_premium_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _target_1, name: _target

Name: _target_1 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _premium_1, name: _premium

Name: _premium Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _endTime_1, name: _endTime

Name: _endTime Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: attributionDebt_19, name: attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: attributionDebt_19, name: attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: attributionDebt_20, name: attributionDebt

Name: attributionDebt Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 20
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
attributionDebt_20(uint256) = attributionDebt_19 (c)+ _attributionForIndex_1
A: u B: u
lnorm: u rnorm: u
[i]Type for attributionDebt

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied attributionDebt
clearing ir...?
RETURN _id_1
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
RETURN _id_1
clearing ir...?
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
[i] TMP_295 cleared
clearing ir...?
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
[i] TMP_296 cleared
clearing ir...?
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296
[i] rewardPerCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _attributionForIndex_1, name: _attributionForIndex

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_17, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_11, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: rewardPerCredit_12, name: rewardPerCredit

Name: rewardPerCredit Function: insure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 12
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_295(uint256) = _attributionForIndex_1 (c)* MAGIC_SCALE_1E6_17
Mul...

Name: _attributionForIndex Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_295

Name: TMP_295 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_296(uint256) = TMP_295 (c)/ _totalCredit_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_296

Name: TMP_296 Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
rewardPerCredit_12(uint256) = rewardPerCredit_11 (c)+ TMP_296
A: u B: u
lnorm: u rnorm: u
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied rewardPerCredit



redeem
Function name: redeem
Finding type for _id(uint256 ... )
Value: u
Param1: 
Name: _id Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _merkleProof(bytes32[] ... )
Value: u
Param1: 
Name: _merkleProof Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
redeem(uint256,bytes32[])


vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
TMP_298(bool) = REF_124 == True
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
REF_125(uint256) -> incident_1.payoutNumerator
_payoutNumerator_1(uint256) := REF_125(uint256)
REF_126(uint256) -> incident_1.payoutDenominator
_payoutDenominator_1(uint256) := REF_126(uint256)
REF_127(uint256) -> incident_1.incidentTimestamp
_incidentTimestamp_1(uint256) := REF_127(uint256)
REF_128(bytes32) -> incident_1.merkleRoot
_targets_1(bytes32) := REF_128(bytes32)
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_300(bool) = marketStatus_14 == REF_129
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
TMP_302(bool) = REF_130 == msg.sender
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_304(bool) = marketStatus_14 == REF_131
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
TMP_306(bool) = TMP_304 && TMP_305
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
TMP_308(bool) = TMP_306 && TMP_307
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
TMP_313 = CONVERT 0 to address
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
TMP_317(bool) = TMP_312 || TMP_316
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
_payoutAmount_1(uint256) := TMP_320(uint256)
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
Emit Redeemed(_id_1,msg.sender,REF_145,REF_146,_payoutAmount_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _merkleProof Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
clearing ir...?
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i] incident cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_34, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 34
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_13, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 13
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_14, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 14
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_4, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 4
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 1
Globalname: incident, contract_name: PoolTemplate
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i]Type for incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
[i] REF_123 cleared
clearing ir...?
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
[i] _insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: insurances_4, name: insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_4, name: insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
End popogation
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
[i]Type for REF_123

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
[i]Type for _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
[i] REF_124 cleared
clearing ir...?
TMP_298(bool) = REF_124 == True
[i] TMP_298 cleared
clearing ir...?
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
OUT KEY: redeem__insurance_status
OUT KEY: redeem__status
FTT: None
No field found
[i]Type for REF_124

Name: REF_124 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_124 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_298(bool) = REF_124 == True
[i]Type for TMP_298

Name: TMP_298 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
[i]Type for TMP_299

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_125(uint256) -> incident_1.payoutNumerator
[i] REF_125 cleared
clearing ir...?
_payoutNumerator_1(uint256) := REF_125(uint256)
[i] _payoutNumerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
End popogation
REF_125(uint256) -> incident_1.payoutNumerator
OUT KEY: redeem_incident_payoutNumerator
OUT KEY: redeem_incident_payoutNumerator
FTT: None
No field found
[i]Type for REF_125

Name: REF_125 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_125 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_payoutNumerator_1(uint256) := REF_125(uint256)
[i]Type for _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_126(uint256) -> incident_1.payoutDenominator
[i] REF_126 cleared
clearing ir...?
_payoutDenominator_1(uint256) := REF_126(uint256)
[i] _payoutDenominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
End popogation
REF_126(uint256) -> incident_1.payoutDenominator
OUT KEY: redeem_incident_payoutDenominator
OUT KEY: redeem_incident_payoutDenominator
FTT: None
No field found
[i]Type for REF_126

Name: REF_126 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_126 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_payoutDenominator_1(uint256) := REF_126(uint256)
[i]Type for _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_127(uint256) -> incident_1.incidentTimestamp
[i] REF_127 cleared
clearing ir...?
_incidentTimestamp_1(uint256) := REF_127(uint256)
[i] _incidentTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
End popogation
REF_127(uint256) -> incident_1.incidentTimestamp
OUT KEY: redeem_incident_incidentTimestamp
OUT KEY: redeem_incident_incidentTimestamp
FTT: None
No field found
[i]Type for REF_127

Name: REF_127 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_127 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_incidentTimestamp_1(uint256) := REF_127(uint256)
[i]Type for _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_128(bytes32) -> incident_1.merkleRoot
[i] REF_128 cleared
clearing ir...?
_targets_1(bytes32) := REF_128(bytes32)
[i] _targets cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Ssa_name: _targets_1, name: _targets

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
End popogation
REF_128(bytes32) -> incident_1.merkleRoot
OUT KEY: redeem_incident_merkleRoot
OUT KEY: redeem_incident_merkleRoot
FTT: None
No field found
[i]Type for REF_128

Name: REF_128 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_128 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_targets_1(bytes32) := REF_128(bytes32)
[i]Type for _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_129 cleared
clearing ir...?
TMP_300(bool) = marketStatus_14 == REF_129
[i] TMP_300 cleared
clearing ir...?
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_129

Name: REF_129 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_129 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_300(bool) = marketStatus_14 == REF_129
[i]Type for TMP_300

Name: TMP_300 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
[i] REF_130 cleared
clearing ir...?
TMP_302(bool) = REF_130 == msg.sender
[i] TMP_302 cleared
clearing ir...?
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
End popogation
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
OUT KEY: redeem__insurance_insured
OUT KEY: redeem__insured
FTT: None
No field found
[i]Type for REF_130

Name: REF_130 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_130 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_302(bool) = REF_130 == msg.sender
[i]Type for TMP_302

Name: TMP_302 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
[i]Type for TMP_303

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_131 cleared
clearing ir...?
TMP_304(bool) = marketStatus_14 == REF_131
[i] TMP_304 cleared
clearing ir...?
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
[i] REF_132 cleared
clearing ir...?
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
[i] TMP_305 cleared
clearing ir...?
TMP_306(bool) = TMP_304 && TMP_305
[i] TMP_306 cleared
clearing ir...?
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
[i] REF_133 cleared
clearing ir...?
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = TMP_306 && TMP_307
[i] TMP_308 cleared
clearing ir...?
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
End popogation
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_131

Name: REF_131 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_131 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(bool) = marketStatus_14 == REF_131
[i]Type for TMP_304

Name: TMP_304 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
OUT KEY: redeem__insurance_startTime
OUT KEY: redeem__startTime
FTT: None
No field found
[i]Type for REF_132

Name: REF_132 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured
Finance Type: undef
Fieldf: 
Name: startTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_132 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_305

Name: TMP_305 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(bool) = TMP_304 && TMP_305
[i]Type for TMP_306

Name: TMP_306 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
OUT KEY: redeem__insurance_endTime
OUT KEY: redeem__endTime
FTT: None
No field found
[i]Type for REF_133

Name: REF_133 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime
Finance Type: undef
Fieldf: 
Name: endTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_133 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_307

Name: TMP_307 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(bool) = TMP_306 && TMP_307
[i]Type for TMP_308

Name: TMP_308 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
[i]Type for TMP_309

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
[i] REF_136 cleared
clearing ir...?
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
[i] REF_137 cleared
clearing ir...?
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
clearing ir...?
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
clearing ir...?
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
[i] TMP_312 cleared
clearing ir...?
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
[i] REF_140 cleared
clearing ir...?
TMP_313 = CONVERT 0 to address
[i] TMP_313 cleared
clearing ir...?
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
clearing ir...?
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
clearing ir...?
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
[i] TMP_316 cleared
clearing ir...?
TMP_317(bool) = TMP_312 || TMP_316
[i] TMP_317 cleared
clearing ir...?
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
Propogating parameters and globals to SSA variables...
Ssa_name: _targets_1, name: _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime
Finance Type: undef
Ssa_name: _merkleProof_1 (-> []), name: _merkleProof

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _merkleProof Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _merkleProof_1 (-> []) Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _targets_1, name: _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime
Finance Type: undef
Ssa_name: _merkleProof_1 (-> []), name: _merkleProof

Name: _merkleProof_1 (-> []) Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_136

Name: REF_136 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime
Finance Type: undef
Fieldf: 
Name: target Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_136 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
OUT KEY: redeem__insurance_insured
OUT KEY: redeem__insured
FTT: None
No field found
[i]Type for REF_137

Name: REF_137 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_137 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
[i]Type for TMP_310

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
[i]Type for TMP_311

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
[i]Type for TMP_312

Name: TMP_312 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_140

Name: REF_140 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: target Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_140 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: target Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
[i]Type for TMP_314

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
[i]Type for TMP_315

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
[i]Type for TMP_316

Name: TMP_316 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_317(bool) = TMP_312 || TMP_316
[i]Type for TMP_317

Name: TMP_317 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
[i]Type for TMP_318

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
[i] REF_141 cleared
clearing ir...?
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
[i] _insurance cleared
clearing ir...?
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
[i] REF_141 cleared
clearing ir...?
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: insurances_5, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 5
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: insurances_5, name: insurances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
OUT KEY: redeem__insurance_status
OUT KEY: redeem__status
FTT: None
No field found
[i]Type for REF_141

Name: REF_141 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_141 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
[i]Type for _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
[i]Type for REF_141

Name: REF_141 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_141 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
[i]Type for insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_142 cleared
clearing ir...?
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: lockedAmount_13, name: lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_13, name: lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: lockedAmount_14, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 14
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_142

Name: REF_142 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_142 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
A: u B: u
lnorm: u rnorm: u
[i]Type for lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_143 cleared
clearing ir...?
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
[i] TMP_319 cleared
clearing ir...?
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
[i] TMP_320 cleared
clearing ir...?
_payoutAmount_1(uint256) := TMP_320(uint256)
[i] _payoutAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
End popogation
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_143

Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
Mul...

Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_319

Name: TMP_319 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_320

Name: TMP_320 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payoutAmount_1(uint256) := TMP_320(uint256)
[i]Type for _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
clearing ir...?
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: vault_34, name: vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: vault_34, name: vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_35, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 35
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
High Call: borrowValue
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
[i] REF_145 cleared
clearing ir...?
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_146 cleared
clearing ir...?
Emit Redeemed(_id_1,msg.sender,REF_145,REF_146,_payoutAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_145

Name: REF_145 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Fieldf: 
Name: target Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_145 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: target Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_146

Name: REF_146 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_146 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
TMP_298(bool) = REF_124 == True
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
REF_125(uint256) -> incident_1.payoutNumerator
_payoutNumerator_1(uint256) := REF_125(uint256)
REF_126(uint256) -> incident_1.payoutDenominator
_payoutDenominator_1(uint256) := REF_126(uint256)
REF_127(uint256) -> incident_1.incidentTimestamp
_incidentTimestamp_1(uint256) := REF_127(uint256)
REF_128(bytes32) -> incident_1.merkleRoot
_targets_1(bytes32) := REF_128(bytes32)
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_300(bool) = marketStatus_14 == REF_129
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
TMP_302(bool) = REF_130 == msg.sender
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_304(bool) = marketStatus_14 == REF_131
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
TMP_306(bool) = TMP_304 && TMP_305
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
TMP_308(bool) = TMP_306 && TMP_307
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
TMP_313 = CONVERT 0 to address
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
TMP_317(bool) = TMP_312 || TMP_316
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
_payoutAmount_1(uint256) := TMP_320(uint256)
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
Emit Redeemed(_id_1,msg.sender,REF_145,REF_146,_payoutAmount_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _merkleProof Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
clearing ir...?
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i] incident cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_34, name: vault

Name: vault Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 34
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_13, name: lockedAmount

Name: lockedAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 13
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 14
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_4, name: insurances

Name: insurances Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 4
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Name: incident, Num: 1
Globalname: incident, contract_name: PoolTemplate
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_34(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
lockedAmount_13(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
marketStatus_14(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_4(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_1(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i]Type for incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
clearing ir...?
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
[i] REF_123 cleared
clearing ir...?
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
[i] _insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_4, name: insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_4, name: insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
End popogation
REF_123(PoolTemplate.Insurance) -> insurances_4[_id_1]
[i]Type for REF_123

Name: insurances Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_123(PoolTemplate.Insurance)
[i]Type for _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
clearing ir...?
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
[i] REF_124 cleared
clearing ir...?
TMP_298(bool) = REF_124 == True
[i] TMP_298 cleared
clearing ir...?
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
End popogation
REF_124(bool) -> _insurance_1 (-> ['insurances']).status
OUT KEY: redeem__insurance_status
OUT KEY: redeem__status
FTT: None
No field found
[i]Type for REF_124

Name: REF_124 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: status Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_124 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298(bool) = REF_124 == True
[i]Type for TMP_298

Name: TMP_298 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_299(None) = SOLIDITY_CALL require(bool,string)(TMP_298,ERROR: INSURANCE_NOT_ACTIVE)
[i]Type for TMP_299

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_125(uint256) -> incident_1.payoutNumerator
[i] REF_125 cleared
clearing ir...?
_payoutNumerator_1(uint256) := REF_125(uint256)
[i] _payoutNumerator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
End popogation
REF_125(uint256) -> incident_1.payoutNumerator
OUT KEY: redeem_incident_payoutNumerator
OUT KEY: redeem_incident_payoutNumerator
FTT: None
No field found
[i]Type for REF_125

Name: REF_125 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_125 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payoutNumerator_1(uint256) := REF_125(uint256)
[i]Type for _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_126(uint256) -> incident_1.payoutDenominator
[i] REF_126 cleared
clearing ir...?
_payoutDenominator_1(uint256) := REF_126(uint256)
[i] _payoutDenominator cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
End popogation
REF_126(uint256) -> incident_1.payoutDenominator
OUT KEY: redeem_incident_payoutDenominator
OUT KEY: redeem_incident_payoutDenominator
FTT: None
No field found
[i]Type for REF_126

Name: REF_126 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_126 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payoutDenominator_1(uint256) := REF_126(uint256)
[i]Type for _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_127(uint256) -> incident_1.incidentTimestamp
[i] REF_127 cleared
clearing ir...?
_incidentTimestamp_1(uint256) := REF_127(uint256)
[i] _incidentTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
End popogation
REF_127(uint256) -> incident_1.incidentTimestamp
OUT KEY: redeem_incident_incidentTimestamp
OUT KEY: redeem_incident_incidentTimestamp
FTT: None
No field found
[i]Type for REF_127

Name: REF_127 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_127 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_incidentTimestamp_1(uint256) := REF_127(uint256)
[i]Type for _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_128(bytes32) -> incident_1.merkleRoot
[i] REF_128 cleared
clearing ir...?
_targets_1(bytes32) := REF_128(bytes32)
[i] _targets cleared
Propogating parameters and globals to SSA variables...
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: incident_1, name: incident

Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Ssa_name: _targets_1, name: _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
End popogation
REF_128(bytes32) -> incident_1.merkleRoot
OUT KEY: redeem_incident_merkleRoot
OUT KEY: redeem_incident_merkleRoot
FTT: None
No field found
[i]Type for REF_128

Name: REF_128 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_128 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: merkleRoot Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_targets_1(bytes32) := REF_128(bytes32)
[i]Type for _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_129 cleared
clearing ir...?
TMP_300(bool) = marketStatus_14 == REF_129
[i] TMP_300 cleared
clearing ir...?
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_129(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_129

Name: REF_129 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_129 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(bool) = marketStatus_14 == REF_129
[i]Type for TMP_300

Name: TMP_300 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,ERROR: NO_APPLICABLE_INCIDENT)
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
[i] REF_130 cleared
clearing ir...?
TMP_302(bool) = REF_130 == msg.sender
[i] TMP_302 cleared
clearing ir...?
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
End popogation
REF_130(address) -> _insurance_1 (-> ['insurances']).insured
OUT KEY: redeem__insurance_insured
OUT KEY: redeem__insured
FTT: None
No field found
[i]Type for REF_130

Name: REF_130 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: insured Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_130 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_302(bool) = REF_130 == msg.sender
[i]Type for TMP_302

Name: TMP_302 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(None) = SOLIDITY_CALL require(bool,string)(TMP_302,ERROR: NOT_YOUR_INSURANCE)
[i]Type for TMP_303

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_131 cleared
clearing ir...?
TMP_304(bool) = marketStatus_14 == REF_131
[i] TMP_304 cleared
clearing ir...?
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
[i] REF_132 cleared
clearing ir...?
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
[i] TMP_305 cleared
clearing ir...?
TMP_306(bool) = TMP_304 && TMP_305
[i] TMP_306 cleared
clearing ir...?
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
[i] REF_133 cleared
clearing ir...?
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = TMP_306 && TMP_307
[i] TMP_308 cleared
clearing ir...?
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_14, name: marketStatus

Name: marketStatus Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _incidentTimestamp, Num: 1
Globalname: _incidentTimestamp, contract_name: PoolTemplate
End popogation
REF_131(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_131

Name: REF_131 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_131 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(bool) = marketStatus_14 == REF_131
[i]Type for TMP_304

Name: TMP_304 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(uint256) -> _insurance_1 (-> ['insurances']).startTime
OUT KEY: redeem__insurance_startTime
OUT KEY: redeem__startTime
FTT: None
No field found
[i]Type for REF_132

Name: REF_132 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: startTime Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_132 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: startTime Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_305(bool) = REF_132 <= _incidentTimestamp_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_305

Name: TMP_305 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_306(bool) = TMP_304 && TMP_305
[i]Type for TMP_306

Name: TMP_306 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_133(uint256) -> _insurance_1 (-> ['insurances']).endTime
OUT KEY: redeem__insurance_endTime
OUT KEY: redeem__endTime
FTT: None
No field found
[i]Type for REF_133

Name: REF_133 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: endTime Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_133 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_307(bool) = REF_133 >= _incidentTimestamp_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_307

Name: TMP_307 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_308(bool) = TMP_306 && TMP_307
[i]Type for TMP_308

Name: TMP_308 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_309(None) = SOLIDITY_CALL require(bool,string)(TMP_308,ERROR: INSURANCE_NOT_APPLICABLE)
[i]Type for TMP_309

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
[i] REF_136 cleared
clearing ir...?
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
[i] REF_137 cleared
clearing ir...?
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
clearing ir...?
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
clearing ir...?
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
[i] TMP_312 cleared
clearing ir...?
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
[i] REF_140 cleared
clearing ir...?
TMP_313 = CONVERT 0 to address
[i] TMP_313 cleared
clearing ir...?
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
clearing ir...?
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
clearing ir...?
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
[i] TMP_316 cleared
clearing ir...?
TMP_317(bool) = TMP_312 || TMP_316
[i] TMP_317 cleared
clearing ir...?
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
Propogating parameters and globals to SSA variables...
Ssa_name: _targets_1, name: _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _merkleProof_1 (-> []), name: _merkleProof

Name: _merkleProof_1 (-> []) Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _targets_1, name: _targets

Name: _targets Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _targets, Num: 1
Globalname: _targets, contract_name: PoolTemplate
Ssa_name: _insurance_1 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 1 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _merkleProof_1 (-> []), name: _merkleProof

Name: _merkleProof_1 (-> []) Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_136(bytes32) -> _insurance_1 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_136

Name: REF_136 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: target Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_136 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: target Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(address) -> _insurance_1 (-> ['insurances']).insured
OUT KEY: redeem__insurance_insured
OUT KEY: redeem__insured
FTT: None
No field found
[i]Type for REF_137

Name: REF_137 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_137 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_136,REF_137)
[i]Type for TMP_310

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_310)
[i]Type for TMP_311

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_312(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_311'] 
[i]Type for TMP_312

Name: TMP_312 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_140(bytes32) -> _insurance_1 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_140

Name: REF_140 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: target Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_140 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: target Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(bytes) = SOLIDITY_CALL abi.encodePacked()(REF_140,TMP_313)
[i]Type for TMP_314

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_315(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_314)
[i]Type for TMP_315

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_316(bool) = LIBRARY_CALL, dest:MerkleProof, function:MerkleProof.verify(bytes32[],bytes32,bytes32), arguments:['_merkleProof_1 (-> [])', '_targets_1', 'TMP_315'] 
[i]Type for TMP_316

Name: TMP_316 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_317(bool) = TMP_312 || TMP_316
[i]Type for TMP_317

Name: TMP_317 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_318(None) = SOLIDITY_CALL require(bool,string)(TMP_317,ERROR: INSURANCE_EXEMPTED)
[i]Type for TMP_318

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
[i] REF_141 cleared
clearing ir...?
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
[i] _insurance cleared
clearing ir...?
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
[i] REF_141 cleared
clearing ir...?
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: insurances_5, name: insurances

Name: insurances Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 5
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: insurances_5, name: insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_141(bool) -> _insurance_1 (-> ['insurances']).status
OUT KEY: redeem__insurance_status
OUT KEY: redeem__status
FTT: None
No field found
[i]Type for REF_141

Name: REF_141 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: status, insured, startTime, endTime, target, amount
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_141 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
_insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["_insurance_1 (-> ['insurances'])"])
[i]Type for _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
REF_141 (->_insurance_2 (-> ['insurances'])) := False(bool)
[i]Type for REF_141

Name: REF_141 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_141 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
insurances_5(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["_insurance_2 (-> ['insurances'])"])
[i]Type for insurances

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_142 cleared
clearing ir...?
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: lockedAmount_13, name: lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_13, name: lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: lockedAmount_14, name: lockedAmount

Name: lockedAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 14
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
REF_142(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_142

Name: REF_142 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: amount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_142 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_14(uint256) = lockedAmount_13 (c)- REF_142
A: u B: u
lnorm: u rnorm: u
[i]Type for lockedAmount

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied lockedAmount
clearing ir...?
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_143 cleared
clearing ir...?
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
[i] TMP_319 cleared
clearing ir...?
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
[i] TMP_320 cleared
clearing ir...?
_payoutAmount_1(uint256) := TMP_320(uint256)
[i] _payoutAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutDenominator, Num: 1
Globalname: _payoutDenominator, contract_name: PoolTemplate
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutNumerator, Num: 1
Globalname: _payoutNumerator, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
End popogation
REF_143(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_143

Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_319(uint256) = REF_143 (c)* _payoutNumerator_1
Mul...

Name: REF_143 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _payoutNumerator Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_319

Name: TMP_319 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_320(uint256) = TMP_319 (c)/ _payoutDenominator_1
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_320

Name: TMP_320 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_payoutAmount_1(uint256) := TMP_320(uint256)
[i]Type for _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
clearing ir...?
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: vault_34, name: vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: vault_34, name: vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_35, name: vault

Name: vault Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 35
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_34(IVault), function:borrowValue, arguments:['_payoutAmount_1', 'msg.sender']  
High Call: borrowValue
vault_35(IVault) := ϕ(['vault_4', 'vault_34', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
[i] REF_145 cleared
clearing ir...?
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
[i] REF_146 cleared
clearing ir...?
Emit Redeemed(_id_1,msg.sender,REF_145,REF_146,_payoutAmount_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutAmount_1, name: _payoutAmount

Name: _payoutAmount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _payoutAmount, Num: 1
Globalname: _payoutAmount, contract_name: PoolTemplate
Ssa_name: _insurance_2 (-> ['insurances']), name: _insurance

Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Name: _insurance, Num: 2 (-> ['insurances'])
Globalname: _insurance, contract_name: PoolTemplate
Ssa_name: _id_1, name: _id

Name: _id_1 Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_145(bytes32) -> _insurance_2 (-> ['insurances']).target
OUT KEY: redeem__insurance_target
OUT KEY: redeem__target
FTT: None
No field found
[i]Type for REF_145

Name: REF_145 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: target Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_145 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: target Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_146(uint256) -> _insurance_2 (-> ['insurances']).amount
OUT KEY: redeem__insurance_amount
OUT KEY: redeem__amount
FTT: None
No field found
[i]Type for REF_146

Name: REF_146 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: _insurance Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount, status, insured, startTime, endTime, target
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_146 Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: amount Function: redeem
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



transferInsurance
Function name: transferInsurance
Finding type for _id(uint256 ... )
Value: u
Param1: 
Name: _id Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _to(address ... )
prev address? u
-996
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Param1: 
Name: _to Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', '_to', [], -1, -996, 'u']]
FIND RETURN
ENTRY_POINT
transferInsurance(uint256,address)


insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
TMP_323 = CONVERT 0 to address
TMP_324(bool) = _to_1 != TMP_323
REF_148(address) -> insurance_1 (-> ['insurances']).insured
TMP_325(bool) = REF_148 == msg.sender
TMP_326(bool) = TMP_324 && TMP_325
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
TMP_327(bool) = REF_149 >= block.timestamp
TMP_328(bool) = TMP_326 && TMP_327
REF_150(bool) -> insurance_1 (-> ['insurances']).status
TMP_329(bool) = REF_150 == True
TMP_330(bool) = TMP_328 && TMP_329
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
REF_151(address) -> insurance_1 (-> ['insurances']).insured
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
Emit TransferInsurance(_id_1,msg.sender,_to_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_to', [], -1, -996, 'u']
Param:
Name: _to Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
clearing ir...?
insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: insurances_6, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 6
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
[i] REF_147 cleared
clearing ir...?
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
[i] insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _id Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: insurances_6, name: insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_6, name: insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurance, Num: 1 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
End popogation
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
[i]Type for REF_147

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
[i]Type for insurance

Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_323 = CONVERT 0 to address
[i] TMP_323 cleared
clearing ir...?
TMP_324(bool) = _to_1 != TMP_323
[i] TMP_324 cleared
clearing ir...?
REF_148(address) -> insurance_1 (-> ['insurances']).insured
[i] REF_148 cleared
clearing ir...?
TMP_325(bool) = REF_148 == msg.sender
[i] TMP_325 cleared
clearing ir...?
TMP_326(bool) = TMP_324 && TMP_325
[i] TMP_326 cleared
clearing ir...?
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
[i] REF_149 cleared
clearing ir...?
TMP_327(bool) = REF_149 >= block.timestamp
[i] TMP_327 cleared
clearing ir...?
TMP_328(bool) = TMP_326 && TMP_327
[i] TMP_328 cleared
clearing ir...?
REF_150(bool) -> insurance_1 (-> ['insurances']).status
[i] REF_150 cleared
clearing ir...?
TMP_329(bool) = REF_150 == True
[i] TMP_329 cleared
clearing ir...?
TMP_330(bool) = TMP_328 && TMP_329
[i] TMP_330 cleared
clearing ir...?
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _to Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_323 = CONVERT 0 to address

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_323

Name: TMP_323 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324(bool) = _to_1 != TMP_323
[i]Type for TMP_324

Name: TMP_324 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_148(address) -> insurance_1 (-> ['insurances']).insured
OUT KEY: transferInsurance_insurance_insured
OUT KEY: transferInsurance_insurance_insured
FTT: None
No field found
[i]Type for REF_148

Name: REF_148 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_148 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_325(bool) = REF_148 == msg.sender
[i]Type for TMP_325

Name: TMP_325 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_324 && TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
OUT KEY: transferInsurance_insurance_endTime
OUT KEY: transferInsurance_insurance_endTime
FTT: None
No field found
[i]Type for REF_149

Name: REF_149 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: insured
Finance Type: undef
Fieldf: 
Name: endTime Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_149 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_327(bool) = REF_149 >= block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_327

Name: TMP_327 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_328(bool) = TMP_326 && TMP_327
[i]Type for TMP_328

Name: TMP_328 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_150(bool) -> insurance_1 (-> ['insurances']).status
OUT KEY: transferInsurance_insurance_status
OUT KEY: transferInsurance_insurance_status
FTT: None
No field found
[i]Type for REF_150

Name: REF_150 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime
Finance Type: undef
Fieldf: 
Name: status Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_150 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_329(bool) = REF_150 == True
[i]Type for TMP_329

Name: TMP_329 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_328 && TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
[i]Type for TMP_331

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_151(address) -> insurance_1 (-> ['insurances']).insured
[i] REF_151 cleared
clearing ir...?
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
[i] insurance cleared
clearing ir...?
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
[i] REF_151 cleared
clearing ir...?
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_7, name: insurances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 7
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_2 (-> ['insurances']), name: insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurance, Num: 2 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
End popogation
Ssa_name: insurance_2 (-> ['insurances']), name: insurance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurance, Num: 2 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
Ssa_name: insurances_7, name: insurances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> insurance_1 (-> ['insurances']).insured
OUT KEY: transferInsurance_insurance_insured
OUT KEY: transferInsurance_insurance_insured
FTT: None
No field found
[i]Type for REF_151

Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
[i]Type for insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
[i]Type for REF_151

Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: transferInsurance
Num: -1
Den: -1
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
[i]Type for insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
Emit TransferInsurance(_id_1,msg.sender,_to_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
TMP_323 = CONVERT 0 to address
TMP_324(bool) = _to_1 != TMP_323
REF_148(address) -> insurance_1 (-> ['insurances']).insured
TMP_325(bool) = REF_148 == msg.sender
TMP_326(bool) = TMP_324 && TMP_325
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
TMP_327(bool) = REF_149 >= block.timestamp
TMP_328(bool) = TMP_326 && TMP_327
REF_150(bool) -> insurance_1 (-> ['insurances']).status
TMP_329(bool) = REF_150 == True
TMP_330(bool) = TMP_328 && TMP_329
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
REF_151(address) -> insurance_1 (-> ['insurances']).insured
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
Emit TransferInsurance(_id_1,msg.sender,_to_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _id Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_to', [], -1, -996, 'u']
Param:
Name: _to Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
clearing ir...?
insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: insurances_6, name: insurances

Name: insurances Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 6
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurances_6(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(['insurances_2', 'insurances_3', 'insurances_0', 'insurances_5', 'insurances_7'])
[i]Type for insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
[i] REF_147 cleared
clearing ir...?
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
[i] insurance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_6, name: insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_6, name: insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Name: insurance, Num: 1 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
End popogation
REF_147(PoolTemplate.Insurance) -> insurances_6[_id_1]
[i]Type for REF_147

Name: insurances Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
insurance_1 (-> ['insurances'])(PoolTemplate.Insurance) := REF_147(PoolTemplate.Insurance)
[i]Type for insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
clearing ir...?
TMP_323 = CONVERT 0 to address
[i] TMP_323 cleared
clearing ir...?
TMP_324(bool) = _to_1 != TMP_323
[i] TMP_324 cleared
clearing ir...?
REF_148(address) -> insurance_1 (-> ['insurances']).insured
[i] REF_148 cleared
clearing ir...?
TMP_325(bool) = REF_148 == msg.sender
[i] TMP_325 cleared
clearing ir...?
TMP_326(bool) = TMP_324 && TMP_325
[i] TMP_326 cleared
clearing ir...?
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
[i] REF_149 cleared
clearing ir...?
TMP_327(bool) = REF_149 >= block.timestamp
[i] TMP_327 cleared
clearing ir...?
TMP_328(bool) = TMP_326 && TMP_327
[i] TMP_328 cleared
clearing ir...?
REF_150(bool) -> insurance_1 (-> ['insurances']).status
[i] REF_150 cleared
clearing ir...?
TMP_329(bool) = REF_150 == True
[i] TMP_329 cleared
clearing ir...?
TMP_330(bool) = TMP_328 && TMP_329
[i] TMP_330 cleared
clearing ir...?
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Name: insurance, Num: 1 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_1 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Name: insurance, Num: 1 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
End popogation
TMP_323 = CONVERT 0 to address

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_323

Name: TMP_323 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324(bool) = _to_1 != TMP_323
[i]Type for TMP_324

Name: TMP_324 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_148(address) -> insurance_1 (-> ['insurances']).insured
OUT KEY: transferInsurance_insurance_insured
OUT KEY: transferInsurance_insurance_insured
FTT: None
No field found
[i]Type for REF_148

Name: REF_148 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: insured Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_148 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_148 == msg.sender
[i]Type for TMP_325

Name: TMP_325 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_324 && TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_149(uint256) -> insurance_1 (-> ['insurances']).endTime
OUT KEY: transferInsurance_insurance_endTime
OUT KEY: transferInsurance_insurance_endTime
FTT: None
No field found
[i]Type for REF_149

Name: REF_149 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: endTime Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_149 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: endTime Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327(bool) = REF_149 >= block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_327

Name: TMP_327 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_328(bool) = TMP_326 && TMP_327
[i]Type for TMP_328

Name: TMP_328 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_150(bool) -> insurance_1 (-> ['insurances']).status
OUT KEY: transferInsurance_insurance_status
OUT KEY: transferInsurance_insurance_status
FTT: None
No field found
[i]Type for REF_150

Name: REF_150 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: status Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_150 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: status Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(bool) = REF_150 == True
[i]Type for TMP_329

Name: TMP_329 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_328 && TMP_329
[i]Type for TMP_330

Name: TMP_330 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(None) = SOLIDITY_CALL require(bool,string)(TMP_330,ERROR: INSURANCE_TRANSFER_BAD_CONDITIONS)
[i]Type for TMP_331

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_151(address) -> insurance_1 (-> ['insurances']).insured
[i] REF_151 cleared
clearing ir...?
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
[i] insurance cleared
clearing ir...?
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
[i] REF_151 cleared
clearing ir...?
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
[i] insurances cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurances_7, name: insurances

Name: insurances Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: insurances, Num: 7
Globalname: insurances, contract_name: PoolTemplate
global...

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: insurance_2 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Name: insurance, Num: 2 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
End popogation
Ssa_name: insurance_2 (-> ['insurances']), name: insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Name: insurance, Num: 2 (-> ['insurances'])
Globalname: insurance, contract_name: PoolTemplate
Ssa_name: insurances_7, name: insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_151(address) -> insurance_1 (-> ['insurances']).insured
OUT KEY: transferInsurance_insurance_insured
OUT KEY: transferInsurance_insurance_insured
FTT: None
No field found
[i]Type for REF_151

Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
insurance_2 (-> ['insurances'])(PoolTemplate.Insurance) := ϕ(["insurance_1 (-> ['insurances'])"])
[i]Type for insurance

Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
REF_151 (->insurance_2 (-> ['insurances'])) := _to_1(address)
[i]Type for REF_151

Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: insurance Function: transferInsurance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: insured, endTime, status
Finance Type: undef
Fieldf: 
Name: insured Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_151 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: insured Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
insurances_7(mapping(uint256 => PoolTemplate.Insurance)) := ϕ(["insurance_2 (-> ['insurances'])"])
[i]Type for insurances

Name: insurances Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied insurances
clearing ir...?
Emit TransferInsurance(_id_1,msg.sender,_to_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _to_1, name: _to

Name: _to_1 Function: transferInsurance
Num: 
Den: 
Address: -996
Norm: u
LF: _to
Value: u
Fields: 
Finance Type: undef
Ssa_name: _id_1, name: _id

Name: _id_1 Function: transferInsurance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation



applyCover
Function name: applyCover
Finding type for _pending(uint256 ... )
Value: u
Param1: 
Name: _pending Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _payoutNumerator(uint256 ... )
Value: u
Param1: 
Name: _payoutNumerator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _payoutDenominator(uint256 ... )
Value: u
Param1: 
Name: _payoutDenominator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _incidentTimestamp(uint256 ... )
Value: u
Param1: 
Name: _incidentTimestamp Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _merkleRoot(bytes32 ... )
Value: u
Param1: 
Name: _merkleRoot Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _rawdata(string ... )
Value: u
Param1: 
Name: _rawdata Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finding type for _memo(string ... )
Value: u
Param1: 
Name: _memo Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
applyCover(uint256,uint256,uint256,uint256,bytes32,string,string)


paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
MODIFIER_CALL, PoolTemplate.onlyOwner()()
TMP_336(bool) = paused_9 == False
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
REF_153(uint256) -> incident_3.payoutNumerator
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
REF_154(uint256) -> incident_4.payoutDenominator
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
REF_155(uint256) -> incident_5.incidentTimestamp
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
REF_156(bytes32) -> incident_6.merkleRoot
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
TMP_338(uint256) = block.timestamp (c)+ _pending_1
pendingEnd_1(uint256) := TMP_338(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_1', 'i_3'])
REF_158 -> LENGTH indexList_6
TMP_339(bool) = i_2 < REF_158
CONDITION TMP_339
REF_159(address) -> indexList_6[i_2]
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
REF_161(uint256) -> REF_160.credit
TMP_340(bool) = REF_161 > 0
CONDITION TMP_340
REF_162(address) -> indexList_6[i_2]
TMP_341 = CONVERT REF_162 to IIndexTemplate
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
Emit CoverApplied(_pending_1,_payoutNumerator_1,_payoutDenominator_1,_incidentTimestamp_1,_merkleRoot_1,_rawdata_1,_memo_1)
Emit MarketStatusChanged(marketStatus_15)
TMP_343(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _pending Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _payoutNumerator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _payoutDenominator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _incidentTimestamp Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _merkleRoot Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _rawdata Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _memo Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i] incident cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_8, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 8
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_9, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 9
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_5, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 5
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_2, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 2
Globalname: incident, contract_name: PoolTemplate
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: applyCover
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
MODIFIER_CALL, PoolTemplate.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PoolTemplate.onlyOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyOwner()
ENTRY_POINT
Propogating All
EXPRESSION require(bool,string)(msg.sender == parameters.getOwner(),Restricted: caller is not allowed to operate)
Propogating All
_
Propogating All
clearing ir...?
parameters_22(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: parameters_22, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 22
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
parameters_22(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_434(address) = HIGH_LEVEL_CALL, dest:parameters_22(IParameters), function:getOwner, arguments:[]  
[i] TMP_434 cleared
clearing ir...?
parameters_23(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_22', 'parameters_2'])
[i] parameters cleared
clearing ir...?
TMP_435(bool) = msg.sender == TMP_434
[i] TMP_435 cleared
clearing ir...?
TMP_436(None) = SOLIDITY_CALL require(bool,string)(TMP_435,Restricted: caller is not allowed to operate)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_22, name: parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_22, name: parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_23, name: parameters

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 23
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_434(address) = HIGH_LEVEL_CALL, dest:parameters_22(IParameters), function:getOwner, arguments:[]  
High Call: getOwner
Running querryfc
Found: None
Written func info: IParameters, getOwner
[i]Type for TMP_434

Name: TMP_434 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_23(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_22', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_435(bool) = msg.sender == TMP_434
[i]Type for TMP_435

Name: TMP_435 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_436(None) = SOLIDITY_CALL require(bool,string)(TMP_435,Restricted: caller is not allowed to operate)
[i]Type for TMP_436

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
parameters_22(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i] parameters cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: parameters_22, name: parameters

Name: parameters Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 22
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
parameters_22(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_2', 'parameters_0'])
[i]Type for parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_434(address) = HIGH_LEVEL_CALL, dest:parameters_22(IParameters), function:getOwner, arguments:[]  
[i] TMP_434 cleared
clearing ir...?
parameters_23(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_22', 'parameters_2'])
[i] parameters cleared
clearing ir...?
TMP_435(bool) = msg.sender == TMP_434
[i] TMP_435 cleared
clearing ir...?
TMP_436(None) = SOLIDITY_CALL require(bool,string)(TMP_435,Restricted: caller is not allowed to operate)
Propogating parameters and globals to SSA variables...
Ssa_name: parameters_22, name: parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Ssa_name: parameters_22, name: parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: parameters_23, name: parameters

Name: parameters Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
Name: parameters, Num: 23
Globalname: parameters, contract_name: PoolTemplate
global...

Name: parameters Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_434(address) = HIGH_LEVEL_CALL, dest:parameters_22(IParameters), function:getOwner, arguments:[]  
High Call: getOwner
Running querryfc
Found: None
Written func info: IParameters, getOwner
[i]Type for TMP_434

Name: TMP_434 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
parameters_23(IParameters) := ϕ(['parameters_23', 'parameters_21', 'parameters_8', 'parameters_18', 'parameters_10', 'parameters_22', 'parameters_2'])
[i]Type for parameters

Name: parameters Function: onlyOwner
Num: -1
Den: -1
Address: -997
Norm: u
LF: Parameters
Value: u
Fields: 
Finance Type: undef
TMP_435(bool) = msg.sender == TMP_434
[i]Type for TMP_435

Name: TMP_435 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_436(None) = SOLIDITY_CALL require(bool,string)(TMP_435,Restricted: caller is not allowed to operate)
[i]Type for TMP_436

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_336(bool) = paused_9 == False
[i] TMP_336 cleared
clearing ir...?
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
Propogating parameters and globals to SSA variables...
Ssa_name: paused_9, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 9
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_9, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_336(bool) = paused_9 == False
[i]Type for TMP_336

Name: TMP_336 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
[i]Type for TMP_337

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_153(uint256) -> incident_3.payoutNumerator
[i] REF_153 cleared
clearing ir...?
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
[i] incident cleared
clearing ir...?
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
[i] REF_153 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _payoutNumerator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_4, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 4
Globalname: incident, contract_name: PoolTemplate
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: incident_4, name: incident

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_153(uint256) -> incident_3.payoutNumerator
OUT KEY: applyCover_incident_payoutNumerator
OUT KEY: applyCover_incident_payoutNumerator
FTT: None
No field found
[i]Type for REF_153

Name: REF_153 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_153 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
[i]Type for REF_153

Name: REF_153 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_153 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutNumerator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_154(uint256) -> incident_4.payoutDenominator
[i] REF_154 cleared
clearing ir...?
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
[i] incident cleared
clearing ir...?
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
[i] REF_154 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _payoutDenominator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_5, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 5
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
End popogation
Ssa_name: incident_5, name: incident

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
REF_154(uint256) -> incident_4.payoutDenominator
OUT KEY: applyCover_incident_payoutDenominator
OUT KEY: applyCover_incident_payoutDenominator
FTT: None
No field found
[i]Type for REF_154

Name: REF_154 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_154 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
[i]Type for REF_154

Name: REF_154 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_154 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutDenominator Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_155(uint256) -> incident_5.incidentTimestamp
[i] REF_155 cleared
clearing ir...?
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
[i] incident cleared
clearing ir...?
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
[i] REF_155 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _incidentTimestamp Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_6, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 6
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
End popogation
Ssa_name: incident_6, name: incident

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
REF_155(uint256) -> incident_5.incidentTimestamp
OUT KEY: applyCover_incident_incidentTimestamp
OUT KEY: applyCover_incident_incidentTimestamp
FTT: None
No field found
[i]Type for REF_155

Name: REF_155 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_155 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
[i]Type for REF_155

Name: REF_155 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_155 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: incidentTimestamp Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_156(bytes32) -> incident_6.merkleRoot
[i] REF_156 cleared
clearing ir...?
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
[i] incident cleared
clearing ir...?
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
[i] REF_156 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _merkleRoot Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_7, name: incident

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 7
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
End popogation
Ssa_name: incident_7, name: incident

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
REF_156(bytes32) -> incident_6.merkleRoot
OUT KEY: applyCover_incident_merkleRoot
OUT KEY: applyCover_incident_merkleRoot
FTT: None
No field found
[i]Type for REF_156

Name: REF_156 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_156 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
[i]Type for REF_156

Name: REF_156 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_156 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: merkleRoot Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_157 cleared
clearing ir...?
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_15, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 15
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_157

Name: REF_157 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_157 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
TMP_338(uint256) = block.timestamp (c)+ _pending_1
[i] TMP_338 cleared
clearing ir...?
pendingEnd_1(uint256) := TMP_338(uint256)
[i] pendingEnd cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _pending Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pendingEnd_1, name: pendingEnd

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pendingEnd, Num: 1
Globalname: pendingEnd, contract_name: PoolTemplate
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_338(uint256) = block.timestamp (c)+ _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_338

Name: TMP_338 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pendingEnd_1(uint256) := TMP_338(uint256)
[i]Type for pendingEnd

Name: pendingEnd Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied pendingEnd
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i] i cleared
clearing ir...?
REF_158 -> LENGTH indexList_6
clearing ir...?
TMP_339(bool) = i_2 < REF_158
[i] TMP_339 cleared
clearing ir...?
CONDITION TMP_339
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 6
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158 -> LENGTH indexList_6
[i]Type for REF_158

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(bool) = i_2 < REF_158
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_339

Name: TMP_339 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_159(address) -> indexList_6[i_2]
[i] REF_159 cleared
clearing ir...?
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
[i] REF_160 cleared
clearing ir...?
REF_161(uint256) -> REF_160.credit
[i] REF_161 cleared
clearing ir...?
TMP_340(bool) = REF_161 > 0
[i] TMP_340 cleared
clearing ir...?
CONDITION TMP_340
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_10, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 10
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_10, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_159(address) -> indexList_6[i_2]
[i]Type for REF_159

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_160

Name: None Function: None
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(uint256) -> REF_160.credit
OUT KEY: applyCover_REF_160_credit
OUT KEY: applyCover_REF_credit
FTT: None
No field found
[i]Type for REF_161

Name: REF_161 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_161 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_340(bool) = REF_161 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_340

Name: TMP_340 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_162(address) -> indexList_6[i_2]
[i] REF_162 cleared
clearing ir...?
TMP_341 = CONVERT REF_162 to IIndexTemplate
[i] TMP_341 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
clearing ir...?
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
[i] indexList cleared
clearing ir...?
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: indicies_11, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 11
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_7, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 7
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_16, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 16
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(address) -> indexList_6[i_2]
[i]Type for REF_162

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341 = CONVERT REF_162 to IIndexTemplate

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
IndexTemplate
[i]Type for TMP_341

Name: TMP_341 Function: applyCover
Num: 
Den: 
Address: 2
Norm: u
LF: IndexTemplate
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
High Call: lock
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
[i]Type for indexList

Name: indexList Function: applyCover
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
Emit CoverApplied(_pending_1,_payoutNumerator_1,_payoutDenominator_1,_incidentTimestamp_1,_merkleRoot_1,_rawdata_1,_memo_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _memo_1, name: _memo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _memo Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _memo_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rawdata_1, name: _rawdata

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _rawdata Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _rawdata_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _memo_1, name: _memo

Name: _memo_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rawdata_1, name: _rawdata

Name: _rawdata_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
Emit MarketStatusChanged(marketStatus_15)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_15, name: marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_15, name: marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
TMP_343(uint256) := i_2(uint256)
[i] TMP_343 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_343(uint256) := i_2(uint256)
[i]Type for TMP_343

Name: TMP_343 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef


paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
MODIFIER_CALL, PoolTemplate.onlyOwner()()
TMP_336(bool) = paused_9 == False
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
REF_153(uint256) -> incident_3.payoutNumerator
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
REF_154(uint256) -> incident_4.payoutDenominator
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
REF_155(uint256) -> incident_5.incidentTimestamp
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
REF_156(bytes32) -> incident_6.merkleRoot
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
TMP_338(uint256) = block.timestamp (c)+ _pending_1
pendingEnd_1(uint256) := TMP_338(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_1', 'i_3'])
REF_158 -> LENGTH indexList_6
TMP_339(bool) = i_2 < REF_158
CONDITION TMP_339
REF_159(address) -> indexList_6[i_2]
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
REF_161(uint256) -> REF_160.credit
TMP_340(bool) = REF_161 > 0
CONDITION TMP_340
REF_162(address) -> indexList_6[i_2]
TMP_341 = CONVERT REF_162 to IIndexTemplate
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
Emit CoverApplied(_pending_1,_payoutNumerator_1,_payoutDenominator_1,_incidentTimestamp_1,_merkleRoot_1,_rawdata_1,_memo_1)
Emit MarketStatusChanged(marketStatus_15)
TMP_343(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _pending Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _payoutNumerator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _payoutDenominator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _incidentTimestamp Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _merkleRoot Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _rawdata Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _memo Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
clearing ir...?
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i] incident cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_8, name: paused

Name: paused Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 8
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_9, name: indicies

Name: indicies Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 9
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_5, name: indexList

Name: indexList Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 5
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_2, name: incident

Name: incident Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: incident, Num: 2
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
paused_8(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_9(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_5(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: applyCover
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_2(PoolTemplate.Incident) := ϕ(['incident_0', 'incident_1', 'incident_7'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
clearing ir...?
MODIFIER_CALL, PoolTemplate.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PoolTemplate.onlyOwner()()
New param cache []
Old param cache: []
clearing ir...?
TMP_336(bool) = paused_9 == False
[i] TMP_336 cleared
clearing ir...?
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
Propogating parameters and globals to SSA variables...
Ssa_name: paused_9, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_9, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_336(bool) = paused_9 == False
[i]Type for TMP_336

Name: TMP_336 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(None) = SOLIDITY_CALL require(bool,string)(TMP_336,ERROR: UNABLE_TO_APPLY)
[i]Type for TMP_337

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_153(uint256) -> incident_3.payoutNumerator
[i] REF_153 cleared
clearing ir...?
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
[i] incident cleared
clearing ir...?
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
[i] REF_153 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_4, name: incident

Name: incident Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator
Finance Type: undef
Name: incident, Num: 4
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
End popogation
Ssa_name: incident_4, name: incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_153(uint256) -> incident_3.payoutNumerator
OUT KEY: applyCover_incident_payoutNumerator
OUT KEY: applyCover_incident_payoutNumerator
FTT: None
No field found
[i]Type for REF_153

Name: REF_153 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_153 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutNumerator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_4(PoolTemplate.Incident) := ϕ(['incident_3'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_153 (->incident_4) := _payoutNumerator_1(uint256)
[i]Type for REF_153

Name: REF_153 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutNumerator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_153 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutNumerator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_154(uint256) -> incident_4.payoutDenominator
[i] REF_154 cleared
clearing ir...?
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
[i] incident cleared
clearing ir...?
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
[i] REF_154 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_5, name: incident

Name: incident Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator
Finance Type: undef
Name: incident, Num: 5
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
End popogation
Ssa_name: incident_5, name: incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_154(uint256) -> incident_4.payoutDenominator
OUT KEY: applyCover_incident_payoutDenominator
OUT KEY: applyCover_incident_payoutDenominator
FTT: None
No field found
[i]Type for REF_154

Name: REF_154 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_154 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutDenominator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_5(PoolTemplate.Incident) := ϕ(['incident_4'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_154 (->incident_5) := _payoutDenominator_1(uint256)
[i]Type for REF_154

Name: REF_154 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: payoutDenominator Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_154 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: payoutDenominator Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_155(uint256) -> incident_5.incidentTimestamp
[i] REF_155 cleared
clearing ir...?
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
[i] incident cleared
clearing ir...?
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
[i] REF_155 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_6, name: incident

Name: incident Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp
Finance Type: undef
Name: incident, Num: 6
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
End popogation
Ssa_name: incident_6, name: incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_155(uint256) -> incident_5.incidentTimestamp
OUT KEY: applyCover_incident_incidentTimestamp
OUT KEY: applyCover_incident_incidentTimestamp
FTT: None
No field found
[i]Type for REF_155

Name: REF_155 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_155 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: incidentTimestamp Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_6(PoolTemplate.Incident) := ϕ(['incident_5'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_155 (->incident_6) := _incidentTimestamp_1(uint256)
[i]Type for REF_155

Name: REF_155 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: incidentTimestamp Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_155 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: incidentTimestamp Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_156(bytes32) -> incident_6.merkleRoot
[i] REF_156 cleared
clearing ir...?
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
[i] incident cleared
clearing ir...?
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
[i] REF_156 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: incident_7, name: incident

Name: incident Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Name: incident, Num: 7
Globalname: incident, contract_name: PoolTemplate
global...

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
End popogation
Ssa_name: incident_7, name: incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_156(bytes32) -> incident_6.merkleRoot
OUT KEY: applyCover_incident_merkleRoot
OUT KEY: applyCover_incident_merkleRoot
FTT: None
No field found
[i]Type for REF_156

Name: REF_156 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_156 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: merkleRoot Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
incident_7(PoolTemplate.Incident) := ϕ(['incident_6'])
[i]Type for incident

Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
REF_156 (->incident_7) := _merkleRoot_1(bytes32)
[i]Type for REF_156

Name: REF_156 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: incident Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: payoutNumerator, payoutDenominator, incidentTimestamp, merkleRoot
Finance Type: undef
Fieldf: 
Name: merkleRoot Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_156 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: merkleRoot Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied incident
clearing ir...?
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_157 cleared
clearing ir...?
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_15, name: marketStatus

Name: marketStatus Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 15
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_157(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_157

Name: REF_157 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_157 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_15(PoolTemplate.MarketStatus) := REF_157(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
TMP_338(uint256) = block.timestamp (c)+ _pending_1
[i] TMP_338 cleared
clearing ir...?
pendingEnd_1(uint256) := TMP_338(uint256)
[i] pendingEnd cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pendingEnd_1, name: pendingEnd

Name: pendingEnd Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pendingEnd, Num: 1
Globalname: pendingEnd, contract_name: PoolTemplate
global...

Name: pendingEnd Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_338(uint256) = block.timestamp (c)+ _pending_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_338

Name: TMP_338 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pendingEnd_1(uint256) := TMP_338(uint256)
[i]Type for pendingEnd

Name: pendingEnd Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied pendingEnd
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i] i cleared
clearing ir...?
REF_158 -> LENGTH indexList_6
clearing ir...?
TMP_339(bool) = i_2 < REF_158
[i] TMP_339 cleared
clearing ir...?
CONDITION TMP_339
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_1', 'i_3'])
[i]Type for i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158 -> LENGTH indexList_6
[i]Type for REF_158

Name: REF_158 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(bool) = i_2 < REF_158
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_339

Name: TMP_339 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_159(address) -> indexList_6[i_2]
[i] REF_159 cleared
clearing ir...?
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
[i] REF_160 cleared
clearing ir...?
REF_161(uint256) -> REF_160.credit
[i] REF_161 cleared
clearing ir...?
TMP_340(bool) = REF_161 > 0
[i] TMP_340 cleared
clearing ir...?
CONDITION TMP_340
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_10, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_10, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
End popogation
REF_159(address) -> indexList_6[i_2]
[i]Type for REF_159

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_160(PoolTemplate.IndexInfo) -> indicies_10[REF_159]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_160

Name: None Function: None
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(uint256) -> REF_160.credit
OUT KEY: applyCover_REF_160_credit
OUT KEY: applyCover_REF_credit
FTT: None
No field found
[i]Type for REF_161

Name: REF_161 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_161 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = REF_161 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_340

Name: TMP_340 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_162(address) -> indexList_6[i_2]
[i] REF_162 cleared
clearing ir...?
TMP_341 = CONVERT REF_162 to IIndexTemplate
[i] TMP_341 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
clearing ir...?
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
[i] indexList cleared
clearing ir...?
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_6, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: indicies_11, name: indicies

Name: indicies Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 11
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_7, name: indexList

Name: indexList Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 7
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_16, name: marketStatus

Name: marketStatus Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 16
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_162(address) -> indexList_6[i_2]
[i]Type for REF_162

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341 = CONVERT REF_162 to IIndexTemplate

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
IndexTemplate
[i]Type for TMP_341

Name: TMP_341 Function: applyCover
Num: 
Den: 
Address: 2
Norm: u
LF: IndexTemplate
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_341(IIndexTemplate), function:lock, arguments:[]  
High Call: lock
indicies_11(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_7(address[]) := ϕ(['indexList_2', 'indexList_4', 'indexList_6', 'indexList_10'])
[i]Type for indexList

Name: indexList Function: applyCover
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_16(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
Emit CoverApplied(_pending_1,_payoutNumerator_1,_payoutDenominator_1,_incidentTimestamp_1,_merkleRoot_1,_rawdata_1,_memo_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _memo_1, name: _memo

Name: _memo_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rawdata_1, name: _rawdata

Name: _rawdata_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _merkleRoot_1, name: _merkleRoot

Name: _merkleRoot_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pending_1, name: _pending

Name: _pending_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _memo_1, name: _memo

Name: _memo_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _incidentTimestamp_1, name: _incidentTimestamp

Name: _incidentTimestamp_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _rawdata_1, name: _rawdata

Name: _rawdata_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutNumerator_1, name: _payoutNumerator

Name: _payoutNumerator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _payoutDenominator_1, name: _payoutDenominator

Name: _payoutDenominator_1 Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
Emit MarketStatusChanged(marketStatus_15)
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_15, name: marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_15, name: marketStatus

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
clearing ir...?
TMP_343(uint256) := i_2(uint256)
[i] TMP_343 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: i Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_343(uint256) := i_2(uint256)
[i]Type for TMP_343

Name: TMP_343 Function: applyCover
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



resume
Function name: resume
New param cache []
FIND RETURN
ENTRY_POINT
resume()


vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_347(bool) = marketStatus_17 == REF_164
TMP_348(bool) = pendingEnd_2 < block.timestamp
TMP_349(bool) = TMP_347 && TMP_348
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
TMP_351 = CONVERT this to address
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_debt_1(uint256) := TMP_352(uint256)
_totalCredit_1(uint256) := totalCredit_18(uint256)
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_356(uint256) = TMP_354 (c)/ TMP_355
_deductionFromIndex_1(uint256) := TMP_356(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
REF_166 -> LENGTH indexList_10
TMP_357(bool) = i_2 < REF_166
CONDITION TMP_357
REF_167(address) -> indexList_10[i_2]
_index_1(address) := REF_167(address)
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
REF_169(uint256) -> REF_168.credit
_credit_1(uint256) := REF_169(uint256)
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
TMP_366(uint256) = _debt_1 (c)- TMP_365
_deductionFromPool_1(uint256) := TMP_366(uint256)
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
_shortage_1(uint256) := TMP_368(uint256)
TMP_358(bool) = _credit_1 > 0
CONDITION TMP_358
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
_shareOfIndex_1(uint256) := TMP_360(uint256)
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
_redeemAmount_1(uint256) := TMP_361(uint256)
TMP_369(bool) = _deductionFromPool_1 > 0
CONDITION TMP_369
TMP_370 = CONVERT this to address
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
TMP_364(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
TMP_362 = CONVERT _index_1 to IIndexTemplate
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
Emit MarketStatusChanged(REF_174)


clearing ir...?
vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
[i] pendingEnd cleared
clearing ir...?
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_36, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 36
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_17, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 17
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: pendingEnd_2, name: pendingEnd

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pendingEnd, Num: 2
Globalname: pendingEnd, contract_name: PoolTemplate
global...

Name: pendingEnd Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_12, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 12
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_8, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 8
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 17
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_18, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 18
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
[i]Type for pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_164 cleared
clearing ir...?
TMP_347(bool) = marketStatus_17 == REF_164
[i] TMP_347 cleared
clearing ir...?
TMP_348(bool) = pendingEnd_2 < block.timestamp
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = TMP_347 && TMP_348
[i] TMP_349 cleared
clearing ir...?
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
Propogating parameters and globals to SSA variables...
Ssa_name: pendingEnd_2, name: pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pendingEnd_2, name: pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_164

Name: REF_164 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_164 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_347(bool) = marketStatus_17 == REF_164
[i]Type for TMP_347

Name: TMP_347 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_348(bool) = pendingEnd_2 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_348

Name: TMP_348 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_349(bool) = TMP_347 && TMP_348
[i]Type for TMP_349

Name: TMP_349 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
[i]Type for TMP_350

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_351 = CONVERT this to address
[i] TMP_351 cleared
clearing ir...?
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
[i] TMP_352 cleared
clearing ir...?
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_debt_1(uint256) := TMP_352(uint256)
[i] _debt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vault_36, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_36, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _debt, Num: 1
Globalname: _debt, contract_name: PoolTemplate
End popogation
Ssa_name: vault_37, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 37
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_18, name: totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 18
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_13, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 13
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_9, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 9
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 19
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_351 = CONVERT this to address
[i]Type for TMP_351

Name: TMP_351 Function: resume
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
High Call: debts
Running querryfc
Found: None
Written func info: IVault, debts
[i]Type for TMP_352

Name: TMP_352 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_debt_1(uint256) := TMP_352(uint256)
[i]Type for _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
clearing ir...?
_totalCredit_1(uint256) := totalCredit_18(uint256)
[i] _totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_18, name: totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_18, name: totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalCredit, Num: 1
Globalname: _totalCredit, contract_name: PoolTemplate
End popogation
_totalCredit_1(uint256) := totalCredit_18(uint256)
[i]Type for _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
[i] TMP_353 cleared
clearing ir...?
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
[i] TMP_354 cleared
clearing ir...?
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_355 cleared
clearing ir...?
TMP_356(uint256) = TMP_354 (c)/ TMP_355
[i] TMP_356 cleared
clearing ir...?
_deductionFromIndex_1(uint256) := TMP_356(uint256)
[i] _deductionFromIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _deductionFromIndex, Num: 1
Globalname: _deductionFromIndex, contract_name: PoolTemplate
End popogation
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
Mul...

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_353

Name: TMP_353 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
Mul...

Name: TMP_353 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: 36 B: u
lnorm: 36 rnorm: u
[i]Type for TMP_354

Name: TMP_354 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_355

Name: TMP_355 Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_356(uint256) = TMP_354 (c)/ TMP_355
A: 36 B: 18
lnorm: 36 rnorm: 18
A: 36 B: 18
lnorm: 36 rnorm: 18
[i]Type for TMP_356

Name: TMP_356 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_deductionFromIndex_1(uint256) := TMP_356(uint256)
[i]Type for _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i] i cleared
clearing ir...?
REF_166 -> LENGTH indexList_10
clearing ir...?
TMP_357(bool) = i_2 < REF_166
[i] TMP_357 cleared
clearing ir...?
CONDITION TMP_357
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 10
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_166 -> LENGTH indexList_10
[i]Type for REF_166

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_357(bool) = i_2 < REF_166
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_357

Name: TMP_357 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_167(address) -> indexList_10[i_2]
[i] REF_167 cleared
clearing ir...?
_index_1(address) := REF_167(address)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _index_1, name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 1
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_167(address) -> indexList_10[i_2]
[i]Type for REF_167

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1(address) := REF_167(address)
[i]Type for _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
[i] REF_168 cleared
clearing ir...?
REF_169(uint256) -> REF_168.credit
[i] REF_169 cleared
clearing ir...?
_credit_1(uint256) := REF_169(uint256)
[i] _credit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_14, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 14
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_14, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_168

Name: None Function: None
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> REF_168.credit
OUT KEY: resume_REF_168_credit
OUT KEY: resume_REF_credit
FTT: None
No field found
[i]Type for REF_169

Name: REF_169 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_169 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_credit_1(uint256) := REF_169(uint256)
[i]Type for _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
[i] TMP_365 cleared
clearing ir...?
TMP_366(uint256) = _debt_1 (c)- TMP_365
[i] TMP_366 cleared
clearing ir...?
_deductionFromPool_1(uint256) := TMP_366(uint256)
[i] _deductionFromPool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 20
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _deductionFromPool, Num: 1
Globalname: _deductionFromPool, contract_name: PoolTemplate
End popogation
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_365

Name: TMP_365 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_366(uint256) = _debt_1 (c)- TMP_365
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_366

Name: TMP_366 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_deductionFromPool_1(uint256) := TMP_366(uint256)
[i]Type for _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
[i] TMP_367 cleared
clearing ir...?
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
[i] TMP_368 cleared
clearing ir...?
_shortage_1(uint256) := TMP_368(uint256)
[i] _shortage cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shortage_1, name: _shortage

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _shortage, Num: 1
Globalname: _shortage, contract_name: PoolTemplate
End popogation
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_367

Name: TMP_367 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_368

Name: TMP_368 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_shortage_1(uint256) := TMP_368(uint256)
[i]Type for _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_358(bool) = _credit_1 > 0
[i] TMP_358 cleared
clearing ir...?
CONDITION TMP_358
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_358(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_358

Name: TMP_358 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
[i] TMP_359 cleared
clearing ir...?
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
[i] TMP_360 cleared
clearing ir...?
_shareOfIndex_1(uint256) := TMP_360(uint256)
[i] _shareOfIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _shareOfIndex, Num: 1
Globalname: _shareOfIndex, contract_name: PoolTemplate
End popogation
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
Mul...

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_359

Name: TMP_359 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_360

Name: TMP_360 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_shareOfIndex_1(uint256) := TMP_360(uint256)
[i]Type for _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
[i] _actualDeduction cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _actualDeduction_2, name: _actualDeduction

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 2
Globalname: _actualDeduction, contract_name: PoolTemplate
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
[i]Type for _actualDeduction

Name: _actualDeduction Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
[i] TMP_361 cleared
clearing ir...?
_redeemAmount_1(uint256) := TMP_361(uint256)
[i] _redeemAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _redeemAmount, Num: 1
Globalname: _redeemAmount, contract_name: PoolTemplate
End popogation
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
New param cache [[[1], [-1], 18, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Param: a
[[1], [-1], 18, None, [], 0, 'u', 'u']

Name: a Function: None
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Param: b
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_divCeil(uint256,uint256)
ENTRY_POINT
Propogating All
EXPRESSION require(bool)(b > 0)
Propogating All
b_1
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
NEW VARIABLE c = a / b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
IF a % b != 0
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: a Function: None
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
EXPRESSION c = c + 1
Propogating All
c_1
Ssa_name: c_1, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
END_IF
Propogating All
RETURN c
Propogating All
c_3
Ssa_name: c_3, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
a_1(uint256) := ϕ(['_deductionFromIndex_1'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['_shareOfIndex_1'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['_deductionFromIndex_1'])
[i]Type for a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['_shareOfIndex_1'])
[i]Type for b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_426(bool) = b_1 > 0
[i] TMP_426 cleared
clearing ir...?
TMP_427(None) = SOLIDITY_CALL require(bool)(TMP_426)
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_426(bool) = b_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_426

Name: TMP_426 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool)(TMP_426)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_428(uint256) = a_1 (c)/ b_1
[i] TMP_428 cleared
clearing ir...?
c_1(uint256) := TMP_428(uint256)
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_1, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: PoolTemplate
End popogation
TMP_428(uint256) = a_1 (c)/ b_1
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_428

Name: TMP_428 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
c_1(uint256) := TMP_428(uint256)
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_429(uint256) = a_1 (c)% b_1
[i] TMP_429 cleared
clearing ir...?
TMP_430(bool) = TMP_429 != 0
[i] TMP_430 cleared
clearing ir...?
CONDITION TMP_430
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_429(uint256) = a_1 (c)% b_1
[i]Type for TMP_429

Name: TMP_429 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_430(bool) = TMP_429 != 0
[i]Type for TMP_430

Name: TMP_430 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_431(uint256) = c_1 (c)+ 1
[i] TMP_431 cleared
clearing ir...?
c_2(uint256) := TMP_431(uint256)
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_1, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_1, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: PoolTemplate
End popogation
TMP_431(uint256) = c_1 (c)+ 1
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_431

Name: TMP_431 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: raw balance
c_2(uint256) := TMP_431(uint256)
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: raw balance
clearing ir...?
c_3(uint256) := ϕ(['c_1', 'c_2'])
[i] c cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: c_3, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: PoolTemplate
c_3(uint256) := ϕ(['c_1', 'c_2'])
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
RETURN c_3
Propogating parameters and globals to SSA variables...
Ssa_name: c_3, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_3, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN c_3
clearing ir...?
a_1(uint256) := ϕ(['_deductionFromIndex_1'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['_shareOfIndex_1'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: b_1 Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
a_1(uint256) := ϕ(['_deductionFromIndex_1'])
[i]Type for a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['_shareOfIndex_1'])
[i]Type for b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_426(bool) = b_1 > 0
[i] TMP_426 cleared
clearing ir...?
TMP_427(None) = SOLIDITY_CALL require(bool)(TMP_426)
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_426(bool) = b_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_426

Name: TMP_426 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_427(None) = SOLIDITY_CALL require(bool)(TMP_426)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_428(uint256) = a_1 (c)/ b_1
[i] TMP_428 cleared
clearing ir...?
c_1(uint256) := TMP_428(uint256)
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_1, name: c

Name: c Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: PoolTemplate
End popogation
TMP_428(uint256) = a_1 (c)/ b_1
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_428

Name: TMP_428 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
c_1(uint256) := TMP_428(uint256)
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_429(uint256) = a_1 (c)% b_1
[i] TMP_429 cleared
clearing ir...?
TMP_430(bool) = TMP_429 != 0
[i] TMP_430 cleared
clearing ir...?
CONDITION TMP_430
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _divCeil
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_429(uint256) = a_1 (c)% b_1
[i]Type for TMP_429

Name: TMP_429 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_430(bool) = TMP_429 != 0
[i]Type for TMP_430

Name: TMP_430 Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_431(uint256) = c_1 (c)+ 1
[i] TMP_431 cleared
clearing ir...?
c_2(uint256) := TMP_431(uint256)
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: c_1, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_1, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_2, name: c

Name: c Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: PoolTemplate
End popogation
TMP_431(uint256) = c_1 (c)+ 1
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_431

Name: TMP_431 Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: raw balance
c_2(uint256) := TMP_431(uint256)
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: raw balance
clearing ir...?
c_3(uint256) := ϕ(['c_1', 'c_2'])
[i] c cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: c_3, name: c

Name: c Function: _divCeil
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 3
Globalname: c, contract_name: PoolTemplate
c_3(uint256) := ϕ(['c_1', 'c_2'])
[i]Type for c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
RETURN c_3
Propogating parameters and globals to SSA variables...
Ssa_name: c_3, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: c_3, name: c

Name: c Function: _divCeil
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN c_3
[i]Type for TMP_361

Name: TMP_361 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_redeemAmount_1(uint256) := TMP_361(uint256)
[i]Type for _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_369(bool) = _deductionFromPool_1 > 0
[i] TMP_369 cleared
clearing ir...?
CONDITION TMP_369
Propogating parameters and globals to SSA variables...
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_369(bool) = _deductionFromPool_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_369

Name: TMP_369 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_370 = CONVERT this to address
[i] TMP_370 cleared
clearing ir...?
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
[i] TMP_371 cleared
clearing ir...?
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_38, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 38
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_38, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_41, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 41
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT this to address
[i]Type for TMP_370

Name: TMP_370 Function: resume
Num: -1
Den: -1
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
High Call: offsetDebt
Running querryfc
Found: None
Written func info: IVault, offsetDebt
[i]Type for TMP_371

Name: TMP_371 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_364(uint256) := i_2(uint256)
[i] TMP_364 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_364(uint256) := i_2(uint256)
[i]Type for TMP_364

Name: TMP_364 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
clearing ir...?
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _shortage_1, name: _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_41, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _shortage_1, name: _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_41, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_42, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 42
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
High Call: transferDebt
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_362 = CONVERT _index_1 to IIndexTemplate
[i] TMP_362 cleared
clearing ir...?
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
[i] TMP_363 cleared
clearing ir...?
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
[i] _actualDeduction cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_1, name: _actualDeduction

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 1
Globalname: _actualDeduction, contract_name: PoolTemplate
End popogation
Ssa_name: vault_40, name: vault

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 40
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_16, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 16
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_12, name: indexList

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 12
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_22, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 22
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362 = CONVERT _index_1 to IIndexTemplate

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
IndexTemplate
[i]Type for TMP_362

Name: TMP_362 Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: IndexTemplate
Value: u
Fields: 
Finance Type: undef
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
High Call: compensate
Running querryfc
Found: None
Written func info: IIndexTemplate, compensate
[i]Type for TMP_363

Name: TMP_363 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
A: u B: 18
lnorm: u rnorm: 18
[i]Type for _actualDeduction

Name: _actualDeduction Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_173 cleared
clearing ir...?
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_18, name: marketStatus

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 18
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_173

Name: REF_173 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_173 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_174 cleared
clearing ir...?
Emit MarketStatusChanged(REF_174)
Propogating parameters and globals to SSA variables...
End popogation
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_174

Name: REF_174 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_174 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
TMP_347(bool) = marketStatus_17 == REF_164
TMP_348(bool) = pendingEnd_2 < block.timestamp
TMP_349(bool) = TMP_347 && TMP_348
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
TMP_351 = CONVERT this to address
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_debt_1(uint256) := TMP_352(uint256)
_totalCredit_1(uint256) := totalCredit_18(uint256)
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_356(uint256) = TMP_354 (c)/ TMP_355
_deductionFromIndex_1(uint256) := TMP_356(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
REF_166 -> LENGTH indexList_10
TMP_357(bool) = i_2 < REF_166
CONDITION TMP_357
REF_167(address) -> indexList_10[i_2]
_index_1(address) := REF_167(address)
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
REF_169(uint256) -> REF_168.credit
_credit_1(uint256) := REF_169(uint256)
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
TMP_366(uint256) = _debt_1 (c)- TMP_365
_deductionFromPool_1(uint256) := TMP_366(uint256)
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
_shortage_1(uint256) := TMP_368(uint256)
TMP_358(bool) = _credit_1 > 0
CONDITION TMP_358
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
_shareOfIndex_1(uint256) := TMP_360(uint256)
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
_redeemAmount_1(uint256) := TMP_361(uint256)
TMP_369(bool) = _deductionFromPool_1 > 0
CONDITION TMP_369
TMP_370 = CONVERT this to address
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
TMP_364(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
TMP_362 = CONVERT _index_1 to IIndexTemplate
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
Emit MarketStatusChanged(REF_174)


clearing ir...?
vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
[i] pendingEnd cleared
clearing ir...?
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i] indexList cleared
clearing ir...?
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i] marketStatus cleared
clearing ir...?
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_36, name: vault

Name: vault Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 36
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_17, name: totalCredit

Name: totalCredit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 17
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: pendingEnd_2, name: pendingEnd

Name: pendingEnd Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pendingEnd, Num: 2
Globalname: pendingEnd, contract_name: PoolTemplate
global...

Name: pendingEnd Function: applyCover
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_12, name: indicies

Name: indicies Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 12
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_8, name: indexList

Name: indexList Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 8
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: marketStatus Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 17
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_18, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 18
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_36(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
totalCredit_17(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
pendingEnd_2(uint256) := ϕ(['pendingEnd_1', 'pendingEnd_0'])
[i]Type for pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indicies_12(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_8(address[]) := ϕ(['indexList_4', 'indexList_0', 'indexList_10', 'indexList_2', 'indexList_6'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_17(PoolTemplate.MarketStatus) := ϕ(['marketStatus_6', 'marketStatus_13', 'marketStatus_16', 'marketStatus_15', 'marketStatus_8', 'marketStatus_0', 'marketStatus_1', 'marketStatus_18'])
[i]Type for marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_18(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
[i] REF_164 cleared
clearing ir...?
TMP_347(bool) = marketStatus_17 == REF_164
[i] TMP_347 cleared
clearing ir...?
TMP_348(bool) = pendingEnd_2 < block.timestamp
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = TMP_347 && TMP_348
[i] TMP_349 cleared
clearing ir...?
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
Propogating parameters and globals to SSA variables...
Ssa_name: pendingEnd_2, name: pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pendingEnd_2, name: pendingEnd

Name: pendingEnd Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: marketStatus_17, name: marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_164(PoolTemplate.MarketStatus) -> MarketStatus.Payingout
OUT KEY: global_MarketStatus_Payingout
OUT KEY: global_MarketStatus_Payingout
FTT: None
No field found
[i]Type for REF_164

Name: REF_164 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Payingout Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_164 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Payingout Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_347(bool) = marketStatus_17 == REF_164
[i]Type for TMP_347

Name: TMP_347 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_348(bool) = pendingEnd_2 < block.timestamp
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_348

Name: TMP_348 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_349(bool) = TMP_347 && TMP_348
[i]Type for TMP_349

Name: TMP_349 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,ERROR: UNABLE_TO_RESUME)
[i]Type for TMP_350

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_351 = CONVERT this to address
[i] TMP_351 cleared
clearing ir...?
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
[i] TMP_352 cleared
clearing ir...?
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
clearing ir...?
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_debt_1(uint256) := TMP_352(uint256)
[i] _debt cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vault_36, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_36, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _debt, Num: 1
Globalname: _debt, contract_name: PoolTemplate
End popogation
Ssa_name: vault_37, name: vault

Name: vault Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 37
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalCredit_18, name: totalCredit

Name: totalCredit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 18
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_13, name: indicies

Name: indicies Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 13
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_9, name: indexList

Name: indexList Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 9
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 19
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_351 = CONVERT this to address
[i]Type for TMP_351

Name: TMP_351 Function: resume
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_352(uint256) = HIGH_LEVEL_CALL, dest:vault_36(IVault), function:debts, arguments:['TMP_351']  
High Call: debts
Running querryfc
Found: None
Written func info: IVault, debts
[i]Type for TMP_352

Name: TMP_352 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_37(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_36', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
totalCredit_18(uint256) := ϕ(['totalCredit_17', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_13(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_12', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_9(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_8'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_19(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_18', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_debt_1(uint256) := TMP_352(uint256)
[i]Type for _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
clearing ir...?
_totalCredit_1(uint256) := totalCredit_18(uint256)
[i] _totalCredit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_18, name: totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_18, name: totalCredit

Name: totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalCredit, Num: 1
Globalname: _totalCredit, contract_name: PoolTemplate
End popogation
_totalCredit_1(uint256) := totalCredit_18(uint256)
[i]Type for _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
[i] TMP_353 cleared
clearing ir...?
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
[i] TMP_354 cleared
clearing ir...?
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_355 cleared
clearing ir...?
TMP_356(uint256) = TMP_354 (c)/ TMP_355
[i] TMP_356 cleared
clearing ir...?
_deductionFromIndex_1(uint256) := TMP_356(uint256)
[i] _deductionFromIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_19, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _deductionFromIndex, Num: 1
Globalname: _deductionFromIndex, contract_name: PoolTemplate
End popogation
TMP_353(uint256) = _debt_1 (c)* _totalCredit_1
Mul...

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_353

Name: TMP_353 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_354(uint256) = TMP_353 (c)* MAGIC_SCALE_1E6_19
Mul...

Name: TMP_353 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: 36 B: u
lnorm: 36 rnorm: u
[i]Type for TMP_354

Name: TMP_354 Function: resume
Num: 1
Den: -1
Address: u
Norm: 36
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_355(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_355

Name: TMP_355 Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_356(uint256) = TMP_354 (c)/ TMP_355
A: 36 B: 18
lnorm: 36 rnorm: 18
A: 36 B: 18
lnorm: 36 rnorm: 18
[i]Type for TMP_356

Name: TMP_356 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_deductionFromIndex_1(uint256) := TMP_356(uint256)
[i]Type for _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_1(uint256) := 0(uint256)
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: PoolTemplate
End popogation
i_1(uint256) := 0(uint256)
[i]Type for i

Name: i Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i] i cleared
clearing ir...?
REF_166 -> LENGTH indexList_10
clearing ir...?
TMP_357(bool) = i_2 < REF_166
[i] TMP_357 cleared
clearing ir...?
CONDITION TMP_357
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
End popogation
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
i_2(uint256) := ϕ(['i_3', 'i_1'])
[i]Type for i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_166 -> LENGTH indexList_10
[i]Type for REF_166

Name: REF_166 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_357(bool) = i_2 < REF_166
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_357

Name: TMP_357 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_167(address) -> indexList_10[i_2]
[i] REF_167 cleared
clearing ir...?
_index_1(address) := REF_167(address)
[i] _index cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_10, name: indexList

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _index, Num: 1
Globalname: _index, contract_name: PoolTemplate
End popogation
REF_167(address) -> indexList_10[i_2]
[i]Type for REF_167

Name: None Function: None
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_1(address) := REF_167(address)
[i]Type for _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
[i] REF_168 cleared
clearing ir...?
REF_169(uint256) -> REF_168.credit
[i] REF_169 cleared
clearing ir...?
_credit_1(uint256) := REF_169(uint256)
[i] _credit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_14, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: indicies_14, name: indicies

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
REF_168(PoolTemplate.IndexInfo) -> indicies_14[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_168

Name: None Function: None
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(uint256) -> REF_168.credit
OUT KEY: resume_REF_168_credit
OUT KEY: resume_REF_credit
FTT: None
No field found
[i]Type for REF_169

Name: REF_169 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_169 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_credit_1(uint256) := REF_169(uint256)
[i]Type for _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
[i] TMP_365 cleared
clearing ir...?
TMP_366(uint256) = _debt_1 (c)- TMP_365
[i] TMP_366 cleared
clearing ir...?
_deductionFromPool_1(uint256) := TMP_366(uint256)
[i] _deductionFromPool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _debt_1, name: _debt

Name: _debt Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _deductionFromPool, Num: 1
Globalname: _deductionFromPool, contract_name: PoolTemplate
End popogation
TMP_365(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_365

Name: TMP_365 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_366(uint256) = _debt_1 (c)- TMP_365
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_366

Name: TMP_366 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_deductionFromPool_1(uint256) := TMP_366(uint256)
[i]Type for _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
[i] TMP_367 cleared
clearing ir...?
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
[i] TMP_368 cleared
clearing ir...?
_shortage_1(uint256) := TMP_368(uint256)
[i] _shortage cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shortage_1, name: _shortage

Name: _shortage Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _shortage, Num: 1
Globalname: _shortage, contract_name: PoolTemplate
End popogation
TMP_367(uint256) = _deductionFromIndex_1 (c)/ MAGIC_SCALE_1E6_20
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_367

Name: TMP_367 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_368(uint256) = TMP_367 (c)- _actualDeduction_0
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_368

Name: TMP_368 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_shortage_1(uint256) := TMP_368(uint256)
[i]Type for _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_358(bool) = _credit_1 > 0
[i] TMP_358 cleared
clearing ir...?
CONDITION TMP_358
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_358(bool) = _credit_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_358

Name: TMP_358 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
[i] TMP_359 cleared
clearing ir...?
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
[i] TMP_360 cleared
clearing ir...?
_shareOfIndex_1(uint256) := TMP_360(uint256)
[i] _shareOfIndex cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_20, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalCredit_1, name: _totalCredit

Name: _totalCredit Function: resume
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: _shareOfIndex Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _shareOfIndex, Num: 1
Globalname: _shareOfIndex, contract_name: PoolTemplate
End popogation
TMP_359(uint256) = _credit_1 (c)* MAGIC_SCALE_1E6_20
Mul...

Name: _credit Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_359

Name: TMP_359 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360(uint256) = TMP_359 (c)/ _totalCredit_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_360

Name: TMP_360 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_shareOfIndex_1(uint256) := TMP_360(uint256)
[i]Type for _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
[i] _actualDeduction cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _actualDeduction_2, name: _actualDeduction

Name: _actualDeduction Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 2
Globalname: _actualDeduction, contract_name: PoolTemplate
_actualDeduction_2(uint256) := ϕ(['_actualDeduction_0', '_actualDeduction_1'])
[i]Type for _actualDeduction

Name: _actualDeduction Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
[i] TMP_361 cleared
clearing ir...?
_redeemAmount_1(uint256) := TMP_361(uint256)
[i] _redeemAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _shareOfIndex_1, name: _shareOfIndex

Name: _shareOfIndex Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromIndex_1, name: _deductionFromIndex

Name: _deductionFromIndex Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: _redeemAmount Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _redeemAmount, Num: 1
Globalname: _redeemAmount, contract_name: PoolTemplate
End popogation
TMP_361(uint256) = INTERNAL_CALL, PoolTemplate._divCeil(uint256,uint256)(_deductionFromIndex_1,_shareOfIndex_1)
New param cache [[[1], [-1], 18, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[1], [-1], 18, None, [], 0, 'u'], [[-1], [-1], 'u', None, [], 0, 'u']]
[i]Type for TMP_361

Name: TMP_361 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_redeemAmount_1(uint256) := TMP_361(uint256)
[i]Type for _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_369(bool) = _deductionFromPool_1 > 0
[i] TMP_369 cleared
clearing ir...?
CONDITION TMP_369
Propogating parameters and globals to SSA variables...
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_369(bool) = _deductionFromPool_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_369

Name: TMP_369 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_370 = CONVERT this to address
[i] TMP_370 cleared
clearing ir...?
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
[i] TMP_371 cleared
clearing ir...?
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_38, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _deductionFromPool_1, name: _deductionFromPool

Name: _deductionFromPool Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_38, name: vault

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_41, name: vault

Name: vault Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 41
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_370 = CONVERT this to address
[i]Type for TMP_370

Name: TMP_370 Function: resume
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_371(uint256) = HIGH_LEVEL_CALL, dest:vault_38(IVault), function:offsetDebt, arguments:['_deductionFromPool_1', 'TMP_370']  
High Call: offsetDebt
Running querryfc
Found: None
Written func info: IVault, offsetDebt
[i]Type for TMP_371

Name: TMP_371 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_41(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_40', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_364(uint256) := i_2(uint256)
[i] TMP_364 cleared
clearing ir...?
i_3(uint256) = i_2 (c)+ 1
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_2, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: PoolTemplate
Ssa_name: i_3, name: i

Name: i Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: PoolTemplate
End popogation
TMP_364(uint256) := i_2(uint256)
[i]Type for TMP_364

Name: TMP_364 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_3(uint256) = i_2 (c)+ 1
A: u B: u
lnorm: u rnorm: 0
[i]Type for i

Name: i Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
clearing ir...?
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _shortage_1, name: _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_41, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: _shortage_1, name: _shortage

Name: _shortage Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_41, name: vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_42, name: vault

Name: vault Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 42
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:vault_41(IVault), function:transferDebt, arguments:['_shortage_1']  
High Call: transferDebt
vault_42(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_41', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_362 = CONVERT _index_1 to IIndexTemplate
[i] TMP_362 cleared
clearing ir...?
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
[i] TMP_363 cleared
clearing ir...?
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
[i] indexList cleared
clearing ir...?
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i] MAGIC_SCALE_1E6 cleared
clearing ir...?
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
[i] _actualDeduction cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_0, name: _actualDeduction

Name: _actualDeduction Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 0
Globalname: _actualDeduction, contract_name: PoolTemplate
Ssa_name: _redeemAmount_1, name: _redeemAmount

Name: _redeemAmount Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _index_1, name: _index

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _actualDeduction_1, name: _actualDeduction

Name: _actualDeduction Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _actualDeduction, Num: 1
Globalname: _actualDeduction, contract_name: PoolTemplate
End popogation
Ssa_name: vault_40, name: vault

Name: vault Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 40
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_16, name: indicies

Name: indicies Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 16
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indexList_12, name: indexList

Name: indexList Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indexList, Num: 12
Globalname: indexList, contract_name: PoolTemplate
global...

Name: indexList Function: allocateCredit
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_22, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 22
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_362 = CONVERT _index_1 to IIndexTemplate

Name: _index Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
IndexTemplate
[i]Type for TMP_362

Name: TMP_362 Function: resume
Num: 
Den: 
Address: 2
Norm: u
LF: IndexTemplate
Value: u
Fields: 
Finance Type: undef
TMP_363(uint256) = HIGH_LEVEL_CALL, dest:TMP_362(IIndexTemplate), function:compensate, arguments:['_redeemAmount_1']  
High Call: compensate
Running querryfc
Found: None
Written func info: IIndexTemplate, compensate
[i]Type for TMP_363

Name: TMP_363 Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_40(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_39', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
indicies_16(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_15', 'indicies_14', 'indicies_19', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
indexList_12(address[]) := ϕ(['indexList_4', 'indexList_10', 'indexList_2', 'indexList_6', 'indexList_11'])
[i]Type for indexList

Name: indexList Function: resume
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_22(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_21', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_actualDeduction_1(uint256) = _actualDeduction_0 (c)+ TMP_363
A: u B: 18
lnorm: u rnorm: 18
[i]Type for _actualDeduction

Name: _actualDeduction Function: resume
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_173 cleared
clearing ir...?
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
[i] marketStatus cleared
Propogating parameters and globals to SSA variables...
Ssa_name: marketStatus_18, name: marketStatus

Name: marketStatus Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marketStatus, Num: 18
Globalname: marketStatus, contract_name: PoolTemplate
global...

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_173(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_173

Name: REF_173 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_173 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marketStatus_18(PoolTemplate.MarketStatus) := REF_173(PoolTemplate.MarketStatus)
[i]Type for marketStatus

Name: marketStatus Function: resume
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied marketStatus
clearing ir...?
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
[i] REF_174 cleared
clearing ir...?
Emit MarketStatusChanged(REF_174)
Propogating parameters and globals to SSA variables...
End popogation
REF_174(PoolTemplate.MarketStatus) -> MarketStatus.Trading
OUT KEY: global_MarketStatus_Trading
OUT KEY: global_MarketStatus_Trading
FTT: None
No field found
[i]Type for REF_174

Name: REF_174 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: MarketStatus Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Trading, Payingout
Finance Type: undef
Fieldf: 
Name: Trading Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_174 Function: resume
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: Trading Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



rate
Function name: rate
New param cache []
FIND RETURN
ENTRY_POINT
rate()


MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_375(bool) = TMP_374 > 0
CONDITION TMP_375
RETURN 0
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_379(uint256) = TMP_377 (c)/ TMP_378
RETURN TMP_379


clearing ir...?
MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAGIC_SCALE_1E6_23, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 23
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_374 cleared
clearing ir...?
TMP_375(bool) = TMP_374 > 0
[i] TMP_375 cleared
clearing ir...?
CONDITION TMP_375
Propogating parameters and globals to SSA variables...
End popogation
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_374

Name: TMP_374 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(bool) = TMP_374 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_375

Name: TMP_375 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_376 cleared
clearing ir...?
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
[i] TMP_377 cleared
clearing ir...?
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_378 cleared
clearing ir...?
TMP_379(uint256) = TMP_377 (c)/ TMP_378
[i] TMP_379 cleared
clearing ir...?
RETURN TMP_379
Propogating parameters and globals to SSA variables...
Ssa_name: MAGIC_SCALE_1E6_25, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 25
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_25, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_376

Name: TMP_376 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
Mul...

Name: TMP_376 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_377

Name: TMP_377 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_378

Name: TMP_378 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_379(uint256) = TMP_377 (c)/ TMP_378
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_379

Name: TMP_379 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_379


MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_375(bool) = TMP_374 > 0
CONDITION TMP_375
RETURN 0
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_379(uint256) = TMP_377 (c)/ TMP_378
RETURN TMP_379


clearing ir...?
MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAGIC_SCALE_1E6_23, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: rate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 23
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_23(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_374 cleared
clearing ir...?
TMP_375(bool) = TMP_374 > 0
[i] TMP_375 cleared
clearing ir...?
CONDITION TMP_375
Propogating parameters and globals to SSA variables...
End popogation
TMP_374(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_374

Name: TMP_374 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_375(bool) = TMP_374 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_375

Name: TMP_375 Function: rate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_376 cleared
clearing ir...?
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
[i] TMP_377 cleared
clearing ir...?
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_378 cleared
clearing ir...?
TMP_379(uint256) = TMP_377 (c)/ TMP_378
[i] TMP_379 cleared
clearing ir...?
RETURN TMP_379
Propogating parameters and globals to SSA variables...
Ssa_name: MAGIC_SCALE_1E6_25, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_25, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_376

Name: TMP_376 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_377(uint256) = TMP_376 (c)* MAGIC_SCALE_1E6_25
Mul...

Name: TMP_376 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef

Name: MAGIC_SCALE_1E6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_377

Name: TMP_377 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_378(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_378

Name: TMP_378 Function: rate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_379(uint256) = TMP_377 (c)/ TMP_378
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_379

Name: TMP_379 Function: rate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_379



valueOfUnderlying
Function name: valueOfUnderlying
Finding type for _owner(address ... )
prev address? u
-995
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Param1: 
Name: _owner Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
New param cache [[[], [], 'u', '_owner', [], -1, -995, 'u']]
FIND RETURN
ENTRY_POINT
valueOfUnderlying(address)


TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
_balance_1(uint256) := TMP_380(uint256)
TMP_381(bool) = _balance_1 == 0
CONDITION TMP_381
RETURN 0
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_383(uint256) = _balance_1 (c)* TMP_382
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_385(uint256) = TMP_383 (c)/ TMP_384
RETURN TMP_385


[[], [], 'u', '_owner', [], -1, -995, 'u']
Param:
Name: _owner Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
[i] TMP_380 cleared
clearing ir...?
_balance_1(uint256) := TMP_380(uint256)
[i] _balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _owner Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: _owner_1 Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owner_1, name: _owner

Name: _owner_1 Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
New param cache [[[], [], 'u', '_owner', [], -1, -995, 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
Param: account
[[], [], 'u', '_owner', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
balanceOf(address)
ENTRY_POINT
Propogating All
RETURN _balances[account]
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
[i]Type for TMP_380

Name: TMP_380 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_380(uint256)
[i]Type for _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_381(bool) = _balance_1 == 0
[i] TMP_381 cleared
clearing ir...?
CONDITION TMP_381
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_381(bool) = _balance_1 == 0
[i]Type for TMP_381

Name: TMP_381 Function: valueOfUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_382 cleared
clearing ir...?
TMP_383(uint256) = _balance_1 (c)* TMP_382
[i] TMP_383 cleared
clearing ir...?
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_384 cleared
clearing ir...?
TMP_385(uint256) = TMP_383 (c)/ TMP_384
[i] TMP_385 cleared
clearing ir...?
RETURN TMP_385
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_382

Name: TMP_382 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_383(uint256) = _balance_1 (c)* TMP_382
Mul...

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_382 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_383

Name: TMP_383 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_384

Name: TMP_384 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_383 (c)/ TMP_384
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_385


TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
_balance_1(uint256) := TMP_380(uint256)
TMP_381(bool) = _balance_1 == 0
CONDITION TMP_381
RETURN 0
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_383(uint256) = _balance_1 (c)* TMP_382
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
TMP_385(uint256) = TMP_383 (c)/ TMP_384
RETURN TMP_385


[[], [], 'u', '_owner', [], -1, -995, 'u']
Param:
Name: _owner Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
[i] TMP_380 cleared
clearing ir...?
_balance_1(uint256) := TMP_380(uint256)
[i] _balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner_1 Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner_1 Function: valueOfUnderlying
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balance, Num: 1
Globalname: _balance, contract_name: PoolTemplate
End popogation
TMP_380(uint256) = INTERNAL_CALL, InsureDAOERC20.balanceOf(address)(_owner_1)
New param cache [[[], [], 'u', '_owner', [], -1, -995, 'u']]
Old param cache: [[[-1], [-1], 'u', 'from', [], -1, 'u']]
Param: account
[[], [], 'u', '_owner', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
balanceOf(address)
ENTRY_POINT
Propogating All
RETURN _balances[account]
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
clearing ir...?
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i] account cleared
clearing ir...?
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i] _balances cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef

Name: account_1 Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 1
Globalname: _balances, contract_name: PoolTemplate
global...

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['from_1', '_owner_1', 'msg.sender'])
[i]Type for account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
_balances_1(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_5', '_balances_8', '_balances_0', '_balances_1'])
[i]Type for _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_17(uint256) -> _balances_1[account_1]
[i] REF_17 cleared
clearing ir...?
RETURN REF_17
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: balanceOf
Num: 
Den: 
Address: -995
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_1, name: _balances

Name: _balances Function: balanceOf
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_17(uint256) -> _balances_1[account_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_17

Name: _balances Function: balanceOf
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN REF_17
[i]Type for TMP_380

Name: TMP_380 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_380(uint256)
[i]Type for _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_381(bool) = _balance_1 == 0
[i] TMP_381 cleared
clearing ir...?
CONDITION TMP_381
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_381(bool) = _balance_1 == 0
[i]Type for TMP_381

Name: TMP_381 Function: valueOfUnderlying
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_382 cleared
clearing ir...?
TMP_383(uint256) = _balance_1 (c)* TMP_382
[i] TMP_383 cleared
clearing ir...?
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_384 cleared
clearing ir...?
TMP_385(uint256) = TMP_383 (c)/ TMP_384
[i] TMP_385 cleared
clearing ir...?
RETURN TMP_385
Propogating parameters and globals to SSA variables...
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balance_1, name: _balance

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_382(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_382

Name: TMP_382 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_383(uint256) = _balance_1 (c)* TMP_382
Mul...

Name: _balance Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_382 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_383

Name: TMP_383 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_384(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_384

Name: TMP_384 Function: valueOfUnderlying
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_385(uint256) = TMP_383 (c)/ TMP_384
A: 18 B: u
lnorm: 18 rnorm: u
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: valueOfUnderlying
Num: -995
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_385



pendingPremium
Function name: pendingPremium
Finding type for _index(address ... )
prev address? u
Head Addr: -999
    Norm: 18
    Set: {-999}
    Fin: NULL
Param1: 
Name: _index Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
New param cache [[[], [], 18, '_index', [], -1, -999, 'u']]
FIND RETURN
ENTRY_POINT
pendingPremium(address)


rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REF_176(uint256) -> REF_175.credit
_credit_1(uint256) := REF_176(uint256)
TMP_386(bool) = _credit_1 == 0
CONDITION TMP_386
RETURN 0
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REF_178(uint256) -> REF_177.rewardDebt
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
RETURN TMP_389


[[], [], 18, '_index', [], -1, -999, 'u']
Param:
Name: _index Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
clearing ir...?
rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 13
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: indicies, Num: 17
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 27
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
[i] REF_175 cleared
clearing ir...?
REF_176(uint256) -> REF_175.credit
[i] REF_176 cleared
clearing ir...?
_credit_1(uint256) := REF_176(uint256)
[i] _credit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _index Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_175

Name: indicies Function: pendingPremium
Num: -999
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(uint256) -> REF_175.credit
OUT KEY: pendingPremium_indicies_credit
OUT KEY: pendingPremium_indicies_credit
FTT: None
No field found
[i]Type for REF_176

Name: REF_176 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: credit Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_176 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
_credit_1(uint256) := REF_176(uint256)
[i]Type for _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_386(bool) = _credit_1 == 0
[i] TMP_386 cleared
clearing ir...?
CONDITION TMP_386
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_386(bool) = _credit_1 == 0
[i]Type for TMP_386

Name: TMP_386 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
[i] TMP_387 cleared
clearing ir...?
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
[i] TMP_388 cleared
clearing ir...?
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
[i] REF_177 cleared
clearing ir...?
REF_178(uint256) -> REF_177.rewardDebt
[i] REF_178 cleared
clearing ir...?
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
[i] TMP_389 cleared
clearing ir...?
RETURN TMP_389
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
Mul...

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_387

Name: TMP_387 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_388

Name: TMP_388 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_177

Name: indicies Function: pendingPremium
Num: -999
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(uint256) -> REF_177.rewardDebt
OUT KEY: pendingPremium_indicies_rewardDebt
OUT KEY: pendingPremium_indicies_rewardDebt
FTT: None
No field found
[i]Type for REF_178

Name: REF_178 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_178 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Add new member...
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
Param: a
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Param: b
[[], [], 'u', None, [], -1, 'u', 'u']

Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_sub(uint256,uint256)
ENTRY_POINT
Propogating All
IF a < b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
RETURN 0
Propogating All
RETURN a - b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
[i]Type for TMP_389

Name: TMP_389 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_389


rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REF_176(uint256) -> REF_175.credit
_credit_1(uint256) := REF_176(uint256)
TMP_386(bool) = _credit_1 == 0
CONDITION TMP_386
RETURN 0
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REF_178(uint256) -> REF_177.rewardDebt
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
RETURN TMP_389


[[], [], 18, '_index', [], -1, -999, 'u']
Param:
Name: _index Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
clearing ir...?
rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i] rewardPerCredit cleared
clearing ir...?
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i] indicies cleared
clearing ir...?
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: rewardPerCredit, Num: 13
Globalname: rewardPerCredit, contract_name: PoolTemplate
global...

Name: rewardPerCredit Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Name: indicies, Num: 17
Globalname: indicies, contract_name: PoolTemplate
global...

Name: indicies Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 27
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
rewardPerCredit_13(uint256) := ϕ(['rewardPerCredit_0', 'rewardPerCredit_11', 'rewardPerCredit_2', 'rewardPerCredit_14'])
[i]Type for rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
indicies_17(mapping(address => PoolTemplate.IndexInfo)) := ϕ(['indicies_10', 'indicies_8', 'indicies_18', 'indicies_6', 'indicies_14', 'indicies_19', 'indicies_0', 'indicies_7', 'indicies_17', 'indicies_4'])
[i]Type for indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
MAGIC_SCALE_1E6_27(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
[i] REF_175 cleared
clearing ir...?
REF_176(uint256) -> REF_175.credit
[i] REF_176 cleared
clearing ir...?
_credit_1(uint256) := REF_176(uint256)
[i] _credit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
REF_175(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_175

Name: indicies Function: pendingPremium
Num: -999
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_176(uint256) -> REF_175.credit
OUT KEY: pendingPremium_indicies_credit
OUT KEY: pendingPremium_indicies_credit
FTT: None
No field found
[i]Type for REF_176

Name: REF_176 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_176 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_credit_1(uint256) := REF_176(uint256)
[i]Type for _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_386(bool) = _credit_1 == 0
[i] TMP_386 cleared
clearing ir...?
CONDITION TMP_386
Propogating parameters and globals to SSA variables...
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_386(bool) = _credit_1 == 0
[i]Type for TMP_386

Name: TMP_386 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
[i] TMP_387 cleared
clearing ir...?
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
[i] TMP_388 cleared
clearing ir...?
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
[i] REF_177 cleared
clearing ir...?
REF_178(uint256) -> REF_177.rewardDebt
[i] REF_178 cleared
clearing ir...?
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
[i] TMP_389 cleared
clearing ir...?
RETURN TMP_389
Propogating parameters and globals to SSA variables...
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Ssa_name: MAGIC_SCALE_1E6_27, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _index_1, name: _index

Name: _index_1 Function: pendingPremium
Num: 
Den: 
Address: -999
Norm: 18
LF: _index
Value: u
Fields: 
Finance Type: undef
Ssa_name: rewardPerCredit_13, name: rewardPerCredit

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: indicies_17, name: indicies

Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Ssa_name: _credit_1, name: _credit

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _credit, Num: 1
Globalname: _credit, contract_name: PoolTemplate
End popogation
TMP_387(uint256) = _credit_1 (c)* rewardPerCredit_13
Mul...

Name: _credit Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: rewardPerCredit Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_387

Name: TMP_387 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_388(uint256) = TMP_387 (c)/ MAGIC_SCALE_1E6_27
A: u B: u
lnorm: u rnorm: u
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_388

Name: TMP_388 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_177(PoolTemplate.IndexInfo) -> indicies_17[_index_1]
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_177

Name: indicies Function: pendingPremium
Num: -999
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(uint256) -> REF_177.rewardDebt
OUT KEY: pendingPremium_indicies_rewardDebt
OUT KEY: pendingPremium_indicies_rewardDebt
FTT: None
No field found
[i]Type for REF_178

Name: REF_178 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
#################
Member: 
Name: indicies Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: credit, rewardDebt
Finance Type: undef
Fieldf: 
Name: rewardDebt Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_178 Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Added to member...

Name: rewardDebt Function: pendingPremium
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_389(uint256) = INTERNAL_CALL, PoolTemplate._sub(uint256,uint256)(TMP_388,REF_178)
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
Param: a
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Param: b
[[], [], 'u', None, [], -1, 'u', 'u']

Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_sub(uint256,uint256)
ENTRY_POINT
Propogating All
IF a < b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
RETURN 0
Propogating All
RETURN a - b
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
clearing ir...?
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i] a cleared
clearing ir...?
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: a Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: a_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
a_1(uint256) := ϕ(['TMP_244', 'TMP_388', 'TMP_261'])
[i]Type for a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
b_1(uint256) := ϕ(['REF_102', 'REF_178', 'REF_111'])
[i]Type for b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_432(bool) = a_1 < b_1
[i] TMP_432 cleared
clearing ir...?
CONDITION TMP_432
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: b_1 Function: _sub
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: PoolTemplate
End popogation
TMP_432(bool) = a_1 < b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_432

Name: TMP_432 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_433(uint256) = a_1 (c)- b_1
[i] TMP_433 cleared
clearing ir...?
RETURN TMP_433
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_433(uint256) = a_1 (c)- b_1
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_433

Name: TMP_433 Function: _sub
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_433
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
[i]Type for TMP_389

Name: TMP_389 Function: pendingPremium
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_389



worth
Function name: worth
Finding type for _value(uint256 ... )

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
Param1: 
Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
New param cache [[[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
worth(uint256)


_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
_supply_1(uint256) := TMP_390(uint256)
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
_originalLiquidity_1(uint256) := TMP_391(uint256)
TMP_392(bool) = _supply_1 > 0
TMP_393(bool) = _originalLiquidity_1 > 0
TMP_394(bool) = TMP_392 && TMP_393
CONDITION TMP_394
TMP_395(uint256) = _value_1 (c)* _supply_1
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
_amount_3(uint256) := TMP_396(uint256)
TMP_397(bool) = _supply_1 > 0
TMP_398(bool) = _originalLiquidity_1 == 0
TMP_399(bool) = TMP_397 && TMP_398
CONDITION TMP_399
_amount_2(uint256) := _value_1(uint256)
TMP_400(uint256) = _value_1 (c)* _supply_1
_amount_1(uint256) := TMP_400(uint256)


[[-1], [-1], 'u', None, [], 0, 'u', 'u']
Param:
Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i] _value cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i]Type for _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_390 cleared
clearing ir...?
_supply_1(uint256) := TMP_390(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_390

Name: TMP_390 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_390(uint256)
[i]Type for _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_391 cleared
clearing ir...?
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i] _originalLiquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _originalLiquidity, Num: 1
Globalname: _originalLiquidity, contract_name: PoolTemplate
End popogation
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_391

Name: TMP_391 Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i]Type for _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_392(bool) = _supply_1 > 0
[i] TMP_392 cleared
clearing ir...?
TMP_393(bool) = _originalLiquidity_1 > 0
[i] TMP_393 cleared
clearing ir...?
TMP_394(bool) = TMP_392 && TMP_393
[i] TMP_394 cleared
clearing ir...?
CONDITION TMP_394
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_392

Name: TMP_392 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_393(bool) = _originalLiquidity_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_393

Name: TMP_393 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_394(bool) = TMP_392 && TMP_393
[i]Type for TMP_394

Name: TMP_394 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_395(uint256) = _value_1 (c)* _supply_1
[i] TMP_395 cleared
clearing ir...?
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
[i] TMP_396 cleared
clearing ir...?
_amount_3(uint256) := TMP_396(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_3, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 3
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_395(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_395

Name: TMP_395 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_396

Name: TMP_396 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_396(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_397(bool) = _supply_1 > 0
[i] TMP_397 cleared
clearing ir...?
TMP_398(bool) = _originalLiquidity_1 == 0
[i] TMP_398 cleared
clearing ir...?
TMP_399(bool) = TMP_397 && TMP_398
[i] TMP_399 cleared
clearing ir...?
CONDITION TMP_399
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_397(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_397

Name: TMP_397 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_398(bool) = _originalLiquidity_1 == 0
[i]Type for TMP_398

Name: TMP_398 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = TMP_397 && TMP_398
[i]Type for TMP_399

Name: TMP_399 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_2(uint256) := _value_1(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_2, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 2
Globalname: _amount, contract_name: PoolTemplate
End popogation
_amount_2(uint256) := _value_1(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_400(uint256) = _value_1 (c)* _supply_1
[i] TMP_400 cleared
clearing ir...?
_amount_1(uint256) := TMP_400(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_400(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_400

Name: TMP_400 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_1(uint256) := TMP_400(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation


_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
_supply_1(uint256) := TMP_390(uint256)
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
_originalLiquidity_1(uint256) := TMP_391(uint256)
TMP_392(bool) = _supply_1 > 0
TMP_393(bool) = _originalLiquidity_1 > 0
TMP_394(bool) = TMP_392 && TMP_393
CONDITION TMP_394
TMP_395(uint256) = _value_1 (c)* _supply_1
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
_amount_3(uint256) := TMP_396(uint256)
TMP_397(bool) = _supply_1 > 0
TMP_398(bool) = _originalLiquidity_1 == 0
TMP_399(bool) = TMP_397 && TMP_398
CONDITION TMP_399
_amount_2(uint256) := _value_1(uint256)
TMP_400(uint256) = _value_1 (c)* _supply_1
_amount_1(uint256) := TMP_400(uint256)


[[-1], [-1], 'u', None, [], 0, 'u', 'u']
Param:
Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i] _value cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _value_1 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
_value_1(uint256) := ϕ(['_amount_1', '_amount_1'])
[i]Type for _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
[i] TMP_390 cleared
clearing ir...?
_supply_1(uint256) := TMP_390(uint256)
[i] _supply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _supply, Num: 1
Globalname: _supply, contract_name: PoolTemplate
End popogation
TMP_390(uint256) = INTERNAL_CALL, InsureDAOERC20.totalSupply()()
New param cache []
Old param cache: []
[i]Type for TMP_390

Name: TMP_390 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_supply_1(uint256) := TMP_390(uint256)
[i]Type for _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_391 cleared
clearing ir...?
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i] _originalLiquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _originalLiquidity, Num: 1
Globalname: _originalLiquidity, contract_name: PoolTemplate
End popogation
TMP_391(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_391

Name: TMP_391 Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
_originalLiquidity_1(uint256) := TMP_391(uint256)
[i]Type for _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_392(bool) = _supply_1 > 0
[i] TMP_392 cleared
clearing ir...?
TMP_393(bool) = _originalLiquidity_1 > 0
[i] TMP_393 cleared
clearing ir...?
TMP_394(bool) = TMP_392 && TMP_393
[i] TMP_394 cleared
clearing ir...?
CONDITION TMP_394
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_392

Name: TMP_392 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_393(bool) = _originalLiquidity_1 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_393

Name: TMP_393 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_394(bool) = TMP_392 && TMP_393
[i]Type for TMP_394

Name: TMP_394 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_395(uint256) = _value_1 (c)* _supply_1
[i] TMP_395 cleared
clearing ir...?
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
[i] TMP_396 cleared
clearing ir...?
_amount_3(uint256) := TMP_396(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_3, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 3
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_395(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_395

Name: TMP_395 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_396(uint256) = TMP_395 (c)/ _originalLiquidity_1
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_396

Name: TMP_396 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_396(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_397(bool) = _supply_1 > 0
[i] TMP_397 cleared
clearing ir...?
TMP_398(bool) = _originalLiquidity_1 == 0
[i] TMP_398 cleared
clearing ir...?
TMP_399(bool) = TMP_397 && TMP_398
[i] TMP_399 cleared
clearing ir...?
CONDITION TMP_399
Propogating parameters and globals to SSA variables...
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _originalLiquidity_1, name: _originalLiquidity

Name: _originalLiquidity Function: worth
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_397(bool) = _supply_1 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_397

Name: TMP_397 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_398(bool) = _originalLiquidity_1 == 0
[i]Type for TMP_398

Name: TMP_398 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_399(bool) = TMP_397 && TMP_398
[i]Type for TMP_399

Name: TMP_399 Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
_amount_2(uint256) := _value_1(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_2, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 2
Globalname: _amount, contract_name: PoolTemplate
End popogation
_amount_2(uint256) := _value_1(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
clearing ir...?
TMP_400(uint256) = _value_1 (c)* _supply_1
[i] TMP_400 cleared
clearing ir...?
_amount_1(uint256) := TMP_400(uint256)
[i] _amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _supply_1, name: _supply

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _value_1, name: _value

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: worth
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _amount, Num: 1
Globalname: _amount, contract_name: PoolTemplate
End popogation
TMP_400(uint256) = _value_1 (c)* _supply_1
Mul...

Name: _value Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _supply Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_400

Name: TMP_400 Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_1(uint256) := TMP_400(uint256)
[i]Type for _amount

Name: _amount Function: worth
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation



availableBalance
Function name: availableBalance
New param cache []
Old param cache: []
FIND RETURN
ENTRY_POINT
availableBalance()


lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_402(bool) = TMP_401 > 0
CONDITION TMP_402
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
RETURN TMP_404
RETURN 0


clearing ir...?
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_18, name: lockedAmount

Name: lockedAmount Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 18
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_401 cleared
clearing ir...?
TMP_402(bool) = TMP_401 > 0
[i] TMP_402 cleared
clearing ir...?
CONDITION TMP_402
Propogating parameters and globals to SSA variables...
End popogation
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_401

Name: TMP_401 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_402(bool) = TMP_401 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_402

Name: TMP_402 Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_403 cleared
clearing ir...?
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
[i] TMP_404 cleared
clearing ir...?
RETURN TMP_404
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_403

Name: TMP_403 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_404

Name: TMP_404 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_404
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0


lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_402(bool) = TMP_401 > 0
CONDITION TMP_402
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
RETURN TMP_404
RETURN 0


clearing ir...?
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_18, name: lockedAmount

Name: lockedAmount Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 18
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
lockedAmount_18(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_401 cleared
clearing ir...?
TMP_402(bool) = TMP_401 > 0
[i] TMP_402 cleared
clearing ir...?
CONDITION TMP_402
Propogating parameters and globals to SSA variables...
End popogation
TMP_401(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_401

Name: TMP_401 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_402(bool) = TMP_401 > 0
A: 18 B: u
lnorm: 18 rnorm: 0
[i]Type for TMP_402

Name: TMP_402 Function: availableBalance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_403 cleared
clearing ir...?
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
[i] TMP_404 cleared
clearing ir...?
RETURN TMP_404
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_20, name: lockedAmount

Name: lockedAmount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_403(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_403

Name: TMP_403 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_404(uint256) = TMP_403 (c)- lockedAmount_20
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_404

Name: TMP_404 Function: availableBalance
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_404
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0



utilizationRate
Function name: utilizationRate
New param cache []
FIND RETURN
ENTRY_POINT
utilizationRate()


lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_405(bool) = lockedAmount_21 > 0
CONDITION TMP_405
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_408(uint256) = TMP_406 (c)/ TMP_407
RETURN TMP_408
RETURN 0


clearing ir...?
lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_21, name: lockedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 21
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 29
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_405(bool) = lockedAmount_21 > 0
[i] TMP_405 cleared
clearing ir...?
CONDITION TMP_405
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_405(bool) = lockedAmount_21 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_405

Name: TMP_405 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
[i] TMP_406 cleared
clearing ir...?
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_407 cleared
clearing ir...?
TMP_408(uint256) = TMP_406 (c)/ TMP_407
[i] TMP_408 cleared
clearing ir...?
RETURN TMP_408
Propogating parameters and globals to SSA variables...
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
Mul...

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_406

Name: TMP_406 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_407

Name: TMP_407 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_408(uint256) = TMP_406 (c)/ TMP_407
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_408

Name: TMP_408 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_408
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0


lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
TMP_405(bool) = lockedAmount_21 > 0
CONDITION TMP_405
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
TMP_408(uint256) = TMP_406 (c)/ TMP_407
RETURN TMP_408
RETURN 0


clearing ir...?
lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i] lockedAmount cleared
clearing ir...?
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i] MAGIC_SCALE_1E6 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lockedAmount, Num: 21
Globalname: lockedAmount, contract_name: PoolTemplate
global...

Name: lockedAmount Function: redeem
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAGIC_SCALE_1E6, Num: 29
Globalname: MAGIC_SCALE_1E6, contract_name: PoolTemplate
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lockedAmount_21(uint256) := ϕ(['lockedAmount_3', 'lockedAmount_22', 'lockedAmount_20', 'lockedAmount_0', 'lockedAmount_17', 'lockedAmount_12', 'lockedAmount_14', 'lockedAmount_19'])
[i]Type for lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAGIC_SCALE_1E6_29(uint256) := ϕ(['MAGIC_SCALE_1E6_3', 'MAGIC_SCALE_1E6_2', 'MAGIC_SCALE_1E6_8', 'MAGIC_SCALE_1E6_24', 'MAGIC_SCALE_1E6_30', 'MAGIC_SCALE_1E6_9', 'MAGIC_SCALE_1E6_22', 'MAGIC_SCALE_1E6_26', 'MAGIC_SCALE_1E6_28', 'MAGIC_SCALE_1E6_20', 'MAGIC_SCALE_1E6_17', 'MAGIC_SCALE_1E6_0'])
[i]Type for MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_405(bool) = lockedAmount_21 > 0
[i] TMP_405 cleared
clearing ir...?
CONDITION TMP_405
Propogating parameters and globals to SSA variables...
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_405(bool) = lockedAmount_21 > 0
A: u B: u
lnorm: u rnorm: 0
[i]Type for TMP_405

Name: TMP_405 Function: utilizationRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
[i] TMP_406 cleared
clearing ir...?
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
[i] TMP_407 cleared
clearing ir...?
TMP_408(uint256) = TMP_406 (c)/ TMP_407
[i] TMP_408 cleared
clearing ir...?
RETURN TMP_408
Propogating parameters and globals to SSA variables...
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: MAGIC_SCALE_1E6_29, name: MAGIC_SCALE_1E6

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lockedAmount_21, name: lockedAmount

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_406(uint256) = lockedAmount_21 (c)* MAGIC_SCALE_1E6_29
Mul...

Name: lockedAmount Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: MAGIC_SCALE_1E6 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
A: u B: u
lnorm: u rnorm: u
[i]Type for TMP_406

Name: TMP_406 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_407(uint256) = INTERNAL_CALL, PoolTemplate.totalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_407

Name: TMP_407 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_408(uint256) = TMP_406 (c)/ TMP_407
A: u B: 18
lnorm: u rnorm: 18
A: u B: 18
lnorm: u rnorm: 18
[i]Type for TMP_408

Name: TMP_408 Function: utilizationRate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_408
clearing ir...?
RETURN 0
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0



totalLiquidity
Function name: totalLiquidity
New param cache []
Old param cache: []
FIND RETURN
ENTRY_POINT
totalLiquidity()


totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
RETURN TMP_410


clearing ir...?
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalCredit_19, name: totalCredit

Name: totalCredit Function: totalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 19
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_409 cleared
clearing ir...?
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
[i] TMP_410 cleared
clearing ir...?
RETURN TMP_410
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_409

Name: TMP_409 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_410

Name: TMP_410 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_410


totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
RETURN TMP_410


clearing ir...?
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i] totalCredit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalCredit_19, name: totalCredit

Name: totalCredit Function: totalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalCredit, Num: 19
Globalname: totalCredit, contract_name: PoolTemplate
global...

Name: totalCredit Function: withdrawCredit
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalCredit_19(uint256) := ϕ(['totalCredit_0', 'totalCredit_3', 'totalCredit_16', 'totalCredit_9', 'totalCredit_20', 'totalCredit_2', 'totalCredit_10', 'totalCredit_18'])
[i]Type for totalCredit

Name: totalCredit Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
[i] TMP_409 cleared
clearing ir...?
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
[i] TMP_410 cleared
clearing ir...?
RETURN TMP_410
Propogating parameters and globals to SSA variables...
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: totalCredit_20, name: totalCredit

Name: totalCredit Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_409(uint256) = INTERNAL_CALL, PoolTemplate.originalLiquidity()()
New param cache []
Old param cache: []
[i]Type for TMP_409

Name: TMP_409 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_410(uint256) = TMP_409 (c)+ totalCredit_20
A: 18 B: 18
lnorm: 18 rnorm: 18
[i]Type for TMP_410

Name: TMP_410 Function: totalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_410



originalLiquidity
Function name: originalLiquidity
New param cache []
Old param cache: []
FIND RETURN
ENTRY_POINT
originalLiquidity()


vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
TMP_411 = CONVERT this to address
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
TMP_414(uint256) = TMP_412 (c)- TMP_413
RETURN TMP_414


clearing ir...?
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 43
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_21, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 21
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_411 = CONVERT this to address
[i] TMP_411 cleared
clearing ir...?
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
[i] TMP_412 cleared
clearing ir...?
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
[i] TMP_413 cleared
clearing ir...?
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_414(uint256) = TMP_412 (c)- TMP_413
[i] TMP_414 cleared
clearing ir...?
RETURN TMP_414
Propogating parameters and globals to SSA variables...
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 22
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 44
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_45, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 45
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_23, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 23
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_411 = CONVERT this to address
[i]Type for TMP_411

Name: TMP_411 Function: originalLiquidity
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
High Call: underlyingValue
Running querryfc
Found: None
Written func info: IVault, underlyingValue
[i]Type for TMP_412

Name: TMP_412 Function: originalLiquidity
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
High Call: attributionValue
Running querryfc
Found: None
Written func info: IVault, attributionValue
[i]Type for TMP_413

Name: TMP_413 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_414(uint256) = TMP_412 (c)- TMP_413
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_414

Name: TMP_414 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_414


vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
TMP_411 = CONVERT this to address
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
TMP_414(uint256) = TMP_412 (c)- TMP_413
RETURN TMP_414


clearing ir...?
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 43
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_21, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 21
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
vault_43(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_1', 'vault_0', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_21(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_0', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_411 = CONVERT this to address
[i] TMP_411 cleared
clearing ir...?
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
[i] TMP_412 cleared
clearing ir...?
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
[i] TMP_413 cleared
clearing ir...?
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i] vault cleared
clearing ir...?
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i] attributionDebt cleared
clearing ir...?
TMP_414(uint256) = TMP_412 (c)- TMP_413
[i] TMP_414 cleared
clearing ir...?
RETURN TMP_414
Propogating parameters and globals to SSA variables...
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 22
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 44
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: vault_43, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vault_44, name: vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_22, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vault_45, name: vault

Name: vault Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Name: vault, Num: 45
Globalname: vault, contract_name: PoolTemplate
global...

Name: vault Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
Ssa_name: attributionDebt_23, name: attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: attributionDebt, Num: 23
Globalname: attributionDebt, contract_name: PoolTemplate
global...

Name: attributionDebt Function: insure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_411 = CONVERT this to address
[i]Type for TMP_411

Name: TMP_411 Function: originalLiquidity
Num: 
Den: 
Address: 3
Norm: u
LF: PoolTemplate
Value: u
Fields: 
Finance Type: undef
TMP_412(uint256) = HIGH_LEVEL_CALL, dest:vault_43(IVault), function:underlyingValue, arguments:['TMP_411']  
High Call: underlyingValue
Running querryfc
Found: None
Written func info: IVault, underlyingValue
[i]Type for TMP_412

Name: TMP_412 Function: originalLiquidity
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_44(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_43', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_22(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_21', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_413(uint256) = HIGH_LEVEL_CALL, dest:vault_44(IVault), function:attributionValue, arguments:['attributionDebt_22']  
High Call: attributionValue
Running querryfc
Found: None
Written func info: IVault, attributionValue
[i]Type for TMP_413

Name: TMP_413 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
vault_45(IVault) := ϕ(['vault_4', 'vault_19', 'vault_24', 'vault_16', 'vault_25', 'vault_45', 'vault_42', 'vault_18', 'vault_33', 'vault_44', 'vault_1', 'vault_35', 'vault_7'])
[i]Type for vault

Name: vault Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
attributionDebt_23(uint256) := ϕ(['attributionDebt_23', 'attributionDebt_2', 'attributionDebt_22', 'attributionDebt_11', 'attributionDebt_19', 'attributionDebt_3', 'attributionDebt_9'])
[i]Type for attributionDebt

Name: attributionDebt Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_414(uint256) = TMP_412 (c)- TMP_413
A: 18 B: u
lnorm: 18 rnorm: u
[i]Type for TMP_414

Name: TMP_414 Function: originalLiquidity
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_414



setPaused
Function name: setPaused
Finding type for _state(bool ... )
Param1: 
Name: _state Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setPaused(bool)


paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
MODIFIER_CALL, PoolTemplate.onlyOwner()()
TMP_415(bool) = paused_11 != _state_1
CONDITION TMP_415
paused_12(bool) := _state_1(bool)
Emit Paused(_state_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _state Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_10, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 10
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
MODIFIER_CALL, PoolTemplate.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PoolTemplate.onlyOwner()()
New param cache []
Old param cache: []
clearing ir...?
TMP_415(bool) = paused_11 != _state_1
[i] TMP_415 cleared
clearing ir...?
CONDITION TMP_415
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
saved parameter: 
Name: _state Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: paused_11, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 11
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_11, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_415(bool) = paused_11 != _state_1
[i]Type for TMP_415

Name: TMP_415 Function: setPaused
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_12(bool) := _state_1(bool)
[i] paused cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_12, name: paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 12
Globalname: paused, contract_name: PoolTemplate
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
paused_12(bool) := _state_1(bool)
[i]Type for paused

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied paused
clearing ir...?
Emit Paused(_state_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation


paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
MODIFIER_CALL, PoolTemplate.onlyOwner()()
TMP_415(bool) = paused_11 != _state_1
CONDITION TMP_415
paused_12(bool) := _state_1(bool)
Emit Paused(_state_1)


[[-1], [-1], 'u', None, [], -1, 'u', 'u']
Param:
Name: _state Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i] paused cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: paused_10, name: paused

Name: paused Function: setPaused
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 10
Globalname: paused, contract_name: PoolTemplate
global...

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
paused_10(bool) := ϕ(['paused_12', 'paused_7', 'paused_9', 'paused_11', 'paused_0'])
[i]Type for paused

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
MODIFIER_CALL, PoolTemplate.onlyOwner()()
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PoolTemplate.onlyOwner()()
New param cache []
Old param cache: []
clearing ir...?
TMP_415(bool) = paused_11 != _state_1
[i] TMP_415 cleared
clearing ir...?
CONDITION TMP_415
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_11, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_11, name: paused

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_415(bool) = paused_11 != _state_1
[i]Type for TMP_415

Name: TMP_415 Function: setPaused
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
clearing ir...?
paused_12(bool) := _state_1(bool)
[i] paused cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: paused_12, name: paused

Name: paused Function: setPaused
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: paused, Num: 12
Globalname: paused, contract_name: PoolTemplate
global...

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
paused_12(bool) := _state_1(bool)
[i]Type for paused

Name: paused Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied paused
clearing ir...?
Emit Paused(_state_1)
Propogating parameters and globals to SSA variables...
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _state_1, name: _state

Name: _state_1 Function: setPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Address: 1, Label: global:vaultToken
Address: -999, Label: pendingPremium:_index
Address: -998, Label: allocatedCredit:_index
Address: 2, Label: global:indexList
Address: -997, Label: initialize:_references
Address: 3, Label: originalLiquidity:TMP_411
Address: 3, Label: global:this
Address: -996, Label: transferInsurance:_to
Address: -995, Label: valueOfUnderlying:_owner
Function count: 72
Time elapsed: 1.335848093032837
Executing Group 22
[*] Tested 0 warnings for InsureDao
Group 22 complete
Elapsed time: 14.861321250 seconds
Testing complete
