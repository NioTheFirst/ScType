Switched global version to 0.6.12
Finding type for manager...
IManager
Finding type for _balances...
mapping(address => uint256)
Finding type for _totalSupply...
uint256
Finding type for _symbol...
string
Finding type for _allowances...
mapping(address => mapping(address => uint256))
Finding type for MAX...
uint256
Finding type for totalDepositCap...
uint256
Finding type for _name...
string
Finding type for _decimals...
uint8
Finding type for min...
uint256



constructor
Finding type for _name...
string
Finding type for _symbol...
string
Finding type for _manager...
address
prev address? u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _manager
    fields: []
    fintype: -1
_name_0
_symbol_0
_manager_0


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
_symbol_1

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_name_1

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters to local SSA variables...
_manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Copied manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
TMP_66 = CONVERT _manager_1 to IManager
manager_1(IManager) := TMP_66(IManager)
min_1(uint256) := 9500(uint256)
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _name Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _symbol Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
[[], [], 'u', '_manager', [], -1, -999]

Name: _manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
_symbol_1

Name: _symbol_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_name_1

Name: _name_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
INTERNAL_CALL, VaultToken.constructor(string,string)(_name_1,_symbol_1)
Propogating parameters to local SSA variables...
_manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
TMP_66 = CONVERT _manager_1 to IManager
Converting _manager_1

Name: _manager_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _manager
Fields: 
Finance Type: undef
Manager
[i]Type for TMP_66

Name: TMP_66 Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
manager_1(IManager) := TMP_66(IManager)
[i]Type for manager

Name: manager Function: constructor
Num: 
Den: 
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Copied manager

Name: manager Function: constructor
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
min_1(uint256) := 9500(uint256)
[i]Type for min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied min

Name: min Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
totalDepositCap_1(uint256) := 10000000000000000000000000(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Copied totalDepositCap

Name: totalDepositCap Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setGauge
Finding type for _gauge...
address
prev address? u
Param: 0
    num: []
    den: []
    norm: u
    link: _gauge
    fields: []
    fintype: -1
_gauge_0


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_gauge_1

Name: _gauge_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
gauge_1(address) := _gauge_1(address)


[[], [], 'u', '_gauge', [], -1, -998]

Name: _gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_gauge_1

Name: _gauge_1 Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef
gauge_1(address) := _gauge_1(address)
[i]Type for gauge

Name: gauge Function: setGauge
Num: 
Den: 
Address: -998
Norm: u
LF: _gauge
Fields: 
Finance Type: undef



setMin
Finding type for _min...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_min_0


MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
manager_34(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_34

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_34', 'manager_30'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
manager_34(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_34

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_34', 'manager_30'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
manager_38(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_38

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Getting new address:
prev address? None
None
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -997
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30', 'manager_38'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
manager_38(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_38

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
Getting new address:
prev address? None
None
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: -996
Norm: 0
LF: None
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30', 'manager_38'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MAX_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_min_1

Name: _min_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_min_1

Name: _min_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
min_2(uint256) := _min_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MAX_1(uint256) := ϕ(['MAX_3', 'MAX_9', 'MAX_0', 'MAX_11', 'MAX_13'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
MAX_3

Name: MAX Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
_min_1

Name: _min_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
_min_1

Name: _min_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



setTotalDepositCap
Finding type for _totalDepositCap...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_totalDepositCap_0


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_totalDepositCap_1

Name: _totalDepositCap_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef


MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)


[[-1], [-1], 'u', None, [], -1, 'u']

Name: _totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
Propogating parameters to local SSA variables...
_totalDepositCap_1

Name: _totalDepositCap_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
totalDepositCap_2(uint256) := _totalDepositCap_1(uint256)
[i]Type for totalDepositCap

Name: totalDepositCap Function: setTotalDepositCap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef



swap
Finding type for _token0...
address
prev address? u
Finding type for _token1...
address
prev address? u
Finding type for _expectedAmount...
uint256
Param: 0
    num: []
    den: []
    norm: u
    link: _token0
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: _token1
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
_token0_0
_token1_0
_expectedAmount_0


manager_2(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
TMP_76 = CONVERT this to address
TMP_77(address) = HIGH_LEVEL_CALL, dest:manager_4(IManager), function:controllers, arguments:['TMP_76']  
manager_5(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_4', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
TMP_78 = CONVERT TMP_77 to IController
TMP_79 = CONVERT this to address
TMP_80(address) = HIGH_LEVEL_CALL, dest:TMP_78(IController), function:converter, arguments:['TMP_79']  
manager_6(IManager) := ϕ(['manager_37', 'manager_35', 'manager_24', 'manager_5', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
TMP_81 = CONVERT TMP_80 to IConverter
_converter_1(IConverter) := TMP_81(IConverter)
TMP_82 = CONVERT _token0_1 to IERC20
TMP_83 = CONVERT this to address
TMP_84(uint256) = HIGH_LEVEL_CALL, dest:TMP_82(IERC20), function:balanceOf, arguments:['TMP_83']  
_balance_1(uint256) := TMP_84(uint256)
TMP_85 = CONVERT _token0_1 to IERC20
TMP_86 = CONVERT _converter_1 to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_85', 'TMP_86', '_balance_1'] 
TMP_88(uint256) = HIGH_LEVEL_CALL, dest:_converter_1(IConverter), function:convert, arguments:['_token0_1', '_token1_1', '_balance_1', '_expectedAmount_1']  
_balance_2(uint256) := TMP_88(uint256)


[[], [], 'u', '_token0', [], -1, -995]

Name: _token0 Function: swap
Num: 
Den: 
Address: -995
Norm: u
LF: _token0
Fields: 
Finance Type: undef
[[], [], 'u', '_token1', [], -1, -994]

Name: _token1 Function: swap
Num: 
Den: 
Address: -994
Norm: u
LF: _token1
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u']

Name: _expectedAmount Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_2(IManager) := ϕ(['manager_37', 'manager_0', 'manager_35', 'manager_24', 'manager_33', 'manager_26', 'manager_39', 'manager_19', 'manager_12', 'manager_28', 'manager_6', 'manager_1', 'manager_30'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.notHalted()()
manager_3(IManager) := ϕ(['manager_35'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
MODIFIER_CALL, Vault.onlyStrategist()()
manager_4(IManager) := ϕ(['manager_39'])
[i]Type for manager

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
Propogating parameters to local SSA variables...
manager_4

Name: manager Function: swap
Num: -1
Den: -1
Address: -999
Norm: u
LF: Manager
Fields: 
Finance Type: undef
TMP_76 = CONVERT this to address
Converting this
new address made
prev address? u
Executing Group 7
[*] Tested 3 warnings for yAxis
Group 7 complete
Testing complete
