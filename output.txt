Switched global version to 0.8.7
Checking LaunchEvent
Checking IJoeFactory
Checking IJoePair
Checking IJoeRouter01
Checking IJoeRouter02
Checking IRocketJoeFactory
Checking IRocketJoeToken
Checking IWAVAX
Checking Ownable
Checking IERC20
Checking IERC20Metadata
Checking Context
Add to address_to_label {'[global:wavax]': 1}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3, 'global:issuer': 4}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3, 'global:issuer': 4, 'global:_owner': 5}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3, 'global:issuer': 4, 'global:_owner': 5, 'initialize:_issuer': -999}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3, 'global:issuer': 4, 'global:_owner': 5, 'initialize:_issuer': -999, 'initialize:_token': -998}
Add to address_to_label {'[global:wavax]': 1, '[global:rJoe]': 2, 'global:wavax': 3, 'global:issuer': 4, 'global:_owner': 5, 'initialize:_issuer': -999, 'initialize:_token': -998, 'pairBalance:_user': -997}
State_var: WAVAX
Finding type for WAVAX(IWAVAX ... )
querrying!!!
Source address: u
State_var: factory
Finding type for factory(IJoeFactory ... )
querrying!!!
Source address: u
State_var: floorPrice
Finding type for floorPrice(uint256 ... )
querrying!!!
Source address: u
State_var: pair
Finding type for pair(IJoePair ... )
querrying!!!
Source address: u
State_var: router
Finding type for router(IJoeRouter02 ... )
querrying!!!
Source address: u
State_var: token
Finding type for token(IERC20Metadata ... )
querrying!!!
Source address: u
State_var: tokenIncentivesBalance
Finding type for tokenIncentivesBalance(uint256 ... )
querrying!!!
Source address: u
State_var: tokenIncentivesForUsers
Finding type for tokenIncentivesForUsers(uint256 ... )
querrying!!!
Source address: u
State_var: tokenReserve
Finding type for tokenReserve(uint256 ... )
querrying!!!
Source address: u
State_var: wavaxAllocated
Finding type for wavaxAllocated(uint256 ... )
querrying!!!
Source address: u
State_var: wavaxReserve
Finding type for wavaxReserve(uint256 ... )
querrying!!!
Source address: u
State_var: PHASE_ONE_DURATION
Finding type for PHASE_ONE_DURATION(uint256 ... )
querrying!!!
Source address: u
State_var: PHASE_TWO_DURATION
Finding type for PHASE_TWO_DURATION(uint256 ... )
querrying!!!
Source address: u
State_var: auctionStart
Finding type for auctionStart(uint256 ... )
querrying!!!
Source address: u
State_var: stopped
Finding type for stopped(bool ... )
querrying!!!
Source address: u
State_var: rocketJoeFactory
Finding type for rocketJoeFactory(IRocketJoeFactory ... )
querrying!!!
Source address: u
State_var: getUserInfo
Finding type for getUserInfo(mapping(address => LaunchEvent.UserInfo) ... )
global
getUserInfo
allocation
OUT KEY: global_getUserInfo_allocation
global
getUserInfo
balance
OUT KEY: global_getUserInfo_balance
global
getUserInfo
hasWithdrawnPair
OUT KEY: global_getUserInfo_hasWithdrawnPair
global
getUserInfo
hasWithdrawnIncentives
OUT KEY: global_getUserInfo_hasWithdrawnIncentives
querrying!!!
Source address: u
State_var: issuer
Finding type for issuer(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
querrying!!!
Source address: 4
State_var: lpSupply
Finding type for lpSupply(uint256 ... )
querrying!!!
Source address: u
State_var: maxAllocation
Finding type for maxAllocation(uint256 ... )
querrying!!!
Source address: u
State_var: rJoe
Finding type for rJoe(IRocketJoeToken ... )
querrying!!!
Source address: u
State_var: rJoePerAvax
Finding type for rJoePerAvax(uint256 ... )
querrying!!!
Source address: u
State_var: tokenIncentiveIssuerRefund
Finding type for tokenIncentiveIssuerRefund(uint256 ... )
querrying!!!
Source address: u
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
querrying!!!
Source address: 5
State_var: initialized
Finding type for initialized(bool ... )
querrying!!!
Source address: u
State_var: issuerTimelock
Finding type for issuerTimelock(uint256 ... )
querrying!!!
Source address: u
State_var: userTimelock
Finding type for userTimelock(uint256 ... )
querrying!!!
Source address: u
State_var: PHASE_ONE_NO_FEE_DURATION
Finding type for PHASE_ONE_NO_FEE_DURATION(uint256 ... )
querrying!!!
Source address: u
State_var: fixedWithdrawPenalty
Finding type for fixedWithdrawPenalty(uint256 ... )
querrying!!!
Source address: u
State_var: maxWithdrawPenalty
Finding type for maxWithdrawPenalty(uint256 ... )
querrying!!!
Source address: u



receive


WAVAX_1(IWAVAX) := ϕ(['WAVAX_2', 'WAVAX_24', 'WAVAX_0', 'WAVAX_23', 'WAVAX_30', 'WAVAX_21', 'WAVAX_29', 'WAVAX_13', 'WAVAX_8'])
TMP_11 = CONVERT WAVAX_1 to address
TMP_12(bool) = msg.sender == TMP_11
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,LaunchEvent: you can't send AVAX directly to this contract)


Propogating parameters and globals to SSA variables...
End popogation
Name: WAVAX, Num: 1
Globalname: WAVAX
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
WAVAX_1(IWAVAX) := ϕ(['WAVAX_2', 'WAVAX_24', 'WAVAX_0', 'WAVAX_23', 'WAVAX_30', 'WAVAX_21', 'WAVAX_29', 'WAVAX_13', 'WAVAX_8'])
Phi
[i]Type for WAVAX

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_11 = CONVERT WAVAX_1 to address
Converting WAVAX_1

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_11 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(bool) = msg.sender == TMP_11
[i]Type for TMP_12

Name: TMP_12 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,LaunchEvent: you can't send AVAX directly to this contract)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


WAVAX_1(IWAVAX) := ϕ(['WAVAX_2', 'WAVAX_24', 'WAVAX_0', 'WAVAX_23', 'WAVAX_30', 'WAVAX_21', 'WAVAX_29', 'WAVAX_13', 'WAVAX_8'])
TMP_11 = CONVERT WAVAX_1 to address
TMP_12(bool) = msg.sender == TMP_11
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,LaunchEvent: you can't send AVAX directly to this contract)


Propogating parameters and globals to SSA variables...
End popogation

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
WAVAX_1(IWAVAX) := ϕ(['WAVAX_2', 'WAVAX_24', 'WAVAX_0', 'WAVAX_23', 'WAVAX_30', 'WAVAX_21', 'WAVAX_29', 'WAVAX_13', 'WAVAX_8'])
Phi
[i]Type for WAVAX

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_11 = CONVERT WAVAX_1 to address
Converting WAVAX_1

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: WAVAX Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_11 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: receive
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12(bool) = msg.sender == TMP_11
[i]Type for TMP_12

Name: TMP_12 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,LaunchEvent: you can't send AVAX directly to this contract)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: WAVAX
Source address: u
State_var: factory
Source address: u
State_var: floorPrice
Source address: u
State_var: pair
Source address: u
State_var: router
Source address: u
State_var: token
Source address: u
State_var: tokenIncentivesBalance
Source address: u
State_var: tokenIncentivesForUsers
Source address: u
State_var: tokenReserve
Source address: u
State_var: wavaxAllocated
Source address: u
State_var: wavaxReserve
Source address: u
State_var: PHASE_ONE_DURATION
Source address: u
State_var: PHASE_TWO_DURATION
Source address: u
State_var: auctionStart
Source address: u
State_var: stopped
Source address: u
State_var: rocketJoeFactory
Source address: u
State_var: getUserInfo
Source address: u
State_var: issuer
Source address: 4
State_var: lpSupply
Source address: u
State_var: maxAllocation
Source address: u
State_var: rJoe
Source address: u
State_var: rJoePerAvax
Source address: u
State_var: tokenIncentiveIssuerRefund
Source address: u
State_var: _owner
Source address: 5
State_var: initialized
Source address: u
State_var: issuerTimelock
Source address: u
State_var: userTimelock
Source address: u
State_var: PHASE_ONE_NO_FEE_DURATION
Source address: u
State_var: fixedWithdrawPenalty
Source address: u
State_var: maxWithdrawPenalty
Source address: u



initialize
Finding type for _issuer(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for _auctionStart(uint256 ... )
Finding type for _token(address ... )
prev address? u
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
Finding type for _tokenIncentivesPercent(uint256 ... )
Finding type for _floorPrice(uint256 ... )
Finding type for _maxWithdrawPenalty(uint256 ... )
Finding type for _fixedWithdrawPenalty(uint256 ... )
Finding type for _maxAllocation(uint256 ... )
Finding type for _userTimelock(uint256 ... )
Finding type for _issuerTimelock(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _issuer
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 9
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


initialized_1(bool) := ϕ(['initialized_0', 'initialized_3'])
REF_9(LaunchEvent.Phase) -> Phase.NotStarted
MODIFIER_CALL, LaunchEvent.atPhase(LaunchEvent.Phase)(REF_9)
TMP_14 = ! initialized_2 
TMP_15(None) = SOLIDITY_CALL require(bool,string)(TMP_14,LaunchEvent: already initialized)
TMP_16 = CONVERT msg.sender to IRocketJoeFactory
rocketJoeFactory_1(IRocketJoeFactory) := TMP_16(IRocketJoeFactory)
TMP_17(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_1(IRocketJoeFactory), function:wavax, arguments:[]  
rocketJoeFactory_2(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_1', 'rocketJoeFactory_15'])
TMP_18 = CONVERT TMP_17 to IWAVAX
WAVAX_2(IWAVAX) := TMP_18(IWAVAX)
TMP_19(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_2(IRocketJoeFactory), function:router, arguments:[]  
rocketJoeFactory_3(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_15', 'rocketJoeFactory_2'])
TMP_20 = CONVERT TMP_19 to IJoeRouter02
router_1(IJoeRouter02) := TMP_20(IJoeRouter02)
TMP_21(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_3(IRocketJoeFactory), function:factory, arguments:[]  
rocketJoeFactory_4(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_3', 'rocketJoeFactory_9', 'rocketJoeFactory_15'])
TMP_22 = CONVERT TMP_21 to IJoeFactory
factory_1(IJoeFactory) := TMP_22(IJoeFactory)
TMP_23(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_4(IRocketJoeFactory), function:rJoe, arguments:[]  
rocketJoeFactory_5(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_4', 'rocketJoeFactory_9', 'rocketJoeFactory_15'])
TMP_24 = CONVERT TMP_23 to IRocketJoeToken
rJoe_1(IRocketJoeToken) := TMP_24(IRocketJoeToken)
TMP_25(uint256) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_5(IRocketJoeFactory), function:rJoePerAvax, arguments:[]  
rocketJoeFactory_6(IRocketJoeFactory) := ϕ(['rocketJoeFactory_5', 'rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_15'])
rJoePerAvax_1(uint256) := TMP_25(uint256)
TMP_26(bool) = _maxWithdrawPenalty_1 <= 500000000000000000
TMP_27(None) = SOLIDITY_CALL require(bool,string)(TMP_26,LaunchEvent: maxWithdrawPenalty too big)
TMP_28(bool) = _fixedWithdrawPenalty_1 <= 500000000000000000
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,LaunchEvent: fixedWithdrawPenalty too big)
TMP_30(bool) = _userTimelock_1 <= 604800
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LaunchEvent: can't lock user LP for more than 7 days)
TMP_32(bool) = _issuerTimelock_1 > _userTimelock_1
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LaunchEvent: issuer can't withdraw before users)
TMP_34(bool) = _auctionStart_1 > block.timestamp
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,LaunchEvent: start of phase 1 cannot be in the past)
issuer_1(address) := _issuer_1(address)
auctionStart_1(uint256) := _auctionStart_1(uint256)
TMP_36(uint256) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_6(IRocketJoeFactory), function:PHASE_ONE_DURATION, arguments:[]  
rocketJoeFactory_7(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_6', 'rocketJoeFactory_9', 'rocketJoeFactory_15'])
PHASE_ONE_DURATION_1(uint256) := TMP_36(uint256)
TMP_37(uint256) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_7(IRocketJoeFactory), function:PHASE_ONE_NO_FEE_DURATION, arguments:[]  
rocketJoeFactory_8(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_7', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_15'])
PHASE_ONE_NO_FEE_DURATION_1(uint256) := TMP_37(uint256)
TMP_38(uint256) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_8(IRocketJoeFactory), function:PHASE_TWO_DURATION, arguments:[]  
rocketJoeFactory_9(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_15', 'rocketJoeFactory_8'])
PHASE_TWO_DURATION_1(uint256) := TMP_38(uint256)
TMP_39 = CONVERT _token_1 to IERC20Metadata
token_1(IERC20Metadata) := TMP_39(IERC20Metadata)
TMP_40 = CONVERT this to address
TMP_41(uint256) = HIGH_LEVEL_CALL, dest:token_1(IERC20Metadata), function:balanceOf, arguments:['TMP_40']  
token_2(IERC20Metadata) := ϕ(['token_11', 'token_19', 'token_15', 'token_2', 'token_26', 'token_1', 'token_22', 'token_21', 'token_25'])
balance_1(uint256) := TMP_41(uint256)
tokenIncentivesPercent_1(uint256) := _tokenIncentivesPercent_1(uint256)
TMP_42(uint256) = balance_1 (c)* 1000000000000000000
TMP_43(uint256) = 1000000000000000000 (c)+ _tokenIncentivesPercent_1
TMP_44(uint256) = TMP_42 (c)/ TMP_43
tokenReserve_1(uint256) := TMP_44(uint256)
TMP_45(uint256) = balance_1 (c)- tokenReserve_1
tokenIncentivesForUsers_1(uint256) := TMP_45(uint256)
tokenIncentivesBalance_1(uint256) := tokenIncentivesForUsers_1(uint256)
floorPrice_1(uint256) := _floorPrice_1(uint256)
maxWithdrawPenalty_1(uint256) := _maxWithdrawPenalty_1(uint256)
fixedWithdrawPenalty_1(uint256) := _fixedWithdrawPenalty_1(uint256)
maxAllocation_1(uint256) := _maxAllocation_1(uint256)
userTimelock_1(uint256) := _userTimelock_1(uint256)
issuerTimelock_1(uint256) := _issuerTimelock_1(uint256)
initialized_3(bool) := True(bool)


Propogating parameters and globals to SSA variables...
End popogation
Name: initialized, Num: 1
Globalname: initialized
global...

Name: PIC_25 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialized_1(bool) := ϕ(['initialized_0', 'initialized_3'])
Phi
[i]Type for initialized

Name: initialized Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_9(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
OUT KEY: global_Phase_NotStarted
OUT KEY: global_Phase_NotStarted
FTT: None
No field found
[i]Type for REF_9

Name: Phase.NotStarted Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
MODIFIER_CALL, LaunchEvent.atPhase(LaunchEvent.Phase)(REF_9)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _phase Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: _phase, Num: 1
Globalname: _phase

Name: _phase_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_phase_1(LaunchEvent.Phase) := ϕ(['REF_9', 'REF_38', 'REF_22'])
Phi
[i]Type for _phase

Name: _phase Function: atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
INTERNAL_CALL, LaunchEvent._atPhase(LaunchEvent.Phase)(_phase_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _phase Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: _phase, Num: 1
Globalname: _phase

Name: _phase_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_phase_1(LaunchEvent.Phase) := ϕ(['_phase_1'])
Phi
[i]Type for _phase

Name: _phase Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_64(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
Source address: u
[i]Type for REF_64

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(bool) = _phase_1 == REF_64
[i]Type for TMP_205

Name: TMP_205 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_66(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
OUT KEY: global_Phase_PhaseOne
OUT KEY: global_Phase_PhaseOne
FTT: None
No field found
[i]Type for REF_66

Name: Phase.PhaseOne Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_209(bool) = _phase_1 == REF_66
[i]Type for TMP_209

Name: TMP_209 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_206(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
Propogating parameters and globals to SSA variables...
End popogation
Name: auctionStart, Num: 2
Globalname: auctionStart
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: PHASE_ONE_DURATION, Num: 2
Globalname: PHASE_ONE_DURATION
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: PHASE_TWO_DURATION, Num: 2
Globalname: PHASE_TWO_DURATION
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auctionStart_2(uint256) := ϕ(['auctionStart_1', 'auctionStart_0'])
Phi
[i]Type for auctionStart

Name: auctionStart Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PHASE_ONE_DURATION_2(uint256) := ϕ(['PHASE_ONE_DURATION_1', 'PHASE_ONE_DURATION_0'])
Phi
[i]Type for PHASE_ONE_DURATION

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PHASE_TWO_DURATION_2(uint256) := ϕ(['PHASE_TWO_DURATION_0', 'PHASE_TWO_DURATION_1'])
Phi
[i]Type for PHASE_TWO_DURATION

Name: PHASE_TWO_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_47(bool) = block.timestamp < auctionStart_2
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_47

Name: TMP_47 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(bool) = auctionStart_2 == 0
[i]Type for TMP_48

Name: TMP_48 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_47 || TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_50(uint256) = auctionStart_2 (c)+ PHASE_ONE_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_50 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_50

Name: TMP_50 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(bool) = block.timestamp < TMP_50
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_51

Name: TMP_51 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_11(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
Source address: u
[i]Type for REF_11

Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_11
RETURN
init
end

Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_52(uint256) = auctionStart_2 (c)+ PHASE_ONE_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_52 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_52

Name: TMP_52 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint256) = TMP_52 (c)+ PHASE_TWO_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_TWO_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_53 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = block.timestamp < TMP_53
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_54

Name: TMP_54 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
REF_12(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
OUT KEY: global_Phase_PhaseTwo
OUT KEY: global_Phase_PhaseTwo
FTT: None
No field found
[i]Type for REF_12

Name: Phase.PhaseTwo Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
RETURN REF_12
RETURN
init
end

Name: Phase.PhaseTwo Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
REF_13(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
OUT KEY: global_Phase_PhaseThree
OUT KEY: global_Phase_PhaseThree
FTT: None
No field found
[i]Type for REF_13

Name: Phase.PhaseThree Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
RETURN REF_13
RETURN
init
end

Name: Phase.PhaseThree Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
REF_10(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
Source address: u
[i]Type for REF_10

Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_10
RETURN
init
end

Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: auctionStart Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: PHASE_TWO_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auctionStart_2(uint256) := ϕ(['auctionStart_1', 'auctionStart_0'])
Phi
[i]Type for auctionStart

Name: auctionStart Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PHASE_ONE_DURATION_2(uint256) := ϕ(['PHASE_ONE_DURATION_1', 'PHASE_ONE_DURATION_0'])
Phi
[i]Type for PHASE_ONE_DURATION

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PHASE_TWO_DURATION_2(uint256) := ϕ(['PHASE_TWO_DURATION_0', 'PHASE_TWO_DURATION_1'])
Phi
[i]Type for PHASE_TWO_DURATION

Name: PHASE_TWO_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_47(bool) = block.timestamp < auctionStart_2
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_47

Name: TMP_47 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(bool) = auctionStart_2 == 0
[i]Type for TMP_48

Name: TMP_48 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_47 || TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_50(uint256) = auctionStart_2 (c)+ PHASE_ONE_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_50 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_50

Name: TMP_50 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(bool) = block.timestamp < TMP_50
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_51

Name: TMP_51 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_11(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_11

Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_11
RETURN
init
end

Name: Phase.PhaseOne Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_52(uint256) = auctionStart_2 (c)+ PHASE_ONE_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_ONE_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_52 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_52

Name: TMP_52 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint256) = TMP_52 (c)+ PHASE_TWO_DURATION_2
init
end
init
end
init
end
_______________

Name: PHASE_TWO_DURATION Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_53 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_53

Name: TMP_53 Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(bool) = block.timestamp < TMP_53
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_54

Name: TMP_54 Function: currentPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
REF_12(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
Source address: u
[i]Type for REF_12

Name: Phase.PhaseTwo Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_12
RETURN
init
end

Name: Phase.PhaseTwo Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
REF_13(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
Source address: u
[i]Type for REF_13

Name: Phase.PhaseThree Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_13
RETURN
init
end

Name: Phase.PhaseThree Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
REF_10(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
init
end
_______________

Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_10

Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN REF_10
RETURN
init
end

Name: Phase.NotStarted Function: currentPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for TMP_206

Name: TMP_206 Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_65(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
Source address: u
[i]Type for REF_65

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(bool) = TMP_206 == REF_65
[i]Type for TMP_207

Name: TMP_207 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,LaunchEvent: not in not started)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_68(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
Source address: u
[i]Type for REF_68

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(bool) = _phase_1 == REF_68
[i]Type for TMP_213

Name: TMP_213 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_210(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_210

Name: TMP_210 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_67(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
Source address: u
[i]Type for REF_67

Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = TMP_210 == REF_67
[i]Type for TMP_211

Name: TMP_211 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,LaunchEvent: not in phase one)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_70(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
Source address: u
[i]Type for REF_70

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = _phase_1 == REF_70
[i]Type for TMP_217

Name: TMP_217 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_214(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_214

Name: TMP_214 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_69(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
Source address: u
[i]Type for REF_69

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(bool) = TMP_214 == REF_69
[i]Type for TMP_215

Name: TMP_215 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(None) = SOLIDITY_CALL require(bool,string)(TMP_215,LaunchEvent: not in phase two)
[i]Type for TMP_216

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_221(None) = SOLIDITY_CALL revert(string)(LaunchEvent: unknown state)
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_218(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_218

Name: TMP_218 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_71(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
Source address: u
[i]Type for REF_71

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(bool) = TMP_218 == REF_71
[i]Type for TMP_219

Name: TMP_219 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,LaunchEvent: not in phase three)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: _phase, Num: 1
Globalname: _phase

Name: _phase_1 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_phase_1(LaunchEvent.Phase) := ϕ(['_phase_1'])
Phi
[i]Type for _phase

Name: _phase Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_64(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
init
end
_______________

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_64

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(bool) = _phase_1 == REF_64
[i]Type for TMP_205

Name: TMP_205 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_66(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
Source address: u
[i]Type for REF_66

Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(bool) = _phase_1 == REF_66
[i]Type for TMP_209

Name: TMP_209 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_206(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_206

Name: TMP_206 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_65(LaunchEvent.Phase) -> Phase.NotStarted
MEMBER
init
init
end
init
end
_______________

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_65

Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: NotStarted
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: NotStarted Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.NotStarted Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: NotStarted Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207(bool) = TMP_206 == REF_65
[i]Type for TMP_207

Name: TMP_207 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(None) = SOLIDITY_CALL require(bool,string)(TMP_207,LaunchEvent: not in not started)
[i]Type for TMP_208

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_68(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_68

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_213(bool) = _phase_1 == REF_68
[i]Type for TMP_213

Name: TMP_213 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_210(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_210

Name: TMP_210 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_67(LaunchEvent.Phase) -> Phase.PhaseOne
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_67

Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseOne
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseOne Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseOne Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseOne Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_211(bool) = TMP_210 == REF_67
[i]Type for TMP_211

Name: TMP_211 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_212(None) = SOLIDITY_CALL require(bool,string)(TMP_211,LaunchEvent: not in phase one)
[i]Type for TMP_212

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
REF_70(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_70

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = _phase_1 == REF_70
[i]Type for TMP_217

Name: TMP_217 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_214(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_214

Name: TMP_214 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_69(LaunchEvent.Phase) -> Phase.PhaseTwo
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_69

Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseTwo
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseTwo Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseTwo Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseTwo Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_215(bool) = TMP_214 == REF_69
[i]Type for TMP_215

Name: TMP_215 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_216(None) = SOLIDITY_CALL require(bool,string)(TMP_215,LaunchEvent: not in phase two)
[i]Type for TMP_216

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_221(None) = SOLIDITY_CALL revert(string)(LaunchEvent: unknown state)
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_218(LaunchEvent.Phase) = INTERNAL_CALL, LaunchEvent.currentPhase()()
[i]Type for TMP_218

Name: TMP_218 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_71(LaunchEvent.Phase) -> Phase.PhaseThree
MEMBER
init
init
end
init
end
_______________

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for REF_71

Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Phase, Field: PhaseThree
#################
Member: 
Name: Phase Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: NotStarted, PhaseOne, PhaseTwo, PhaseThree
Finance Type: undef
Fieldf: 
Name: PhaseThree Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: Phase.PhaseThree Function: _atPhase
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: PhaseThree Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_219(bool) = TMP_218 == REF_71
[i]Type for TMP_219

Name: TMP_219 Function: _atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_220(None) = SOLIDITY_CALL require(bool,string)(TMP_219,LaunchEvent: not in phase three)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Name: _phase, Num: 1
Globalname: _phase

Name: _phase_1 Function: atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_phase_1(LaunchEvent.Phase) := ϕ(['REF_9', 'REF_38', 'REF_22'])
Phi
[i]Type for _phase

Name: _phase Function: atPhase
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Source address: u
Name: _phase, Num: 1
Globalname: _phase
End popogation
INTERNAL_CALL, LaunchEvent._atPhase(LaunchEvent.Phase)(_phase_1)
init
end
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: initialized, Num: 2
Globalname: initialized
global...

Name: PIC_25 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_14 = ! initialized_2 
[i]Type for TMP_14

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(None) = SOLIDITY_CALL require(bool,string)(TMP_14,LaunchEvent: already initialized)
[i]Type for TMP_15

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: rocketJoeFactory, Num: 1
Globalname: rocketJoeFactory
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_16 = CONVERT msg.sender to IRocketJoeFactory
Converting msg.sender
new address made for msg.sender
prev address? u
global assignment: 6
6
6
[i]Type for TMP_16

Name: TMP_16 Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
XXXX
rocketJoeFactory_1(IRocketJoeFactory) := TMP_16(IRocketJoeFactory)
asgn
init
end
_______________

Name: TMP_16 Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef

Name: rocketJoeFactory Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 6
Finance type key: (-1, -1)
[i]Type for rocketJoeFactory

Name: rocketJoeFactory Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: 6
Propogating parameters and globals to SSA variables...
Name: WAVAX, Num: 2
Globalname: WAVAX
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Name: rocketJoeFactory, Num: 2
Globalname: rocketJoeFactory
global...

Name: rocketJoeFactory Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
Source address: 6

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
Phid
TMP_17(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_1(IRocketJoeFactory), function:wavax, arguments:[]  
High Call: wavax
Running querryfc
Written func info: LaunchEvent, wavax
Retvar: ('c', [-1], [-1], 18, 'u', 1)
([-1], [-1], 18, 'u', 1, -1)
[i]Type for TMP_17

Name: TMP_17 Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
rocketJoeFactory_2(IRocketJoeFactory) := ϕ(['rocketJoeFactory_17', 'rocketJoeFactory_21', 'rocketJoeFactory_19', 'rocketJoeFactory_9', 'rocketJoeFactory_1', 'rocketJoeFactory_15'])
Phi
[i]Type for rocketJoeFactory

Name: rocketJoeFactory Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18 = CONVERT TMP_17 to IWAVAX
Converting TMP_17

Name: TMP_17 Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_17 Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_18 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 1
WAVAX
[i]Type for TMP_18

Name: TMP_18 Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: WAVAX
Value: u
Fields: 
Finance Type: undef
XXXX
WAVAX_2(IWAVAX) := TMP_18(IWAVAX)
asgn
init
end
_______________

Name: TMP_18 Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: WAVAX
Value: u
Fields: 
Finance Type: undef

Name: WAVAX Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: 1
Finance type key: (-1, -1)
[i]Type for WAVAX

Name: WAVAX Function: initialize
Num: -1
Den: -1
Address: 1
Norm: 18
LF: WAVAX
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: 1
Propogating parameters and globals to SSA variables...
Name: router, Num: 1
Globalname: router
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Name: rocketJoeFactory, Num: 3
Globalname: rocketJoeFactory
global...

Name: rocketJoeFactory Function: initialize
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
Source address: 6

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: u
LF: LaunchEvent
Value: u
Fields: 
Finance Type: undef
Phid
TMP_19(address) = HIGH_LEVEL_CALL, dest:rocketJoeFactory_2(IRocketJoeFactory), function:router, arguments:[]  
High Call: router
Running querryfc
Written func info: LaunchEvent, router
Handling balance function!
6
Executing Group 23
[*] Tested 4 warnings for Rocket Joe
Group 23 complete
Testing complete
