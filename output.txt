Switched global version to 0.8.9
Currently Omitted (9)
Analyzed_contracts_count: 9
total compilations: 2, contracts: 9
contract name: VaderReserve
Add to address_to_label {'global:_owner': 1}
Addr:global__owner : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2}
Addr:global__ZERO_ADDRESS : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3}
Addr:global_router : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999}
Addr:grant_recipient : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998}
Addr:initialize__router : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997}
Addr:initialize__dao : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996}
Addr:reimburseImpermanentLoss_recipient : 0
Mark functions Adding: VaderReserve, constructor, True
[*]Marked
Mark functions Adding: VaderReserve, reserve, True
[X]No Binary
Mark functions Adding: VaderReserve, grant, True
[*]Marked
Mark functions Adding: VaderReserve, initialize, True
[*]Marked
Mark functions Adding: VaderReserve, reimburseImpermanentLoss, True
[*]Marked
Mark functions Adding: VaderReserve, _min, True
[x] Not visible 
Mark functions Adding: VaderReserve, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: router
Finding type for router(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: vader
Finding type for vader(IERC20 ... )
Value: u
Source address: u
State_var: _GRANT_DELAY
Finding type for _GRANT_DELAY(uint256 ... )
Value: u
Source address: u
State_var: lastGrant
Finding type for lastGrant(uint256 ... )
Value: u
Source address: u
State_var: _MAX_BASIS_POINTS
Finding type for _MAX_BASIS_POINTS(uint256 ... )
Value: u
Source address: u
State_var: _MAX_GRANT_BASIS_POINTS
Finding type for _MAX_GRANT_BASIS_POINTS(uint256 ... )
Value: u
Source address: u
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _ZERO_ADDRESS
Finding type for _ZERO_ADDRESS(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: _ONE_YEAR
Finding type for _ONE_YEAR(uint256 ... )
Value: u
Source address: u
contract name: IVaderReserve
contract name: Ownable
contract name: IERC20
contract name: IERC20Permit
contract name: SafeERC20
contract name: Address
contract name: Context
contract name: ProtocolConstants
Running check on VaderReserve
Reading Function: constructor
Checking funcion...



constructor
Function name: constructor
Finding type for _vader(IERC20 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
constructor(IERC20)


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
TMP_16(bool) = _vader_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
vader_1(IERC20) := _vader_1(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 1
Globalname: _ZERO_ADDRESS, contract_name: VaderReserve
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _vader_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: vader_1, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 1
Globalname: vader, contract_name: VaderReserve
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
vader_1(IERC20) := _vader_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
TMP_16(bool) = _vader_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
vader_1(IERC20) := _vader_1(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IERC20
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _vader_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderReserve::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _vader_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _vader, Num: 1
Globalname: _vader, contract_name: VaderReserve
Ssa_name: vader_1, name: vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
vader_1(IERC20) := _vader_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: reserve
Function reserve not marked
Reading Function: grant
Checking funcion...



grant
Function name: grant
Finding type for recipient(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for amount(uint256 ... )
Value: u
New param cache [[[], [], 0, 'recipient', [], -1, -999, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
grant(address,uint256)


_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_0', '_MAX_BASIS_POINTS_5'])
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, VaderReserve.throttle()()
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
vader_7(IERC20) := ϕ(['vader_3'])
TMP_21(uint256) = TMP_20 (c)* _MAX_GRANT_BASIS_POINTS_4
TMP_22(uint256) = TMP_21 (c)/ _MAX_BASIS_POINTS_4
TMP_23(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_22,amount_1)
amount_2(uint256) := TMP_23(uint256)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_8', 'recipient_1', 'amount_2'] 
Emit GrantDistributed(recipient_1,amount_2)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _MAX_BASIS_POINTS_1, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_BASIS_POINTS, Num: 1
Globalname: _MAX_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_GRANT_BASIS_POINTS_1, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_GRANT_BASIS_POINTS, Num: 1
Globalname: _MAX_GRANT_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: vader_4, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 4
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_0', '_MAX_BASIS_POINTS_5'])
Phi
[i]Type for _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
Phi
[i]Type for _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyOwner()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
_checkOwner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
FIND RETURN
ENTRY_POINT
owner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 1
Globalname: _owner, contract_name: VaderReserve
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
FIND RETURN
ENTRY_POINT
_msgSender()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Source address: u
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
Old param cache: []
Source address: 1
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, VaderReserve.throttle()()
New param cache []
FIND RETURN
ENTRY_POINT
throttle()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _GRANT_DELAY, Num: 1
Globalname: _GRANT_DELAY, contract_name: VaderReserve
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: lastGrant_1, name: lastGrant

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastGrant, Num: 1
Globalname: lastGrant, contract_name: VaderReserve
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_GRANT_DELAY_1(uint256) := ϕ(['_GRANT_DELAY_0'])
Phi
[i]Type for _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lastGrant_1(uint256) := ϕ(['lastGrant_0', 'lastGrant_2'])
Phi
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = lastGrant_1 (c)+ _GRANT_DELAY_1
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_48 <= block.timestamp
lnorm: u rnorm: u
[i]Type for TMP_49

Name: TMP_49 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,VaderReserve::throttle: Grant Too Fast)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_2, name: lastGrant

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastGrant, Num: 2
Globalname: lastGrant, contract_name: VaderReserve
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
lastGrant_2(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_GRANT_DELAY_1(uint256) := ϕ(['_GRANT_DELAY_0'])
Phi
[i]Type for _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lastGrant_1(uint256) := ϕ(['lastGrant_0', 'lastGrant_2'])
Phi
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_48 cleared
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastGrant_1, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _GRANT_DELAY_1, name: _GRANT_DELAY

Name: _GRANT_DELAY Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(uint256) = lastGrant_1 (c)+ _GRANT_DELAY_1
Source address: u
[i]Type for TMP_48

Name: TMP_48 Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_49(bool) = TMP_48 <= block.timestamp
lnorm: u rnorm: u
[i]Type for TMP_49

Name: TMP_49 Function: throttle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,VaderReserve::throttle: Grant Too Fast)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastGrant_2, name: lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
lastGrant_2(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastGrant

Name: lastGrant Function: throttle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] TMP_23 cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_GRANT_BASIS_POINTS, Num: 4
Globalname: _MAX_GRANT_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _MAX_BASIS_POINTS, Num: 4
Globalname: _MAX_BASIS_POINTS, contract_name: VaderReserve
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
End popogation
Ssa_name: vader_7, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 7
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
New param cache []
FIND RETURN
ENTRY_POINT
reserve()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vader_2, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 2
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
vader_2(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_18 cleared
[i] TMP_19 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vader_3, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 3
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_18 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 4
4
4
[i]Type for TMP_18

Name: TMP_18 Function: reserve
Num: -1
Den: -1
Address: 4
Norm: u
LF: VaderReserve
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(uint256) = HIGH_LEVEL_CALL, dest:vader_2(IERC20), function:balanceOf, arguments:['TMP_18']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
u
prev address? u
global assignment: 5
5
[i]Type for TMP_19

Name: TMP_19 Function: reserve
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_3(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_2', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_19
RETURN

Name: TMP_19 Function: reserve
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vader_2(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_18 cleared
[i] TMP_19 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_2, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: vader_3, name: vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_18 = CONVERT this to address
Converting this
4
[i]Type for TMP_18

Name: TMP_18 Function: reserve
Num: 
Den: 
Address: 4
Norm: u
LF: VaderReserve
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_19(uint256) = HIGH_LEVEL_CALL, dest:vader_2(IERC20), function:balanceOf, arguments:['TMP_18']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20, balanceOf
Handling balance function!
5
[i]Type for TMP_19

Name: TMP_19 Function: reserve
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_3(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_2', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reserve
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_19
RETURN

Name: TMP_19 Function: reserve
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_7(IERC20) := ϕ(['vader_3'])
Phi
[i]Type for vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_21(uint256) = TMP_20 (c)* _MAX_GRANT_BASIS_POINTS_4
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_21

Name: TMP_21 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_22(uint256) = TMP_21 (c)/ _MAX_BASIS_POINTS_4
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
5
-1
[i]Type for TMP_22

Name: TMP_22 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_23(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_22,amount_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
[[5], [-1], 'u', None, [], 0, 'u', 'u']

Name: a Function: None
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[], [], 'u', None, [], -1, 'u', 'u']

Name: b Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_min(uint256,uint256)
Propogating All
Propogating All
b_1
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
a_1
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
b_1
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
a_1
Ssa_name: a_1, name: a

Name: a_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: a_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
a_1(uint256) := ϕ(['TMP_22', 'TMP_36'])
Phi
[i]Type for a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['amount_1', 'amount_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_40 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_40(bool) = a_1 < b_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN b_1
RETURN

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN a_1
RETURN

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] a cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
a_1(uint256) := ϕ(['TMP_22', 'TMP_36'])
Phi
[i]Type for a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
b_1(uint256) := ϕ(['amount_1', 'amount_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for b

Name: b Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_40 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: _min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b, contract_name: VaderReserve
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_40(bool) = a_1 < b_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN b_1
RETURN

Name: b_1 Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: a_1, name: a

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN a_1
RETURN

Name: a Function: _min
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
([5], [-1], 'u', 'u', 'u', 0)
[i]Type for TMP_23

Name: TMP_23 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
amount_2(uint256) := TMP_23(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for amount

Name: amount Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: vader_8, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 8
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_8, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_8', 'recipient_1', 'amount_2'] 
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation


_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_0', '_MAX_BASIS_POINTS_5'])
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, VaderReserve.throttle()()
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
vader_7(IERC20) := ϕ(['vader_3'])
TMP_21(uint256) = TMP_20 (c)* _MAX_GRANT_BASIS_POINTS_4
TMP_22(uint256) = TMP_21 (c)/ _MAX_BASIS_POINTS_4
TMP_23(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_22,amount_1)
amount_2(uint256) := TMP_23(uint256)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_8', 'recipient_1', 'amount_2'] 
Emit GrantDistributed(recipient_1,amount_2)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _MAX_BASIS_POINTS_1, name: _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _MAX_GRANT_BASIS_POINTS_1, name: _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_4, name: vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_MAX_BASIS_POINTS_1(uint256) := ϕ(['_MAX_BASIS_POINTS_0', '_MAX_BASIS_POINTS_5'])
Phi
[i]Type for _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_MAX_GRANT_BASIS_POINTS_1(uint256) := ϕ(['_MAX_GRANT_BASIS_POINTS_0', '_MAX_GRANT_BASIS_POINTS_5'])
Phi
[i]Type for _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
vader_4(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, VaderReserve.throttle()()
New param cache []
Old param cache: []
[i] TMP_20 cleared
[i] TMP_21 cleared
[i] TMP_22 cleared
[i] TMP_23 cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _MAX_GRANT_BASIS_POINTS_4, name: _MAX_GRANT_BASIS_POINTS

Name: _MAX_GRANT_BASIS_POINTS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: _MAX_BASIS_POINTS_4, name: _MAX_BASIS_POINTS

Name: _MAX_BASIS_POINTS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
End popogation
Ssa_name: vader_7, name: vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_20(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_7(IERC20) := ϕ(['vader_3'])
Phi
[i]Type for vader

Name: vader Function: grant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_21(uint256) = TMP_20 (c)* _MAX_GRANT_BASIS_POINTS_4
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_21

Name: TMP_21 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_22(uint256) = TMP_21 (c)/ _MAX_BASIS_POINTS_4
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
5
-1
[i]Type for TMP_22

Name: TMP_22 Function: grant
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_23(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_22,amount_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_23

Name: TMP_23 Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_2(uint256) := TMP_23(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
Ssa_name: vader_8, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_8, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_8', 'recipient_1', 'amount_2'] 
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: grant
Num: 
Den: 
Address: -999
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_2, name: amount

Name: amount Function: grant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount, Num: 2
Globalname: amount, contract_name: VaderReserve
End popogation
Reading Function: initialize
Checking funcion...



initialize
Function name: initialize
Finding type for _router(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _dao(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
New param cache [[[], [], 0, '_router', [], -1, -998, 'u'], [[], [], 0, '_dao', [], -1, -997, 'u']]
FIND RETURN
ENTRY_POINT
initialize(address,address)


_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_28(bool) = _router_1 != _ZERO_ADDRESS_3
TMP_29(bool) = _dao_1 != _ZERO_ADDRESS_3
TMP_30(bool) = TMP_28 && TMP_29
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,VaderReserve::initialize: Incorrect Arguments)
router_1(address) := _router_1(address)
INTERNAL_CALL, Ownable.transferOwnership(address)(_dao_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_2, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 2
Globalname: _ZERO_ADDRESS, contract_name: VaderReserve
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _router_1, name: _router

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _dao_1, name: _dao

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 3
Globalname: _ZERO_ADDRESS, contract_name: VaderReserve
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28(bool) = _router_1 != _ZERO_ADDRESS_3
[i]Type for TMP_28

Name: TMP_28 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(bool) = _dao_1 != _ZERO_ADDRESS_3
[i]Type for TMP_29

Name: TMP_29 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(bool) = TMP_28 && TMP_29
[i]Type for TMP_30

Name: TMP_30 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,VaderReserve::initialize: Incorrect Arguments)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: router_1, name: router

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: router, Num: 1
Globalname: router, contract_name: VaderReserve
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
router_1(address) := _router_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for router

Name: router Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Ownable.transferOwnership(address)(_dao_1)
New param cache [[[], [], 0, '_dao', [], -1, -997, 'u']]
[[], [], 0, '_dao', [], -1, -997, 'u']

Name: newOwner Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
transferOwnership(address)
Propogating All
Propogating All
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
newOwner_1(address) := ϕ(['_dao_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_9 cleared
[i] TMP_10 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_9 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = newOwner_1 != TMP_9
[i]Type for TMP_10

Name: TMP_10 Function: transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_11(None) = SOLIDITY_CALL require(bool,string)(TMP_10,Ownable: new owner is the zero address)
[i]Type for TMP_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Ownable._transferOwnership(address)(newOwner_1)
New param cache [[[], [], 0, '_dao', [], -1, -997, 'u']]
[[], [], 0, '_dao', [], -1, -997, 'u']

Name: newOwner Function: None
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transferOwnership(address)
Propogating All
Propogating All
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
newOwner_1
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
oldOwner_1
Ssa_name: oldOwner_1, name: oldOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owner_2, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 2
Globalname: _owner, contract_name: VaderReserve
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
newOwner_1(address) := ϕ(['newOwner_1', 'TMP_6', 'TMP_0'])
Phi
[i]Type for newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
[i] oldOwner cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldOwner, Num: 1
Globalname: oldOwner, contract_name: VaderReserve
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
Source address: 1
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_3, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 3
Globalname: _owner, contract_name: VaderReserve
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
_owner_3(address) := newOwner_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
newOwner_1(address) := ϕ(['newOwner_1', 'TMP_6', 'TMP_0'])
Phi
[i]Type for newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
[i] oldOwner cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_2, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
Name: oldOwner, Num: 1
Globalname: oldOwner, contract_name: VaderReserve
End popogation
oldOwner_1(address) := _owner_2(address)
asgn
Source address: 1
Finance type key: (-1, -1)
[i]Type for oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_3, name: _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
_owner_3(address) := newOwner_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: _transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: oldOwner_1, name: oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Address: 1
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
[i] newOwner cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: _dao
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: newOwner_1 Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Copied ftype
newOwner_1(address) := ϕ(['_dao_1'])
Phi
[i]Type for newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_9 cleared
[i] TMP_10 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_9 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: transferOwnership
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = newOwner_1 != TMP_9
[i]Type for TMP_10

Name: TMP_10 Function: transferOwnership
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_11(None) = SOLIDITY_CALL require(bool,string)(TMP_10,Ownable: new owner is the zero address)
[i]Type for TMP_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: newOwner_1, name: newOwner

Name: newOwner Function: transferOwnership
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Ownable._transferOwnership(address)(newOwner_1)
New param cache [[[], [], 0, '_dao', [], -1, -997, 'u']]
Old param cache: [[[], [], 0, '_dao', [], -1, -997]]


_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_28(bool) = _router_1 != _ZERO_ADDRESS_3
TMP_29(bool) = _dao_1 != _ZERO_ADDRESS_3
TMP_30(bool) = TMP_28 && TMP_29
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,VaderReserve::initialize: Incorrect Arguments)
router_1(address) := _router_1(address)
INTERNAL_CALL, Ownable.transferOwnership(address)(_dao_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_2, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_2(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_28 cleared
[i] TMP_29 cleared
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_3, name: _ZERO_ADDRESS

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28(bool) = _router_1 != _ZERO_ADDRESS_3
[i]Type for TMP_28

Name: TMP_28 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(bool) = _dao_1 != _ZERO_ADDRESS_3
[i]Type for TMP_29

Name: TMP_29 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(bool) = TMP_28 && TMP_29
[i]Type for TMP_30

Name: TMP_30 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,VaderReserve::initialize: Incorrect Arguments)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: _router_1, name: _router

Name: _router_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
Ssa_name: router_1, name: router

Name: router Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
End popogation
router_1(address) := _router_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for router

Name: router Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _router
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
Ssa_name: _dao_1, name: _dao

Name: _dao_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _dao
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Ownable.transferOwnership(address)(_dao_1)
New param cache [[[], [], 0, '_dao', [], -1, -997, 'u']]
Old param cache: [[[], [], 0, '_dao', [], -1, -997]]
Reading Function: reimburseImpermanentLoss
Checking funcion...



reimburseImpermanentLoss
Function name: reimburseImpermanentLoss
Finding type for recipient(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for amount(uint256 ... )
Value: u
New param cache [[[], [], 0, 'recipient', [], -1, -996, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
reimburseImpermanentLoss(address,uint256)


vader_9(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
router_2(address) := ϕ(['router_0', 'router_1'])
TMP_34(bool) = msg.sender == router_2
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderReserve::reimburseImpermanentLoss: Insufficient Priviledges)
TMP_36(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
vader_10(IERC20) := ϕ(['vader_3'])
TMP_37(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_36,amount_1)
actualAmount_1(uint256) := TMP_37(uint256)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_11', 'recipient_1', 'actualAmount_1'] 
RETURN 0


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vader_9, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 9
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: router_2, name: router

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: router, Num: 2
Globalname: router, contract_name: VaderReserve
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
Source address: 3
vader_9(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
router_2(address) := ϕ(['router_0', 'router_1'])
Phi
[i]Type for router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: router_2, name: router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
Ssa_name: router_2, name: router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = msg.sender == router_2
[i]Type for TMP_34

Name: TMP_34 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderReserve::reimburseImpermanentLoss: Insufficient Priviledges)
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] actualAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: amount_1, name: amount

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: actualAmount_1, name: actualAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
End popogation
Ssa_name: vader_10, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 10
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_36(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: reimburseImpermanentLoss
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_10(IERC20) := ϕ(['vader_3'])
Phi
[i]Type for vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_36,amount_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_37

Name: TMP_37 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
actualAmount_1(uint256) := TMP_37(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: recipient_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: -996
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: actualAmount_1, name: actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
Ssa_name: vader_11, name: vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vader, Num: 11
Globalname: vader, contract_name: VaderReserve
global...

Name: vader Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: -996
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_11, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: actualAmount_1, name: actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_11', 'recipient_1', 'actualAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef


vader_9(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
router_2(address) := ϕ(['router_0', 'router_1'])
TMP_34(bool) = msg.sender == router_2
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderReserve::reimburseImpermanentLoss: Insufficient Priviledges)
TMP_36(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
vader_10(IERC20) := ϕ(['vader_3'])
TMP_37(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_36,amount_1)
actualAmount_1(uint256) := TMP_37(uint256)
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_11', 'recipient_1', 'actualAmount_1'] 
RETURN 0


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: vader_9, name: vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: router_2, name: router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
vader_9(IERC20) := ϕ(['vader_8', 'vader_11', 'vader_0', 'vader_1', 'vader_3'])
Phi
[i]Type for vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
router_2(address) := ϕ(['router_0', 'router_1'])
Phi
[i]Type for router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: router_2, name: router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
Ssa_name: router_2, name: router

Name: router Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: 3
Norm: 0
LF: router
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_34(bool) = msg.sender == router_2
[i]Type for TMP_34

Name: TMP_34 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(None) = SOLIDITY_CALL require(bool,string)(TMP_34,VaderReserve::reimburseImpermanentLoss: Insufficient Priviledges)
[i]Type for TMP_35

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] actualAmount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: amount_1, name: amount

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: VaderReserve
Ssa_name: actualAmount_1, name: actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
End popogation
Ssa_name: vader_10, name: vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(uint256) = INTERNAL_CALL, VaderReserve.reserve()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: reimburseImpermanentLoss
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
vader_10(IERC20) := ϕ(['vader_3'])
Phi
[i]Type for vader

Name: vader Function: reimburseImpermanentLoss
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(uint256) = INTERNAL_CALL, VaderReserve._min(uint256,uint256)(TMP_36,amount_1)
New param cache [[[5], [-1], 'u', None, [], 0, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[5], [-1], 'u', None, [], 0, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_37

Name: TMP_37 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
actualAmount_1(uint256) := TMP_37(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: -996
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: actualAmount_1, name: actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
Ssa_name: vader_11, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: reimburseImpermanentLoss
Num: 
Den: 
Address: -996
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: vader_11, name: vader

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: actualAmount_1, name: actualAmount

Name: actualAmount Function: reimburseImpermanentLoss
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: actualAmount, Num: 1
Globalname: actualAmount, contract_name: VaderReserve
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['vader_11', 'recipient_1', 'actualAmount_1'] 
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: _min
Function _min not marked
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:_owner
Address: 2, Label: global:_ZERO_ADDRESS
Address: 3, Label: global:router
Address: -999, Label: grant:recipient
Address: -998, Label: initialize:_router
Address: -997, Label: initialize:_dao
Address: -996, Label: reimburseImpermanentLoss:recipient
Address: 4, Label: reserve:TMP_18
Address: 4, Label: global:this
Address: 5, Label: reserve:vader
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: u
    Set: {5}
    Fin: NULL
Function count: 13
Analyzed_contracts_count: 15
total compilations: 2, contracts: 15
contract name: VaderRouterV2
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6}
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6, 'global:foreignAsset': 7}
Addr:global__ZERO_ADDRESS : 0
Addr:global__owner : 0
Addr:global_nativeAsset : 18
Addr:global_foreignAsset : 6
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6, 'global:foreignAsset': 7, 'addLiquidity:to': -995}
Addr:addLiquidity_to : 0
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6, 'global:foreignAsset': 7, 'addLiquidity:to': -995, 'removeLiquidity:tokenA': -994}
Addr:removeLiquidity_tokenA : 18
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6, 'global:foreignAsset': 7, 'addLiquidity:to': -995, 'removeLiquidity:tokenA': -994, 'removeLiquidity:tokenB': -993}
Addr:removeLiquidity_tokenB : 6
Add to address_to_label {'global:_owner': 1, 'global:_ZERO_ADDRESS': 2, 'global:router': 3, 'grant:recipient': -999, 'initialize:_router': -998, 'initialize:_dao': -997, 'reimburseImpermanentLoss:recipient': -996, 'reserve:TMP_18': 4, 'global:this': 4, 'reserve:vader': 5, 'global:nativeAsset': 6, 'global:foreignAsset': 7, 'addLiquidity:to': -995, 'removeLiquidity:tokenA': -994, 'removeLiquidity:tokenB': -993, 'removeLiquidity:to': -992}
Addr:removeLiquidity_to : 0
Mark functions Adding: VaderRouterV2, constructor, True
[*]Marked
Mark functions Adding: VaderRouterV2, addLiquidity, True
[X]No Binary
Mark functions Adding: VaderRouterV2, addLiquidity, True
[*]Marked
Mark functions Adding: VaderRouterV2, removeLiquidity, True
[*]Marked
Mark functions Adding: VaderRouterV2, swapExactTokensForTokens, True
[*]Marked
Mark functions Adding: VaderRouterV2, initialize, True
[*]Marked
Mark functions Adding: VaderRouterV2, _swap, True
[x] Not visible 
Mark functions Adding: VaderRouterV2, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: nativeAsset
Finding type for nativeAsset(IERC20 ... )
Value: u
Source address: u
State_var: pool
Finding type for pool(IVaderPoolV2 ... )
Value: u
Source address: u
State_var: _ONE_YEAR
Finding type for _ONE_YEAR(uint256 ... )
Value: u
Source address: u
State_var: reserve
Finding type for reserve(IVaderReserve ... )
Value: u
Source address: u
State_var: _ZERO_ADDRESS
Finding type for _ZERO_ADDRESS(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
contract name: VaderMath
contract name: IBasePoolV2
contract name: IVaderPoolV2
contract name: IVaderRouterV2
contract name: IVaderReserve
contract name: Ownable
contract name: IERC20
contract name: IERC20Permit
contract name: SafeERC20
contract name: IERC721
contract name: Address
contract name: Context
contract name: IERC165
contract name: ProtocolConstants
Running check on VaderRouterV2
Reading Function: constructor
Checking funcion...



constructor
Function name: constructor
Finding type for _pool(IVaderPoolV2 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
constructor(IVaderPoolV2)


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolV2
TMP_16(bool) = _pool_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouterV2::constructor: Incorrect Arguments)
pool_1(IVaderPoolV2) := _pool_1(IVaderPoolV2)
TMP_18(IERC20) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPoolV2), function:nativeAsset, arguments:[]  
pool_2(IVaderPoolV2) := ϕ(['pool_12', 'pool_1', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_1(IERC20) := TMP_18(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ZERO_ADDRESS, Num: 1
Globalname: _ZERO_ADDRESS, contract_name: VaderRouterV2
global...

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolV2
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
VaderPoolV2
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: VaderPoolV2
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _pool_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouterV2::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: pool_1, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 1
Globalname: pool, contract_name: VaderRouterV2
global...

Name: PIC_28 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
pool_1(IVaderPoolV2) := _pool_1(IVaderPoolV2)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_18 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 1
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: pool_2, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 2
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_18(IERC20) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPoolV2), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolV2, nativeAsset
Retvar: ('c', [-1], [-1], 18, 'u', 6)
([-1], [-1], 18, 'u', 6, -1)
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_2(IVaderPoolV2) := ϕ(['pool_12', 'pool_1', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(IERC20) := TMP_18(IERC20)
asgn
Source address: 6
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: 6


_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolV2
TMP_16(bool) = _pool_1 != TMP_15
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouterV2::constructor: Incorrect Arguments)
pool_1(IVaderPoolV2) := _pool_1(IVaderPoolV2)
TMP_18(IERC20) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPoolV2), function:nativeAsset, arguments:[]  
pool_2(IVaderPoolV2) := ϕ(['pool_12', 'pool_1', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_1(IERC20) := TMP_18(IERC20)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_15 cleared
[i] TMP_16 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ZERO_ADDRESS_1, name: _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
End popogation
TMP_15 = CONVERT _ZERO_ADDRESS_1 to IVaderPoolV2
Converting _ZERO_ADDRESS_1

Name: _ZERO_ADDRESS Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: _ZERO_ADDRESS
Value: u
Fields: 
Finance Type: undef
Source address: 2
VaderPoolV2
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: VaderPoolV2
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_16(bool) = _pool_1 != TMP_15
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,VaderRouterV2::constructor: Incorrect Arguments)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _pool, Num: 1
Globalname: _pool, contract_name: VaderRouterV2
Ssa_name: pool_1, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
pool_1(IVaderPoolV2) := _pool_1(IVaderPoolV2)
asgn
Finance type key: (-1, -1)
[i]Type for pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_18 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pool_1, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_1, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_1, name: nativeAsset

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: pool_2, name: pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_18(IERC20) = HIGH_LEVEL_CALL, dest:pool_1(IVaderPoolV2), function:nativeAsset, arguments:[]  
High Call: nativeAsset
Running querryfc
Found: None
Written func info: IVaderPoolV2, nativeAsset
Retvar: ('c', [-1], [-1], 18, 'u', 6)
([-1], [-1], 18, 'u', 6, -1)
[i]Type for TMP_18

Name: TMP_18 Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_2(IVaderPoolV2) := ϕ(['pool_12', 'pool_1', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_1(IERC20) := TMP_18(IERC20)
asgn
Source address: 6
Finance type key: (-1, -1)
[i]Type for nativeAsset

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: 6
Reading Function: addLiquidity
Checking funcion...



addLiquidity
Function name: addLiquidity
Finding type for tokenA(IERC20 ... )
Value: u
Finding type for tokenB(IERC20 ... )
Value: u
Finding type for amountADesired(uint256 ... )
Value: u
Finding type for amountBDesired(uint256 ... )
Value: u
Finding type for a(uint256 ... )
Value: u
Finding type for b(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -995, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
addLiquidity(IERC20,IERC20,uint256,uint256,uint256,uint256,address,uint256)


TMP_19(uint256) = INTERNAL_CALL, VaderRouterV2.addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)(tokenA_1,tokenB_1,amountADesired_1,amountBDesired_1,to_1,deadline_1)
RETURN TMP_19


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_19 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenB_1, name: tokenB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
End popogation
TMP_19(uint256) = INTERNAL_CALL, VaderRouterV2.addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)(tokenA_1,tokenB_1,amountADesired_1,amountBDesired_1,to_1,deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -995, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenA Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: tokenB Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountADesired Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountBDesired Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -995, 'u']

Name: to Function: None
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: deadline Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)
Propogating All
Propogating All
deadline_1
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
Propogating All
tokenA_1
Ssa_name: tokenA_1, name: tokenA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenB_1
Ssa_name: tokenB_1, name: tokenB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenB_1
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenB_1
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenA_1
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountBDesired_1
Ssa_name: amountBDesired_1, name: amountBDesired

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
tokenA_1
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountADesired_1
Ssa_name: amountADesired_1, name: amountADesired

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountADesired_1
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
amountBDesired_1
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
foreignDeposit_3
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
nativeDeposit_3
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
foreignAsset_3
Ssa_name: foreignAsset_3, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenA cleared
[i] tokenB cleared
[i] amountADesired cleared
[i] amountBDesired cleared
[i] to cleared
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: pool_3, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 3
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_2, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 2
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 6
tokenA_1(IERC20) := ϕ(['tokenA_1'])
Phi

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenB_1(IERC20) := ϕ(['tokenB_1'])
Phi

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
Phi

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
Phi

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
deadline_1(uint256) := ϕ(['deadline_1'])
Phi

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: deadline Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
ensure(uint256)
Propogating All
Propogating All
deadline_1
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
deadline_1(uint256) := ϕ(['deadline_1', 'deadline_1', 'deadline_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
TMP_87(bool) = deadline_1 >= block.timestamp
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_87

Name: TMP_87 Function: ensure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,VaderRouterV2::ensure: Expired)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
deadline_1(uint256) := ϕ(['deadline_1', 'deadline_1', 'deadline_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: ensure
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
TMP_87(bool) = deadline_1 >= block.timestamp
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_87

Name: TMP_87 Function: ensure
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,VaderRouterV2::ensure: Expired)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 3
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 6
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_20(bool) = tokenA_1 == nativeAsset_3
[i]Type for TMP_20

Name: TMP_20 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 4
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_6, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 6
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
High Call: supported
Running querryfc
[i]Type for TMP_21

Name: TMP_21 Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: foreignAsset_2, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 2
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_2(IERC20) := tokenB_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_23 cleared
[i] TMP_24 cleared
[i] TMP_25 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_5, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 5
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_4, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 4
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 6
TMP_23(bool) = tokenB_1 == nativeAsset_3
[i]Type for TMP_23

Name: TMP_23 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
High Call: supported
Running querryfc
[i]Type for TMP_24

Name: TMP_24 Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(bool) = TMP_23 && TMP_24
[i]Type for TMP_25

Name: TMP_25 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_26

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_2, name: foreignDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 2
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: foreignAsset_1, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 1
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_1(IERC20) := tokenA_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_2, name: nativeDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 2
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_2(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_1(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
[i] nativeDeposit cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: foreignAsset_3, name: foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Phi

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
Phi

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_7, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 7
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
High Call: mint
Running querryfc
Found: None
Written func info: IVaderPoolV2, mint
[i]Type for TMP_27

Name: TMP_27 Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenA cleared
[i] tokenB cleared
[i] amountADesired cleared
[i] amountBDesired cleared
[i] to cleared
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: pool_3, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_2, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
tokenA_1(IERC20) := ϕ(['tokenA_1'])
Phi

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenB_1(IERC20) := ϕ(['tokenB_1'])
Phi

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
Phi

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
Phi

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
deadline_1(uint256) := ϕ(['deadline_1'])
Phi

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_20(bool) = tokenA_1 == nativeAsset_3
[i]Type for TMP_20

Name: TMP_20 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
High Call: supported
Running querryfc
[i]Type for TMP_21

Name: TMP_21 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: foreignAsset_2, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 2
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_2(IERC20) := tokenB_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_23 cleared
[i] TMP_24 cleared
[i] TMP_25 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_5, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_4, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_23(bool) = tokenB_1 == nativeAsset_3
[i]Type for TMP_23

Name: TMP_23 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
High Call: supported
Running querryfc
[i]Type for TMP_24

Name: TMP_24 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(bool) = TMP_23 && TMP_24
[i]Type for TMP_25

Name: TMP_25 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_26

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_2, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 2
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: foreignAsset_1, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 1
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_1(IERC20) := tokenA_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_2, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 2
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_2(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_1(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
[i] nativeDeposit cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Phi

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
Phi

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
Phi

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_7, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
High Call: mint
Running querryfc
Found: None
Written func info: IVaderPoolV2, mint
[i]Type for TMP_27

Name: TMP_27 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_27(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_19
RETURN

Name: TMP_19 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_19(uint256) = INTERNAL_CALL, VaderRouterV2.addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)(tokenA_1,tokenB_1,amountADesired_1,amountBDesired_1,to_1,deadline_1)
RETURN TMP_19


Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_19 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: to_1, name: to

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
End popogation
TMP_19(uint256) = INTERNAL_CALL, VaderRouterV2.addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)(tokenA_1,tokenB_1,amountADesired_1,amountBDesired_1,to_1,deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -995, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -995], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_19

Name: TMP_19 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_19
RETURN

Name: TMP_19 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: addLiquidity
Checking funcion...



addLiquidity
Function name: addLiquidity
Finding type for tokenA(IERC20 ... )
Value: u
Finding type for tokenB(IERC20 ... )
Value: u
Finding type for amountADesired(uint256 ... )
Value: u
Finding type for amountBDesired(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? -995
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -995, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[], [], 0, 'to', [], -1, -995], [[], [], 'u', None, [], -1, 'u']]
FIND RETURN
ENTRY_POINT
addLiquidity(IERC20,IERC20,uint256,uint256,address,uint256)


tokenA_1(IERC20) := ϕ(['tokenA_1'])
tokenB_1(IERC20) := ϕ(['tokenB_1'])
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
to_1(address) := ϕ(['to_1'])
deadline_1(uint256) := ϕ(['deadline_1'])
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
TMP_20(bool) = tokenA_1 == nativeAsset_3
CONDITION TMP_20
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
foreignAsset_2(IERC20) := tokenB_1(IERC20)
TMP_23(bool) = tokenB_1 == nativeAsset_3
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
TMP_25(bool) = TMP_23 && TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
foreignAsset_1(IERC20) := tokenA_1(IERC20)
nativeDeposit_2(uint256) := amountADesired_1(uint256)
foreignDeposit_1(uint256) := amountADesired_1(uint256)
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
liquidity_1(uint256) := TMP_27(uint256)


[i] tokenA cleared
[i] tokenB cleared
[i] amountADesired cleared
[i] amountBDesired cleared
[i] to cleared
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: pool_3, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_2, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
tokenA_1(IERC20) := ϕ(['tokenA_1'])
Phi

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenB_1(IERC20) := ϕ(['tokenB_1'])
Phi

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
Phi

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
Phi

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
deadline_1(uint256) := ϕ(['deadline_1'])
Phi

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_20(bool) = tokenA_1 == nativeAsset_3
[i]Type for TMP_20

Name: TMP_20 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
High Call: supported
Running querryfc
[i]Type for TMP_21

Name: TMP_21 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: foreignAsset_2, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 2
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_2(IERC20) := tokenB_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_23 cleared
[i] TMP_24 cleared
[i] TMP_25 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_5, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_4, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_23(bool) = tokenB_1 == nativeAsset_3
[i]Type for TMP_23

Name: TMP_23 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
High Call: supported
Running querryfc
[i]Type for TMP_24

Name: TMP_24 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(bool) = TMP_23 && TMP_24
[i]Type for TMP_25

Name: TMP_25 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_26

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_2, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 2
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: foreignAsset_1, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 1
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_1(IERC20) := tokenA_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_2, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 2
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_2(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_1(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
[i] nativeDeposit cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Phi

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
Phi

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
Phi

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_7, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
High Call: mint
Running querryfc
Found: None
Written func info: IVaderPoolV2, mint
[i]Type for TMP_27

Name: TMP_27 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_27(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


tokenA_1(IERC20) := ϕ(['tokenA_1'])
tokenB_1(IERC20) := ϕ(['tokenB_1'])
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
to_1(address) := ϕ(['to_1'])
deadline_1(uint256) := ϕ(['deadline_1'])
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
TMP_20(bool) = tokenA_1 == nativeAsset_3
CONDITION TMP_20
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
foreignAsset_2(IERC20) := tokenB_1(IERC20)
TMP_23(bool) = tokenB_1 == nativeAsset_3
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
TMP_25(bool) = TMP_23 && TMP_24
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
foreignAsset_1(IERC20) := tokenA_1(IERC20)
nativeDeposit_2(uint256) := amountADesired_1(uint256)
foreignDeposit_1(uint256) := amountADesired_1(uint256)
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
liquidity_1(uint256) := TMP_27(uint256)


[i] tokenA cleared
[i] tokenB cleared
[i] amountADesired cleared
[i] amountBDesired cleared
[i] to cleared
[i] deadline cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: to_1 Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: pool_3, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_2, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
tokenA_1(IERC20) := ϕ(['tokenA_1'])
Phi

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenB_1(IERC20) := ϕ(['tokenB_1'])
Phi

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountADesired_1(uint256) := ϕ(['amountADesired_1'])
Phi

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountBDesired_1(uint256) := ϕ(['amountBDesired_1'])
Phi

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['to_1'])
Phi
[i]Type for to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
deadline_1(uint256) := ϕ(['deadline_1'])
Phi

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_3(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_2(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: deadline Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_20 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_20(bool) = tokenA_1 == nativeAsset_3
[i]Type for TMP_20

Name: TMP_20 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_21(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenB_1']  
High Call: supported
Running querryfc
[i]Type for TMP_21

Name: TMP_21 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_6(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_5', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: foreignAsset_2, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 2
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_2(IERC20) := tokenB_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_23 cleared
[i] TMP_24 cleared
[i] TMP_25 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_4, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenB_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenB, Num: 1
Globalname: tokenB, contract_name: VaderRouterV2
Ssa_name: nativeAsset_3, name: nativeAsset

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_5, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_4, name: nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_23(bool) = tokenB_1 == nativeAsset_3
[i]Type for TMP_23

Name: TMP_23 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(bool) = HIGH_LEVEL_CALL, dest:pool_4(IVaderPoolV2), function:supported, arguments:['tokenA_1']  
High Call: supported
Running querryfc
[i]Type for TMP_24

Name: TMP_24 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_5(IVaderPoolV2) := ϕ(['pool_4', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_4(IERC20) := ϕ(['nativeAsset_3', 'nativeAsset_7', 'nativeAsset_1', 'nativeAsset_4'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: addLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(bool) = TMP_23 && TMP_24
[i]Type for TMP_25

Name: TMP_25 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(None) = SOLIDITY_CALL require(bool,string)(TMP_25,VaderRouterV2::addLiquidity: Unsupported Assets Specified)
[i]Type for TMP_26

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_2, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 2
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_2(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: tokenA_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenA, Num: 1
Globalname: tokenA, contract_name: VaderRouterV2
Ssa_name: foreignAsset_1, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 1
Globalname: foreignAsset, contract_name: VaderRouterV2
End popogation
foreignAsset_1(IERC20) := tokenA_1(IERC20)
asgn
Finance type key: (-1, -1)
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_2, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 2
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_2(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: amountADesired_1, name: amountADesired

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountADesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountADesired, Num: 1
Globalname: amountADesired, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_1, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 1
Globalname: foreignDeposit, contract_name: VaderRouterV2
End popogation
foreignDeposit_1(uint256) := amountADesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] foreignAsset cleared
[i] nativeDeposit cleared
[i] foreignDeposit cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
foreignAsset_3(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Phi

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeDeposit_3(uint256) := ϕ(['nativeDeposit_1', 'nativeDeposit_2'])
Phi

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
foreignDeposit_3(uint256) := ϕ(['foreignDeposit_2', 'foreignDeposit_1'])
Phi

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] nativeDeposit cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: amountBDesired_1, name: amountBDesired

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBDesired_1 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBDesired, Num: 1
Globalname: amountBDesired, contract_name: VaderRouterV2
Ssa_name: nativeDeposit_1, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 1
Globalname: nativeDeposit, contract_name: VaderRouterV2
End popogation
nativeDeposit_1(uint256) := amountBDesired_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_27 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignDeposit_3, name: foreignDeposit

Name: foreignDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignDeposit, Num: 3
Globalname: foreignDeposit, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to Function: addLiquidity
Num: 
Den: 
Address: -995
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeDeposit_3, name: nativeDeposit

Name: nativeDeposit Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeDeposit, Num: 3
Globalname: nativeDeposit, contract_name: VaderRouterV2
Ssa_name: pool_6, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: foreignAsset_3, name: foreignAsset

Name: foreignAsset Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: foreignAsset, Num: 3
Globalname: foreignAsset, contract_name: VaderRouterV2
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_7, name: pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_27(uint256) = HIGH_LEVEL_CALL, dest:pool_6(IVaderPoolV2), function:mint, arguments:['foreignAsset_3', 'nativeDeposit_3', 'foreignDeposit_3', 'msg.sender', 'to_1']  
High Call: mint
Running querryfc
Found: None
Written func info: IVaderPoolV2, mint
[i]Type for TMP_27

Name: TMP_27 Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_7(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_6'])
Phi
[i]Type for pool

Name: pool Function: addLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_27(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: addLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: removeLiquidity
Checking funcion...



removeLiquidity
Function name: removeLiquidity
Finding type for tokenA(address ... )
prev address? u
Head Addr: -994
    Norm: 18
    Set: {-994}
    Fin: NULL
Finding type for tokenB(address ... )
prev address? u
Head Addr: -993
    Norm: 6
    Set: {-993}
    Fin: NULL
Finding type for id(uint256 ... )
Value: u
Finding type for amountAMin(uint256 ... )
Value: u
Finding type for amountBMin(uint256 ... )
Value: u
Finding type for to(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for deadline(uint256 ... )
Value: u
New param cache [[[], [], 18, 'tokenA', [], -1, -994, 'u'], [[], [], 6, 'tokenB', [], -1, -993, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -992, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)


pool_8(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
nativeAsset_5(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
reserve_1(IVaderReserve) := ϕ(['reserve_7', 'reserve_0', 'reserve_6'])
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
TMP_29(IERC20) = HIGH_LEVEL_CALL, dest:pool_9(IVaderPoolV2), function:positionForeignAsset, arguments:['id_1']  
pool_10(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_9'])
nativeAsset_7(IERC20) := ϕ(['nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3', 'nativeAsset_6'])
reserve_3(IVaderReserve) := ϕ(['reserve_7', 'reserve_6', 'reserve_2'])
_foreignAsset_1(IERC20) := TMP_29(IERC20)
_nativeAsset_1(IERC20) := nativeAsset_7(IERC20)
TMP_30 = CONVERT tokenA_1 to IERC20
TMP_31(bool) = _nativeAsset_1 == TMP_30
isNativeA_1(bool) := TMP_31(bool)
CONDITION isNativeA_1
TMP_35 = CONVERT tokenA_1 to IERC20
TMP_36(bool) = TMP_35 == _foreignAsset_1
TMP_37 = CONVERT tokenB_1 to IERC20
TMP_38(bool) = TMP_37 == _nativeAsset_1
TMP_39(bool) = TMP_36 && TMP_38
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,VaderRouterV2::removeLiquidity: Incorrect Addresses Specified)
TMP_32 = CONVERT tokenB_1 to IERC20
TMP_33(bool) = TMP_32 == _foreignAsset_1
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,VaderRouterV2::removeLiquidity: Incorrect Addresses Specified)
TMP_41 = CONVERT pool_10 to address
HIGH_LEVEL_CALL, dest:pool_10(IVaderPoolV2), function:transferFrom, arguments:['msg.sender', 'TMP_41', 'id_1']  
pool_11(IVaderPoolV2) := ϕ(['pool_10', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
reserve_4(IVaderReserve) := ϕ(['reserve_7', 'reserve_6', 'reserve_3'])
TUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_11(IVaderPoolV2), function:burn, arguments:['id_1', 'to_1']  
pool_12(IVaderPoolV2) := ϕ(['pool_11', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
reserve_5(IVaderReserve) := ϕ(['reserve_7', 'reserve_4', 'reserve_6'])
amountNative_1(uint256)= UNPACK TUPLE_0 index: 0 
amountForeign_1(uint256)= UNPACK TUPLE_0 index: 1 
coveredLoss_1(uint256)= UNPACK TUPLE_0 index: 2 
CONDITION isNativeA_1
amountA_1(uint256) := amountNative_1(uint256)
amountB_1(uint256) := amountForeign_1(uint256)
amountA_2(uint256) := amountForeign_1(uint256)
amountB_2(uint256) := amountNative_1(uint256)
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
TMP_43(bool) = amountA_3 >= amountAMin_1
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,VaderRouterV2: INSUFFICIENT_A_AMOUNT)
TMP_45(bool) = amountB_3 >= amountBMin_1
TMP_46(None) = SOLIDITY_CALL require(bool,string)(TMP_45,VaderRouterV2: INSUFFICIENT_B_AMOUNT)
TMP_47(uint256) = HIGH_LEVEL_CALL, dest:reserve_5(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
reserve_6(IVaderReserve) := ϕ(['reserve_7', 'reserve_5', 'reserve_6'])
temp_1(uint256) := TMP_47(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: pool_8, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 8
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_5, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 5
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 6
Ssa_name: reserve_1, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 1
Globalname: reserve, contract_name: VaderRouterV2
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
pool_8(IVaderPoolV2) := ϕ(['pool_0', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_5(IERC20) := ϕ(['nativeAsset_0', 'nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_1(IVaderReserve) := ϕ(['reserve_7', 'reserve_0', 'reserve_6'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: deadline_1, name: deadline

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
Ssa_name: deadline_1, name: deadline

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: deadline_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: deadline, Num: 1
Globalname: deadline, contract_name: VaderRouterV2
End popogation
MODIFIER_CALL, VaderRouterV2.ensure(uint256)(deadline_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i] TMP_29 cleared
[i] _foreignAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: pool_9, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 9
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: pool_9, name: pool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _foreignAsset, Num: 1
Globalname: _foreignAsset, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_10, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 10
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: nativeAsset_7, name: nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: nativeAsset, Num: 7
Globalname: nativeAsset, contract_name: VaderRouterV2
global...

Name: nativeAsset Function: constructor
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 6
Ssa_name: reserve_3, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 3
Globalname: reserve, contract_name: VaderRouterV2
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_29(IERC20) = HIGH_LEVEL_CALL, dest:pool_9(IVaderPoolV2), function:positionForeignAsset, arguments:['id_1']  
High Call: positionForeignAsset
Running querryfc
Found: None
Written func info: IVaderPoolV2, positionForeignAsset
Retvar: ('c', [-1], [-1], 6, 'u', 7)
id
([-1], [-1], 6, 'u', 7, -1)
[i]Type for TMP_29

Name: TMP_29 Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_10(IVaderPoolV2) := ϕ(['pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17', 'pool_9'])
Phi
[i]Type for pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
nativeAsset_7(IERC20) := ϕ(['nativeAsset_1', 'nativeAsset_4', 'nativeAsset_7', 'nativeAsset_3', 'nativeAsset_6'])
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_3(IVaderReserve) := ϕ(['reserve_7', 'reserve_6', 'reserve_2'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_foreignAsset_1(IERC20) := TMP_29(IERC20)
asgn
Source address: 7
Finance type key: (-1, -1)
[i]Type for _foreignAsset

Name: _foreignAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _nativeAsset cleared
Propogating parameters and globals to SSA variables...
Ssa_name: nativeAsset_7, name: nativeAsset

Name: nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: nativeAsset_7, name: nativeAsset

Name: nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _nativeAsset, Num: 1
Globalname: _nativeAsset, contract_name: VaderRouterV2
End popogation
_nativeAsset_1(IERC20) := nativeAsset_7(IERC20)
asgn
Source address: 6
Finance type key: (-1, -1)
[i]Type for _nativeAsset

Name: _nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
[i] TMP_31 cleared
[i] isNativeA cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: isNativeA_1, name: isNativeA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isNativeA, Num: 1
Globalname: isNativeA, contract_name: VaderRouterV2
End popogation
TMP_30 = CONVERT tokenA_1 to IERC20
Converting tokenA_1

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_30

Name: TMP_30 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(bool) = _nativeAsset_1 == TMP_30
[i]Type for TMP_31

Name: TMP_31 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isNativeA_1(bool) := TMP_31(bool)
asgn
Finance type key: (-1, -1)
[i]Type for isNativeA

Name: isNativeA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isNativeA_1, name: isNativeA

Name: isNativeA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isNativeA, Num: 1
Globalname: isNativeA, contract_name: VaderRouterV2
Ssa_name: isNativeA_1, name: isNativeA

Name: isNativeA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isNativeA, Num: 1
Globalname: isNativeA, contract_name: VaderRouterV2
End popogation
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] TMP_37 cleared
[i] TMP_38 cleared
[i] TMP_39 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Ssa_name: _nativeAsset_1, name: _nativeAsset

Name: _nativeAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 6
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenA_1, name: tokenA

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_35 = CONVERT tokenA_1 to IERC20
Converting tokenA_1

Name: tokenA_1 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: tokenA
Value: u
Fields: 
Finance Type: undef
Source address: -994
ERC20
[i]Type for TMP_35

Name: TMP_35 Function: removeLiquidity
Num: 
Den: 
Address: -994
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(bool) = TMP_35 == _foreignAsset_1
[i]Type for TMP_36

Name: TMP_36 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37 = CONVERT tokenB_1 to IERC20
Converting tokenB_1

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Source address: -993
ERC20
[i]Type for TMP_37

Name: TMP_37 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(bool) = TMP_37 == _nativeAsset_1
[i]Type for TMP_38

Name: TMP_38 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_39(bool) = TMP_36 && TMP_38
[i]Type for TMP_39

Name: TMP_39 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,VaderRouterV2::removeLiquidity: Incorrect Addresses Specified)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] TMP_33 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Ssa_name: _foreignAsset_1, name: _foreignAsset

Name: _foreignAsset Function: removeLiquidity
Num: -1
Den: -1
Address: 7
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenB_1, name: tokenB

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_32 = CONVERT tokenB_1 to IERC20
Converting tokenB_1

Name: tokenB_1 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: tokenB
Value: u
Fields: 
Finance Type: undef
Source address: -993
ERC20
[i]Type for TMP_32

Name: TMP_32 Function: removeLiquidity
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(bool) = TMP_32 == _foreignAsset_1
[i]Type for TMP_33

Name: TMP_33 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,VaderRouterV2::removeLiquidity: Incorrect Addresses Specified)
[i]Type for TMP_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_41 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: pool_10, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: pool_10, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: pool_11, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 11
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_4, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 4
Globalname: reserve, contract_name: VaderRouterV2
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_41 = CONVERT pool_10 to address
Converting pool_10

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:pool_10(IVaderPoolV2), function:transferFrom, arguments:['msg.sender', 'TMP_41', 'id_1']  
High Call: transferFrom
pool_11(IVaderPoolV2) := ϕ(['pool_10', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_4(IVaderReserve) := ϕ(['reserve_7', 'reserve_6', 'reserve_3'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] amountNative cleared
[i] amountForeign cleared
[i] coveredLoss cleared
Propogating parameters and globals to SSA variables...
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -992
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: pool_11, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pool_11, name: pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: id_1, name: id

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: id_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: id, Num: 1
Globalname: id, contract_name: VaderRouterV2
Ssa_name: to_1, name: to

Name: to_1 Function: removeLiquidity
Num: 
Den: 
Address: -992
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountForeign, Num: 1
Globalname: amountForeign, contract_name: VaderRouterV2
Ssa_name: coveredLoss_1, name: coveredLoss

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: coveredLoss, Num: 1
Globalname: coveredLoss, contract_name: VaderRouterV2
Ssa_name: amountNative_1, name: amountNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountNative, Num: 1
Globalname: amountNative, contract_name: VaderRouterV2
End popogation
Ssa_name: pool_12, name: pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pool, Num: 12
Globalname: pool, contract_name: VaderRouterV2
global...

Name: pool Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: reserve_5, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 5
Globalname: reserve, contract_name: VaderRouterV2
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:pool_11(IVaderPoolV2), function:burn, arguments:['id_1', 'to_1']  
High Call: burn
Running querryfc
Found: None
Written func info: IVaderPoolV2, burn
[i]Type for TUPLE_0

Name: TUPLE_0 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pool_12(IVaderPoolV2) := ϕ(['pool_11', 'pool_12', 'pool_15', 'pool_2', 'pool_7', 'pool_14', 'pool_17'])
Phi
[i]Type for pool

Name: pool Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve_5(IVaderReserve) := ϕ(['reserve_7', 'reserve_4', 'reserve_6'])
Phi
[i]Type for reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountNative_1(uint256)= UNPACK TUPLE_0 index: 0 
Finding type for amountNative(uint256 ... )
Value: u
[i]Type for amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountForeign_1(uint256)= UNPACK TUPLE_0 index: 1 
Finding type for amountForeign(uint256 ... )
Value: u
[i]Type for amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
coveredLoss_1(uint256)= UNPACK TUPLE_0 index: 2 
Finding type for coveredLoss(uint256 ... )
Value: u
[i]Type for coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isNativeA_1, name: isNativeA

Name: isNativeA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isNativeA, Num: 1
Globalname: isNativeA, contract_name: VaderRouterV2
Ssa_name: isNativeA_1, name: isNativeA

Name: isNativeA Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isNativeA, Num: 1
Globalname: isNativeA, contract_name: VaderRouterV2
End popogation
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_1, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 1
Globalname: amountA, contract_name: VaderRouterV2
Ssa_name: amountB_1, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 1
Globalname: amountB, contract_name: VaderRouterV2
End popogation
amountA_1(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_1(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountForeign_1, name: amountForeign

Name: amountForeign Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountNative_1, name: amountNative

Name: amountNative Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountA_2, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 2
Globalname: amountA, contract_name: VaderRouterV2
Ssa_name: amountB_2, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 2
Globalname: amountB, contract_name: VaderRouterV2
End popogation
amountA_2(uint256) := amountForeign_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_2(uint256) := amountNative_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountA cleared
[i] amountB cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountA_3, name: amountA

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountA, Num: 3
Globalname: amountA, contract_name: VaderRouterV2
Ssa_name: amountB_3, name: amountB

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountB, Num: 3
Globalname: amountB, contract_name: VaderRouterV2
amountA_3(uint256) := ϕ(['amountA_1', 'amountA_2'])
Phi

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountB_3(uint256) := ϕ(['amountB_1', 'amountB_2'])
Phi

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountAMin_1, name: amountAMin

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouterV2
Ssa_name: amountA_3, name: amountA

Name: amountA Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountAMin_1, name: amountAMin

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountAMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountAMin, Num: 1
Globalname: amountAMin, contract_name: VaderRouterV2
End popogation
TMP_43(bool) = amountA_3 >= amountAMin_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_43

Name: TMP_43 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,VaderRouterV2: INSUFFICIENT_A_AMOUNT)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountBMin_1, name: amountBMin

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouterV2
Ssa_name: amountB_3, name: amountB

Name: amountB Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountBMin_1, name: amountBMin

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountBMin_1 Function: removeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountBMin, Num: 1
Globalname: amountBMin, contract_name: VaderRouterV2
End popogation
TMP_45(bool) = amountB_3 >= amountBMin_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_45

Name: TMP_45 Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(None) = SOLIDITY_CALL require(bool,string)(TMP_45,VaderRouterV2: INSUFFICIENT_B_AMOUNT)
[i]Type for TMP_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_47 cleared
[i] temp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_5, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: coveredLoss_1, name: coveredLoss

Name: coveredLoss Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve_5, name: reserve

Name: reserve Function: removeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: temp_1, name: temp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: temp, Num: 1
Globalname: temp, contract_name: VaderRouterV2
End popogation
Ssa_name: reserve_6, name: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve, Num: 6
Globalname: reserve, contract_name: VaderRouterV2
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_47(uint256) = HIGH_LEVEL_CALL, dest:reserve_5(IVaderReserve), function:reimburseImpermanentLoss, arguments:['msg.sender', 'coveredLoss_1']  
High Call: reimburseImpermanentLoss
Running querryfc
Found: None
Written func info: IVaderReserve, reimburseImpermanentLoss
Handling balance function!
u
prev address? u
global assignment: 8
8
Currently Omitted (3)
Executing Group 15
[*] Tested 17 warnings for Badger Dao p2
Group 15 complete
Testing complete
