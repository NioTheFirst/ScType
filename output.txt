Switched global version to 0.8.4



redeemIdleToken
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN TMP_0
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN TMP_0
Function count: 1



redeemToken
idleToken_8(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_19(int256) = 1 (c)+ 1
[i]Type for TMP_19

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_19(int256)
[i]Type for a

Name: a Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
tokens_1(uint256) := ϕ(['mintAmount_1', 'redeemAmount_1'])
[i]Type for tokens

Name: tokens Function: _tokenToShares
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
ONE_IDLE_TOKEN_1(uint256) := ϕ(['ONE_IDLE_TOKEN_0', 'ONE_IDLE_TOKEN_4', 'ONE_IDLE_TOKEN_2'])
[i]Type for ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(uint256) = tokens_1 (c)* ONE_IDLE_TOKEN_1
[i]Type for TMP_4

Name: TMP_4 Function: _tokenToShares
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_5(uint256) = INTERNAL_CALL, IdleYieldSource._price()()
idleToken_4(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_10 = CONVERT idleToken_4 to IIdleToken
[i]Type for TMP_10

Name: TMP_10 Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT this to address
[i]Type for TMP_11

Name: TMP_11 Function: _price
Num: -1
Den: -1
Address: 5
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
TMP_12(uint256) = HIGH_LEVEL_CALL, dest:TMP_10(IIdleToken), function:tokenPriceWithFee, arguments:['TMP_11']  
tPWF_1(uint256) := ϕ(['tPWF_0'])
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN tPWF_1
tPWF_1(uint256) := ϕ(['tPWF_0'])
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN tPWF_1
[i]Type for TMP_12

Name: TMP_12 Function: _price
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
idleToken_5(address) := ϕ(['idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_4', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
RETURN TMP_12
idleToken_4(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_10 = CONVERT idleToken_4 to IIdleToken
[i]Type for TMP_10

Name: TMP_10 Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
TMP_11 = CONVERT this to address
[i]Type for TMP_11

Name: TMP_11 Function: _price
Num: 
Den: 
Address: 5
Norm: u
LF: IdleYieldSource
Value: u
Fields: 
Finance Type: undef
TMP_12(uint256) = HIGH_LEVEL_CALL, dest:TMP_10(IIdleToken), function:tokenPriceWithFee, arguments:['TMP_11']  
tPWF_1(uint256) := ϕ(['tPWF_0'])
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN tPWF_1
tPWF_1(uint256) := ϕ(['tPWF_0'])
[i]Type for tPWF

Name: tPWF Function: tokenPriceWithFee
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
RETURN tPWF_1
[i]Type for TMP_12

Name: TMP_12 Function: _price
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
idleToken_5(address) := ϕ(['idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_4', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: _price
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
RETURN TMP_12
[i]Type for TMP_5

Name: TMP_5 Function: _tokenToShares
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_6(uint256) = TMP_4 (c)/ TMP_5
[i]Type for TMP_6

Name: TMP_6 Function: _tokenToShares
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
shares_1(uint256) := TMP_6(uint256)
[i]Type for shares

Name: shares Function: _tokenToShares
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN shares_1
tokens_1(uint256) := ϕ(['mintAmount_1', 'redeemAmount_1'])
[i]Type for tokens

Name: tokens Function: _tokenToShares
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
ONE_IDLE_TOKEN_1(uint256) := ϕ(['ONE_IDLE_TOKEN_0', 'ONE_IDLE_TOKEN_4', 'ONE_IDLE_TOKEN_2'])
[i]Type for ONE_IDLE_TOKEN

Name: ONE_IDLE_TOKEN Function: _tokenToShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_4(uint256) = tokens_1 (c)* ONE_IDLE_TOKEN_1
[i]Type for TMP_4

Name: TMP_4 Function: _tokenToShares
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_5(uint256) = INTERNAL_CALL, IdleYieldSource._price()()
[i]Type for TMP_5

Name: TMP_5 Function: _tokenToShares
Num: 1
Den: 2
Address: u
Norm: 12
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_6(uint256) = TMP_4 (c)/ TMP_5
[i]Type for TMP_6

Name: TMP_6 Function: _tokenToShares
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
shares_1(uint256) := TMP_6(uint256)
[i]Type for shares

Name: shares Function: _tokenToShares
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN shares_1
[i]Type for TMP_20

Name: TMP_20 Function: redeemToken
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1(uint256) := TMP_20(uint256)
[i]Type for redeemedShare

Name: redeemedShare Function: redeemToken
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_21 = CONVERT idleToken_9 to IIdleToken
[i]Type for TMP_21

Name: TMP_21 Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_0
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_0
[i]Type for TMP_22

Name: TMP_22 Function: redeemToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
idleToken_10(address) := ϕ(['idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
Error with redeemedUnderlyingAsset in function redeemToken
Error with: redeemedUnderlyingAsset in function redeemToken
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
idleToken_8(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_19(int256) = 1 (c)+ 1
[i]Type for TMP_19

Name: TMP_19 Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_19(int256)
[i]Type for a

Name: a Function: redeemToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
TMP_20(uint256) = INTERNAL_CALL, IdleYieldSource._tokenToShares(uint256)(redeemAmount_1)
[i]Type for TMP_20

Name: TMP_20 Function: redeemToken
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedShare_1(uint256) := TMP_20(uint256)
[i]Type for redeemedShare

Name: redeemedShare Function: redeemToken
Num: 2, 2
Den: 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_21 = CONVERT idleToken_9 to IIdleToken
[i]Type for TMP_21

Name: TMP_21 Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: IdleToken
Value: u
Fields: 
Finance Type: undef
TMP_22(uint256) = HIGH_LEVEL_CALL, dest:TMP_21(IIdleToken), function:redeemIdleToken, arguments:['redeemedShare_1']  
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_0
tokenToShare_1(uint256) := ϕ(['tokenToShare_0'])
[i]Type for tokenToShare

Name: tokenToShare Function: redeemIdleToken
Num: 2
Den: 1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: price/exchange rate
TMP_0(uint256) = share_1 (c)* tokenToShare_1
[i]Type for TMP_0

Name: TMP_0 Function: redeemIdleToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_0
[i]Type for TMP_22

Name: TMP_22 Function: redeemToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
idleToken_10(address) := ϕ(['idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_9', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: redeemToken
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
redeemedUnderlyingAsset_1(uint256) := TMP_22(uint256)
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 2, 2, 2
Den: 1, 1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
redeemedUnderlyingAsset_2(uint256) = redeemedUnderlyingAsset_1 (c)+ redeemedShare_1
[i]Type for redeemedUnderlyingAsset

Name: redeemedUnderlyingAsset Function: redeemToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



transferERC20
idleToken_11(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_24(bool) = erc20Token_1 != idleToken_11
[i]Type for TMP_24

Name: TMP_24 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
[i]Type for TMP_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
idleToken_11(address) := ϕ(['idleToken_0', 'idleToken_3', 'idleToken_1', 'idleToken_5', 'idleToken_7', 'idleToken_10'])
[i]Type for idleToken

Name: idleToken Function: transferERC20
Num: -1
Den: -1
Address: 3
Norm: u
LF: idleToken
Value: u
Fields: 
Finance Type: undef
TMP_24(bool) = erc20Token_1 != idleToken_11
[i]Type for TMP_24

Name: TMP_24 Function: transferERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_25(None) = SOLIDITY_CALL require(bool,string)(TMP_24,IdleYieldSource/idleDai-transfer-not-allowed)
[i]Type for TMP_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Function count: 9
Executing Group 3
[*] Tested 1 warning for PoolTogether
Group 3 complete
Elapsed time: 9.831409009 seconds
Testing complete
