Switched global version to 0.8.4
Analyzed_contracts_count: 1
total compilations: 7, contracts: 1
contract name: LibMath
Mark functions Adding: LibMath, toInt256, False
[*]Marked
Mark functions Adding: LibMath, abs, False
[*]Marked
Mark functions Adding: LibMath, sum, False
[*]Marked
Mark functions Adding: LibMath, sumN, False
[*]Marked
Mark functions Adding: LibMath, mean, False
[X]No Binary
Mark functions Adding: LibMath, meanN, False
[X]No Binary
Mark functions Adding: LibMath, min, False
[*]Marked
Mark functions Adding: LibMath, signedMin, False
[*]Marked
Mark functions Adding: LibMath, slitherConstructorConstantVariables, False
[X]No Binary
State_var: POSITIVE_INT256_MAX
Finding type for POSITIVE_INT256_MAX(uint256 ... )
Value: u
querrying!!!
Source address: u
Saved name: POSITIVE_INT256_MAX

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Running check on LibMath
Reading Function: toInt256
Checking funcion...



toInt256
Finding type for x(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)


POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
TMP_2 = CONVERT x_1 to int256
RETURN TMP_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: POSITIVE_INT256_MAX, Num: 1
Globalname: POSITIVE_INT256_MAX
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1
Source address: u

Name: x_1 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: x, Num: 1
Globalname: x

Name: x_1 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
Source address: u

Name: x_1 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: x, Num: 1
Globalname: x
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: x_1 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
TMP_2 = CONVERT x_1 to int256
RETURN TMP_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
TMP_2 = CONVERT x_1 to int256
RETURN TMP_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: abs
Checking funcion...



abs
Finding type for x(int256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
abs(int256)
ENTRY_POINT
IF x > 0
RETURN int256(- 1 * x)
RETURN int256(x)


TMP_3(bool) = x_1 > 0
CONDITION TMP_3
TMP_5(uint256) = 0 (c)- 1
TMP_6(uint256) = TMP_5 (c)* x_1
TMP_7 = CONVERT TMP_6 to int256
RETURN TMP_7
TMP_4 = CONVERT x_1 to int256
RETURN TMP_4


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1
Source address: u

Name: x_1 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: x, Num: 1
Globalname: x

Name: x_1 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: x_1 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: x, Num: 1
Globalname: x
End popogation
TMP_3(bool) = x_1 > 0
init
end
init
end
lnorm: u rnorm: 0
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: x_1 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_3 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_5(uint256) = 0 (c)- 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* x_1
testing mul...
init
end
init
end

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_6 Function: abs
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_7 = CONVERT TMP_6 to int256
Converting TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: TMP_7 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
RETURN TMP_7
RETURN
init
end

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_4 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_4
RETURN
init
end

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_3(bool) = x_1 > 0
CONDITION TMP_3
TMP_5(uint256) = 0 (c)- 1
TMP_6(uint256) = TMP_5 (c)* x_1
TMP_7 = CONVERT TMP_6 to int256
RETURN TMP_7
TMP_4 = CONVERT x_1 to int256
RETURN TMP_4


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_3(bool) = x_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_3

Name: TMP_3 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_5(uint256) = 0 (c)- 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* x_1
testing mul...
init
end
init
end

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_6 Function: abs
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_7 = CONVERT TMP_6 to int256
Converting TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: TMP_7 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
RETURN TMP_7
RETURN
init
end

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_4 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: abs
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_4
RETURN
init
end

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_3(bool) = x_1 > 0
CONDITION TMP_3
TMP_5(uint256) = 0 (c)- 1
TMP_6(uint256) = TMP_5 (c)* x_1
TMP_7 = CONVERT TMP_6 to int256
RETURN TMP_7
TMP_4 = CONVERT x_1 to int256
RETURN TMP_4


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_3(bool) = x_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_3

Name: TMP_3 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_5(uint256) = 0 (c)- 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_5

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_6(uint256) = TMP_5 (c)* x_1
testing mul...
init
end
init
end

Name: TMP_5 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
TMP_7 = CONVERT TMP_6 to int256
Converting TMP_6

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_6 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
XXXX
RETURN TMP_7
RETURN
init
end

Name: TMP_7 Function: abs
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2640>]
x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_4 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_4

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_4
RETURN
init
end

Name: TMP_4 Function: abs
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: sum
Checking funcion...



sum
Finding type for arr(uint256[] ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
sum(uint256[])
ENTRY_POINT
NEW VARIABLE n = arr.length
NEW VARIABLE total = 0
NEW VARIABLE i = 0
BEGIN_LOOP
IF_LOOP i < n
EXPRESSION total += arr[i]
END_LOOP
EXPRESSION i ++
RETURN total
IF_LOOP i < n


arr_1(uint256[]) := ϕ(['arr_1'])
REF_0 -> LENGTH arr_1
n_1(uint256) := REF_0(uint256)
total_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
total_2(uint256) := ϕ(['total_3', 'total_1'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_8(bool) = i_2 < n_1
CONDITION TMP_8
REF_1(uint256) -> arr_1[i_2]
total_3(uint256) = total_2 (c)+ REF_1
TMP_9(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
RETURN total_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
arr_1(uint256[]) := ϕ(['arr_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for arr

Name: arr Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43550>]
arr_1
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
REF_0 -> LENGTH arr_1
[i]Type for REF_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
n_1(uint256) := REF_0(uint256)
asgn
init
end
_______________

Name: REF_0 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for n

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e437f0>]
i_2
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
n_1
Name: n, Num: 1
Globalname: n

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i
Name: n, Num: 1
Globalname: n
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
End popogation
Name: total, Num: 2
Globalname: total

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_3', 'total_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_8(bool) = i_2 < n_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_8 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_8

Name: TMP_8 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43be0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43550>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>]
total_2

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: total, Num: 3
Globalname: total
End popogation
REF_1(uint256) -> arr_1[i_2]
INDEX
[i]Type for REF_1

Name: arr_1 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
total_3(uint256) = total_2 (c)+ REF_1
init
end
init
end
init
end
_______________

Name: arr_1 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>]
i_2

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i
End popogation
TMP_9(uint256) := i_2(uint256)
asgn
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_9 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_9

Name: TMP_9 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43be0>]
total_2

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
RETURN total_2
RETURN
init
end

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


arr_1(uint256[]) := ϕ(['arr_1'])
REF_0 -> LENGTH arr_1
n_1(uint256) := REF_0(uint256)
total_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
total_2(uint256) := ϕ(['total_3', 'total_1'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_8(bool) = i_2 < n_1
CONDITION TMP_8
REF_1(uint256) -> arr_1[i_2]
total_3(uint256) = total_2 (c)+ REF_1
TMP_9(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
RETURN total_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
arr_1(uint256[]) := ϕ(['arr_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for arr

Name: arr Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43550>]
arr_1
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
REF_0 -> LENGTH arr_1
[i]Type for REF_0

Name: REF_0 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
n_1(uint256) := REF_0(uint256)
asgn
init
end
_______________

Name: REF_0 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for n

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e437f0>]
i_2
Name: i, Num: 2
Globalname: i

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
n_1
Name: n, Num: 1
Globalname: n

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i
Name: n, Num: 1
Globalname: n
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
End popogation
Name: total, Num: 2
Globalname: total

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_3', 'total_1'])
Phi

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_8(bool) = i_2 < n_1
init
end
init
end
lnorm: 0 rnorm: u
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: TMP_8 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: n Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_8

Name: TMP_8 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43be0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43550>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>]
total_2

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: total, Num: 3
Globalname: total
End popogation
REF_1(uint256) -> arr_1[i_2]
INDEX
[i]Type for REF_1

Name: arr_1 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
total_3(uint256) = total_2 (c)+ REF_1
init
end
init
end
init
end
_______________

Name: arr_1 Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610eb2ee0>]
i_2

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i
End popogation
TMP_9(uint256) := i_2(uint256)
asgn
init
end
_______________

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: TMP_9 Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_9

Name: TMP_9 Function: sum
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sum
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43be0>]
total_2

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
RETURN total_2
RETURN
init
end

Name: total Function: sum
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u
Reading Function: sumN
Checking funcion...



sumN
Finding type for arr(uint256[] ... )
Value: u
Finding type for n(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
sumN(uint256[],uint256)
ENTRY_POINT
NEW VARIABLE total = 0
NEW VARIABLE i = 0
BEGIN_LOOP
IF_LOOP i < n
END_LOOP
EXPRESSION total += arr[i]
EXPRESSION i ++
RETURN total
IF_LOOP i < n


arr_1(uint256[]) := ϕ(['arr_1'])
n_1(uint256) := ϕ(['len_1'])
total_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
total_2(uint256) := ϕ(['total_3', 'total_1'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_10(bool) = i_2 < n_1
CONDITION TMP_10
REF_2(uint256) -> arr_1[i_2]
total_3(uint256) = total_2 (c)+ REF_2
TMP_11(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
RETURN total_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
arr_1(uint256[]) := ϕ(['arr_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for arr

Name: arr Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
n_1(uint256) := ϕ(['len_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for n

Name: n Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4df0>]
i_2
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
n_1
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
End popogation
Name: total, Num: 2
Globalname: total

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_3', 'total_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = i_2 < n_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_10 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4dac0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4ddc0>]
i_2

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_2

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: total, Num: 3
Globalname: total
End popogation
REF_2(uint256) -> arr_1[i_2]
INDEX
[i]Type for REF_2

Name: arr_1 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
total_3(uint256) = total_2 (c)+ REF_2
init
end
init
end
init
end
_______________

Name: arr_1 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>]
i_2

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i
End popogation
TMP_11(uint256) := i_2(uint256)
asgn
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: TMP_11 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_11

Name: TMP_11 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4ddc0>]
total_2

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
RETURN total_2
RETURN
init
end

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


arr_1(uint256[]) := ϕ(['arr_1'])
n_1(uint256) := ϕ(['len_1'])
total_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
total_2(uint256) := ϕ(['total_3', 'total_1'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_10(bool) = i_2 < n_1
CONDITION TMP_10
REF_2(uint256) -> arr_1[i_2]
total_3(uint256) = total_2 (c)+ REF_2
TMP_11(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
RETURN total_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
arr_1(uint256[]) := ϕ(['arr_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for arr

Name: arr Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
n_1(uint256) := ϕ(['len_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for n

Name: n Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4df0>]
i_2
Name: i, Num: 2
Globalname: i

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
n_1
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i
Source address: u

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: n, Num: 1
Globalname: n
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
End popogation
Name: total, Num: 2
Globalname: total

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_3', 'total_1'])
Phi

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = i_2 < n_1
init
end
init
end
lnorm: 0 rnorm: u
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: TMP_10 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: n_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_10

Name: TMP_10 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4dac0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4ddc0>]
i_2

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
total_2

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: total, Num: 3
Globalname: total
End popogation
REF_2(uint256) -> arr_1[i_2]
INDEX
[i]Type for REF_2

Name: arr_1 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
total_3(uint256) = total_2 (c)+ REF_2
init
end
init
end
init
end
_______________

Name: arr_1 Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: total Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for total

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4d490>]
i_2

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i
End popogation
TMP_11(uint256) := i_2(uint256)
asgn
init
end
_______________

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: TMP_11 Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_11

Name: TMP_11 Function: sumN
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
init
end
init
end
init
end
_______________

Name: 1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: sumN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for i

Name: i Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e4ddc0>]
total_2

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
RETURN total_2
RETURN
init
end

Name: total Function: sumN
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u
Reading Function: mean
Checking funcion...



mean
Finding type for arr(uint256[] ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
mean(uint256[])
ENTRY_POINT
NEW VARIABLE n = arr.length
RETURN sum(arr) / n


REF_3 -> LENGTH arr_1
n_1(uint256) := REF_3(uint256)
TMP_12(uint256) = INTERNAL_CALL, LibMath.sum(uint256[])(arr_1)
TMP_13(uint256) = TMP_12 (c)/ n_1
RETURN TMP_13


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56790>]
arr_1
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
REF_3 -> LENGTH arr_1
[i]Type for REF_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
n_1(uint256) := REF_3(uint256)
asgn
init
end
_______________

Name: REF_3 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for n

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56790>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56a30>]
arr_1
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
n_1
Name: n, Num: 1
Globalname: n

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
TMP_12(uint256) = INTERNAL_CALL, LibMath.sum(uint256[])(arr_1)
[i]Type for TMP_12

Name: TMP_12 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = TMP_12 (c)/ n_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_13

Name: TMP_13 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_13
RETURN
init
end

Name: TMP_13 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


REF_3 -> LENGTH arr_1
n_1(uint256) := REF_3(uint256)
TMP_12(uint256) = INTERNAL_CALL, LibMath.sum(uint256[])(arr_1)
TMP_13(uint256) = TMP_12 (c)/ n_1
RETURN TMP_13


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56790>]
arr_1
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
REF_3 -> LENGTH arr_1
[i]Type for REF_3

Name: REF_3 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
n_1(uint256) := REF_3(uint256)
asgn
init
end
_______________

Name: REF_3 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for n

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56790>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56a30>]
arr_1
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
n_1
Name: n, Num: 1
Globalname: n

Name: n Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: arr_1 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
Name: n, Num: 1
Globalname: n
End popogation
TMP_12(uint256) = INTERNAL_CALL, LibMath.sum(uint256[])(arr_1)
[i]Type for TMP_12

Name: TMP_12 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(uint256) = TMP_12 (c)/ n_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_13

Name: TMP_13 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_13
RETURN
init
end

Name: TMP_13 Function: mean
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: meanN
Checking funcion...



meanN
Finding type for arr(uint256[] ... )
Value: u
Finding type for len(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
meanN(uint256[],uint256)
ENTRY_POINT
RETURN sumN(arr,len) / len


TMP_14(uint256) = INTERNAL_CALL, LibMath.sumN(uint256[],uint256)(arr_1,len_1)
TMP_15(uint256) = TMP_14 (c)/ len_1
RETURN TMP_15


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43bb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e601f0>]
len_1
Source address: u

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: len, Num: 1
Globalname: len

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: len, Num: 1
Globalname: len
Source address: u

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
End popogation
TMP_14(uint256) = INTERNAL_CALL, LibMath.sumN(uint256[],uint256)(arr_1,len_1)
[i]Type for TMP_14

Name: TMP_14 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(uint256) = TMP_14 (c)/ len_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_15

Name: TMP_15 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_15
RETURN
init
end

Name: TMP_15 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_14(uint256) = INTERNAL_CALL, LibMath.sumN(uint256[],uint256)(arr_1,len_1)
TMP_15(uint256) = TMP_14 (c)/ len_1
RETURN TMP_15


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e43bb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e601f0>]
len_1
Source address: u

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: len, Num: 1
Globalname: len

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
arr_1
Source address: u

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: len_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: len, Num: 1
Globalname: len
Source address: u

Name: arr_1 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: arr, Num: 1
Globalname: arr
End popogation
TMP_14(uint256) = INTERNAL_CALL, LibMath.sumN(uint256[],uint256)(arr_1,len_1)
[i]Type for TMP_14

Name: TMP_14 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_15(uint256) = TMP_14 (c)/ len_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_15

Name: TMP_15 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_15
RETURN
init
end

Name: TMP_15 Function: meanN
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: min
Checking funcion...



min
Finding type for a(uint256 ... )
Value: u
Finding type for b(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
min(uint256,uint256)
ENTRY_POINT
IF a < b
RETURN b
RETURN a


TMP_16(bool) = a_1 < b_1
CONDITION TMP_16
RETURN b_1
RETURN a_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e608b0>]
b_1
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
TMP_16(bool) = a_1 < b_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_16

Name: TMP_16 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56e80>]
b_1
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
End popogation
RETURN b_1
RETURN
init
end

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e608b0>]
a_1
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
RETURN a_1
RETURN
init
end

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_16(bool) = a_1 < b_1
CONDITION TMP_16
RETURN b_1
RETURN a_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e608b0>]
b_1
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
TMP_16(bool) = a_1 < b_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_16

Name: TMP_16 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e56e80>]
b_1
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
End popogation
RETURN b_1
RETURN
init
end

Name: b_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e608b0>]
a_1
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
RETURN a_1
RETURN
init
end

Name: a_1 Function: min
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: signedMin
Checking funcion...



signedMin
Finding type for a(int256 ... )
Value: u
Finding type for b(int256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
signedMin(int256,int256)
ENTRY_POINT
IF a < b
RETURN b
RETURN a


TMP_17(bool) = a_1 < b_1
CONDITION TMP_17
RETURN b_1
RETURN a_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e60880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e69040>]
b_1
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
TMP_17(bool) = a_1 < b_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_17

Name: TMP_17 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e60880>]
b_1
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
End popogation
RETURN b_1
RETURN
init
end

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e69040>]
a_1
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
RETURN a_1
RETURN
init
end

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_17(bool) = a_1 < b_1
CONDITION TMP_17
RETURN b_1
RETURN a_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e60880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e69040>]
b_1
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
a_1
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
TMP_17(bool) = a_1 < b_1
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_17

Name: TMP_17 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e60880>]
b_1
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: b, Num: 1
Globalname: b
End popogation
RETURN b_1
RETURN
init
end

Name: b_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610e69040>]
a_1
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: a, Num: 1
Globalname: a
End popogation
RETURN a_1
RETURN
init
end

Name: a_1 Function: signedMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: slitherConstructorConstantVariables
Checking funcion...



slitherConstructorConstantVariables
FIND RETURN
OTHER_ENTRYPOINT POSITIVE_INT256_MAX = 2 ** 255 - 1
slitherConstructorConstantVariables()
OTHER_ENTRYPOINT POSITIVE_INT256_MAX = 2 ** 255 - 1




Propogating parameters and globals to SSA variables...
[]
[]
End popogation




Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Function count: 9
Analyzed_contracts_count: 8
total compilations: 7, contracts: 8
contract name: Types
contract name: Balances
Finance file: Balances_ftypes.txt
IN KEY: applyTrade_trade_amount
Reading f file...
['[t*]', 'applyTrade', 'trade', 'amount', 'f: 0']
OUT KEY: applyTrade_trade_amount
IN KEY: applyTrade_trade_amount
['[t]', 'applyTrade', 'feeRate', 'f: 12']
{}
Add to address_to_label {'global:u': 1}
Mark functions Adding: Balances, notionalValue, False
[*]Marked
Mark functions Adding: Balances, margin, False
[*]Marked
Mark functions Adding: Balances, leveragedNotionalValue, False
[*]Marked
Mark functions Adding: Balances, minimumMargin, False
[*]Marked
Mark functions Adding: Balances, marginIsValid, False
[*]Marked
Mark functions Adding: Balances, fillAmount, False
[*]Marked
Mark functions Adding: Balances, applyTrade, False
[*]Marked
Mark functions Adding: Balances, getFee, False
[*]Marked
Mark functions Adding: Balances, tokenToWad, False
[*]Marked
Mark functions Adding: Balances, wadToToken, False
[*]Marked
Mark functions Adding: Balances, slitherConstructorConstantVariables, False
[X]No Binary
State_var: MAX_DECIMALS
Finding type for MAX_DECIMALS(uint256 ... )
Value: u
querrying!!!
Source address: u
Saved name: MAX_DECIMALS

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
contract name: LibMath
Mark functions Adding: LibMath, toInt256, False
[*]Marked
Mark functions Adding: LibMath, abs, False
[*]Marked
Mark functions Adding: LibMath, sum, False
[*]Marked
Mark functions Adding: LibMath, sumN, False
[*]Marked
Mark functions Adding: LibMath, mean, False
[X]No Binary
Mark functions Adding: LibMath, meanN, False
[X]No Binary
Mark functions Adding: LibMath, min, False
[*]Marked
Mark functions Adding: LibMath, signedMin, False
[*]Marked
Mark functions Adding: LibMath, slitherConstructorConstantVariables, False
[X]No Binary
State_var: POSITIVE_INT256_MAX

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
contract name: Perpetuals
contract name: Prices
contract name: PRBMathCommon
contract name: PRBMathSD59x18
contract name: PRBMathUD60x18
continuing...
Running check on Balances
Reading Function: notionalValue
Checking funcion...



notionalValue
Finding type for position(Balances.Position ... )
notionalValue
position
quote
OUT KEY: notionalValue_position_quote
notionalValue
position
base
OUT KEY: notionalValue_position_base
Value: u
Finding type for price(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)


position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
price_1(uint256) := ϕ(['price_1', 'price_1'])
REF_2(int256) -> position_1.base
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
TMP_1 = CONVERT TMP_0 to uint256
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
RETURN TMP_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
price_1(uint256) := ϕ(['price_1', 'price_1'])
REF_2(int256) -> position_1.base
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
TMP_1 = CONVERT TMP_0 to uint256
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
RETURN TMP_2


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: margin
Checking funcion...



margin
Finding type for position(Balances.Position ... )
margin
position
quote
OUT KEY: margin_position_quote
margin
position
base
OUT KEY: margin_position_base
Value: u
Finding type for price(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
margin(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE signedPrice = LibMath.toInt256(price)
RETURN position.quote + PRBMathSD59x18.mul(position.base,signedPrice)


position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
price_1(uint256) := ϕ(['price_1', 'price_1'])
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
signedPrice_1(int256) := TMP_3(int256)
REF_4(int256) -> position_1.quote
REF_6(int256) -> position_1.base
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
TMP_5(int256) = REF_4 (c)+ TMP_4
RETURN TMP_5


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: quote Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
price_1(uint256) := ϕ(['price_1', 'price_1'])
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
signedPrice_1(int256) := TMP_3(int256)
REF_4(int256) -> position_1.quote
REF_6(int256) -> position_1.base
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
TMP_5(int256) = REF_4 (c)+ TMP_4
RETURN TMP_5


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: leveragedNotionalValue
Checking funcion...



leveragedNotionalValue
Finding type for position(Balances.Position ... )
leveragedNotionalValue
position
quote
OUT KEY: leveragedNotionalValue_position_quote
leveragedNotionalValue
position
base
OUT KEY: leveragedNotionalValue_position_base
Value: u
Finding type for price(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
leveragedNotionalValue(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE _notionalValue = notionalValue(position,price)
NEW VARIABLE marginValue = margin(position,price)
NEW VARIABLE signedNotionalValue = LibMath.toInt256(_notionalValue)
IF signedNotionalValue - marginValue < 0
RETURN uint256(signedNotionalValue - marginValue)
RETURN 0


TMP_6(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
_notionalValue_1(uint256) := TMP_6(uint256)
TMP_7(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
marginValue_1(int256) := TMP_7(int256)
TMP_8(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['_notionalValue_1'] 
signedNotionalValue_1(int256) := TMP_8(int256)
TMP_9(int256) = signedNotionalValue_1 (c)- marginValue_1
TMP_10(bool) = TMP_9 < 0
CONDITION TMP_10
TMP_11(int256) = signedNotionalValue_1 (c)- marginValue_1
TMP_12 = CONVERT TMP_11 to uint256
RETURN TMP_12
RETURN 0


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d0a0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5197f0>]
position_1
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_6(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_6(uint256)
asgn
init
end
_______________

Name: TMP_6 Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d0a0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5197f0>]
position_1
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_7(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
margin(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE signedPrice = LibMath.toInt256(price)
RETURN position.quote + PRBMathSD59x18.mul(position.base,signedPrice)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
marginValue_1(int256) := TMP_7(int256)
asgn
init
end
_______________

Name: TMP_7 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d220>]
_notionalValue_1

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: signedNotionalValue, Num: 1
Globalname: signedNotionalValue
End popogation
TMP_8(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['_notionalValue_1'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: []
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
[[], [-1], 'u', None, [], -1, 'u', 'u']

Name: x Function: toInt256
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_8

Name: TMP_8 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedNotionalValue_1(int256) := TMP_8(int256)
asgn
init
end
_______________

Name: TMP_8 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedNotionalValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for signedNotionalValue

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d700>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d490>]
signedNotionalValue_1

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marginValue_1
Name: marginValue, Num: 1
Globalname: marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_9(int256) = signedNotionalValue_1 (c)- marginValue_1
init
end
init
end
init
end
_______________

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_9 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = TMP_9 < 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_10

Name: TMP_10 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d700>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d490>]
signedNotionalValue_1

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marginValue_1
Name: marginValue, Num: 1
Globalname: marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_11(int256) = signedNotionalValue_1 (c)- marginValue_1
init
end
init
end
init
end
_______________

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_11 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12 = CONVERT TMP_11 to uint256
Converting TMP_11

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_12 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_12
RETURN
init
end

Name: TMP_12 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_6(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
_notionalValue_1(uint256) := TMP_6(uint256)
TMP_7(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
marginValue_1(int256) := TMP_7(int256)
TMP_8(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['_notionalValue_1'] 
signedNotionalValue_1(int256) := TMP_8(int256)
TMP_9(int256) = signedNotionalValue_1 (c)- marginValue_1
TMP_10(bool) = TMP_9 < 0
CONDITION TMP_10
TMP_11(int256) = signedNotionalValue_1 (c)- marginValue_1
TMP_12 = CONVERT TMP_11 to uint256
RETURN TMP_12
RETURN 0


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d0a0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5197f0>]
position_1
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_6(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_6

Name: TMP_6 Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_6(uint256)
asgn
init
end
_______________

Name: TMP_6 Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d0a0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5197f0>]
position_1
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_7(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
margin(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE signedPrice = LibMath.toInt256(price)
RETURN position.quote + PRBMathSD59x18.mul(position.base,signedPrice)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_7

Name: TMP_7 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
marginValue_1(int256) := TMP_7(int256)
asgn
init
end
_______________

Name: TMP_7 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d220>]
_notionalValue_1

Name: _notionalValue Function: leveragedNotionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: signedNotionalValue, Num: 1
Globalname: signedNotionalValue
End popogation
TMP_8(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['_notionalValue_1'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: []
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
[[], [-1], 'u', None, [], -1, 'u', 'u']

Name: x Function: toInt256
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_8

Name: TMP_8 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedNotionalValue_1(int256) := TMP_8(int256)
asgn
init
end
_______________

Name: TMP_8 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedNotionalValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for signedNotionalValue

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d700>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d490>]
signedNotionalValue_1

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marginValue_1
Name: marginValue, Num: 1
Globalname: marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_9(int256) = signedNotionalValue_1 (c)- marginValue_1
init
end
init
end
init
end
_______________

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_9 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_9

Name: TMP_9 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_10(bool) = TMP_9 < 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_10

Name: TMP_10 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d700>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52d490>]
signedNotionalValue_1

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
marginValue_1
Name: marginValue, Num: 1
Globalname: marginValue

Name: marginValue Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: marginValue, Num: 1
Globalname: marginValue
End popogation
TMP_11(int256) = signedNotionalValue_1 (c)- marginValue_1
init
end
init
end
init
end
_______________

Name: signedNotionalValue Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_11 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_11

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_12 = CONVERT TMP_11 to uint256
Converting TMP_11

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_11 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_12 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_12

Name: TMP_12 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_12
RETURN
init
end

Name: TMP_12 Function: leveragedNotionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: minimumMargin
Checking funcion...



minimumMargin
Finding type for position(Balances.Position ... )
minimumMargin
position
quote
OUT KEY: minimumMargin_position_quote
minimumMargin
position
base
OUT KEY: minimumMargin_position_base
Value: u
Finding type for price(uint256 ... )
Value: u
Finding type for liquidationGasCost(uint256 ... )
Value: u
Finding type for maximumLeverage(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
minimumMargin(Balances.Position,uint256,uint256,uint256)
ENTRY_POINT
IF position.base == 0
RETURN 0
END_IF
NEW VARIABLE _notionalValue = notionalValue(position,price)
NEW VARIABLE adjustedLiquidationGasCost = liquidationGasCost * 6
NEW VARIABLE minimumMarginWithoutGasCost = PRBMathUD60x18.div(_notionalValue,maximumLeverage)
RETURN adjustedLiquidationGasCost + minimumMarginWithoutGasCost


position_1(Balances.Position) := ϕ(['position_1'])
price_1(uint256) := ϕ(['price_1'])
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
REF_8(int256) -> position_1.base
TMP_13(bool) = REF_8 == 0
CONDITION TMP_13
RETURN 0
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
_notionalValue_1(uint256) := TMP_14(uint256)
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
RETURN TMP_17


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef


position_1(Balances.Position) := ϕ(['position_1'])
price_1(uint256) := ϕ(['price_1'])
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
REF_8(int256) -> position_1.base
TMP_13(bool) = REF_8 == 0
CONDITION TMP_13
RETURN 0
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
_notionalValue_1(uint256) := TMP_14(uint256)
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
RETURN TMP_17


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Reading Function: marginIsValid
Checking funcion...



marginIsValid
Finding type for position(Balances.Position ... )
marginIsValid
position
quote
OUT KEY: marginIsValid_position_quote
marginIsValid
position
base
OUT KEY: marginIsValid_position_base
Value: u
Finding type for liquidationGasCost(uint256 ... )
Value: u
Finding type for price(uint256 ... )
Value: u
Finding type for trueMaxLeverage(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
marginIsValid(Balances.Position,uint256,uint256,uint256)
ENTRY_POINT
NEW VARIABLE minMargin = minimumMargin(position,price,liquidationGasCost,trueMaxLeverage)
NEW VARIABLE _margin = margin(position,price)
IF _margin < 0
END_IF
RETURN (uint256(_margin) >= minMargin)
RETURN false


TMP_18(uint256) = INTERNAL_CALL, Balances.minimumMargin(Balances.Position,uint256,uint256,uint256)(position_1,price_1,liquidationGasCost_1,trueMaxLeverage_1)
minMargin_1(uint256) := TMP_18(uint256)
TMP_19(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
_margin_1(int256) := TMP_19(int256)
TMP_20(bool) = _margin_1 < 0
CONDITION TMP_20
TMP_21 = CONVERT _margin_1 to uint256
TMP_22(bool) = TMP_21 >= minMargin_1
RETURN TMP_22
RETURN False


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9910>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fd0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1790>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1670>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trueMaxLeverage_1
Source address: u

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: trueMaxLeverage, Num: 1
Globalname: trueMaxLeverage

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: trueMaxLeverage, Num: 1
Globalname: trueMaxLeverage
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: minMargin, Num: 1
Globalname: minMargin
End popogation
TMP_18(uint256) = INTERNAL_CALL, Balances.minimumMargin(Balances.Position,uint256,uint256,uint256)(position_1,price_1,liquidationGasCost_1,trueMaxLeverage_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
minimumMargin(Balances.Position,uint256,uint256,uint256)
ENTRY_POINT
IF position.base == 0
RETURN 0
END_IF
NEW VARIABLE _notionalValue = notionalValue(position,price)
NEW VARIABLE adjustedLiquidationGasCost = liquidationGasCost * 6
NEW VARIABLE minimumMarginWithoutGasCost = PRBMathUD60x18.div(_notionalValue,maximumLeverage)
RETURN adjustedLiquidationGasCost + minimumMarginWithoutGasCost
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_18

Name: TMP_18 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minMargin_1(uint256) := TMP_18(uint256)
asgn
init
end
_______________

Name: TMP_18 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minMargin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for minMargin

Name: minMargin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fd0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1670>]
position_1
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _margin, Num: 1
Globalname: _margin
End popogation
TMP_19(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
margin(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE signedPrice = LibMath.toInt256(price)
RETURN position.quote + PRBMathSD59x18.mul(position.base,signedPrice)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_margin_1(int256) := TMP_19(int256)
asgn
init
end
_______________

Name: TMP_19 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _margin

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb400>]
_margin_1
Name: _margin, Num: 1
Globalname: _margin

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _margin, Num: 1
Globalname: _margin
End popogation
TMP_20(bool) = _margin_1 < 0
init
end
init
end
lnorm: u rnorm: 0
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_20 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb400>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb190>]
_margin_1

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
minMargin_1

Name: minMargin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_21 = CONVERT _margin_1 to uint256
Converting _margin_1

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_21 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_21

Name: TMP_21 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = TMP_21 >= minMargin_1
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_22

Name: TMP_22 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_22
RETURN
init
end

Name: TMP_22 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN False
RETURN
init
end

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_18(uint256) = INTERNAL_CALL, Balances.minimumMargin(Balances.Position,uint256,uint256,uint256)(position_1,price_1,liquidationGasCost_1,trueMaxLeverage_1)
minMargin_1(uint256) := TMP_18(uint256)
TMP_19(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
_margin_1(int256) := TMP_19(int256)
TMP_20(bool) = _margin_1 < 0
CONDITION TMP_20
TMP_21 = CONVERT _margin_1 to uint256
TMP_22(bool) = TMP_21 >= minMargin_1
RETURN TMP_22
RETURN False


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9910>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fd0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1790>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1670>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
trueMaxLeverage_1
Source address: u

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: trueMaxLeverage, Num: 1
Globalname: trueMaxLeverage

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: trueMaxLeverage, Num: 1
Globalname: trueMaxLeverage
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: minMargin, Num: 1
Globalname: minMargin
End popogation
TMP_18(uint256) = INTERNAL_CALL, Balances.minimumMargin(Balances.Position,uint256,uint256,uint256)(position_1,price_1,liquidationGasCost_1,trueMaxLeverage_1)
init
end
init
end
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
minimumMargin(Balances.Position,uint256,uint256,uint256)
ENTRY_POINT
IF position.base == 0
RETURN 0
END_IF
NEW VARIABLE _notionalValue = notionalValue(position,price)
NEW VARIABLE adjustedLiquidationGasCost = liquidationGasCost * 6
NEW VARIABLE minimumMarginWithoutGasCost = PRBMathUD60x18.div(_notionalValue,maximumLeverage)
RETURN adjustedLiquidationGasCost + minimumMarginWithoutGasCost
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1'])
Phi

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidationGasCost_1(uint256) := ϕ(['liquidationGasCost_1'])
Phi

Name: liquidationGasCost_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for liquidationGasCost

Name: liquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maximumLeverage_1(uint256) := ϕ(['trueMaxLeverage_1'])
Phi

Name: trueMaxLeverage_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for maximumLeverage

Name: maximumLeverage Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
End popogation
REF_8(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: minimumMargin_position_1_base
OUT KEY: minimumMargin_position_base
FTT: None
No field found
[i]Type for REF_8

Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_8 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_13(bool) = REF_8 == 0
[i]Type for TMP_13

Name: TMP_13 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9940>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523a60>]
position_1
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _notionalValue, Num: 1
Globalname: _notionalValue
End popogation
TMP_14(uint256) = INTERNAL_CALL, Balances.notionalValue(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [base], -1, 'u', 'u']

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
notionalValue(Balances.Position,uint256)
ENTRY_POINT
RETURN PRBMathUD60x18.mul(uint256(PRBMathSD59x18.abs(position.base)),price)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f519820>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193d0>]
position_1
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
End popogation
REF_2(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: notionalValue_position_1_base
OUT KEY: notionalValue_position_base
FTT: None
No field found
[i]Type for REF_2

Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: base Function: notionalValue
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_0(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.abs(int256), arguments:['REF_2'] 
Found: None
Written func info: PRBMathSD59x18, abs
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([], [-1], 'u', "'u'", 'u', -1)
[i]Type for TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_1 = CONVERT TMP_0 to uint256
Converting TMP_0

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_0 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_1

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_2(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['TMP_1', 'price_1'] 
testing mul...
init
end
init
end

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price_1 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_1 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: TMP_2 Function: notionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: notionalValue
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_14

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_notionalValue_1(uint256) := TMP_14(uint256)
asgn
init
end
_______________

Name: TMP_14 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _notionalValue Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for _notionalValue

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f52dbb0>]
liquidationGasCost_1
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: liquidationGasCost, Num: 1
Globalname: liquidationGasCost
Name: adjustedLiquidationGasCost, Num: 1
Globalname: adjustedLiquidationGasCost
End popogation
TMP_15(uint256) = liquidationGasCost_1 (c)* 6
testing mul...
init
end
init
end

Name: liquidationGasCost_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
_______________

Name: 6 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_15 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_15

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
adjustedLiquidationGasCost_1(uint256) := TMP_15(uint256)
asgn
init
end
_______________

Name: TMP_15 Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for adjustedLiquidationGasCost

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9eb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4b9040>]
_notionalValue_1

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maximumLeverage_1
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: maximumLeverage_1 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: maximumLeverage, Num: 1
Globalname: maximumLeverage
Name: minimumMarginWithoutGasCost, Num: 1
Globalname: minimumMarginWithoutGasCost
End popogation
TMP_16(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.div(uint256,uint256), arguments:['_notionalValue_1', 'maximumLeverage_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
_______________

Name: _notionalValue Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_16 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_16

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minimumMarginWithoutGasCost_1(uint256) := TMP_16(uint256)
asgn
init
end
_______________

Name: TMP_16 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Finance type key: (-1, -1)
[i]Type for minimumMarginWithoutGasCost

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c13d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1160>]
minimumMarginWithoutGasCost_1

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
adjustedLiquidationGasCost_1

Name: adjustedLiquidationGasCost Function: minimumMargin
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
End popogation
TMP_17(uint256) = adjustedLiquidationGasCost_1 (c)+ minimumMarginWithoutGasCost_1
init
end
init
end
init
end
_______________

Name: minimumMarginWithoutGasCost Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_17 Function: minimumMargin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_17

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
RETURN TMP_17
RETURN
init
end

Name: TMP_17 Function: minimumMargin
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_18

Name: TMP_18 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
minMargin_1(uint256) := TMP_18(uint256)
asgn
init
end
_______________

Name: TMP_18 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: minMargin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for minMargin

Name: minMargin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fd0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1670>]
position_1
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
price_1
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Source address: u

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: _margin, Num: 1
Globalname: _margin
End popogation
TMP_19(int256) = INTERNAL_CALL, Balances.margin(Balances.Position,uint256)(position_1,price_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
margin(Balances.Position,uint256)
ENTRY_POINT
NEW VARIABLE signedPrice = LibMath.toInt256(price)
RETURN position.quote + PRBMathSD59x18.mul(position.base,signedPrice)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Phid
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
position_1(Balances.Position) := ϕ(['position_1', 'position_1'])
Phi

Name: position_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: position_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for position

Name: position Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
XXXX
price_1(uint256) := ϕ(['price_1', 'price_1'])
Phi

Name: price_1 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: price_1 Function: leveragedNotionalValue
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for price

Name: price Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5193a0>]
price_1
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: price_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: price, Num: 1
Globalname: price
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
TMP_3(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['price_1'] 
Found: toInt256
init
end
[i]Type for TMP_3

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_3(int256)
asgn
init
end
_______________

Name: TMP_3 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f523250>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f5233d0>]
position_1
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_4(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: margin_position_1_quote
OUT KEY: margin_position_quote
FTT: None
No field found
[i]Type for REF_4

Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_6(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: margin_position_1_base
OUT KEY: margin_position_base
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: quote, base
Finance Type: undef
Fieldf: 
Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: margin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['REF_6', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: REF_6 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedPrice Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_4

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(int256) = REF_4 (c)+ TMP_4
init
end
init
end
init
end
_______________

Name: TMP_4 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN
init
end

Name: TMP_5 Function: margin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_19

Name: TMP_19 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_margin_1(int256) := TMP_19(int256)
asgn
init
end
_______________

Name: TMP_19 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for _margin

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb400>]
_margin_1
Name: _margin, Num: 1
Globalname: _margin

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _margin, Num: 1
Globalname: _margin
End popogation
TMP_20(bool) = _margin_1 < 0
init
end
init
end
lnorm: u rnorm: 0
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_20 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _margin Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_20

Name: TMP_20 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb400>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cb190>]
_margin_1

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
minMargin_1

Name: minMargin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_21 = CONVERT _margin_1 to uint256
Converting _margin_1

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: _margin Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_21 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_21

Name: TMP_21 Function: marginIsValid
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = TMP_21 >= minMargin_1
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_22

Name: TMP_22 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_22
RETURN
init
end

Name: TMP_22 Function: marginIsValid
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
RETURN False
RETURN
init
end

Name: False Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Reading Function: fillAmount
Checking funcion...



fillAmount
Finding type for orderA(Perpetuals.Order ... )
fillAmount
orderA
maker
OUT KEY: fillAmount_orderA_maker
fillAmount
orderA
market
OUT KEY: fillAmount_orderA_market
fillAmount
orderA
price
OUT KEY: fillAmount_orderA_price
fillAmount
orderA
amount
OUT KEY: fillAmount_orderA_amount
fillAmount
orderA
side
OUT KEY: fillAmount_orderA_side
fillAmount
orderA
expires
OUT KEY: fillAmount_orderA_expires
fillAmount
orderA
created
OUT KEY: fillAmount_orderA_created
Value: u
Finding type for fillA(uint256 ... )
Value: u
Finding type for orderB(Perpetuals.Order ... )
fillAmount
orderB
maker
OUT KEY: fillAmount_orderB_maker
fillAmount
orderB
market
OUT KEY: fillAmount_orderB_market
fillAmount
orderB
price
OUT KEY: fillAmount_orderB_price
fillAmount
orderB
amount
OUT KEY: fillAmount_orderB_amount
fillAmount
orderB
side
OUT KEY: fillAmount_orderB_side
fillAmount
orderB
expires
OUT KEY: fillAmount_orderB_expires
fillAmount
orderB
created
OUT KEY: fillAmount_orderB_created
Value: u
Finding type for fillB(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
fillAmount(Perpetuals.Order,uint256,Perpetuals.Order,uint256)
ENTRY_POINT
RETURN LibMath.min(orderA.amount - fillA,orderB.amount - fillB)


REF_11(uint256) -> orderA_1.amount
TMP_23(uint256) = REF_11 (c)- fillA_1
REF_12(uint256) -> orderB_1.amount
TMP_24(uint256) = REF_12 (c)- fillB_1
TMP_25(uint256) = LIBRARY_CALL, dest:LibMath, function:LibMath.min(uint256,uint256), arguments:['TMP_23', 'TMP_24'] 
RETURN TMP_25


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbd00>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fa0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbbb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4370>]
fillB_1
Source address: u

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillB, Num: 1
Globalname: fillB

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fillA_1
Source address: u

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillA, Num: 1
Globalname: fillA

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
orderB_1
Source address: u

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: orderB, Num: 1
Globalname: orderB

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
orderA_1
Source address: u

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: orderA, Num: 1
Globalname: orderA

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillB, Num: 1
Globalname: fillB
Source address: u

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillA, Num: 1
Globalname: fillA
Source address: u

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: orderB, Num: 1
Globalname: orderB
Source address: u

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: orderA, Num: 1
Globalname: orderA
End popogation
REF_11(uint256) -> orderA_1.amount
MEMBER
init
end
init
end
OUT KEY: fillAmount_orderA_1_amount
OUT KEY: fillAmount_orderA_amount
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: orderA_1, Field: amount
#################
Member: 
Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_23(uint256) = REF_11 (c)- fillA_1
init
end
init
end
init
end
_______________

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_23 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_23

Name: TMP_23 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_12(uint256) -> orderB_1.amount
MEMBER
init
end
init
end
OUT KEY: fillAmount_orderB_1_amount
OUT KEY: fillAmount_orderB_amount
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: orderB_1, Field: amount
#################
Member: 
Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_24(uint256) = REF_12 (c)- fillB_1
init
end
init
end
init
end
_______________

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_24 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_24

Name: TMP_24 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(uint256) = LIBRARY_CALL, dest:LibMath, function:LibMath.min(uint256,uint256), arguments:['TMP_23', 'TMP_24'] 
Found: min
init
end
[i]Type for TMP_25

Name: TMP_25 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_25
RETURN
init
end

Name: TMP_25 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


REF_11(uint256) -> orderA_1.amount
TMP_23(uint256) = REF_11 (c)- fillA_1
REF_12(uint256) -> orderB_1.amount
TMP_24(uint256) = REF_12 (c)- fillB_1
TMP_25(uint256) = LIBRARY_CALL, dest:LibMath, function:LibMath.min(uint256,uint256), arguments:['TMP_23', 'TMP_24'] 
RETURN TMP_25


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbd00>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4c1fa0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbbb0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4370>]
fillB_1
Source address: u

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillB, Num: 1
Globalname: fillB

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
fillA_1
Source address: u

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillA, Num: 1
Globalname: fillA

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
orderB_1
Source address: u

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: orderB, Num: 1
Globalname: orderB

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
orderA_1
Source address: u

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: orderA, Num: 1
Globalname: orderA

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Source address: u

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillB, Num: 1
Globalname: fillB
Source address: u

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: fillA, Num: 1
Globalname: fillA
Source address: u

Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: orderB, Num: 1
Globalname: orderB
Source address: u

Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: orderA, Num: 1
Globalname: orderA
End popogation
REF_11(uint256) -> orderA_1.amount
MEMBER
init
end
init
end
OUT KEY: fillAmount_orderA_1_amount
OUT KEY: fillAmount_orderA_amount
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: orderA_1, Field: amount
#################
Member: 
Name: orderA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: fillAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: amount Function: fillAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(uint256) = REF_11 (c)- fillA_1
init
end
init
end
init
end
_______________

Name: fillA_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_23 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_23

Name: TMP_23 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_12(uint256) -> orderB_1.amount
MEMBER
init
end
init
end
OUT KEY: fillAmount_orderB_1_amount
OUT KEY: fillAmount_orderB_amount
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: orderB_1, Field: amount
#################
Member: 
Name: orderB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: fillAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: amount Function: fillAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(uint256) = REF_12 (c)- fillB_1
init
end
init
end
init
end
_______________

Name: fillB_1 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_24 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_24

Name: TMP_24 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_25(uint256) = LIBRARY_CALL, dest:LibMath, function:LibMath.min(uint256,uint256), arguments:['TMP_23', 'TMP_24'] 
Found: min
init
end
[i]Type for TMP_25

Name: TMP_25 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_25
RETURN
init
end

Name: TMP_25 Function: fillAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: applyTrade
Checking funcion...



applyTrade
Finding type for position(Balances.Position ... )
applyTrade
position
quote
OUT KEY: applyTrade_position_quote
applyTrade
position
base
OUT KEY: applyTrade_position_base
Value: u
Finding type for trade(Balances.Trade ... )
{'global:u': 1}
applyTrade
trade
price
OUT KEY: applyTrade_trade_price
applyTrade
trade
amount
OUT KEY: applyTrade_trade_amount
([-1], [-1], ['u'], -1, 'u', 0)
applyTrade
trade
side
OUT KEY: applyTrade_trade_side
(-1, -1, 'u', 'u', 1)
applyTrade
trade
price
OUT KEY: applyTrade_trade_price
applyTrade
trade
amount
OUT KEY: applyTrade_trade_amount
([-1], [-1], ['u'], -1, 'u', 0)
applyTrade
trade
side
OUT KEY: applyTrade_trade_side
[*]Type fetched successfully
Finding type for feeRate(uint256 ... )
(-1, -1, 'u', 'u', 1, 12)
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f5610274070>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 12
FIND RETURN
ENTRY_POINT
applyTrade(Balances.Position,Balances.Trade,uint256)
ENTRY_POINT
NEW VARIABLE signedAmount = LibMath.toInt256(trade.amount)
NEW VARIABLE signedPrice = LibMath.toInt256(trade.price)
NEW VARIABLE quoteChange = PRBMathSD59x18.mul(signedAmount,signedPrice)
NEW VARIABLE fee = getFee(trade.amount,trade.price,feeRate)
NEW VARIABLE newQuote = 0
NEW VARIABLE newBase = 0
IF trade.side == Perpetuals.Side.Long
IF trade.side == Perpetuals.Side.Short
EXPRESSION newBase = position.base - signedAmount
EXPRESSION newQuote = position.quote + quoteChange - fee
EXPRESSION newBase = position.base + signedAmount
EXPRESSION newQuote = position.quote - quoteChange + fee
END_IF
END_IF
NEW VARIABLE newPosition = Position(newQuote,newBase)
RETURN newPosition


REF_14(uint256) -> trade_1.amount
TMP_26(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_14'] 
signedAmount_1(int256) := TMP_26(int256)
REF_16(uint256) -> trade_1.price
TMP_27(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_16'] 
signedPrice_1(int256) := TMP_27(int256)
TMP_28(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['signedAmount_1', 'signedPrice_1'] 
quoteChange_1(int256) := TMP_28(int256)
REF_18(uint256) -> trade_1.amount
REF_19(uint256) -> trade_1.price
TMP_29(int256) = INTERNAL_CALL, Balances.getFee(uint256,uint256,uint256)(REF_18,REF_19,feeRate_1)
fee_1(int256) := TMP_29(int256)
newQuote_1(int256) := 0(int256)
newBase_1(int256) := 0(int256)
REF_20(Perpetuals.Side) -> trade_1.side
REF_21(None) -> Perpetuals.Side
REF_22(None) -> REF_21.Long
TMP_30(bool) = REF_20 == REF_22
CONDITION TMP_30
REF_25(Perpetuals.Side) -> trade_1.side
REF_26(None) -> Perpetuals.Side
REF_27(None) -> REF_26.Short
TMP_34(bool) = REF_25 == REF_27
CONDITION TMP_34
REF_28(int256) -> position_1.base
TMP_35(int256) = REF_28 (c)- signedAmount_1
newBase_3(int256) := TMP_35(int256)
REF_29(int256) -> position_1.quote
TMP_36(int256) = REF_29 (c)+ quoteChange_1
TMP_37(int256) = TMP_36 (c)- fee_1
newQuote_3(int256) := TMP_37(int256)
REF_23(int256) -> position_1.base
TMP_31(int256) = REF_23 (c)+ signedAmount_1
newBase_2(int256) := TMP_31(int256)
REF_24(int256) -> position_1.quote
TMP_32(int256) = REF_24 (c)- quoteChange_1
TMP_33(int256) = TMP_32 (c)+ fee_1
newQuote_2(int256) := TMP_33(int256)
newQuote_4(int256) := ϕ(['newQuote_3', 'newQuote_1'])
newBase_4(int256) := ϕ(['newBase_3', 'newBase_1'])
newQuote_5(int256) := ϕ(['newQuote_2', 'newQuote_1'])
newBase_5(int256) := ϕ(['newBase_2', 'newBase_1'])
TMP_38 = new Position(newQuote_5,newBase_5)
newPosition_1(Balances.Position) := TMP_38(Balances.Position)
RETURN newPosition_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Name: signedAmount, Num: 1
Globalname: signedAmount
End popogation
REF_14(uint256) -> trade_1.amount
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_amount
OUT KEY: applyTrade_trade_amount
FTT: ([-1], [-1], ['u'], -1, 'u', 0)
Source address: u
[i]Type for REF_14

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Root: trade_1, Field: amount
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Added: True
Source address: u
Finance type key: (0, -1)
Added to member...

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
TMP_26(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_14'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
[[-1], [-1], 'u', None, [], 0, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedAmount_1(int256) := TMP_26(int256)
asgn
init
end
_______________

Name: TMP_26 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedAmount Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for signedAmount

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_16(uint256) -> trade_1.price
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_price
OUT KEY: applyTrade_trade_price
FTT: None
No field found
[i]Type for REF_16

Name: REF_16 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: price
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: amount
Finance Type: undef
Fieldf: 
Name: price Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_16 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_27(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_16'] 
Found: toInt256
init
end
[i]Type for TMP_27

Name: TMP_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_27(int256)
asgn
init
end
_______________

Name: TMP_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed160>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: signedPrice, Num: 1
Globalname: signedPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_28(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['signedAmount_1', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
quoteChange_1(int256) := TMP_28(int256)
asgn
init
end
_______________

Name: TMP_28 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: quoteChange Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for quoteChange

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4a60>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
feeRate_1
Source address: u

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Source address: u

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
REF_18(uint256) -> trade_1.amount
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_amount
OUT KEY: applyTrade_trade_amount
FTT: ([-1], [-1], ['u'], -1, 'u', 0)
Source address: u
[i]Type for REF_18

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Root: trade_1, Field: amount
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Added: True
Source address: u
Finance type key: (0, -1)
Added to member...

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
REF_19(uint256) -> trade_1.price
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_price
OUT KEY: applyTrade_trade_price
FTT: None
No field found
[i]Type for REF_19

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: price
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Fieldf: 
Name: price Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(int256) = INTERNAL_CALL, Balances.getFee(uint256,uint256,uint256)(REF_18,REF_19,feeRate_1)
init
end
init
end
init
end
[[-1], [-1], 'u', None, [], 0, 'u', -1]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
[[], [], 'u', None, [], -1, 'u', 'u']

Name: executionPrice Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], 12, 'u', 'u']

Name: feeRate Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
FIND RETURN
ENTRY_POINT
getFee(uint256,uint256,uint256)
ENTRY_POINT
NEW VARIABLE quoteChange = PRBMathUD60x18.mul(amount,executionPrice)
NEW VARIABLE fee = PRBMathUD60x18.mul(quoteChange,feeRate).toInt256()
RETURN fee
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: amount_1 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Copied ftype

Name: amount_1 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Phid
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Phid
amount_1(uint256) := ϕ(['REF_18'])
Phi
[i]Type for amount

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
executionPrice_1(uint256) := ϕ(['REF_19'])
Phi

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for executionPrice

Name: executionPrice Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeRate_1(uint256) := ϕ(['feeRate_1'])
Phi

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio


END==================================
[i]Type for feeRate

Name: feeRate Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b1c0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed250>]
amount_1

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
executionPrice_1
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
testing mul...
init
end
init
end

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_39 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
quoteChange_1(uint256) := TMP_39(uint256)
asgn
init
end
_______________

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: quoteChange Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for quoteChange

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b340>]
feeRate_1
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
quoteChange_1

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
testing mul...
init
end
init
end

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
lnorm: 0 rnorm: u
Finance type key: (0, 12)
init
end
_______________

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_40 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: net balance
COPY HERE
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
XXXX
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 1
[[-1], [-1], 0, None, [], 1, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_41(int256)
asgn
init
end
_______________

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b6d0>]
fee_1

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN
init
end

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: amount_1 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Copied ftype

Name: amount_1 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Phid
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Phid
amount_1(uint256) := ϕ(['REF_18'])
Phi
[i]Type for amount

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
executionPrice_1(uint256) := ϕ(['REF_19'])
Phi

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for executionPrice

Name: executionPrice Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeRate_1(uint256) := ϕ(['feeRate_1'])
Phi

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio


END==================================
[i]Type for feeRate

Name: feeRate Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b1c0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed250>]
amount_1

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
executionPrice_1
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
testing mul...
init
end
init
end

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_39 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
quoteChange_1(uint256) := TMP_39(uint256)
asgn
init
end
_______________

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: quoteChange Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for quoteChange

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b340>]
feeRate_1
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
quoteChange_1

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
testing mul...
init
end
init
end

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
lnorm: 0 rnorm: u
Finance type key: (0, 12)
init
end
_______________

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_40 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
COPY HERE
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
XXXX
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 1
[[-1], [-1], 0, None, [], 1, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_41(int256)
asgn
init
end
_______________

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b6d0>]
fee_1

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN
init
end

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_29(int256)
asgn
init
end
_______________

Name: TMP_29 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: newQuote, Num: 1
Globalname: newQuote
End popogation
newQuote_1(int256) := 0(int256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: newBase, Num: 1
Globalname: newBase
End popogation
newBase_1(int256) := 0(int256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
End popogation
REF_20(Perpetuals.Side) -> trade_1.side
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_side
OUT KEY: applyTrade_trade_side
FTT: None
No field found
[i]Type for REF_20

Name: REF_20 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: side
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, amount
Finance Type: undef
Fieldf: 
Name: side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_20 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_21(None) -> Perpetuals.Side
MEMBER
init
init
end
OUT KEY: global_Perpetuals_Side
OUT KEY: global_Perpetuals_Side
FTT: None
No field found
[i]Type for REF_21

Name: REF_21 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Perpetuals, Field: Side
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: Side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_21 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_22(None) -> REF_21.Long
MEMBER
init
end
init
end
OUT KEY: applyTrade_REF_21_Long
OUT KEY: applyTrade_REF_Long
FTT: None
No field found
[i]Type for REF_22

Name: REF_22 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: Long
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side
Finance Type: undef
Fieldf: 
Name: Long Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_22 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_30(bool) = REF_20 == REF_22
[i]Type for TMP_30

Name: TMP_30 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
End popogation
REF_25(Perpetuals.Side) -> trade_1.side
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_side
OUT KEY: applyTrade_trade_side
FTT: None
No field found
[i]Type for REF_25

Name: REF_25 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: side
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_25 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: side Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(None) -> Perpetuals.Side
MEMBER
init
init
end
OUT KEY: global_Perpetuals_Side
OUT KEY: global_Perpetuals_Side
FTT: None
No field found
[i]Type for REF_26

Name: REF_26 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Perpetuals, Field: Side
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long
Finance Type: undef
Fieldf: 
Name: Side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_26 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: Side Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27(None) -> REF_26.Short
MEMBER
init
end
init
end
OUT KEY: applyTrade_REF_26_Short
OUT KEY: applyTrade_REF_Short
FTT: None
No field found
[i]Type for REF_27

Name: REF_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_26, Field: Short
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long
Finance Type: undef
Fieldf: 
Name: Short Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_34(bool) = REF_25 == REF_27
[i]Type for TMP_34

Name: TMP_34 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newBase, Num: 3
Globalname: newBase
End popogation
REF_28(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_base
OUT KEY: applyTrade_position_base
FTT: None
No field found
[i]Type for REF_28

Name: REF_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_35(int256) = REF_28 (c)- signedAmount_1
init
end
init
end
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_35 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_35

Name: TMP_35 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_3(int256) := TMP_35(int256)
asgn
init
end
_______________

Name: TMP_35 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed3d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
fee_1

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
quoteChange_1

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newQuote, Num: 3
Globalname: newQuote
End popogation
REF_29(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_quote
OUT KEY: applyTrade_position_quote
FTT: None
No field found
[i]Type for REF_29

Name: REF_29 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base
Finance Type: undef
Fieldf: 
Name: quote Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_29 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_36(int256) = REF_29 (c)+ quoteChange_1
init
end
init
end
init
end
_______________

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_36 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(int256) = TMP_36 (c)- fee_1
init
end
init
end
init
end
_______________

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_37 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newQuote_3(int256) := TMP_37(int256)
asgn
init
end
_______________

Name: TMP_37 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newBase, Num: 2
Globalname: newBase
End popogation
REF_23(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_base
OUT KEY: applyTrade_position_base
FTT: None
No field found
[i]Type for REF_23

Name: REF_23 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_23 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(int256) = REF_23 (c)+ signedAmount_1
init
end
init
end
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_31 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_2(int256) := TMP_31(int256)
asgn
init
end
_______________

Name: TMP_31 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed3d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
fee_1

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
quoteChange_1

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newQuote, Num: 2
Globalname: newQuote
End popogation
REF_24(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_quote
OUT KEY: applyTrade_position_quote
FTT: None
No field found
[i]Type for REF_24

Name: REF_24 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: quote Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_24 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(int256) = REF_24 (c)- quoteChange_1
init
end
init
end
init
end
_______________

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_32 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(int256) = TMP_32 (c)+ fee_1
init
end
init
end
init
end
_______________

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_33 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newQuote_2(int256) := TMP_33(int256)
asgn
init
end
_______________

Name: TMP_33 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: newQuote, Num: 4
Globalname: newQuote

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: newBase, Num: 4
Globalname: newBase

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newQuote_4(int256) := ϕ(['newQuote_3', 'newQuote_1'])
Phi

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_4(int256) := ϕ(['newBase_3', 'newBase_1'])
Phi

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: newQuote, Num: 5
Globalname: newQuote

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: newBase, Num: 5
Globalname: newBase

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newQuote_5(int256) := ϕ(['newQuote_2', 'newQuote_1'])
Phi

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_5(int256) := ϕ(['newBase_2', 'newBase_1'])
Phi

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4ee0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4df0>]
newBase_5

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newQuote_5

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newPosition, Num: 1
Globalname: newPosition
End popogation
TMP_38 = new Position(newQuote_5,newBase_5)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newPosition_1(Balances.Position) := TMP_38(Balances.Position)
asgn
init
end
_______________

Name: TMP_38 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for newPosition

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f481a90>]
newPosition_1
Name: newPosition, Num: 1
Globalname: newPosition

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newPosition, Num: 1
Globalname: newPosition
End popogation
RETURN newPosition_1
RETURN
init
end

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


REF_14(uint256) -> trade_1.amount
TMP_26(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_14'] 
signedAmount_1(int256) := TMP_26(int256)
REF_16(uint256) -> trade_1.price
TMP_27(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_16'] 
signedPrice_1(int256) := TMP_27(int256)
TMP_28(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['signedAmount_1', 'signedPrice_1'] 
quoteChange_1(int256) := TMP_28(int256)
REF_18(uint256) -> trade_1.amount
REF_19(uint256) -> trade_1.price
TMP_29(int256) = INTERNAL_CALL, Balances.getFee(uint256,uint256,uint256)(REF_18,REF_19,feeRate_1)
fee_1(int256) := TMP_29(int256)
newQuote_1(int256) := 0(int256)
newBase_1(int256) := 0(int256)
REF_20(Perpetuals.Side) -> trade_1.side
REF_21(None) -> Perpetuals.Side
REF_22(None) -> REF_21.Long
TMP_30(bool) = REF_20 == REF_22
CONDITION TMP_30
REF_25(Perpetuals.Side) -> trade_1.side
REF_26(None) -> Perpetuals.Side
REF_27(None) -> REF_26.Short
TMP_34(bool) = REF_25 == REF_27
CONDITION TMP_34
REF_28(int256) -> position_1.base
TMP_35(int256) = REF_28 (c)- signedAmount_1
newBase_3(int256) := TMP_35(int256)
REF_29(int256) -> position_1.quote
TMP_36(int256) = REF_29 (c)+ quoteChange_1
TMP_37(int256) = TMP_36 (c)- fee_1
newQuote_3(int256) := TMP_37(int256)
REF_23(int256) -> position_1.base
TMP_31(int256) = REF_23 (c)+ signedAmount_1
newBase_2(int256) := TMP_31(int256)
REF_24(int256) -> position_1.quote
TMP_32(int256) = REF_24 (c)- quoteChange_1
TMP_33(int256) = TMP_32 (c)+ fee_1
newQuote_2(int256) := TMP_33(int256)
newQuote_4(int256) := ϕ(['newQuote_3', 'newQuote_1'])
newBase_4(int256) := ϕ(['newBase_3', 'newBase_1'])
newQuote_5(int256) := ϕ(['newQuote_2', 'newQuote_1'])
newBase_5(int256) := ϕ(['newBase_2', 'newBase_1'])
TMP_38 = new Position(newQuote_5,newBase_5)
newPosition_1(Balances.Position) := TMP_38(Balances.Position)
RETURN newPosition_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Name: signedAmount, Num: 1
Globalname: signedAmount
End popogation
REF_14(uint256) -> trade_1.amount
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_amount
OUT KEY: applyTrade_trade_amount
FTT: ([-1], [-1], ['u'], -1, 'u', 0)
init
end
_______________

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for REF_14

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Root: trade_1, Field: amount
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Added: True
Source address: u
Finance type key: (0, -1)
Added to member...

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
TMP_26(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_14'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
[[-1], [-1], 'u', None, [], 0, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_26

Name: TMP_26 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedAmount_1(int256) := TMP_26(int256)
asgn
init
end
_______________

Name: TMP_26 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedAmount Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for signedAmount

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Name: signedPrice, Num: 1
Globalname: signedPrice
End popogation
REF_16(uint256) -> trade_1.price
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_price
OUT KEY: applyTrade_trade_price
FTT: None
No field found
[i]Type for REF_16

Name: REF_16 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: price
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: price Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_16 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_27(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['REF_16'] 
Found: toInt256
init
end
[i]Type for TMP_27

Name: TMP_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
signedPrice_1(int256) := TMP_27(int256)
asgn
init
end
_______________

Name: TMP_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for signedPrice

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed160>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
signedPrice_1
Name: signedPrice, Num: 1
Globalname: signedPrice

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: signedPrice, Num: 1
Globalname: signedPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_28(int256) = LIBRARY_CALL, dest:PRBMathSD59x18, function:PRBMathSD59x18.mul(int256,int256), arguments:['signedAmount_1', 'signedPrice_1'] 
testing mul...
init
end
init
end

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: signedPrice Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
quoteChange_1(int256) := TMP_28(int256)
asgn
init
end
_______________

Name: TMP_28 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: quoteChange Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for quoteChange

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4a60>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
feeRate_1
Source address: u

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
Source address: u

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
REF_18(uint256) -> trade_1.amount
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_amount
OUT KEY: applyTrade_trade_amount
FTT: ([-1], [-1], ['u'], -1, 'u', 0)
init
end
_______________

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for REF_18

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Root: trade_1, Field: amount
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Added: True
Source address: u
Finance type key: (0, -1)
Added to member...

Name: amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
REF_19(uint256) -> trade_1.price
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_price
OUT KEY: applyTrade_trade_price
FTT: None
No field found
[i]Type for REF_19

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: price
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: price Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_29(int256) = INTERNAL_CALL, Balances.getFee(uint256,uint256,uint256)(REF_18,REF_19,feeRate_1)
init
end
init
end
init
end
init
end
_______________

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_29 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_29

Name: TMP_29 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_29(int256)
asgn
init
end
_______________

Name: TMP_29 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: newQuote, Num: 1
Globalname: newQuote
End popogation
newQuote_1(int256) := 0(int256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
Name: newBase, Num: 1
Globalname: newBase
End popogation
newBase_1(int256) := 0(int256)
asgn
init
end
_______________

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
End popogation
REF_20(Perpetuals.Side) -> trade_1.side
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_side
OUT KEY: applyTrade_trade_side
FTT: None
No field found
[i]Type for REF_20

Name: REF_20 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: side
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: side Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_20 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: side Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_21(None) -> Perpetuals.Side
MEMBER
init
init
end
OUT KEY: global_Perpetuals_Side
OUT KEY: global_Perpetuals_Side
FTT: None
No field found
[i]Type for REF_21

Name: REF_21 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Perpetuals, Field: Side
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long, Short
Finance Type: undef
Fieldf: 
Name: Side Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_21 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: Side Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_22(None) -> REF_21.Long
MEMBER
init
end
init
end
OUT KEY: applyTrade_REF_21_Long
OUT KEY: applyTrade_REF_Long
FTT: None
No field found
[i]Type for REF_22

Name: REF_22 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_21, Field: Long
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long, Short
Finance Type: undef
Fieldf: 
Name: Long Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_22 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: Long Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_30(bool) = REF_20 == REF_22
[i]Type for TMP_30

Name: TMP_30 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4cbe20>]
trade_1
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Source address: u

Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Copied ftype
Name: trade, Num: 1
Globalname: trade
End popogation
REF_25(Perpetuals.Side) -> trade_1.side
MEMBER
init
end
init
end
OUT KEY: applyTrade_trade_1_side
OUT KEY: applyTrade_trade_side
FTT: None
No field found
[i]Type for REF_25

Name: REF_25 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: trade_1, Field: side
#################
Member: 
Name: trade_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price, side, amount
Finance Type: undef
Fieldf: 
Name: side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_25 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: side Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_26(None) -> Perpetuals.Side
MEMBER
init
init
end
OUT KEY: global_Perpetuals_Side
OUT KEY: global_Perpetuals_Side
FTT: None
No field found
[i]Type for REF_26

Name: REF_26 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: Perpetuals, Field: Side
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long, Short
Finance Type: undef
Fieldf: 
Name: Side Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_26 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: Side Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27(None) -> REF_26.Short
MEMBER
init
end
init
end
OUT KEY: applyTrade_REF_26_Short
OUT KEY: applyTrade_REF_Short
FTT: None
No field found
[i]Type for REF_27

Name: REF_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_26, Field: Short
#################
Member: 
Name: Perpetuals Function: global
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: Side, Long, Short
Finance Type: undef
Fieldf: 
Name: Short Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_27 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: Short Function: global
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_34(bool) = REF_25 == REF_27
[i]Type for TMP_34

Name: TMP_34 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newBase, Num: 3
Globalname: newBase
End popogation
REF_28(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_base
OUT KEY: applyTrade_position_base
FTT: None
No field found
[i]Type for REF_28

Name: REF_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: base Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_28 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_35(int256) = REF_28 (c)- signedAmount_1
init
end
init
end
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_35 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_35

Name: TMP_35 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_3(int256) := TMP_35(int256)
asgn
init
end
_______________

Name: TMP_35 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed3d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
fee_1

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
quoteChange_1

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newQuote, Num: 3
Globalname: newQuote
End popogation
REF_29(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_quote
OUT KEY: applyTrade_position_quote
FTT: None
No field found
[i]Type for REF_29

Name: REF_29 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: quote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_29 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(int256) = REF_29 (c)+ quoteChange_1
init
end
init
end
init
end
_______________

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_36 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_37(int256) = TMP_36 (c)- fee_1
init
end
init
end
init
end
_______________

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_37 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newQuote_3(int256) := TMP_37(int256)
asgn
init
end
_______________

Name: TMP_37 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4d90>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
signedAmount_1

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newBase, Num: 2
Globalname: newBase
End popogation
REF_23(int256) -> position_1.base
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_base
OUT KEY: applyTrade_position_base
FTT: None
No field found
[i]Type for REF_23

Name: REF_23 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: base
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: base Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_23 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: base Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(int256) = REF_23 (c)+ signedAmount_1
init
end
init
end
init
end
_______________

Name: signedAmount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_31 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_31

Name: TMP_31 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_2(int256) := TMP_31(int256)
asgn
init
end
_______________

Name: TMP_31 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed880>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed3d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4af0>]
fee_1

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
quoteChange_1

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
position_1
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Source address: u

Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Copied ftype
Name: position, Num: 1
Globalname: position
Name: newQuote, Num: 2
Globalname: newQuote
End popogation
REF_24(int256) -> position_1.quote
MEMBER
init
end
init
end
OUT KEY: applyTrade_position_1_quote
OUT KEY: applyTrade_position_quote
FTT: None
No field found
[i]Type for REF_24

Name: REF_24 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: position_1, Field: quote
#################
Member: 
Name: position_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: base, quote
Finance Type: undef
Fieldf: 
Name: quote Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_24 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: quote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_32(int256) = REF_24 (c)- quoteChange_1
init
end
init
end
init
end
_______________

Name: quoteChange Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_32 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(int256) = TMP_32 (c)+ fee_1
init
end
init
end
init
end
_______________

Name: fee Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_33 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_33

Name: TMP_33 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newQuote_2(int256) := TMP_33(int256)
asgn
init
end
_______________

Name: TMP_33 Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: newQuote, Num: 4
Globalname: newQuote

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: newBase, Num: 4
Globalname: newBase

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newQuote_4(int256) := ϕ(['newQuote_3', 'newQuote_1'])
Phi

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_4(int256) := ϕ(['newBase_3', 'newBase_1'])
Phi

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: newQuote, Num: 5
Globalname: newQuote

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: newBase, Num: 5
Globalname: newBase

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newQuote_5(int256) := ϕ(['newQuote_2', 'newQuote_1'])
Phi

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newQuote Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newQuote

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newBase_5(int256) := ϕ(['newBase_2', 'newBase_1'])
Phi

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
init
end
_______________

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newBase Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for newBase

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4ee0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4d4df0>]
newBase_5

Name: newBase Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
newQuote_5

Name: newQuote Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newPosition, Num: 1
Globalname: newPosition
End popogation
TMP_38 = new Position(newQuote_5,newBase_5)
[i]Type for TMP_38

Name: TMP_38 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newPosition_1(Balances.Position) := TMP_38(Balances.Position)
asgn
init
end
_______________

Name: TMP_38 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for newPosition

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f481a90>]
newPosition_1
Name: newPosition, Num: 1
Globalname: newPosition

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newPosition, Num: 1
Globalname: newPosition
End popogation
RETURN newPosition_1
RETURN
init
end

Name: newPosition Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: getFee
Checking funcion...



getFee
Finding type for amount(uint256 ... )
Value: -1
Finding type for executionPrice(uint256 ... )
Value: u
Finding type for feeRate(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 12
FIND RETURN
ENTRY_POINT
getFee(uint256,uint256,uint256)
ENTRY_POINT
NEW VARIABLE quoteChange = PRBMathUD60x18.mul(amount,executionPrice)
NEW VARIABLE fee = PRBMathUD60x18.mul(quoteChange,feeRate).toInt256()
RETURN fee


amount_1(uint256) := ϕ(['REF_18'])
executionPrice_1(uint256) := ϕ(['REF_19'])
feeRate_1(uint256) := ϕ(['feeRate_1'])
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
quoteChange_1(uint256) := TMP_39(uint256)
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
fee_1(int256) := TMP_41(int256)
RETURN fee_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: amount_1 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Phid
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Phid
amount_1(uint256) := ϕ(['REF_18'])
Phi

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance


END==================================
init
end
_______________

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: amount Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
executionPrice_1(uint256) := ϕ(['REF_19'])
Phi

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for executionPrice

Name: executionPrice Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeRate_1(uint256) := ϕ(['feeRate_1'])
Phi

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio


END==================================
[i]Type for feeRate

Name: feeRate Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b1c0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed250>]
amount_1

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
executionPrice_1
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
testing mul...
init
end
init
end

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_39 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
quoteChange_1(uint256) := TMP_39(uint256)
asgn
init
end
_______________

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: quoteChange Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for quoteChange

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b340>]
feeRate_1
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
quoteChange_1

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
testing mul...
init
end
init
end

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
lnorm: 0 rnorm: u
Finance type key: (0, 12)
init
end
_______________

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_40 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
COPY HERE
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
XXXX
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 1
[[-1], [-1], 0, None, [], 1, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_41(int256)
asgn
init
end
_______________

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b6d0>]
fee_1

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN
init
end

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


amount_1(uint256) := ϕ(['REF_18'])
executionPrice_1(uint256) := ϕ(['REF_19'])
feeRate_1(uint256) := ϕ(['feeRate_1'])
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
quoteChange_1(uint256) := TMP_39(uint256)
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
fee_1(int256) := TMP_41(int256)
RETURN fee_1


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Source address: u

Name: amount_1 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Phid
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Phid
amount_1(uint256) := ϕ(['REF_18'])
Phi

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance


END==================================
init
end
_______________

Name: trade_1.amount Function: applyTrade
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: amount Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for amount

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
executionPrice_1(uint256) := ϕ(['REF_19'])
Phi

Name: REF_19 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for executionPrice

Name: executionPrice Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeRate_1(uint256) := ϕ(['feeRate_1'])
Phi

Name: feeRate_1 Function: applyTrade
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio


END==================================
[i]Type for feeRate

Name: feeRate Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b1c0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4ed250>]
amount_1

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
executionPrice_1
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: executionPrice, Num: 1
Globalname: executionPrice
Name: quoteChange, Num: 1
Globalname: quoteChange
End popogation
TMP_39(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['amount_1', 'executionPrice_1'] 
testing mul...
init
end
init
end

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: executionPrice_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: 0 rnorm: u
init
end
_______________

Name: amount Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_39 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
[i]Type for TMP_39

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
quoteChange_1(uint256) := TMP_39(uint256)
asgn
init
end
_______________

Name: TMP_39 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: quoteChange Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: -1
Fields: 
Finance Type: raw balance
COPY HERE
Source address: u
Finance type key: (0, -1)
[i]Type for quoteChange

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4e4e80>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b340>]
feeRate_1
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
quoteChange_1

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance
Source address: u

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Copied ftype
Name: feeRate, Num: 1
Globalname: feeRate
Name: fee, Num: 1
Globalname: fee
End popogation
TMP_40(uint256) = LIBRARY_CALL, dest:PRBMathUD60x18, function:PRBMathUD60x18.mul(uint256,uint256), arguments:['quoteChange_1', 'feeRate_1'] 
testing mul...
init
end
init
end

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: feeRate_1 Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
lnorm: 0 rnorm: u
Finance type key: (0, 12)
init
end
_______________

Name: quoteChange Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: raw balance

Name: TMP_40 Function: getFee
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
COPY HERE
Source address: u
[i]Type for TMP_40

Name: TMP_40 Function: getFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
XXXX
TMP_41(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['TMP_40'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 1
[[-1], [-1], 0, None, [], 1, 'u', -1]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: -1
Fields: 
Finance Type: net balance
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(int256) := TMP_41(int256)
asgn
init
end
_______________

Name: TMP_41 Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: getFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48b6d0>]
fee_1

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN
init
end

Name: fee Function: getFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: tokenToWad
Checking funcion...



tokenToWad
Finding type for tokenDecimals(uint256 ... )
Value: u
Finding type for amount(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
tokenToWad(uint256,uint256)
ENTRY_POINT
NEW VARIABLE scaler = 10 ** (MAX_DECIMALS - tokenDecimals)
RETURN amount.toInt256() * scaler.toInt256()


MAX_DECIMALS_1(uint256) := ϕ(['MAX_DECIMALS_0'])
TMP_42(uint256) = MAX_DECIMALS_1 (c)- tokenDecimals_1
TMP_43(uint256) = 10 (c)** TMP_42
scaler_1(uint256) := TMP_43(uint256)
TMP_44(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['amount_1'] 
TMP_45(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['scaler_1'] 
TMP_46(int256) = TMP_44 (c)* TMP_45
RETURN TMP_46


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: MAX_DECIMALS, Num: 1
Globalname: MAX_DECIMALS
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
MAX_DECIMALS_1(uint256) := ϕ(['MAX_DECIMALS_0'])
Phi
[i]Type for MAX_DECIMALS

Name: MAX_DECIMALS Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f560f48b880>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48bdf0>]
tokenDecimals_1
Source address: u

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_DECIMALS_1
Source address: u

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals
Name: scaler, Num: 1
Globalname: scaler
End popogation
TMP_42(uint256) = MAX_DECIMALS_1 (c)- tokenDecimals_1
init
end
init
end
init
end
_______________

Name: MAX_DECIMALS Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_42 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = 10 (c)** TMP_42
init
end
init
end
[i]Type for TMP_43

Name: TMP_43 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
scaler_1(uint256) := TMP_43(uint256)
asgn
init
end
_______________

Name: TMP_43 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: scaler Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for scaler

Name: scaler Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4940d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f481070>]
scaler_1

Name: scaler Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amount_1
Source address: u

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_44(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['amount_1'] 
Found: toInt256
init
end
[i]Type for TMP_44

Name: TMP_44 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_45(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['scaler_1'] 
Found: toInt256
init
end
High level cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 1
    link: None
    fields: []
    fintype: -1
[[-1], [-1], 1, None, [], -1, 'u', 10]

Name: x Function: toInt256
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
toInt256(uint256)
ENTRY_POINT
EXPRESSION require(bool,string)(x <= POSITIVE_INT256_MAX,uint256 overflow)
RETURN int256(x)
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
POSITIVE_INT256_MAX_1(uint256) := ϕ(['POSITIVE_INT256_MAX_0'])
Phi
[i]Type for POSITIVE_INT256_MAX

Name: POSITIVE_INT256_MAX Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f5610e99640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
POSITIVE_INT256_MAX_1
End popogation
TMP_0(bool) = x_1 <= POSITIVE_INT256_MAX_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_0

Name: TMP_0 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,uint256 overflow)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f5610ea4f40>]
x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_2 = CONVERT x_1 to int256
Converting x_1

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
_______________

Name: x_1 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_2 Function: toInt256
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_2

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_2
RETURN
init
end

Name: TMP_2 Function: toInt256
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_45

Name: TMP_45 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(int256) = TMP_44 (c)* TMP_45
testing mul...
init
end
init
end

Name: TMP_44 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_45 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_45 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_46 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_46

Name: TMP_46 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN
init
end

Name: TMP_46 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


MAX_DECIMALS_1(uint256) := ϕ(['MAX_DECIMALS_0'])
TMP_42(uint256) = MAX_DECIMALS_1 (c)- tokenDecimals_1
TMP_43(uint256) = 10 (c)** TMP_42
scaler_1(uint256) := TMP_43(uint256)
TMP_44(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['amount_1'] 
TMP_45(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['scaler_1'] 
TMP_46(int256) = TMP_44 (c)* TMP_45
RETURN TMP_46


Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: MAX_DECIMALS Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
MAX_DECIMALS_1(uint256) := ϕ(['MAX_DECIMALS_0'])
Phi
[i]Type for MAX_DECIMALS

Name: MAX_DECIMALS Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f560f48b880>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48bdf0>]
tokenDecimals_1
Source address: u

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_DECIMALS_1
Source address: u

Name: tokenDecimals_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals
Name: scaler, Num: 1
Globalname: scaler
End popogation
TMP_42(uint256) = MAX_DECIMALS_1 (c)- tokenDecimals_1
init
end
init
end
init
end
_______________

Name: MAX_DECIMALS Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_42 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_42

Name: TMP_42 Function: tokenToWad
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_43(uint256) = 10 (c)** TMP_42
init
end
init
end
[i]Type for TMP_43

Name: TMP_43 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
scaler_1(uint256) := TMP_43(uint256)
asgn
init
end
_______________

Name: TMP_43 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: scaler Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for scaler

Name: scaler Function: tokenToWad
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f4940d0>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f481070>]
scaler_1
Name: scaler, Num: 1
Globalname: scaler

Name: scaler Function: tokenToWad
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amount_1
Source address: u

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: scaler, Num: 1
Globalname: scaler
Source address: u

Name: amount_1 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_44(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['amount_1'] 
Found: toInt256
init
end
[i]Type for TMP_44

Name: TMP_44 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_45(int256) = LIBRARY_CALL, dest:LibMath, function:LibMath.toInt256(uint256), arguments:['scaler_1'] 
Found: toInt256
init
end
[i]Type for TMP_45

Name: TMP_45 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(int256) = TMP_44 (c)* TMP_45
testing mul...
init
end
init
end

Name: TMP_44 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_45 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
_______________

Name: TMP_45 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_46 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_46

Name: TMP_46 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_46
RETURN
init
end

Name: TMP_46 Function: tokenToWad
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: wadToToken
Checking funcion...



wadToToken
Finding type for tokenDecimals(uint256 ... )
Value: u
Finding type for wadAmount(uint256 ... )
Value: u
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
FIND RETURN
ENTRY_POINT
wadToToken(uint256,uint256)
ENTRY_POINT
NEW VARIABLE scaler = uint256(10 ** (MAX_DECIMALS - tokenDecimals))
RETURN uint256(wadAmount / scaler)


MAX_DECIMALS_2(uint256) := ϕ(['MAX_DECIMALS_0'])
TMP_47(uint256) = MAX_DECIMALS_2 (c)- tokenDecimals_1
TMP_48(uint256) = 10 (c)** TMP_47
TMP_49 = CONVERT TMP_48 to uint256
scaler_1(uint256) := TMP_49(uint256)
TMP_50(uint256) = wadAmount_1 (c)/ scaler_1
TMP_51 = CONVERT TMP_50 to uint256
RETURN TMP_51


Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Name: MAX_DECIMALS, Num: 2
Globalname: MAX_DECIMALS
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
MAX_DECIMALS_2(uint256) := ϕ(['MAX_DECIMALS_0'])
Phi
[i]Type for MAX_DECIMALS

Name: MAX_DECIMALS Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f560f494640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f494b80>]
tokenDecimals_1
Source address: u

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_DECIMALS_2
Source address: u

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals
Name: scaler, Num: 1
Globalname: scaler
End popogation
TMP_47(uint256) = MAX_DECIMALS_2 (c)- tokenDecimals_1
init
end
init
end
init
end
_______________

Name: MAX_DECIMALS Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_47 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = 10 (c)** TMP_47
init
end
init
end
[i]Type for TMP_48

Name: TMP_48 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_49 = CONVERT TMP_48 to uint256
Converting TMP_48

Name: TMP_48 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_48 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: TMP_49 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
scaler_1(uint256) := TMP_49(uint256)
asgn
init
end
_______________

Name: TMP_49 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: scaler Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
Finance type key: (-1, -1)
[i]Type for scaler

Name: scaler Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f494f40>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48bac0>]
scaler_1

Name: scaler Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
wadAmount_1
Source address: u

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: wadAmount, Num: 1
Globalname: wadAmount

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: wadAmount, Num: 1
Globalname: wadAmount
End popogation
TMP_50(uint256) = wadAmount_1 (c)/ scaler_1
init
end
init
end
lnorm: u rnorm: 1
init
end
init
end
init
end
lnorm: u rnorm: 1
[i]Type for TMP_50

Name: TMP_50 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_51 = CONVERT TMP_50 to uint256
Converting TMP_50

Name: TMP_50 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_50 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: TMP_51 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
RETURN TMP_51
RETURN
init
end

Name: TMP_51 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef


MAX_DECIMALS_2(uint256) := ϕ(['MAX_DECIMALS_0'])
TMP_47(uint256) = MAX_DECIMALS_2 (c)- tokenDecimals_1
TMP_48(uint256) = 10 (c)** TMP_47
TMP_49 = CONVERT TMP_48 to uint256
scaler_1(uint256) := TMP_49(uint256)
TMP_50(uint256) = wadAmount_1 (c)/ scaler_1
TMP_51 = CONVERT TMP_50 to uint256
RETURN TMP_51


Propogating parameters and globals to SSA variables...
[]
[]
End popogation

Name: MAX_DECIMALS Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
MAX_DECIMALS_2(uint256) := ϕ(['MAX_DECIMALS_0'])
Phi
[i]Type for MAX_DECIMALS

Name: MAX_DECIMALS Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[<slither.slithir.variables.state_variable.StateIRVariable object at 0x7f560f494640>]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f494b80>]
tokenDecimals_1
Source address: u

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_DECIMALS_2
Source address: u

Name: tokenDecimals_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: tokenDecimals, Num: 1
Globalname: tokenDecimals
Name: scaler, Num: 1
Globalname: scaler
End popogation
TMP_47(uint256) = MAX_DECIMALS_2 (c)- tokenDecimals_1
init
end
init
end
init
end
_______________

Name: MAX_DECIMALS Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_47 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
COPY HERE
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: wadToToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = 10 (c)** TMP_47
init
end
init
end
[i]Type for TMP_48

Name: TMP_48 Function: wadToToken
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_49 = CONVERT TMP_48 to uint256
Converting TMP_48

Name: TMP_48 Function: wadToToken
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_48 Function: wadToToken
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: TMP_49 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
[i]Type for TMP_49

Name: TMP_49 Function: wadToToken
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
scaler_1(uint256) := TMP_49(uint256)
asgn
init
end
_______________

Name: TMP_49 Function: wadToToken
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: scaler Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
[i]Type for scaler

Name: scaler Function: wadToToken
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
[]
[<slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f494f40>, <slither.slithir.variables.local_variable.LocalIRVariable object at 0x7f560f48bac0>]
scaler_1
Name: scaler, Num: 1
Globalname: scaler

Name: scaler Function: wadToToken
Num: 
Den: 
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
wadAmount_1
Source address: u

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: wadAmount, Num: 1
Globalname: wadAmount

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: scaler, Num: 1
Globalname: scaler
Source address: u

Name: wadAmount_1 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: wadAmount, Num: 1
Globalname: wadAmount
End popogation
TMP_50(uint256) = wadAmount_1 (c)/ scaler_1
init
end
init
end
lnorm: u rnorm: 1
init
end
init
end
init
end
lnorm: u rnorm: 1
init
end
[i]Type for TMP_50

Name: TMP_50 Function: wadToToken
Num: 
Den: 
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_51 = CONVERT TMP_50 to uint256
Converting TMP_50

Name: TMP_50 Function: wadToToken
Num: 
Den: 
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
init
end
_______________

Name: TMP_50 Function: wadToToken
Num: 
Den: 
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: TMP_51 Function: wadToToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
[i]Type for TMP_51

Name: TMP_51 Function: wadToToken
Num: 
Den: 
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
RETURN TMP_51
RETURN
init
end

Name: TMP_51 Function: wadToToken
Num: 
Den: 
Address: u
Norm: -1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
Reading Function: slitherConstructorConstantVariables
Checking funcion...



slitherConstructorConstantVariables
FIND RETURN
OTHER_ENTRYPOINT MAX_DECIMALS = 18
slitherConstructorConstantVariables()
OTHER_ENTRYPOINT MAX_DECIMALS = 18




Propogating parameters and globals to SSA variables...
[]
[]
End popogation




Propogating parameters and globals to SSA variables...
[]
[]
End popogation
Address: 1, Label: global:u
Head Addr: 1
    Norm: u
    Set: {1}
    Fin: NULL
continuing...
continuing...
continuing...
continuing...
continuing...
Function count: 44
Analyzed_contracts_count: 9
total compilations: 7, contracts: 9
contract name: Types
contract name: Balances
Finance file: Balances_ftypes.txt
{'global:u': 1}
IN KEY: applyTrade_trade_amount
Reading f file...
['[t*]', 'applyTrade', 'trade', 'amount', 'f: 0']
OUT KEY: applyTrade_trade_amount
IN KEY: applyTrade_trade_amount
['[t]', 'applyTrade', 'feeRate', 'f: 12']
{'global:u': 1}
Mark functions Adding: Balances, notionalValue, False
[*]Marked
Mark functions Adding: Balances, margin, False
[*]Marked
Mark functions Adding: Balances, leveragedNotionalValue, False
[*]Marked
Mark functions Adding: Balances, minimumMargin, False
[*]Marked
Mark functions Adding: Balances, marginIsValid, False
[*]Marked
Mark functions Adding: Balances, fillAmount, False
[*]Marked
Mark functions Adding: Balances, applyTrade, False
[*]Marked
Mark functions Adding: Balances, getFee, False
[*]Marked
Mark functions Adding: Balances, tokenToWad, False
[*]Marked
Mark functions Adding: Balances, wadToToken, False
[*]Marked
Mark functions Adding: Balances, slitherConstructorConstantVariables, False
[X]No Binary
State_var: MAX_DECIMALS

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
contract name: LibLiquidation
contract name: LibMath
Mark functions Adding: LibMath, toInt256, False
[*]Marked
Mark functions Adding: LibMath, abs, False
[*]Marked
Mark functions Adding: LibMath, sum, False
[*]Marked
Mark functions Adding: LibMath, sumN, False
[*]Marked
Mark functions Adding: LibMath, mean, False
[X]No Binary
Mark functions Adding: LibMath, meanN, False
[X]No Binary
Mark functions Adding: LibMath, min, False
[*]Marked
Mark functions Adding: LibMath, signedMin, False
[*]Marked
Mark functions Adding: LibMath, slitherConstructorConstantVariables, False
[X]No Binary
State_var: POSITIVE_INT256_MAX

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
contract name: Perpetuals
contract name: Prices
contract name: PRBMathCommon
contract name: PRBMathSD59x18
contract name: PRBMathUD60x18
continuing...
Function count: 44
Analyzed_contracts_count: 3
total compilations: 7, contracts: 3
contract name: Perpetuals
contract name: PRBMathCommon
contract name: PRBMathUD60x18
Function count: 44
Analyzed_contracts_count: 5
total compilations: 7, contracts: 5
contract name: SafetyWithdraw
contract name: Ownable
contract name: IERC20
contract name: Context
contract name: ISafetyWithdraw
continuing...
continuing...
continuing...
continuing...
continuing...
Function count: 44
Analyzed_contracts_count: 8
total compilations: 7, contracts: 8
contract name: Types
contract name: Balances
Finance file: Balances_ftypes.txt
{'global:u': 1}
IN KEY: applyTrade_trade_amount
Reading f file...
['[t*]', 'applyTrade', 'trade', 'amount', 'f: 0']
OUT KEY: applyTrade_trade_amount
IN KEY: applyTrade_trade_amount
['[t]', 'applyTrade', 'feeRate', 'f: 12']
{'global:u': 1}
Mark functions Adding: Balances, notionalValue, False
[*]Marked
Mark functions Adding: Balances, margin, False
[*]Marked
Mark functions Adding: Balances, leveragedNotionalValue, False
[*]Marked
Mark functions Adding: Balances, minimumMargin, False
[*]Marked
Mark functions Adding: Balances, marginIsValid, False
[*]Marked
Mark functions Adding: Balances, fillAmount, False
[*]Marked
Mark functions Adding: Balances, applyTrade, False
[*]Marked
Mark functions Adding: Balances, getFee, False
[*]Marked
Mark functions Adding: Balances, tokenToWad, False
[*]Marked
Mark functions Adding: Balances, wadToToken, False
[*]Marked
Mark functions Adding: Balances, slitherConstructorConstantVariables, False
[X]No Binary
State_var: MAX_DECIMALS

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
contract name: LibMath
Mark functions Adding: LibMath, toInt256, False
[*]Marked
Mark functions Adding: LibMath, abs, False
[*]Marked
Mark functions Adding: LibMath, sum, False
[*]Marked
Mark functions Adding: LibMath, sumN, False
[*]Marked
Mark functions Adding: LibMath, mean, False
[X]No Binary
Mark functions Adding: LibMath, meanN, False
[X]No Binary
Mark functions Adding: LibMath, min, False
[*]Marked
Mark functions Adding: LibMath, signedMin, False
[*]Marked
Mark functions Adding: LibMath, slitherConstructorConstantVariables, False
[X]No Binary
State_var: POSITIVE_INT256_MAX

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
contract name: Perpetuals
contract name: Prices
contract name: PRBMathCommon
contract name: PRBMathSD59x18
contract name: PRBMathUD60x18
Function count: 44
Analyzed_contracts_count: 3
total compilations: 7, contracts: 3
contract name: LibInsurance
contract name: PRBMathCommon
contract name: PRBMathUD60x18
continuing...
Function count: 44
Currently ommitted
Executing Group 4
[*] Tested 1 warning for Tracer
Group 4 complete
Testing complete
