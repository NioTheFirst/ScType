Switched global version to 0.8.9
Analyzed_contracts_count: 20
total compilations: 1, contracts: 20
contract name: TwapOracle
Add to address_to_label {'global:_aggregators': 1}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991}
fAddr:{key} : {norm}
Add to address_to_label {'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
fAddr:{key} : {norm}
Mark functions Adding: TwapOracle, constructor, True
[X]No Binary
Mark functions Adding: TwapOracle, pairExists, True
[*]Marked
Mark functions Adding: TwapOracle, consult, True
[*]Marked
Mark functions Adding: TwapOracle, getRate, True
[*]Marked
Mark functions Adding: TwapOracle, usdvtoVader, True
[X]No Binary
Mark functions Adding: TwapOracle, vaderToUsdv, True
[X]No Binary
Mark functions Adding: TwapOracle, initialize, True
[*]Marked
Mark functions Adding: TwapOracle, enableUSDV, True
[X]No Binary
Mark functions Adding: TwapOracle, registerAggregator, True
[*]Marked
Mark functions Adding: TwapOracle, registerPair, True
[*]Marked
Mark functions Adding: TwapOracle, update, True
[*]Marked
State_var: USDV
Finding type for USDV(address ... )
prev address? u
Head Addr: 4
    Norm: 6
    Set: {4}
    Fin: NULL
Source address: 4
State_var: VADER
Finding type for VADER(address ... )
prev address? u
Head Addr: 2
    Norm: 18
    Set: {2}
    Fin: NULL
Source address: 2
State_var: _pairs
Finding type for _pairs(TwapOracle.PairData[] ... )
global
_pairs
pair
OUT KEY: global__pairs_pair
global
_pairs
token0
OUT KEY: global__pairs_token0
global
_pairs
token1
OUT KEY: global__pairs_token1
global
_pairs
price0CumulativeLast
OUT KEY: global__pairs_price0CumulativeLast
global
_pairs
price1CumulativeLast
OUT KEY: global__pairs_price1CumulativeLast
global
_pairs
blockTimestampLast
OUT KEY: global__pairs_blockTimestampLast
global
_pairs
price0Average
OUT KEY: global__pairs_price0Average
global
_pairs
price1Average
OUT KEY: global__pairs_price1Average
Value: u
Source address: u
State_var: _vaderPool
Finding type for _vaderPool(IVaderPoolV2 ... )
Value: u
Source address: u
State_var: _updatePeriod
Finding type for _updatePeriod(uint256 ... )
Value: u
Source address: u
State_var: _owner
Finding type for _owner(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: _pairExists
Finding type for _pairExists(mapping(bytes32 => bool) ... )
Value: u
Source address: u
State_var: _aggregators
Finding type for _aggregators(mapping(address => address) ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _usdvEnabled
Finding type for _usdvEnabled(bool ... )
Source address: u
contract name: AggregatorV3Interface
contract name: IUniswapV2ERC20
contract name: IUniswapV2Factory
contract name: IUniswapV2Pair
contract name: Babylonian
contract name: BitMath
contract name: FixedPoint
contract name: FullMath
contract name: UniswapV2Library
contract name: UniswapV2OracleLibrary
contract name: IBasePoolV2
contract name: IVaderPoolV2
contract name: Ownable
contract name: IERC20
contract name: IERC20Metadata
contract name: IERC721
contract name: Context
contract name: IERC165
contract name: SafeMath
Running check on TwapOracle
Reading Function: constructor
Function constructor not marked
Reading Function: pairExists
Checking funcion...



pairExists
Function name: pairExists
Finding type for token0(address ... )
prev address? u
Head Addr: -999
    Norm: 18
    Set: {-999}
    Fin: NULL
Finding type for token1(address ... )
prev address? u
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
New param cache [[[], [], 18, 'token0', [], -1, -999, 'u'], [[], [], 6, 'token1', [], -1, -998, 'u']]
FIND RETURN
ENTRY_POINT
pairExists(address,address)


token0_1(address) := ϕ(['token0_1'])
token1_1(address) := ϕ(['token1_1'])
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
pairHash0_1(bytes32) := TMP_18(bytes32)
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
pairHash1_1(bytes32) := TMP_20(bytes32)
REF_2(bool) -> _pairExists_1[pairHash0_1]
REF_3(bool) -> _pairExists_1[pairHash1_1]
TMP_21(bool) = REF_2 || REF_3
RETURN TMP_21


[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairExists, Num: 1
Globalname: _pairExists, contract_name: TwapOracle
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


token0_1(address) := ϕ(['token0_1'])
token1_1(address) := ϕ(['token1_1'])
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
pairHash0_1(bytes32) := TMP_18(bytes32)
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
pairHash1_1(bytes32) := TMP_20(bytes32)
REF_2(bool) -> _pairExists_1[pairHash0_1]
REF_3(bool) -> _pairExists_1[pairHash1_1]
TMP_21(bool) = REF_2 || REF_3
RETURN TMP_21


[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: TMP_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Reading Function: consult
Checking funcion...



consult
Function name: consult
Finding type for token(address ... )
prev address? u
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
New param cache [[[], [], 6, 'token', [], -1, -997, 'u']]
FIND RETURN
ENTRY_POINT
consult(address)


token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
REF_4 -> LENGTH _pairs_1
pairCount_1(uint256) := REF_4(uint256)
sumNative_1(uint256) := 0(uint256)
sumUSD_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_22(bool) = i_2 < pairCount_1
CONDITION TMP_22
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
REF_6(address) -> pairData_1.token0
TMP_23(bool) = token_1 == REF_6
CONDITION TMP_23
TMP_50(bool) = sumNative_1 != 0
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
TMP_43(bool) = sumNative_3 != 0
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
TMP_45 = CONVERT token_1 to IERC20Metadata
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
result_3(uint256) := TMP_48(uint256)
TMP_52 = CONVERT token_1 to IERC20Metadata
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
result_1(uint256) := TMP_55(uint256)
TMP_49(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
REF_11(uint224) -> REF_10._x
TMP_26(bool) = REF_11 != 0
CONDITION TMP_26
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
TMP_27(bool) = sumNative_2 != 0
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
REF_12(address) -> pairData_1.token1
REF_13(address) -> _aggregators_1[REF_12]
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
price_1(int256)= UNPACK TUPLE_0 index: 1 
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
TMP_30(bool) = answeredInRound_1 >= roundID_1
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
TMP_32(bool) = price_1 != 0
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
TMP_34 = CONVERT price_1 to uint256
TMP_35(uint256) = 10 (c)** 10
TMP_36(uint256) = TMP_34 (c)* TMP_35
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
TMP_37(bool) = sumNative_2 != 0
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
TMP_39 = CONVERT token_1 to IERC20Metadata
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
result_2(uint256) := TMP_42(uint256)


[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: token_1 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 1
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: _pairs_1, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 1
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: token0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 4
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: _pairs_4, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 4
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average
Finance Type: undef
Fieldf: 
Name: _x Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 2
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: _pairs_2, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 2
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x
Finance Type: undef
Fieldf: 
Name: token1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: -1
Den: -1
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 3
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: _pairs_3, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 3
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX


token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
REF_4 -> LENGTH _pairs_1
pairCount_1(uint256) := REF_4(uint256)
sumNative_1(uint256) := 0(uint256)
sumUSD_1(uint256) := 0(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_22(bool) = i_2 < pairCount_1
CONDITION TMP_22
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
REF_6(address) -> pairData_1.token0
TMP_23(bool) = token_1 == REF_6
CONDITION TMP_23
TMP_50(bool) = sumNative_1 != 0
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
TMP_43(bool) = sumNative_3 != 0
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
TMP_45 = CONVERT token_1 to IERC20Metadata
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
result_3(uint256) := TMP_48(uint256)
TMP_52 = CONVERT token_1 to IERC20Metadata
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
result_1(uint256) := TMP_55(uint256)
TMP_49(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
REF_11(uint224) -> REF_10._x
TMP_26(bool) = REF_11 != 0
CONDITION TMP_26
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
TMP_27(bool) = sumNative_2 != 0
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
REF_12(address) -> pairData_1.token1
REF_13(address) -> _aggregators_1[REF_12]
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
price_1(int256)= UNPACK TUPLE_0 index: 1 
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
TMP_30(bool) = answeredInRound_1 >= roundID_1
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
TMP_32(bool) = price_1 != 0
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
TMP_34 = CONVERT price_1 to uint256
TMP_35(uint256) = 10 (c)** 10
TMP_36(uint256) = TMP_34 (c)* TMP_35
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
TMP_37(bool) = sumNative_2 != 0
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
TMP_39 = CONVERT token_1 to IERC20Metadata
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
result_2(uint256) := TMP_42(uint256)


[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: token_1 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: -997
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
-997
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: getRate
Checking funcion...



getRate
Function name: getRate
New param cache []
FIND RETURN
ENTRY_POINT
getRate()


VADER_1(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_1(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
TMP_56(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(USDV_1)
tUSDInUSDV_1(uint256) := TMP_56(uint256)
TMP_57(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(VADER_2)
tUSDInVader_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = tUSDInUSDV_1 (c)/ tUSDInVader_1
result_1(uint256) := TMP_58(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_1, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 1
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: USDV_1, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 1
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
VADER_1(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: getRate
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_1(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
[i] tUSDInUSDV cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_1, name: USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_1, name: USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
End popogation
TMP_56(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(USDV_1)
New param cache [[[-1], [-1], 6, 'USDV', [], -1, 4, 'u']]
Old param cache: [[[], [], 6, 'token', [], -1, -997]]
[[-1], [-1], 6, 'USDV', [], -1, 4, 'u']

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
consult(address)
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
pairCount_1
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: -997
Norm: 6
LF: token
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumUSD_4
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
result_1
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
answeredInRound_1
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
roundID_1
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumUSD_3
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_56

Name: TMP_56 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tUSDInUSDV_1(uint256) := TMP_56(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_57 cleared
[i] tUSDInVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: VADER_2, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 2
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: VADER_2, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
End popogation
TMP_57(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(VADER_2)
New param cache [[[-1], [-1], 18, 'VADER', [], -1, 2, 'u']]
Old param cache: [[[], [], 6, 'token', [], -1, -997]]
[[-1], [-1], 18, 'VADER', [], -1, 2, 'u']

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
consult(address)
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
pairCount_1
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumUSD_4
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
result_1
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
answeredInRound_1
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
roundID_1
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumUSD_3
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_57

Name: TMP_57 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tUSDInVader_1(uint256) := TMP_57(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_58 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
Ssa_name: result_1, name: result

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_58(uint256) = tUSDInUSDV_1 (c)/ tUSDInVader_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_58

Name: TMP_58 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_58(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


VADER_1(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_1(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
TMP_56(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(USDV_1)
tUSDInUSDV_1(uint256) := TMP_56(uint256)
TMP_57(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(VADER_2)
tUSDInVader_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = tUSDInUSDV_1 (c)/ tUSDInVader_1
result_1(uint256) := TMP_58(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_1, name: VADER

Name: VADER Function: getRate
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_1, name: USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
VADER_1(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: getRate
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_1(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_56 cleared
[i] tUSDInUSDV cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_1, name: USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_1, name: USDV

Name: USDV Function: getRate
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
End popogation
TMP_56(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(USDV_1)
New param cache [[[-1], [-1], 6, 'USDV', [], -1, 4, 'u']]
Old param cache: [[[], [], 6, 'token', [], -1, -997]]
[[-1], [-1], 6, 'USDV', [], -1, 4, 'u']

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
consult(address)
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
pairCount_1
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumUSD_4
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
result_1
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
answeredInRound_1
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
roundID_1
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumUSD_3
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
4
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 60000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_56

Name: TMP_56 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tUSDInUSDV_1(uint256) := TMP_56(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_57 cleared
[i] tUSDInVader cleared
Propogating parameters and globals to SSA variables...
Ssa_name: VADER_2, name: VADER

Name: VADER Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_2, name: VADER

Name: VADER Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
End popogation
TMP_57(uint256) = INTERNAL_CALL, TwapOracle.consult(address)(VADER_2)
New param cache [[[-1], [-1], 18, 'VADER', [], -1, 2, 'u']]
Old param cache: [[[], [], 6, 'token', [], -1, -997]]
[[-1], [-1], 18, 'VADER', [], -1, 2, 'u']

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
consult(address)
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
pairCount_1
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumNative_3
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumUSD_4
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
sumNative_1
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
result_1
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
pairData_1
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Propogating All
answeredInRound_1
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
roundID_1
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumUSD_1
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
price_1
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating All
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
sumUSD_3
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
sumNative_2
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['USDV_1', 'VADER_2', 'VADER_4'])
Phi
[i]Type for token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_1(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_1(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_4 -> LENGTH _pairs_1
[i]Type for REF_4

Name: REF_4 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_4(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 1
Globalname: sumNative, contract_name: TwapOracle
End popogation
sumNative_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 1
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_22 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
TMP_22(bool) = i_2 < pairCount_1
lnorm: 0 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_22

Name: TMP_22 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: _pairs_1, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Name: pairData, Num: 1
Globalname: pairData, contract_name: TwapOracle
End popogation
REF_5(TwapOracle.PairData) -> _pairs_1[i_2]
INDEX
[i]Type for REF_5

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1(TwapOracle.PairData) := REF_5(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_23 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_6(address) -> pairData_1.token0
MEMBER
OUT KEY: consult_pairData_token0
OUT KEY: consult_pairData_token0
FTT: None
No field found
[i]Type for REF_6

Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token0
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_6 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_23(bool) = token_1 == REF_6
[i]Type for TMP_23

Name: TMP_23 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_50 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_50(bool) = sumNative_1 != 0
[i]Type for TMP_50

Name: TMP_50 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumNative cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 3
Globalname: sumNative, contract_name: TwapOracle
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 4
Globalname: sumUSD, contract_name: TwapOracle
sumNative_3(uint256) := ϕ(['sumNative_2', 'sumNative_1'])
Phi

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
sumUSD_4(uint256) := ϕ(['sumUSD_3', 'sumUSD_1'])
Phi

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_43 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_43(bool) = sumNative_3 != 0
[i]Type for TMP_43

Name: TMP_43 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_44(None) = SOLIDITY_CALL require(bool,string)(TMP_43,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_24 cleared
[i] TMP_25 cleared
[i] sumNative cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumNative, Num: 2
Globalname: sumNative, contract_name: TwapOracle
End popogation
REF_7(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_7

Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_7 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_24(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_7', '1'] 
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_24

Name: TMP_24 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_25(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_24'] 
Found: None
Written func info: FixedPoint, decode144
Retvar: ('t', ['1'], ['-1'], 1, "'u'", 'u')
([-1], [-1, -1], 0, "'u'", 'u', -1)
[i]Type for TMP_25

Name: TMP_25 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
sumNative_2(uint256) = sumNative_1 (c)+ TMP_25
Source address: u
[i]Type for sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_45 cleared
[i] TMP_46 cleared
[i] TMP_47 cleared
[i] TMP_48 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_3, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_4, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_3, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 3
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_4, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_4, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_45

Name: TMP_45 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_46(uint8) = HIGH_LEVEL_CALL, dest:TMP_45(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_46

Name: TMP_46 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_4(mapping(address => address)) := ϕ(['_aggregators_3', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_4(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_3', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_47(uint256) = sumUSD_4 (c)* TMP_46
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_47

Name: TMP_47 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_48(uint256) = TMP_47 (c)/ sumNative_3
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_48

Name: TMP_48 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_3(uint256) := TMP_48(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_52 cleared
[i] TMP_53 cleared
[i] TMP_54 cleared
[i] TMP_55 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_1, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_52 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_52

Name: TMP_52 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_53(uint8) = HIGH_LEVEL_CALL, dest:TMP_52(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_53

Name: TMP_53 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
TMP_54(uint256) = sumUSD_1 (c)* TMP_53
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = TMP_54 (c)/ sumNative_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_55

Name: TMP_55 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_49(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_49

Name: TMP_49 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_26 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
End popogation
REF_10(FixedPoint.uq112x112) -> pairData_1.price1Average
MEMBER
OUT KEY: consult_pairData_price1Average
OUT KEY: consult_pairData_price1Average
FTT: None
No field found
[i]Type for REF_10

Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: price1Average
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_10 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(uint224) -> REF_10._x
MEMBER
OUT KEY: consult_REF_10__x
OUT KEY: consult_REF__x
FTT: None
No field found
[i]Type for REF_11

Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_10, Field: _x
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_11 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: _x Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_26(bool) = REF_11 != 0
[i]Type for TMP_26

Name: TMP_26 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_1, name: result

Name: result Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_2, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: sumUSD, Num: 2
Globalname: sumUSD, contract_name: TwapOracle
End popogation
sumUSD_2(uint256) = sumUSD_1 (c)+ result_1
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_27 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_27(bool) = sumNative_2 != 0
[i]Type for TMP_27

Name: TMP_27 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_28(None) = SOLIDITY_CALL require(bool)(TMP_27)
[i]Type for TMP_28

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_29 cleared
[i] roundID cleared
[i] price cleared
[i] answeredInRound cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_1, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1, name: pairData

Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: answeredInRound, Num: 1
Globalname: answeredInRound, contract_name: TwapOracle
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: roundID, Num: 1
Globalname: roundID, contract_name: TwapOracle
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price, Num: 1
Globalname: price, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_2, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_2, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> pairData_1.token1
MEMBER
OUT KEY: consult_pairData_token1
OUT KEY: consult_pairData_token1
FTT: None
No field found
[i]Type for REF_12

Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1, Field: token1
#################
Member: 
Name: pairData Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, price1Average, _x, token1
Finance Type: undef
Fieldf: 
Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_12 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_13(address) -> _aggregators_1[REF_12]
INDEX
[i]Type for REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_29 = CONVERT REF_13 to AggregatorV3Interface
Converting REF_13

Name: _aggregators Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
UNKNOWN
[i]Type for TMP_29

Name: TMP_29 Function: consult
Num: 
Den: 
Address: 1
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:TMP_29(AggregatorV3Interface), function:latestRoundData, arguments:[]  
High Call: latestRoundData
Running querryfc
Found: None
Written func info: AggregatorV3Interface, latestRoundData
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_0

Name: TUPLE_0 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_aggregators_2(mapping(address => address)) := ϕ(['_aggregators_1', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_2(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price_1(int256)= UNPACK TUPLE_0 index: 1 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: answeredInRound_1, name: answeredInRound

Name: answeredInRound Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: roundID_1, name: roundID

Name: roundID Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30(bool) = answeredInRound_1 >= roundID_1
lnorm: u rnorm: u
[i]Type for TMP_30

Name: TMP_30 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,TwapOracle::consult: stale chainlink price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_32(bool) = price_1 != 0
[i]Type for TMP_32

Name: TMP_32 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,TwapOracle::consult: chainlink malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_34 cleared
[i] TMP_35 cleared
[i] TMP_36 cleared
[i] sumUSD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_1, name: sumUSD

Name: sumUSD Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: price_1, name: price

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Name: sumUSD, Num: 3
Globalname: sumUSD, contract_name: TwapOracle
End popogation
TMP_34 = CONVERT price_1 to uint256
Converting price_1

Name: price Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_34

Name: TMP_34 Function: consult
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
TMP_35(uint256) = 10 (c)** 10
[i]Type for TMP_35

Name: TMP_35 Function: consult
Num: 
Den: 
Address: u
Norm: 10
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
TMP_36(uint256) = TMP_34 (c)* TMP_35
lnorm: 12 rnorm: 10
Source address: u
[i]Type for TMP_36

Name: TMP_36 Function: consult
Num: 2
Den: 4
Address: u
Norm: 22
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
sumUSD_3(uint256) = sumUSD_1 (c)+ TMP_36
Source address: u
[i]Type for sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = sumNative_2 != 0
[i]Type for TMP_37

Name: TMP_37 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,TwapOracle::consult: Sum of native is zero)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
[i] TMP_40 cleared
[i] TMP_41 cleared
[i] TMP_42 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: sumUSD_3, name: sumUSD

Name: sumUSD Function: consult
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: 10000000000
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: sumNative_2, name: sumNative

Name: sumNative Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: result_2, name: result

Name: result Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: result, Num: 2
Globalname: result, contract_name: TwapOracle
End popogation
Ssa_name: _aggregators_3, name: _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_3, name: _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT token_1 to IERC20Metadata
Converting token_1

Name: token Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
ERC20Metadata
[i]Type for TMP_39

Name: TMP_39 Function: consult
Num: -1
Den: -1
Address: 2
Norm: 18
LF: ERC20Metadata
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(uint8) = HIGH_LEVEL_CALL, dest:TMP_39(IERC20Metadata), function:decimals, arguments:[]  
High Call: decimals
Running querryfc
Found: None
Written func info: IERC20Metadata, decimals
Handling balance function!
2
[i]Type for TMP_40

Name: TMP_40 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 18
Fields: 
Finance Type: undef
XXXX
_aggregators_3(mapping(address => address)) := ϕ(['_aggregators_2', '_aggregators_4', '_aggregators_8'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: consult
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_3(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_2', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_41(uint256) = sumUSD_3 (c)* TMP_40
lnorm: 10 rnorm: 0
Source address: u
[i]Type for TMP_41

Name: TMP_41 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 180000000000
Fields: 
Finance Type: undef
XXXX
TMP_42(uint256) = TMP_41 (c)/ sumNative_2
lnorm: 10 rnorm: u
Source address: u
lnorm: 10 rnorm: u
2
4
[i]Type for TMP_42

Name: TMP_42 Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
result_2(uint256) := TMP_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: consult
Num: 2
Den: 4
Address: u
Norm: 10
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_57

Name: TMP_57 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tUSDInVader_1(uint256) := TMP_57(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_58 cleared
[i] result cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
Ssa_name: tUSDInVader_1, name: tUSDInVader

Name: tUSDInVader Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInVader, Num: 1
Globalname: tUSDInVader, contract_name: TwapOracle
Ssa_name: tUSDInUSDV_1, name: tUSDInUSDV

Name: tUSDInUSDV Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tUSDInUSDV, Num: 1
Globalname: tUSDInUSDV, contract_name: TwapOracle
Ssa_name: result_1, name: result

Name: result Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: result, Num: 1
Globalname: result, contract_name: TwapOracle
End popogation
TMP_58(uint256) = tUSDInUSDV_1 (c)/ tUSDInVader_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_58

Name: TMP_58 Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
result_1(uint256) := TMP_58(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for result

Name: result Function: getRate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: usdvtoVader
Function usdvtoVader not marked
Reading Function: vaderToUsdv
Function vaderToUsdv not marked
Reading Function: initialize
Checking funcion...



initialize
Function name: initialize
Finding type for _usdv(address ... )
prev address? u
Head Addr: -996
    Norm: 6
    Set: {-996}
    Fin: NULL
Finding type for _vader(address ... )
prev address? u
Head Addr: -995
    Norm: 18
    Set: {-995}
    Fin: NULL
New param cache [[[], [], 6, '_usdv', [], -1, -996, 'u'], [[], [], 18, '_vader', [], -1, -995, 'u']]
FIND RETURN
ENTRY_POINT
initialize(address,address)


VADER_6(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_3(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_66 = CONVERT 0 to address
TMP_67(bool) = VADER_7 == TMP_66
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,TwapOracle::initialize: Vader already set)
TMP_69 = CONVERT 0 to address
TMP_70(bool) = USDV_4 == TMP_69
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,TwapOracle::initialize: USDV already set)
TMP_72 = CONVERT 0 to address
TMP_73(bool) = _usdv_1 != TMP_72
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,TwapOracle::initialize: can not set to a zero address)
TMP_75 = CONVERT 0 to address
TMP_76(bool) = _vader_1 != TMP_75
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,TwapOracle::initialize: can not set to a zero address)
VADER_8(address) := _vader_1(address)
USDV_5(address) := _usdv_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_6, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 6
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: USDV_3, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 3
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
VADER_6(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_3(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyOwner()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
FIND RETURN
ENTRY_POINT
_checkOwner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
FIND RETURN
ENTRY_POINT
owner()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _owner, Num: 1
Globalname: _owner, contract_name: TwapOracle
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 3
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Phi
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Ssa_name: _owner_1, name: _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _owner_1
RETURN

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
Source address: 3
Source address: 3
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
FIND RETURN
ENTRY_POINT
_msgSender()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
Source address: u
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_2 cleared
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_2(address) = INTERNAL_CALL, Ownable.owner()()
New param cache []
Old param cache: []
Source address: 3
[i]Type for TMP_2

Name: TMP_2 Function: _checkOwner
Num: -1
Den: -1
Address: 3
Norm: 0
LF: _owner
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_3(address) = INTERNAL_CALL, Context._msgSender()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_3

Name: TMP_3 Function: _checkOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = TMP_2 == TMP_3
[i]Type for TMP_4

Name: TMP_4 Function: _checkOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5(None) = SOLIDITY_CALL require(bool,string)(TMP_4,Ownable: caller is not the owner)
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Ownable._checkOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_66 cleared
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: VADER_7, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 7
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: VADER_7, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_66

Name: TMP_66 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_67(bool) = VADER_7 == TMP_66
[i]Type for TMP_67

Name: TMP_67 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,TwapOracle::initialize: Vader already set)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_4, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 4
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
Ssa_name: USDV_4, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_69 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_69

Name: TMP_69 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_70(bool) = USDV_4 == TMP_69
[i]Type for TMP_70

Name: TMP_70 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,TwapOracle::initialize: USDV already set)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] TMP_73 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _usdv_1, name: _usdv

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_72 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_72

Name: TMP_72 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_73(bool) = _usdv_1 != TMP_72
[i]Type for TMP_73

Name: TMP_73 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,TwapOracle::initialize: can not set to a zero address)
[i]Type for TMP_74

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_75 cleared
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_75 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_75

Name: TMP_75 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = _vader_1 != TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,TwapOracle::initialize: can not set to a zero address)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_8, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 8
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
End popogation
VADER_8(address) := _vader_1(address)
asgn
Source address: -995
Finance type key: (-1, -1)
[i]Type for VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_5, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 5
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
End popogation
USDV_5(address) := _usdv_1(address)
asgn
Source address: -996
Finance type key: (-1, -1)
[i]Type for USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
XXXX


VADER_6(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_3(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
MODIFIER_CALL, Ownable.onlyOwner()()
TMP_66 = CONVERT 0 to address
TMP_67(bool) = VADER_7 == TMP_66
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,TwapOracle::initialize: Vader already set)
TMP_69 = CONVERT 0 to address
TMP_70(bool) = USDV_4 == TMP_69
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,TwapOracle::initialize: USDV already set)
TMP_72 = CONVERT 0 to address
TMP_73(bool) = _usdv_1 != TMP_72
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,TwapOracle::initialize: can not set to a zero address)
TMP_75 = CONVERT 0 to address
TMP_76(bool) = _vader_1 != TMP_75
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,TwapOracle::initialize: can not set to a zero address)
VADER_8(address) := _vader_1(address)
USDV_5(address) := _usdv_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_6, name: VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_3, name: USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
VADER_6(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_3(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
[i] TMP_66 cleared
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: VADER_7, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_7, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_66 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_66

Name: TMP_66 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_67(bool) = VADER_7 == TMP_66
[i]Type for TMP_67

Name: TMP_67 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(None) = SOLIDITY_CALL require(bool,string)(TMP_67,TwapOracle::initialize: Vader already set)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_69 cleared
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_4, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_4, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_69 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_69

Name: TMP_69 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_70(bool) = USDV_4 == TMP_69
[i]Type for TMP_70

Name: TMP_70 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,TwapOracle::initialize: USDV already set)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_72 cleared
[i] TMP_73 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_72 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_72

Name: TMP_72 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_73(bool) = _usdv_1 != TMP_72
[i]Type for TMP_73

Name: TMP_73 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_74(None) = SOLIDITY_CALL require(bool,string)(TMP_73,TwapOracle::initialize: can not set to a zero address)
[i]Type for TMP_74

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_75 cleared
[i] TMP_76 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_75 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_75

Name: TMP_75 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_76(bool) = _vader_1 != TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,TwapOracle::initialize: can not set to a zero address)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vader_1, name: _vader

Name: _vader_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_8, name: VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
End popogation
VADER_8(address) := _vader_1(address)
asgn
Source address: -995
Finance type key: (-1, -1)
[i]Type for VADER

Name: VADER Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 18
LF: _vader
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Ssa_name: _usdv_1, name: _usdv

Name: _usdv_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_5, name: USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
End popogation
USDV_5(address) := _usdv_1(address)
asgn
Source address: -996
Finance type key: (-1, -1)
[i]Type for USDV

Name: USDV Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 6
LF: _usdv
Value: u
Fields: 
Finance Type: undef
XXXX
Reading Function: enableUSDV
Function enableUSDV not marked
Reading Function: registerAggregator
Checking funcion...



registerAggregator
Function name: registerAggregator
Finding type for asset(address ... )
prev address? u
Head Addr: -994
    Norm: 6
    Set: {-994}
    Fin: NULL
Finding type for aggregator(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
New param cache [[[], [], 6, 'asset', [], -1, -994, 'u'], [[], [], 0, 'aggregator', [], -1, -993, 'u']]
FIND RETURN
ENTRY_POINT
registerAggregator(address,address)


_aggregators_5(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
TMP_80 = CONVERT 0 to address
TMP_81(bool) = asset_1 != TMP_80
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,TwapOracle::registerAggregator: asset zero address provided)
TMP_83 = CONVERT 0 to address
TMP_84(bool) = aggregator_1 != TMP_83
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,TwapOracle::registerAggregator: aggregator zero address provided)
REF_18(address) -> _aggregators_7[asset_1]
TMP_86 = CONVERT 0 to address
TMP_87(bool) = REF_18 == TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,TwapOracle::registerAggregator: aggregator already exists)
REF_19(address) -> _aggregators_7[asset_1]
_aggregators_8(mapping(address => address)) := ϕ(['_aggregators_7'])
REF_19 (->_aggregators_8) := aggregator_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _aggregators_5, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 5
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
_aggregators_5(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
FIND RETURN
ENTRY_POINT
initialized()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_17, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 17
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: USDV_9, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 9
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
VADER_17(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_9(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_142 cleared
[i] TMP_143 cleared
[i] TMP_144 cleared
[i] TMP_145 cleared
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_9, name: USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_17, name: VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_9, name: USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_17, name: VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_142 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_142

Name: TMP_142 Function: initialized
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(bool) = VADER_17 != TMP_142
[i]Type for TMP_143

Name: TMP_143 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: initialized
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_145(bool) = USDV_9 != TMP_144
[i]Type for TMP_145

Name: TMP_145 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_146(bool) = TMP_143 && TMP_145
[i]Type for TMP_146

Name: TMP_146 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,TwapOracle::initialized: not initialized)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_17, name: VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_9, name: USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
VADER_17(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_9(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_142 cleared
[i] TMP_143 cleared
[i] TMP_144 cleared
[i] TMP_145 cleared
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: USDV_9, name: USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_17, name: VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_9, name: USDV

Name: USDV Function: initialized
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_17, name: VADER

Name: VADER Function: initialized
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_142 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_142

Name: TMP_142 Function: initialized
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_143(bool) = VADER_17 != TMP_142
[i]Type for TMP_143

Name: TMP_143 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: initialized
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_145(bool) = USDV_9 != TMP_144
[i]Type for TMP_145

Name: TMP_145 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_146(bool) = TMP_143 && TMP_145
[i]Type for TMP_146

Name: TMP_146 Function: initialized
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,TwapOracle::initialized: not initialized)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_80 cleared
[i] TMP_81 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: asset_1, name: asset

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_80 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_80

Name: TMP_80 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(bool) = asset_1 != TMP_80
[i]Type for TMP_81

Name: TMP_81 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,TwapOracle::registerAggregator: asset zero address provided)
[i]Type for TMP_82

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_83 cleared
[i] TMP_84 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: aggregator_1, name: aggregator

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_83 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_83

Name: TMP_83 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(bool) = aggregator_1 != TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,TwapOracle::registerAggregator: aggregator zero address provided)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_7, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 7
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: _aggregators_7, name: _aggregators

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
End popogation
REF_18(address) -> _aggregators_7[asset_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_18

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_86 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = REF_18 == TMP_86
[i]Type for TMP_87

Name: TMP_87 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,TwapOracle::registerAggregator: aggregator already exists)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_8, name: _aggregators

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _aggregators, Num: 8
Globalname: _aggregators, contract_name: TwapOracle
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
Ssa_name: _aggregators_8, name: _aggregators

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> _aggregators_7[asset_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_19

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_aggregators_8(mapping(address => address)) := ϕ(['_aggregators_7'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_19 (->_aggregators_8) := aggregator_1(address)
asgn
Error with REF_19 in function registerAggregator
Error with: REF_19 in function registerAggregator
Finance type key: (-1, -1)
[i]Type for REF_19

Name: REF_19 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: 1


_aggregators_5(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
TMP_80 = CONVERT 0 to address
TMP_81(bool) = asset_1 != TMP_80
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,TwapOracle::registerAggregator: asset zero address provided)
TMP_83 = CONVERT 0 to address
TMP_84(bool) = aggregator_1 != TMP_83
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,TwapOracle::registerAggregator: aggregator zero address provided)
REF_18(address) -> _aggregators_7[asset_1]
TMP_86 = CONVERT 0 to address
TMP_87(bool) = REF_18 == TMP_86
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,TwapOracle::registerAggregator: aggregator already exists)
REF_19(address) -> _aggregators_7[asset_1]
_aggregators_8(mapping(address => address)) := ϕ(['_aggregators_7'])
REF_19 (->_aggregators_8) := aggregator_1(address)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _aggregators_5, name: _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
_aggregators_5(mapping(address => address)) := ϕ(['_aggregators_8', '_aggregators_4', '_aggregators_0'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
Old param cache: []
[i] TMP_80 cleared
[i] TMP_81 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_80 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_80

Name: TMP_80 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_81(bool) = asset_1 != TMP_80
[i]Type for TMP_81

Name: TMP_81 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_82(None) = SOLIDITY_CALL require(bool,string)(TMP_81,TwapOracle::registerAggregator: asset zero address provided)
[i]Type for TMP_82

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_83 cleared
[i] TMP_84 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_83 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_83

Name: TMP_83 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_84(bool) = aggregator_1 != TMP_83
[i]Type for TMP_84

Name: TMP_84 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_85(None) = SOLIDITY_CALL require(bool,string)(TMP_84,TwapOracle::registerAggregator: aggregator zero address provided)
[i]Type for TMP_85

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] TMP_87 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_7, name: _aggregators

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_7, name: _aggregators

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
End popogation
REF_18(address) -> _aggregators_7[asset_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_18

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_86 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: registerAggregator
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_87(bool) = REF_18 == TMP_86
[i]Type for TMP_87

Name: TMP_87 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,TwapOracle::registerAggregator: aggregator already exists)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: aggregator_1, name: aggregator

Name: aggregator_1 Function: registerAggregator
Num: 
Den: 
Address: -993
Norm: 0
LF: aggregator
Value: u
Fields: 
Finance Type: undef
Ssa_name: asset_1, name: asset

Name: asset_1 Function: registerAggregator
Num: 
Den: 
Address: -994
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
Ssa_name: _aggregators_8, name: _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _aggregators_8, name: _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
REF_19(address) -> _aggregators_7[asset_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
[i]Type for REF_19

Name: None Function: None
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_aggregators_8(mapping(address => address)) := ϕ(['_aggregators_7'])
Phi
[i]Type for _aggregators

Name: _aggregators Function: registerAggregator
Num: -1
Den: -1
Address: 1
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_19 (->_aggregators_8) := aggregator_1(address)
asgn
Finance type key: (-1, -1)
[i]Type for REF_19

Name: REF_19 Function: registerAggregator
Num: 
Den: 
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: 1
Reading Function: registerPair
Checking funcion...



registerPair
Function name: registerPair
Finding type for factory(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for token0(address ... )
prev address? u
Head Addr: -991
    Norm: 18
    Set: {-991}
    Fin: NULL
Finding type for token1(address ... )
prev address? u
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
New param cache [[[], [], 0, 'factory', [], -1, -992, 'u'], [[], [], 18, 'token0', [], -1, -991, 'u'], [[], [], 6, 'token1', [], -1, -990, 'u']]
FIND RETURN
ENTRY_POINT
registerPair(address,address,address)


VADER_9(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_6(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
_vaderPool_2(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_pairs_5(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
TMP_91(bool) = token0_1 == VADER_11
TMP_92(bool) = token0_1 == USDV_8
TMP_93(bool) = TMP_91 || TMP_92
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,TwapOracle::registerPair: Invalid token0 address)
TMP_95(bool) = token0_1 != token1_1
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,TwapOracle::registerPair: Same token address)
TMP_97(bool) = INTERNAL_CALL, TwapOracle.pairExists(address,address)(token0_1,token1_1)
TMP_98 = ! TMP_97 
TMP_99(None) = SOLIDITY_CALL require(bool,string)(TMP_98,TwapOracle::registerPair: Pair exists)
TMP_100(bool) = token0_1 == VADER_12
CONDITION TMP_100
TMP_101 = CONVERT factory_1 to IUniswapV2Factory
TMP_102(address) = HIGH_LEVEL_CALL, dest:TMP_101(IUniswapV2Factory), function:getPair, arguments:['token0_1', 'token1_1']  
_pairs_9(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_8', '_pairs_4', '_pairs_19'])
TMP_103 = CONVERT TMP_102 to IUniswapV2Pair
pair_1(IUniswapV2Pair) := TMP_103(IUniswapV2Pair)
TMP_104 = CONVERT pair_1 to address
pairAddr_1(address) := TMP_104(address)
TMP_107 = CONVERT _vaderPool_5 to address
pairAddr_2(address) := TMP_107(address)
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
_pairs_10(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_9', '_pairs_4', '_pairs_19'])
price0CumulativeLast_1(uint256) := TMP_105(uint256)
TMP_108 = CONVERT token1_1 to IERC20
TUPLE_2(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_5(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_108']  
_vaderPool_6(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
_pairs_13(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_12', '_pairs_19'])
price0CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 0 
price1CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 1 
TMP_106(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
_pairs_11(TwapOracle.PairData[]) := ϕ(['_pairs_10', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
price1CumulativeLast_1(uint256) := TMP_106(uint256)
TMP_109 = CONVERT token1_1 to IERC20
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_6(IVaderPoolV2), function:getReserves, arguments:['TMP_109']  
_vaderPool_7(IVaderPoolV2) := ϕ(['_vaderPool_6', '_vaderPool_5', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_pairs_14(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_13', '_pairs_4', '_pairs_19'])
reserve0_2(uint112)= UNPACK TUPLE_3 index: 0 
reserve1_2(uint112)= UNPACK TUPLE_3 index: 1 
blockTimestampLast_2(uint32)= UNPACK TUPLE_3 index: 2 
pairAddr_3(address) := ϕ(['pairAddr_2', 'pairAddr_1'])
price0CumulativeLast_3(uint256) := ϕ(['price0CumulativeLast_2', 'price0CumulativeLast_1'])
price1CumulativeLast_3(uint256) := ϕ(['price1CumulativeLast_2', 'price1CumulativeLast_1'])
reserve0_3(uint112) := ϕ(['reserve0_1', 'reserve0_2'])
reserve1_3(uint112) := ϕ(['reserve1_1', 'reserve1_2'])
blockTimestampLast_3(uint32) := ϕ(['blockTimestampLast_1', 'blockTimestampLast_2'])
TUPLE_1(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
_pairs_12(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19', '_pairs_11'])
reserve0_1(uint112)= UNPACK TUPLE_1 index: 0 
reserve1_1(uint112)= UNPACK TUPLE_1 index: 1 
blockTimestampLast_1(uint32)= UNPACK TUPLE_1 index: 2 
TMP_110(bool) = reserve0_3 != 0
TMP_111(bool) = reserve1_3 != 0
TMP_112(bool) = TMP_110 && TMP_111
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,TwapOracle::registerPair: No reserves)
TMP_114(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
TMP_115(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_114)
REF_27(bool) -> _pairExists_1[TMP_115]
_pairExists_2(mapping(bytes32 => bool)) := ϕ(['_pairExists_1'])
REF_27 (->_pairExists_2) := True(bool)
TMP_116 = new uq112x112(0)
TMP_117 = new uq112x112(0)
TMP_118 = new PairData(pairAddr_3,token0_1,token1_1,price0CumulativeLast_3,price1CumulativeLast_3,blockTimestampLast_3,TMP_116,TMP_117)
REF_31 -> LENGTH _pairs_14
TMP_120(uint256) := REF_31(uint256)
TMP_121(uint256) = TMP_120 (c)+ 1
_pairs_15(TwapOracle.PairData[]) := ϕ(['_pairs_14'])
REF_31 (->_pairs_15) := TMP_121(uint256)
REF_32(TwapOracle.PairData) -> _pairs_15[TMP_120]
_pairs_16(TwapOracle.PairData[]) := ϕ(['_pairs_15'])
REF_32 (->_pairs_16) := TMP_118(TwapOracle.PairData)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_9, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 9
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: USDV_6, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 6
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
Ssa_name: _vaderPool_2, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 2
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_5, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 5
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
VADER_9(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: registerPair
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_6(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: registerPair
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_2(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_5(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
Old param cache: []
[i] TMP_91 cleared
[i] TMP_92 cleared
[i] TMP_93 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: USDV_8, name: USDV

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: USDV, Num: 8
Globalname: USDV, contract_name: TwapOracle
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Source address: 4
Ssa_name: VADER_11, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 11
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_8, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_11, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_91(bool) = token0_1 == VADER_11
[i]Type for TMP_91

Name: TMP_91 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(bool) = token0_1 == USDV_8
[i]Type for TMP_92

Name: TMP_92 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_93(bool) = TMP_91 || TMP_92
[i]Type for TMP_93

Name: TMP_93 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,TwapOracle::registerPair: Invalid token0 address)
[i]Type for TMP_94

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_95(bool) = token0_1 != token1_1
[i]Type for TMP_95

Name: TMP_95 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,TwapOracle::registerPair: Same token address)
[i]Type for TMP_96

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_97 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_97(bool) = INTERNAL_CALL, TwapOracle.pairExists(address,address)(token0_1,token1_1)
New param cache [[[], [], 18, 'token0', [], -1, -991, 'u'], [[], [], 6, 'token1', [], -1, -990, 'u']]
Old param cache: [[[], [], 18, 'token0', [], -1, -999], [[], [], 6, 'token1', [], -1, -998]]
[[], [], 18, 'token0', [], -1, -991, 'u']

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'token1', [], -1, -990, 'u']

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pairExists(address,address)
Propogating All
Propogating All
token1_1
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -998
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
token0_1
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -999
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
token1_1
Ssa_name: token1_1, name: token1

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
token0_1
Ssa_name: token0_1, name: token0

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
pairHash1_1
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairHash0_1
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: TMP_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: TMP_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_97

Name: TMP_97 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98 = ! TMP_97 
[i]Type for TMP_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_99(None) = SOLIDITY_CALL require(bool,string)(TMP_98,TwapOracle::registerPair: Pair exists)
[i]Type for TMP_99

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_12, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 12
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_12, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_100(bool) = token0_1 == VADER_12
[i]Type for TMP_100

Name: TMP_100 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_101 cleared
[i] TMP_102 cleared
[i] TMP_103 cleared
[i] pair cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_1, name: factory

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_1, name: factory

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_9, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 9
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_101 = CONVERT factory_1 to IUniswapV2Factory
Converting factory_1

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Source address: -992
UniswapV2Factory
[i]Type for TMP_101

Name: TMP_101 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: UniswapV2Factory
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_102(address) = HIGH_LEVEL_CALL, dest:TMP_101(IUniswapV2Factory), function:getPair, arguments:['token0_1', 'token1_1']  
High Call: getPair
Running querryfc
Found: None
Written func info: IUniswapV2Factory, getPair
[i]Type for TMP_102

Name: TMP_102 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_9(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_8', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_103 = CONVERT TMP_102 to IUniswapV2Pair
Converting TMP_102

Name: TMP_102 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
UniswapV2Pair
[i]Type for TMP_103

Name: TMP_103 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
pair_1(IUniswapV2Pair) := TMP_103(IUniswapV2Pair)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_104 cleared
[i] pairAddr cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_1, name: pairAddr

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 1
Globalname: pairAddr, contract_name: TwapOracle
End popogation
TMP_104 = CONVERT pair_1 to address
Converting pair_1

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_104

Name: TMP_104 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
pairAddr_1(address) := TMP_104(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_107 cleared
[i] pairAddr cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vaderPool_5, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 5
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _vaderPool_5, name: _vaderPool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_2, name: pairAddr

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 2
Globalname: pairAddr, contract_name: TwapOracle
End popogation
TMP_107 = CONVERT _vaderPool_5 to address
Converting _vaderPool_5

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_107

Name: TMP_107 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairAddr_2(address) := TMP_107(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_105 cleared
[i] price0CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: price0CumulativeLast_1, name: price0CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 1
Globalname: price0CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_10, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 10
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
High Call: price0CumulativeLast
Running querryfc
Found: None
Written func info: IUniswapV2Pair, price0CumulativeLast
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
([2], [4], 12, "'u'", 'u', -1)
[i]Type for TMP_105

Name: TMP_105 Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_10(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_9', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_1(uint256) := TMP_105(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] price0CumulativeLast cleared
[i] price1CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price0CumulativeLast_2, name: price0CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 2
Globalname: price0CumulativeLast, contract_name: TwapOracle
Ssa_name: price1CumulativeLast_2, name: price1CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 2
Globalname: price1CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _vaderPool_6, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 6
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_13, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 13
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_108 = CONVERT token1_1 to IERC20
Converting token1_1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20
[i]Type for TMP_108

Name: TMP_108 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_5(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_108']  
High Call: cumulativePrices
Running querryfc
Found: None
Written func info: IVaderPoolV2, cumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_2

Name: TUPLE_2 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_6(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_13(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_12', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_106 cleared
[i] price1CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1CumulativeLast_1, name: price1CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 1
Globalname: price1CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_11, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 11
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_106(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
High Call: price1CumulativeLast
Running querryfc
Found: None
Written func info: IUniswapV2Pair, price1CumulativeLast
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
([4], [2], -6, "'u'", 'u', -1)
[i]Type for TMP_106

Name: TMP_106 Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_11(TwapOracle.PairData[]) := ϕ(['_pairs_10', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_1(uint256) := TMP_106(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_109 cleared
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_6, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_6, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve0_2, name: reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve0, Num: 2
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_2, name: reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve1, Num: 2
Globalname: reserve1, contract_name: TwapOracle
Ssa_name: blockTimestampLast_2, name: blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 2
Globalname: blockTimestampLast, contract_name: TwapOracle
End popogation
Ssa_name: _vaderPool_7, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 7
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_14, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 14
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_109 = CONVERT token1_1 to IERC20
Converting token1_1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_6(IVaderPoolV2), function:getReserves, arguments:['TMP_109']  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPoolV2, getReserves
Retvar: ('c', ['global:VADER'], ['-1'], 18, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['-1'], 6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_3

Name: TUPLE_3 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_7(IVaderPoolV2) := ϕ(['_vaderPool_6', '_vaderPool_5', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_14(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_13', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_2(uint112)= UNPACK TUPLE_3 index: 0 
([2], [-1], 18, "'u'", 'u', -1)
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_2(uint112)= UNPACK TUPLE_3 index: 1 
([4], [-1], 6, "'u'", 'u', -1)
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_2(uint32)= UNPACK TUPLE_3 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairAddr cleared
[i] price0CumulativeLast cleared
[i] price1CumulativeLast cleared
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: pairAddr_3, name: pairAddr

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 3
Globalname: pairAddr, contract_name: TwapOracle
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 3
Globalname: price0CumulativeLast, contract_name: TwapOracle
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 3
Globalname: price1CumulativeLast, contract_name: TwapOracle
Ssa_name: reserve0_3, name: reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve0, Num: 3
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_3, name: reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve1, Num: 3
Globalname: reserve1, contract_name: TwapOracle
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 3
Globalname: blockTimestampLast, contract_name: TwapOracle
pairAddr_3(address) := ϕ(['pairAddr_2', 'pairAddr_1'])
Phi

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_3(uint256) := ϕ(['price0CumulativeLast_2', 'price0CumulativeLast_1'])
Phi

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_3(uint256) := ϕ(['price1CumulativeLast_2', 'price1CumulativeLast_1'])
Phi

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve0_3(uint112) := ϕ(['reserve0_1', 'reserve0_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_3(uint112) := ϕ(['reserve1_1', 'reserve1_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_3(uint32) := ϕ(['blockTimestampLast_1', 'blockTimestampLast_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 1
Globalname: blockTimestampLast, contract_name: TwapOracle
Ssa_name: reserve0_1, name: reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve0, Num: 1
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_1, name: reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve1, Num: 1
Globalname: reserve1, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_12, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 12
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TUPLE_1(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IUniswapV2Pair, getReserves
Retvar: ('c', ['global:VADER'], ['-1'], 18, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['-1'], 6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_1

Name: TUPLE_1 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_12(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19', '_pairs_11'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_1(uint112)= UNPACK TUPLE_1 index: 0 
([2], [-1], 18, "'u'", 'u', -1)
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_1(uint112)= UNPACK TUPLE_1 index: 1 
([4], [-1], 6, "'u'", 'u', -1)
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_1(uint32)= UNPACK TUPLE_1 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_110 cleared
[i] TMP_111 cleared
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserve1_3, name: reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_3, name: reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve1_3, name: reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_3, name: reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_110(bool) = reserve0_3 != 0
[i]Type for TMP_110

Name: TMP_110 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(bool) = reserve1_3 != 0
[i]Type for TMP_111

Name: TMP_111 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(bool) = TMP_110 && TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,TwapOracle::registerPair: No reserves)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairExists_2, name: _pairExists

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairExists, Num: 2
Globalname: _pairExists, contract_name: TwapOracle
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: _pairExists_2, name: _pairExists

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_115(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_114)
[i]Type for TMP_115

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27(bool) -> _pairExists_1[TMP_115]
INDEX
[i]Type for REF_27

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_pairExists_2(mapping(bytes32 => bool)) := ϕ(['_pairExists_1'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27 (->_pairExists_2) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_27

Name: REF_27 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
[i] TMP_120 cleared
[i] TMP_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_3, name: pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 15
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_14, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_14, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_3, name: pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_16, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 16
Globalname: _pairs, contract_name: TwapOracle
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: _pairs_15, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_16, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = new uq112x112(0)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117 = new uq112x112(0)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118 = new PairData(pairAddr_3,token0_1,token1_1,price0CumulativeLast_3,price1CumulativeLast_3,blockTimestampLast_3,TMP_116,TMP_117)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 -> LENGTH _pairs_14
[i]Type for REF_31

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_120(uint256) := REF_31(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for TMP_120

Name: TMP_120 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121(uint256) = TMP_120 (c)+ 1
Source address: u
[i]Type for TMP_121

Name: TMP_121 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
_pairs_15(TwapOracle.PairData[]) := ϕ(['_pairs_14'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 (->_pairs_15) := TMP_121(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_31

Name: REF_31 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_32(TwapOracle.PairData) -> _pairs_15[TMP_120]
INDEX
[i]Type for REF_32

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_pairs_16(TwapOracle.PairData[]) := ϕ(['_pairs_15'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_32 (->_pairs_16) := TMP_118(TwapOracle.PairData)
asgn
Finance type key: (-1, -1)
[i]Type for REF_32

Name: REF_32 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Source address: u


VADER_9(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
USDV_6(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
_vaderPool_2(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_pairs_5(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
TMP_91(bool) = token0_1 == VADER_11
TMP_92(bool) = token0_1 == USDV_8
TMP_93(bool) = TMP_91 || TMP_92
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,TwapOracle::registerPair: Invalid token0 address)
TMP_95(bool) = token0_1 != token1_1
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,TwapOracle::registerPair: Same token address)
TMP_97(bool) = INTERNAL_CALL, TwapOracle.pairExists(address,address)(token0_1,token1_1)
TMP_98 = ! TMP_97 
TMP_99(None) = SOLIDITY_CALL require(bool,string)(TMP_98,TwapOracle::registerPair: Pair exists)
TMP_100(bool) = token0_1 == VADER_12
CONDITION TMP_100
TMP_101 = CONVERT factory_1 to IUniswapV2Factory
TMP_102(address) = HIGH_LEVEL_CALL, dest:TMP_101(IUniswapV2Factory), function:getPair, arguments:['token0_1', 'token1_1']  
_pairs_9(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_8', '_pairs_4', '_pairs_19'])
TMP_103 = CONVERT TMP_102 to IUniswapV2Pair
pair_1(IUniswapV2Pair) := TMP_103(IUniswapV2Pair)
TMP_104 = CONVERT pair_1 to address
pairAddr_1(address) := TMP_104(address)
TMP_107 = CONVERT _vaderPool_5 to address
pairAddr_2(address) := TMP_107(address)
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
_pairs_10(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_9', '_pairs_4', '_pairs_19'])
price0CumulativeLast_1(uint256) := TMP_105(uint256)
TMP_108 = CONVERT token1_1 to IERC20
TUPLE_2(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_5(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_108']  
_vaderPool_6(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
_pairs_13(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_12', '_pairs_19'])
price0CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 0 
price1CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 1 
TMP_106(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
_pairs_11(TwapOracle.PairData[]) := ϕ(['_pairs_10', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
price1CumulativeLast_1(uint256) := TMP_106(uint256)
TMP_109 = CONVERT token1_1 to IERC20
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_6(IVaderPoolV2), function:getReserves, arguments:['TMP_109']  
_vaderPool_7(IVaderPoolV2) := ϕ(['_vaderPool_6', '_vaderPool_5', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_pairs_14(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_13', '_pairs_4', '_pairs_19'])
reserve0_2(uint112)= UNPACK TUPLE_3 index: 0 
reserve1_2(uint112)= UNPACK TUPLE_3 index: 1 
blockTimestampLast_2(uint32)= UNPACK TUPLE_3 index: 2 
pairAddr_3(address) := ϕ(['pairAddr_2', 'pairAddr_1'])
price0CumulativeLast_3(uint256) := ϕ(['price0CumulativeLast_2', 'price0CumulativeLast_1'])
price1CumulativeLast_3(uint256) := ϕ(['price1CumulativeLast_2', 'price1CumulativeLast_1'])
reserve0_3(uint112) := ϕ(['reserve0_1', 'reserve0_2'])
reserve1_3(uint112) := ϕ(['reserve1_1', 'reserve1_2'])
blockTimestampLast_3(uint32) := ϕ(['blockTimestampLast_1', 'blockTimestampLast_2'])
TUPLE_1(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
_pairs_12(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19', '_pairs_11'])
reserve0_1(uint112)= UNPACK TUPLE_1 index: 0 
reserve1_1(uint112)= UNPACK TUPLE_1 index: 1 
blockTimestampLast_1(uint32)= UNPACK TUPLE_1 index: 2 
TMP_110(bool) = reserve0_3 != 0
TMP_111(bool) = reserve1_3 != 0
TMP_112(bool) = TMP_110 && TMP_111
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,TwapOracle::registerPair: No reserves)
TMP_114(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
TMP_115(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_114)
REF_27(bool) -> _pairExists_1[TMP_115]
_pairExists_2(mapping(bytes32 => bool)) := ϕ(['_pairExists_1'])
REF_27 (->_pairExists_2) := True(bool)
TMP_116 = new uq112x112(0)
TMP_117 = new uq112x112(0)
TMP_118 = new PairData(pairAddr_3,token0_1,token1_1,price0CumulativeLast_3,price1CumulativeLast_3,blockTimestampLast_3,TMP_116,TMP_117)
REF_31 -> LENGTH _pairs_14
TMP_120(uint256) := REF_31(uint256)
TMP_121(uint256) = TMP_120 (c)+ 1
_pairs_15(TwapOracle.PairData[]) := ϕ(['_pairs_14'])
REF_31 (->_pairs_15) := TMP_121(uint256)
REF_32(TwapOracle.PairData) -> _pairs_15[TMP_120]
_pairs_16(TwapOracle.PairData[]) := ϕ(['_pairs_15'])
REF_32 (->_pairs_16) := TMP_118(TwapOracle.PairData)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_9, name: VADER

Name: VADER Function: registerPair
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_6, name: USDV

Name: USDV Function: registerPair
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_2, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_5, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_9(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: registerPair
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
USDV_6(address) := ϕ(['USDV_0', 'USDV_2', 'USDV_8', 'USDV_5'])
Phi
[i]Type for USDV

Name: USDV Function: registerPair
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_2(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_5(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
Old param cache: []
[i] TMP_91 cleared
[i] TMP_92 cleared
[i] TMP_93 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_8, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_11, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: USDV_8, name: USDV

Name: None Function: None
Num: -1
Den: -1
Address: 4
Norm: 6
LF: USDV
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_11, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_91(bool) = token0_1 == VADER_11
[i]Type for TMP_91

Name: TMP_91 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_92(bool) = token0_1 == USDV_8
[i]Type for TMP_92

Name: TMP_92 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_93(bool) = TMP_91 || TMP_92
[i]Type for TMP_93

Name: TMP_93 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_94(None) = SOLIDITY_CALL require(bool,string)(TMP_93,TwapOracle::registerPair: Invalid token0 address)
[i]Type for TMP_94

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_95(bool) = token0_1 != token1_1
[i]Type for TMP_95

Name: TMP_95 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,TwapOracle::registerPair: Same token address)
[i]Type for TMP_96

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_97 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_97(bool) = INTERNAL_CALL, TwapOracle.pairExists(address,address)(token0_1,token1_1)
New param cache [[[], [], 18, 'token0', [], -1, -991, 'u'], [[], [], 6, 'token1', [], -1, -990, 'u']]
Old param cache: [[[], [], 18, 'token0', [], -1, -999], [[], [], 6, 'token1', [], -1, -998]]
[[], [], 18, 'token0', [], -1, -991, 'u']

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 6, 'token1', [], -1, -990, 'u']

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
pairExists(address,address)
Propogating All
Propogating All
token1_1
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
token0_1
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
token1_1
Ssa_name: token1_1, name: token1

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
token0_1
Ssa_name: token0_1, name: token0

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
pairHash1_1
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
pairHash0_1
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: TMP_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token0 cleared
[i] token1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: token0_1 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: token1_1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token0_1(address) := ϕ(['token0_1'])
Phi
[i]Type for token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_1(address) := ϕ(['token1_1'])
Phi
[i]Type for token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_pairExists_1(mapping(bytes32 => bool)) := ϕ(['_pairExists_0', '_pairExists_1', '_pairExists_2'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
TMP_17(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_17)
[i]Type for TMP_18

Name: TMP_18 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash0_1(bytes32) := TMP_18(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairHash1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: pairExists
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: pairExists
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
End popogation
TMP_19(bytes) = SOLIDITY_CALL abi.encodePacked()(token1_1,token0_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_19)
[i]Type for TMP_20

Name: TMP_20 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairHash1_1(bytes32) := TMP_20(bytes32)
asgn
Finance type key: (-1, -1)
[i]Type for pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash1_1, name: pairHash1

Name: pairHash1 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash1, Num: 1
Globalname: pairHash1, contract_name: TwapOracle
Ssa_name: _pairExists_1, name: _pairExists

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairHash0_1, name: pairHash0

Name: pairHash0 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairHash0, Num: 1
Globalname: pairHash0, contract_name: TwapOracle
End popogation
REF_2(bool) -> _pairExists_1[pairHash0_1]
INDEX
[i]Type for REF_2

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_3(bool) -> _pairExists_1[pairHash1_1]
INDEX
[i]Type for REF_3

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_21(bool) = REF_2 || REF_3
[i]Type for TMP_21

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_21
RETURN

Name: TMP_21 Function: pairExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_97

Name: TMP_97 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98 = ! TMP_97 
[i]Type for TMP_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_99(None) = SOLIDITY_CALL require(bool,string)(TMP_98,TwapOracle::registerPair: Pair exists)
[i]Type for TMP_99

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_12, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_12, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_100(bool) = token0_1 == VADER_12
[i]Type for TMP_100

Name: TMP_100 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_101 cleared
[i] TMP_102 cleared
[i] TMP_103 cleared
[i] pair cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_1, name: factory

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: factory_1, name: factory

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_9, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT factory_1 to IUniswapV2Factory
Converting factory_1

Name: factory_1 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: factory
Value: u
Fields: 
Finance Type: undef
Source address: -992
UniswapV2Factory
[i]Type for TMP_101

Name: TMP_101 Function: registerPair
Num: 
Den: 
Address: -992
Norm: 0
LF: UniswapV2Factory
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_102(address) = HIGH_LEVEL_CALL, dest:TMP_101(IUniswapV2Factory), function:getPair, arguments:['token0_1', 'token1_1']  
High Call: getPair
Running querryfc
Found: None
Written func info: IUniswapV2Factory, getPair
[i]Type for TMP_102

Name: TMP_102 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_9(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_8', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_103 = CONVERT TMP_102 to IUniswapV2Pair
Converting TMP_102

Name: TMP_102 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
UniswapV2Pair
[i]Type for TMP_103

Name: TMP_103 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
pair_1(IUniswapV2Pair) := TMP_103(IUniswapV2Pair)
asgn
Finance type key: (-1, -1)
[i]Type for pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_104 cleared
[i] pairAddr cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: pairAddr_1, name: pairAddr

Name: pairAddr Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 1
Globalname: pairAddr, contract_name: TwapOracle
End popogation
TMP_104 = CONVERT pair_1 to address
Converting pair_1

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_104

Name: TMP_104 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
pairAddr_1(address) := TMP_104(address)
asgn
Finance type key: (-1, -1)
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_107 cleared
[i] pairAddr cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_2, name: pairAddr

Name: pairAddr Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 2
Globalname: pairAddr, contract_name: TwapOracle
End popogation
TMP_107 = CONVERT _vaderPool_5 to address
Converting _vaderPool_5

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_107

Name: TMP_107 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairAddr_2(address) := TMP_107(address)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_105 cleared
[i] price0CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: price0CumulativeLast_1, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 1
Globalname: price0CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_10, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
High Call: price0CumulativeLast
Running querryfc
Found: None
Written func info: IUniswapV2Pair, price0CumulativeLast
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
([2], [4], 12, "'u'", 'u', -1)
[i]Type for TMP_105

Name: TMP_105 Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_10(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_9', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_1(uint256) := TMP_105(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] price0CumulativeLast cleared
[i] price1CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_5, name: _vaderPool

Name: _vaderPool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price0CumulativeLast_2, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 2
Globalname: price0CumulativeLast, contract_name: TwapOracle
Ssa_name: price1CumulativeLast_2, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 2
Globalname: price1CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _vaderPool_6, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_13, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108 = CONVERT token1_1 to IERC20
Converting token1_1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20
[i]Type for TMP_108

Name: TMP_108 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_5(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_108']  
High Call: cumulativePrices
Running querryfc
Found: None
Written func info: IVaderPoolV2, cumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_2

Name: TUPLE_2 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_6(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_13(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_12', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_2(uint256)= UNPACK TUPLE_2 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_106 cleared
[i] price1CumulativeLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: price1CumulativeLast_1, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 1
Globalname: price1CumulativeLast, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_11, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
High Call: price1CumulativeLast
Running querryfc
Found: None
Written func info: IUniswapV2Pair, price1CumulativeLast
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
([4], [2], -6, "'u'", 'u', -1)
[i]Type for TMP_106

Name: TMP_106 Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_11(TwapOracle.PairData[]) := ϕ(['_pairs_10', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_1(uint256) := TMP_106(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_109 cleared
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_6, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_6, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve0_2, name: reserve0

Name: reserve0 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve0, Num: 2
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_2, name: reserve1

Name: reserve1 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve1, Num: 2
Globalname: reserve1, contract_name: TwapOracle
Ssa_name: blockTimestampLast_2, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 2
Globalname: blockTimestampLast, contract_name: TwapOracle
End popogation
Ssa_name: _vaderPool_7, name: _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_14, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT token1_1 to IERC20
Converting token1_1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -990
ERC20
[i]Type for TMP_109

Name: TMP_109 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_6(IVaderPoolV2), function:getReserves, arguments:['TMP_109']  
High Call: getReserves
Running querryfc
Found: None
Written func info: IVaderPoolV2, getReserves
Retvar: ('c', ['global:VADER'], ['-1'], 18, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['-1'], 6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_3

Name: TUPLE_3 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_7(IVaderPoolV2) := ϕ(['_vaderPool_6', '_vaderPool_5', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_14(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_13', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_2(uint112)= UNPACK TUPLE_3 index: 0 
([2], [-1], 18, "'u'", 'u', -1)
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_2(uint112)= UNPACK TUPLE_3 index: 1 
([4], [-1], 6, "'u'", 'u', -1)
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_2(uint32)= UNPACK TUPLE_3 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] pairAddr cleared
[i] price0CumulativeLast cleared
[i] price1CumulativeLast cleared
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: pairAddr_3, name: pairAddr

Name: pairAddr Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairAddr, Num: 3
Globalname: pairAddr, contract_name: TwapOracle
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0CumulativeLast, Num: 3
Globalname: price0CumulativeLast, contract_name: TwapOracle
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1CumulativeLast, Num: 3
Globalname: price1CumulativeLast, contract_name: TwapOracle
Ssa_name: reserve0_3, name: reserve0

Name: reserve0 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve0, Num: 3
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_3, name: reserve1

Name: reserve1 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve1, Num: 3
Globalname: reserve1, contract_name: TwapOracle
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 3
Globalname: blockTimestampLast, contract_name: TwapOracle
pairAddr_3(address) := ϕ(['pairAddr_2', 'pairAddr_1'])
Phi

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: pairAddr Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0CumulativeLast_3(uint256) := ϕ(['price0CumulativeLast_2', 'price0CumulativeLast_1'])
Phi

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1CumulativeLast_3(uint256) := ϕ(['price1CumulativeLast_2', 'price1CumulativeLast_1'])
Phi

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve0_3(uint112) := ϕ(['reserve0_1', 'reserve0_2'])
Phi

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_3(uint112) := ϕ(['reserve1_1', 'reserve1_2'])
Phi

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_3(uint32) := ϕ(['blockTimestampLast_1', 'blockTimestampLast_2'])
Phi

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] reserve0 cleared
[i] reserve1 cleared
[i] blockTimestampLast cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: pair_1, name: pair

Name: pair Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: UniswapV2Pair
Value: u
Fields: 
Finance Type: undef
Name: pair, Num: 1
Globalname: pair, contract_name: TwapOracle
Ssa_name: blockTimestampLast_1, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestampLast, Num: 1
Globalname: blockTimestampLast, contract_name: TwapOracle
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve0, Num: 1
Globalname: reserve0, contract_name: TwapOracle
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: reserve1, Num: 1
Globalname: reserve1, contract_name: TwapOracle
End popogation
Ssa_name: _pairs_12, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
High Call: getReserves
Running querryfc
Found: None
Written func info: IUniswapV2Pair, getReserves
Retvar: ('c', ['global:VADER'], ['-1'], 18, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['-1'], 6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_1

Name: TUPLE_1 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_12(TwapOracle.PairData[]) := ϕ(['_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19', '_pairs_11'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_1(uint112)= UNPACK TUPLE_1 index: 0 
([2], [-1], 18, "'u'", 'u', -1)
[i]Type for reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_1(uint112)= UNPACK TUPLE_1 index: 1 
([4], [-1], 6, "'u'", 'u', -1)
[i]Type for reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestampLast_1(uint32)= UNPACK TUPLE_1 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_110 cleared
[i] TMP_111 cleared
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserve1_3, name: reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_3, name: reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve1_3, name: reserve1

Name: reserve1 Function: registerPair
Num: 4
Den: -1
Address: u
Norm: 6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_3, name: reserve0

Name: reserve0 Function: registerPair
Num: 2
Den: -1
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_110(bool) = reserve0_3 != 0
[i]Type for TMP_110

Name: TMP_110 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_111(bool) = reserve1_3 != 0
[i]Type for TMP_111

Name: TMP_111 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(bool) = TMP_110 && TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: registerPair
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool,string)(TMP_112,TwapOracle::registerPair: No reserves)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairExists_2, name: _pairExists

Name: _pairExists Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _pairExists_2, name: _pairExists

Name: _pairExists Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(bytes) = SOLIDITY_CALL abi.encodePacked()(token0_1,token1_1)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_115(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_114)
[i]Type for TMP_115

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27(bool) -> _pairExists_1[TMP_115]
INDEX
[i]Type for REF_27

Name: _pairExists Function: pairExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_pairExists_2(mapping(bytes32 => bool)) := ϕ(['_pairExists_1'])
Phi
[i]Type for _pairExists

Name: _pairExists Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_27 (->_pairExists_2) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_27

Name: REF_27 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
[i] TMP_120 cleared
[i] TMP_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_3, name: pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_14, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price0CumulativeLast_3, name: price0CumulativeLast

Name: price0CumulativeLast Function: registerPair
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_14, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0_1 Function: registerPair
Num: 
Den: 
Address: -991
Norm: 18
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestampLast_3, name: blockTimestampLast

Name: blockTimestampLast Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairAddr_3, name: pairAddr

Name: pairAddr Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1_1 Function: registerPair
Num: 
Den: 
Address: -990
Norm: 6
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1CumulativeLast_3, name: price1CumulativeLast

Name: price1CumulativeLast Function: registerPair
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_15, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_16, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _pairs_15, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_16, name: _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = new uq112x112(0)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_117 = new uq112x112(0)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118 = new PairData(pairAddr_3,token0_1,token1_1,price0CumulativeLast_3,price1CumulativeLast_3,blockTimestampLast_3,TMP_116,TMP_117)
[i]Type for TMP_118

Name: TMP_118 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 -> LENGTH _pairs_14
[i]Type for REF_31

Name: REF_31 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_120(uint256) := REF_31(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_120

Name: TMP_120 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_121(uint256) = TMP_120 (c)+ 1
Source address: u
[i]Type for TMP_121

Name: TMP_121 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
_pairs_15(TwapOracle.PairData[]) := ϕ(['_pairs_14'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_31 (->_pairs_15) := TMP_121(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_31

Name: REF_31 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_32(TwapOracle.PairData) -> _pairs_15[TMP_120]
INDEX
[i]Type for REF_32

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_pairs_16(TwapOracle.PairData[]) := ϕ(['_pairs_15'])
Phi
[i]Type for _pairs

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_32 (->_pairs_16) := TMP_118(TwapOracle.PairData)
asgn
Finance type key: (-1, -1)
[i]Type for REF_32

Name: REF_32 Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Source address: u
Source address: u
Reading Function: update
Checking funcion...



update
Function name: update
New param cache []
FIND RETURN
ENTRY_POINT
update()


VADER_13(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
_vaderPool_8(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_updatePeriod_2(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1', '_updatePeriod_0'])
_pairs_17(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
REF_33 -> LENGTH _pairs_19
pairCount_1(uint256) := REF_33(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_1', 'i_3'])
TMP_124(bool) = i_2 < pairCount_1
CONDITION TMP_124
REF_34(TwapOracle.PairData) -> _pairs_19[i_2]
pairData_1 (-> ['_pairs'])(TwapOracle.PairData) := REF_34(TwapOracle.PairData)
REF_45(address) -> pairData_1 (-> ['_pairs']).token0
TMP_139(bool) = REF_45 == VADER_15
CONDITION TMP_139
REF_49(address) -> pairData_1 (-> ['_pairs']).token1
TMP_140 = CONVERT REF_49 to IERC20
TUPLE_5(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_10(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_140']  
VADER_16(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_12', 'VADER_5', 'VADER_8'])
_vaderPool_11(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
_updatePeriod_5(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1'])
_pairs_20(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
price0Cumulative_1(uint256)= UNPACK TUPLE_5 index: 0 
price1Cumulative_1(uint256)= UNPACK TUPLE_5 index: 1 
blockTimestamp_1(uint32)= UNPACK TUPLE_5 index: 2 
price0Cumulative_3(uint256) := ϕ(['price0Cumulative_1', 'price0Cumulative_2'])
price1Cumulative_3(uint256) := ϕ(['price1Cumulative_1', 'price1Cumulative_2'])
blockTimestamp_3(uint32) := ϕ(['blockTimestamp_1', 'blockTimestamp_2'])
REF_47(address) -> pairData_1 (-> ['_pairs']).pair
TUPLE_4(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['REF_47'] 
price0Cumulative_2(uint256)= UNPACK TUPLE_4 index: 0 
price1Cumulative_2(uint256)= UNPACK TUPLE_4 index: 1 
blockTimestamp_2(uint32)= UNPACK TUPLE_4 index: 2 
REF_35(uint32) -> pairData_1 (-> ['_pairs']).blockTimestampLast
TMP_125(uint32) = blockTimestamp_3 (c)- REF_35
timeElapsed_1(uint32) := TMP_125(uint32)
TMP_126(bool) = timeElapsed_1 >= _updatePeriod_4
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,TwapOracle::update: Period not elapsed)
REF_36(FixedPoint.uq112x112) -> pairData_1 (-> ['_pairs']).price0Average
REF_38(uint256) -> pairData_1 (-> ['_pairs']).price0CumulativeLast
TMP_128(uint256) = price0Cumulative_3 - REF_38
TMP_129(uint256) = TMP_128 / timeElapsed_1
TMP_130 = CONVERT TMP_129 to uint224
TMP_131 = new uq112x112(TMP_130)
pairData_2 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_1 (-> ['_pairs'])"])
REF_36 (->pairData_2 (-> ['_pairs'])) := TMP_131(FixedPoint.uq112x112)
_pairs_21(TwapOracle.PairData[]) := ϕ(["pairData_2 (-> ['_pairs'])"])
REF_39(FixedPoint.uq112x112) -> pairData_2 (-> ['_pairs']).price1Average
REF_41(uint256) -> pairData_2 (-> ['_pairs']).price1CumulativeLast
TMP_132(uint256) = price1Cumulative_3 - REF_41
TMP_133(uint256) = TMP_132 / timeElapsed_1
TMP_134 = CONVERT TMP_133 to uint224
TMP_135 = new uq112x112(TMP_134)
pairData_3 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_2 (-> ['_pairs'])"])
REF_39 (->pairData_3 (-> ['_pairs'])) := TMP_135(FixedPoint.uq112x112)
_pairs_22(TwapOracle.PairData[]) := ϕ(["pairData_3 (-> ['_pairs'])"])
REF_42(uint256) -> pairData_3 (-> ['_pairs']).price0CumulativeLast
pairData_4 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_3 (-> ['_pairs'])"])
REF_42 (->pairData_4 (-> ['_pairs'])) := price0Cumulative_3(uint256)
_pairs_23(TwapOracle.PairData[]) := ϕ(["pairData_4 (-> ['_pairs'])"])
REF_43(uint256) -> pairData_4 (-> ['_pairs']).price1CumulativeLast
pairData_5 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_4 (-> ['_pairs'])"])
REF_43 (->pairData_5 (-> ['_pairs'])) := price1Cumulative_3(uint256)
_pairs_24(TwapOracle.PairData[]) := ϕ(["pairData_5 (-> ['_pairs'])"])
REF_44(uint32) -> pairData_5 (-> ['_pairs']).blockTimestampLast
pairData_6 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_5 (-> ['_pairs'])"])
REF_44 (->pairData_6 (-> ['_pairs'])) := blockTimestamp_3(uint32)
_pairs_25(TwapOracle.PairData[]) := ϕ(["pairData_6 (-> ['_pairs'])"])
TMP_136(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_13, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 13
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: _vaderPool_8, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 8
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _updatePeriod_2, name: _updatePeriod

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _updatePeriod, Num: 2
Globalname: _updatePeriod, contract_name: TwapOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_17, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 17
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
VADER_13(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_8(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_updatePeriod_2(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1', '_updatePeriod_0'])
Phi
[i]Type for _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_17(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
Old param cache: []
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 19
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_33 -> LENGTH _pairs_19
[i]Type for REF_33

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_33(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_124 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_124(bool) = i_2 < pairCount_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_124

Name: TMP_124 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_1 (-> [', Num: pairs'])
Globalname: pairData_1 (-> [', contract_name: TwapOracle
End popogation
REF_34(TwapOracle.PairData) -> _pairs_19[i_2]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1 (-> ['_pairs'])(TwapOracle.PairData) := REF_34(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_139 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_15, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 15
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: VADER_15, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_45(address) -> pairData_1 (-> ['_pairs']).token0
MEMBER
OUT KEY: update_pairData_token0
OUT KEY: update_pairData_token0
FTT: None
No field found
[i]Type for REF_45

Name: REF_45 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: token0
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: token0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_45 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_139(bool) = REF_45 == VADER_15
[i]Type for TMP_139

Name: TMP_139 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Ssa_name: _vaderPool_10, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 10
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Ssa_name: _vaderPool_10, name: _vaderPool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1Cumulative_1, name: price1Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 1
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: TwapOracle
Ssa_name: price0Cumulative_1, name: price0Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 1
Globalname: price0Cumulative, contract_name: TwapOracle
End popogation
Ssa_name: VADER_16, name: VADER

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: VADER, Num: 16
Globalname: VADER, contract_name: TwapOracle
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: _vaderPool_11, name: _vaderPool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _vaderPool, Num: 11
Globalname: _vaderPool, contract_name: TwapOracle
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _updatePeriod_5, name: _updatePeriod

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _updatePeriod, Num: 5
Globalname: _updatePeriod, contract_name: TwapOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _pairs_20, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 20
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_49(address) -> pairData_1 (-> ['_pairs']).token1
MEMBER
OUT KEY: update_pairData_token1
OUT KEY: update_pairData_token1
FTT: None
No field found
[i]Type for REF_49

Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: token1
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0
Finance Type: undef
Fieldf: 
Name: token1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_140 = CONVERT REF_49 to IERC20
Converting REF_49

Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_140

Name: TMP_140 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_5(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_10(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_140']  
High Call: cumulativePrices
Running querryfc
Found: None
Written func info: IVaderPoolV2, cumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_5

Name: TUPLE_5 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_16(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_11(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_updatePeriod_5(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1'])
Phi
[i]Type for _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_20(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0Cumulative_1(uint256)= UNPACK TUPLE_5 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_1(uint256)= UNPACK TUPLE_5 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32)= UNPACK TUPLE_5 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 3
Globalname: price0Cumulative, contract_name: TwapOracle
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 3
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 3
Globalname: blockTimestamp, contract_name: TwapOracle
price0Cumulative_3(uint256) := ϕ(['price0Cumulative_1', 'price0Cumulative_2'])
Phi

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_3(uint256) := ϕ(['price1Cumulative_1', 'price1Cumulative_2'])
Phi

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_3(uint32) := ϕ(['blockTimestamp_1', 'blockTimestamp_2'])
Phi

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1
Finance Type: undef
Ssa_name: price0Cumulative_2, name: price0Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 2
Globalname: price0Cumulative, contract_name: TwapOracle
Ssa_name: price1Cumulative_2, name: price1Cumulative

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 2
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_2, name: blockTimestamp

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 2
Globalname: blockTimestamp, contract_name: TwapOracle
End popogation
REF_47(address) -> pairData_1 (-> ['_pairs']).pair
MEMBER
OUT KEY: update_pairData_pair
OUT KEY: update_pairData_pair
FTT: None
No field found
[i]Type for REF_47

Name: REF_47 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: pair
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1
Finance Type: undef
Fieldf: 
Name: pair Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_47 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TUPLE_4(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['REF_47'] 
Found: None
Written func info: UniswapV2OracleLibrary, currentCumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_4

Name: TUPLE_4 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0Cumulative_2(uint256)= UNPACK TUPLE_4 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_2(uint256)= UNPACK TUPLE_4 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_2(uint32)= UNPACK TUPLE_4 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_125 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: TwapOracle
End popogation
REF_35(uint32) -> pairData_1 (-> ['_pairs']).blockTimestampLast
MEMBER
OUT KEY: update_pairData_blockTimestampLast
OUT KEY: update_pairData_blockTimestampLast
FTT: None
No field found
[i]Type for REF_35

Name: REF_35 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_35 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_125(uint32) = blockTimestamp_3 (c)- REF_35
Source address: u
[i]Type for TMP_125

Name: TMP_125 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_125(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _updatePeriod_4, name: _updatePeriod

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _updatePeriod, Num: 4
Globalname: _updatePeriod, contract_name: TwapOracle
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _updatePeriod_4, name: _updatePeriod

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = timeElapsed_1 >= _updatePeriod_4
lnorm: u rnorm: u
[i]Type for TMP_126

Name: TMP_126 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,TwapOracle::update: Period not elapsed)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_128 cleared
[i] TMP_129 cleared
[i] TMP_130 cleared
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_21, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 21
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: registerPair
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_2 (-> [', Num: pairs'])
Globalname: pairData_2 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_2 (-> [', Num: pairs'])
Globalname: pairData_2 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_21, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(FixedPoint.uq112x112) -> pairData_1 (-> ['_pairs']).price0Average
MEMBER
OUT KEY: update_pairData_price0Average
OUT KEY: update_pairData_price0Average
FTT: None
No field found
[i]Type for REF_36

Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0Average
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: price0Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_38(uint256) -> pairData_1 (-> ['_pairs']).price0CumulativeLast
MEMBER
OUT KEY: update_pairData_price0CumulativeLast
OUT KEY: update_pairData_price0CumulativeLast
FTT: None
No field found
[i]Type for REF_38

Name: REF_38 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_38 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_128(uint256) = price0Cumulative_3 - REF_38
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(uint256) = TMP_128 / timeElapsed_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
2
4
[i]Type for TMP_129

Name: TMP_129 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130 = CONVERT TMP_129 to uint224
Converting TMP_129

Name: TMP_129 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131 = new uq112x112(TMP_130)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairData_2 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_1 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_36 (->pairData_2 (-> ['_pairs'])) := TMP_131(FixedPoint.uq112x112)
asgn
Finance type key: (-1, -1)
[i]Type for REF_36

Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0Average
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_21(TwapOracle.PairData[]) := ϕ(["pairData_2 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_132 cleared
[i] TMP_133 cleared
[i] TMP_134 cleared
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_22, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 22
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pairData_3 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_3 (-> [', Num: pairs'])
Globalname: pairData_3 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_3 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_3 (-> [', Num: pairs'])
Globalname: pairData_3 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_22, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(FixedPoint.uq112x112) -> pairData_2 (-> ['_pairs']).price1Average
MEMBER
OUT KEY: update_pairData_price1Average
OUT KEY: update_pairData_price1Average
FTT: None
No field found
[i]Type for REF_39

Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1Average
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
REF_41(uint256) -> pairData_2 (-> ['_pairs']).price1CumulativeLast
MEMBER
OUT KEY: update_pairData_price1CumulativeLast
OUT KEY: update_pairData_price1CumulativeLast
FTT: None
No field found
[i]Type for REF_41

Name: REF_41 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_41 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
TMP_132(uint256) = price1Cumulative_3 - REF_41
Source address: u
[i]Type for TMP_132

Name: TMP_132 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(uint256) = TMP_132 / timeElapsed_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
4
2
[i]Type for TMP_133

Name: TMP_133 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134 = CONVERT TMP_133 to uint224
Converting TMP_133

Name: TMP_133 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135 = new uq112x112(TMP_134)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairData_3 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_2 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
XXXX
REF_39 (->pairData_3 (-> ['_pairs'])) := TMP_135(FixedPoint.uq112x112)
asgn
Finance type key: (-1, -1)
[i]Type for REF_39

Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1Average
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_22(TwapOracle.PairData[]) := ϕ(["pairData_3 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_23, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 23
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pairData_4 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_4 (-> [', Num: pairs'])
Globalname: pairData_4 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_4 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_4 (-> [', Num: pairs'])
Globalname: pairData_4 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_23, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_42(uint256) -> pairData_3 (-> ['_pairs']).price0CumulativeLast
MEMBER
OUT KEY: update_pairData_price0CumulativeLast
OUT KEY: update_pairData_price0CumulativeLast
FTT: None
No field found
[i]Type for REF_42

Name: REF_42 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_3 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_42 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
pairData_4 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_3 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
XXXX
REF_42 (->pairData_4 (-> ['_pairs'])) := price0Cumulative_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_42

Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_3 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0CumulativeLast Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_23(TwapOracle.PairData[]) := ϕ(["pairData_4 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: pairData_5 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_5 (-> [', Num: pairs'])
Globalname: pairData_5 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_24, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 24
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: pairData_5 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_5 (-> [', Num: pairs'])
Globalname: pairData_5 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_24, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(uint256) -> pairData_4 (-> ['_pairs']).price1CumulativeLast
MEMBER
OUT KEY: update_pairData_price1CumulativeLast
OUT KEY: update_pairData_price1CumulativeLast
FTT: None
No field found
[i]Type for REF_43

Name: REF_43 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_4 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_43 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
pairData_5 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_4 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
XXXX
REF_43 (->pairData_5 (-> ['_pairs'])) := price1Cumulative_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_4 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1CumulativeLast Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_24(TwapOracle.PairData[]) := ϕ(["pairData_5 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_25, name: _pairs

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pairs, Num: 25
Globalname: _pairs, contract_name: TwapOracle
global...

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: pairData_6 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_6 (-> [', Num: pairs'])
Globalname: pairData_6 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_6 (-> ['_pairs']), name: pairData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairData_6 (-> [', Num: pairs'])
Globalname: pairData_6 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_25, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(uint32) -> pairData_5 (-> ['_pairs']).blockTimestampLast
MEMBER
OUT KEY: update_pairData_blockTimestampLast
OUT KEY: update_pairData_blockTimestampLast
FTT: None
No field found
[i]Type for REF_44

Name: REF_44 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_5 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_44 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: False
Source address: u
Finance type key: (-1, -1)
Add new member...
XXXX
pairData_6 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_5 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
XXXX
REF_44 (->pairData_6 (-> ['_pairs'])) := blockTimestamp_3(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_5 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: blockTimestampLast Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_25(TwapOracle.PairData[]) := ϕ(["pairData_6 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_136 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_136(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_136

Name: TMP_136 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX


VADER_13(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
_vaderPool_8(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
_updatePeriod_2(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1', '_updatePeriod_0'])
_pairs_17(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
MODIFIER_CALL, Ownable.onlyOwner()()
MODIFIER_CALL, TwapOracle.initialized()()
REF_33 -> LENGTH _pairs_19
pairCount_1(uint256) := REF_33(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_1', 'i_3'])
TMP_124(bool) = i_2 < pairCount_1
CONDITION TMP_124
REF_34(TwapOracle.PairData) -> _pairs_19[i_2]
pairData_1 (-> ['_pairs'])(TwapOracle.PairData) := REF_34(TwapOracle.PairData)
REF_45(address) -> pairData_1 (-> ['_pairs']).token0
TMP_139(bool) = REF_45 == VADER_15
CONDITION TMP_139
REF_49(address) -> pairData_1 (-> ['_pairs']).token1
TMP_140 = CONVERT REF_49 to IERC20
TUPLE_5(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_10(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_140']  
VADER_16(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_12', 'VADER_5', 'VADER_8'])
_vaderPool_11(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
_updatePeriod_5(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1'])
_pairs_20(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
price0Cumulative_1(uint256)= UNPACK TUPLE_5 index: 0 
price1Cumulative_1(uint256)= UNPACK TUPLE_5 index: 1 
blockTimestamp_1(uint32)= UNPACK TUPLE_5 index: 2 
price0Cumulative_3(uint256) := ϕ(['price0Cumulative_1', 'price0Cumulative_2'])
price1Cumulative_3(uint256) := ϕ(['price1Cumulative_1', 'price1Cumulative_2'])
blockTimestamp_3(uint32) := ϕ(['blockTimestamp_1', 'blockTimestamp_2'])
REF_47(address) -> pairData_1 (-> ['_pairs']).pair
TUPLE_4(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['REF_47'] 
price0Cumulative_2(uint256)= UNPACK TUPLE_4 index: 0 
price1Cumulative_2(uint256)= UNPACK TUPLE_4 index: 1 
blockTimestamp_2(uint32)= UNPACK TUPLE_4 index: 2 
REF_35(uint32) -> pairData_1 (-> ['_pairs']).blockTimestampLast
TMP_125(uint32) = blockTimestamp_3 (c)- REF_35
timeElapsed_1(uint32) := TMP_125(uint32)
TMP_126(bool) = timeElapsed_1 >= _updatePeriod_4
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,TwapOracle::update: Period not elapsed)
REF_36(FixedPoint.uq112x112) -> pairData_1 (-> ['_pairs']).price0Average
REF_38(uint256) -> pairData_1 (-> ['_pairs']).price0CumulativeLast
TMP_128(uint256) = price0Cumulative_3 - REF_38
TMP_129(uint256) = TMP_128 / timeElapsed_1
TMP_130 = CONVERT TMP_129 to uint224
TMP_131 = new uq112x112(TMP_130)
pairData_2 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_1 (-> ['_pairs'])"])
REF_36 (->pairData_2 (-> ['_pairs'])) := TMP_131(FixedPoint.uq112x112)
_pairs_21(TwapOracle.PairData[]) := ϕ(["pairData_2 (-> ['_pairs'])"])
REF_39(FixedPoint.uq112x112) -> pairData_2 (-> ['_pairs']).price1Average
REF_41(uint256) -> pairData_2 (-> ['_pairs']).price1CumulativeLast
TMP_132(uint256) = price1Cumulative_3 - REF_41
TMP_133(uint256) = TMP_132 / timeElapsed_1
TMP_134 = CONVERT TMP_133 to uint224
TMP_135 = new uq112x112(TMP_134)
pairData_3 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_2 (-> ['_pairs'])"])
REF_39 (->pairData_3 (-> ['_pairs'])) := TMP_135(FixedPoint.uq112x112)
_pairs_22(TwapOracle.PairData[]) := ϕ(["pairData_3 (-> ['_pairs'])"])
REF_42(uint256) -> pairData_3 (-> ['_pairs']).price0CumulativeLast
pairData_4 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_3 (-> ['_pairs'])"])
REF_42 (->pairData_4 (-> ['_pairs'])) := price0Cumulative_3(uint256)
_pairs_23(TwapOracle.PairData[]) := ϕ(["pairData_4 (-> ['_pairs'])"])
REF_43(uint256) -> pairData_4 (-> ['_pairs']).price1CumulativeLast
pairData_5 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_4 (-> ['_pairs'])"])
REF_43 (->pairData_5 (-> ['_pairs'])) := price1Cumulative_3(uint256)
_pairs_24(TwapOracle.PairData[]) := ϕ(["pairData_5 (-> ['_pairs'])"])
REF_44(uint32) -> pairData_5 (-> ['_pairs']).blockTimestampLast
pairData_6 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_5 (-> ['_pairs'])"])
REF_44 (->pairData_6 (-> ['_pairs'])) := blockTimestamp_3(uint32)
_pairs_25(TwapOracle.PairData[]) := ϕ(["pairData_6 (-> ['_pairs'])"])
TMP_136(uint256) := i_2(uint256)
i_3(uint256) = i_2 (c)+ 1


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: VADER_13, name: VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_8, name: _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _updatePeriod_2, name: _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_17, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
VADER_13(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_0', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_8(IVaderPoolV2) := ϕ(['_vaderPool_5', '_vaderPool_0', '_vaderPool_1', '_vaderPool_7', '_vaderPool_10'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_updatePeriod_2(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1', '_updatePeriod_0'])
Phi
[i]Type for _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_17(TwapOracle.PairData[]) := ϕ(['_pairs_0', '_pairs_1', '_pairs_16', '_pairs_4', '_pairs_19'])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Ownable.onlyOwner()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, TwapOracle.initialized()()
New param cache []
Old param cache: []
[i] pairCount cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
End popogation
REF_33 -> LENGTH _pairs_19
[i]Type for REF_33

Name: REF_33 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairCount_1(uint256) := REF_33(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: TwapOracle
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] i cleared
[i] TMP_124 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
Ssa_name: pairCount_1, name: pairCount

Name: pairCount Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pairCount, Num: 1
Globalname: pairCount, contract_name: TwapOracle
Ssa_name: i_2, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
End popogation
Ssa_name: i_2, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: TwapOracle
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_124(bool) = i_2 < pairCount_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_124

Name: TMP_124 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_19, name: _pairs

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Name: pairData_1 (-> [', Num: pairs'])
Globalname: pairData_1 (-> [', contract_name: TwapOracle
End popogation
REF_34(TwapOracle.PairData) -> _pairs_19[i_2]
INDEX
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pairData_1 (-> ['_pairs'])(TwapOracle.PairData) := REF_34(TwapOracle.PairData)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_139 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: VADER_15, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: VADER_15, name: VADER

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
End popogation
REF_45(address) -> pairData_1 (-> ['_pairs']).token0
MEMBER
OUT KEY: update_pairData_token0
OUT KEY: update_pairData_token0
FTT: None
No field found
[i]Type for REF_45

Name: REF_45 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: token0
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: token0 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_45 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token0 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139(bool) = REF_45 == VADER_15
[i]Type for TMP_139

Name: TMP_139 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: _vaderPool_10, name: _vaderPool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: _vaderPool_10, name: _vaderPool

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: price1Cumulative_1, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 1
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_1, name: blockTimestamp

Name: blockTimestamp Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 1
Globalname: blockTimestamp, contract_name: TwapOracle
Ssa_name: price0Cumulative_1, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 1
Globalname: price0Cumulative, contract_name: TwapOracle
End popogation
Ssa_name: VADER_16, name: VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vaderPool_11, name: _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _updatePeriod_5, name: _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_20, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_49(address) -> pairData_1 (-> ['_pairs']).token1
MEMBER
OUT KEY: update_pairData_token1
OUT KEY: update_pairData_token1
FTT: None
No field found
[i]Type for REF_49

Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: token1
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: token1 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: token1 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_140 = CONVERT REF_49 to IERC20
Converting REF_49

Name: REF_49 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ERC20
[i]Type for TMP_140

Name: TMP_140 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_5(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:_vaderPool_10(IVaderPoolV2), function:cumulativePrices, arguments:['TMP_140']  
High Call: cumulativePrices
Running querryfc
Found: None
Written func info: IVaderPoolV2, cumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_5

Name: TUPLE_5 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
VADER_16(address) := ϕ(['VADER_3', 'VADER_15', 'VADER_12', 'VADER_5', 'VADER_8'])
Phi
[i]Type for VADER

Name: VADER Function: update
Num: -1
Den: -1
Address: 2
Norm: 18
LF: VADER
Value: u
Fields: 
Finance Type: undef
XXXX
_vaderPool_11(IVaderPoolV2) := ϕ(['_vaderPool_7', '_vaderPool_10', '_vaderPool_5', '_vaderPool_1'])
Phi
[i]Type for _vaderPool

Name: _vaderPool Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_updatePeriod_5(uint256) := ϕ(['_updatePeriod_4', '_updatePeriod_1'])
Phi
[i]Type for _updatePeriod

Name: _updatePeriod Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_20(TwapOracle.PairData[]) := ϕ(['_pairs_16', '_pairs_19', '_pairs_1', '_pairs_4'])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0Cumulative_1(uint256)= UNPACK TUPLE_5 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_1(uint256)= UNPACK TUPLE_5 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_1(uint32)= UNPACK TUPLE_5 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 3
Globalname: price0Cumulative, contract_name: TwapOracle
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 3
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 3
Globalname: blockTimestamp, contract_name: TwapOracle
price0Cumulative_3(uint256) := ϕ(['price0Cumulative_1', 'price0Cumulative_2'])
Phi

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_3(uint256) := ϕ(['price1Cumulative_1', 'price1Cumulative_2'])
Phi

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_3(uint32) := ϕ(['blockTimestamp_1', 'blockTimestamp_2'])
Phi

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] price0Cumulative cleared
[i] price1Cumulative cleared
[i] blockTimestamp cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price0Cumulative_2, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price0Cumulative, Num: 2
Globalname: price0Cumulative, contract_name: TwapOracle
Ssa_name: price1Cumulative_2, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: price1Cumulative, Num: 2
Globalname: price1Cumulative, contract_name: TwapOracle
Ssa_name: blockTimestamp_2, name: blockTimestamp

Name: blockTimestamp Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: blockTimestamp, Num: 2
Globalname: blockTimestamp, contract_name: TwapOracle
End popogation
REF_47(address) -> pairData_1 (-> ['_pairs']).pair
MEMBER
OUT KEY: update_pairData_pair
OUT KEY: update_pairData_pair
FTT: None
No field found
[i]Type for REF_47

Name: REF_47 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: pair
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: pair Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_47 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: pair Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_4(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['REF_47'] 
Found: None
Written func info: UniswapV2OracleLibrary, currentCumulativePrices
Retvar: ('c', ['global:VADER'], ['global:USDV'], 12, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', ['global:USDV'], ['global:VADER'], -6, "'u'", 'u')
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
{'global:_aggregators': 1, 'global:VADER': 2, 'global:_owner': 3, 'global:USDV': 4, 'pairExists:token0': -999, 'pairExists:token1': -998, 'consult:token': -997, 'initialize:_usdv': -996, 'initialize:_vader': -995, 'registerAggregator:asset': -994, 'registerAggregator:aggregator': -993, 'registerPair:factory': -992, 'registerPair:token0': -991, 'registerPair:token1': -990}
Retvar: ('c', [-1], [-1], 'u', 'u', 'u')
[i]Type for TUPLE_4

Name: TUPLE_4 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
price0Cumulative_2(uint256)= UNPACK TUPLE_4 index: 0 
([2], [4], 12, "'u'", 'u', -1)
[i]Type for price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
price1Cumulative_2(uint256)= UNPACK TUPLE_4 index: 1 
([4], [2], -6, "'u'", 'u', -1)
[i]Type for price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
blockTimestamp_2(uint32)= UNPACK TUPLE_4 index: 2 
([-1], [-1], 'u', 'u', 'u', -1)
[i]Type for blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_125 cleared
[i] timeElapsed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: timeElapsed, Num: 1
Globalname: timeElapsed, contract_name: TwapOracle
End popogation
REF_35(uint32) -> pairData_1 (-> ['_pairs']).blockTimestampLast
MEMBER
OUT KEY: update_pairData_blockTimestampLast
OUT KEY: update_pairData_blockTimestampLast
FTT: None
No field found
[i]Type for REF_35

Name: REF_35 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_35 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: blockTimestampLast Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint32) = blockTimestamp_3 (c)- REF_35
Source address: u
[i]Type for TMP_125

Name: TMP_125 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
timeElapsed_1(uint32) := TMP_125(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _updatePeriod_4, name: _updatePeriod

Name: _updatePeriod Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _updatePeriod_4, name: _updatePeriod

Name: _updatePeriod Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = timeElapsed_1 >= _updatePeriod_4
lnorm: u rnorm: u
[i]Type for TMP_126

Name: TMP_126 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,TwapOracle::update: Period not elapsed)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_128 cleared
[i] TMP_129 cleared
[i] TMP_130 cleared
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_1 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_21, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_2 (-> [', Num: pairs'])
Globalname: pairData_2 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_2 (-> [', Num: pairs'])
Globalname: pairData_2 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_21, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_36(FixedPoint.uq112x112) -> pairData_1 (-> ['_pairs']).price0Average
MEMBER
OUT KEY: update_pairData_price0Average
OUT KEY: update_pairData_price0Average
FTT: None
No field found
[i]Type for REF_36

Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0Average
#################
Member: 
Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_38(uint256) -> pairData_1 (-> ['_pairs']).price0CumulativeLast
MEMBER
OUT KEY: update_pairData_price0CumulativeLast
OUT KEY: update_pairData_price0CumulativeLast
FTT: None
No field found
[i]Type for REF_38

Name: REF_38 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_38 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0CumulativeLast Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_128(uint256) = price0Cumulative_3 - REF_38
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_129(uint256) = TMP_128 / timeElapsed_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
2
4
[i]Type for TMP_129

Name: TMP_129 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130 = CONVERT TMP_129 to uint224
Converting TMP_129

Name: TMP_129 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: update
Num: 2
Den: 4
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131 = new uq112x112(TMP_130)
[i]Type for TMP_131

Name: TMP_131 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairData_2 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_1 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_36 (->pairData_2 (-> ['_pairs'])) := TMP_131(FixedPoint.uq112x112)
asgn
Finance type key: (-1, -1)
[i]Type for REF_36

Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_1 (-> ['_pairs']), Field: price0Average
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_36 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_21(TwapOracle.PairData[]) := ϕ(["pairData_2 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_132 cleared
[i] TMP_133 cleared
[i] TMP_134 cleared
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_2 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: timeElapsed_1, name: timeElapsed

Name: timeElapsed Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_22, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_3 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_3 (-> [', Num: pairs'])
Globalname: pairData_3 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_3 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_3 (-> [', Num: pairs'])
Globalname: pairData_3 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_22, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(FixedPoint.uq112x112) -> pairData_2 (-> ['_pairs']).price1Average
MEMBER
OUT KEY: update_pairData_price1Average
OUT KEY: update_pairData_price1Average
FTT: None
No field found
[i]Type for REF_39

Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1Average
#################
Member: 
Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_41(uint256) -> pairData_2 (-> ['_pairs']).price1CumulativeLast
MEMBER
OUT KEY: update_pairData_price1CumulativeLast
OUT KEY: update_pairData_price1CumulativeLast
FTT: None
No field found
[i]Type for REF_41

Name: REF_41 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_41 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1CumulativeLast Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_132(uint256) = price1Cumulative_3 - REF_41
Source address: u
[i]Type for TMP_132

Name: TMP_132 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_133(uint256) = TMP_132 / timeElapsed_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
4
2
[i]Type for TMP_133

Name: TMP_133 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134 = CONVERT TMP_133 to uint224
Converting TMP_133

Name: TMP_133 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_134

Name: TMP_134 Function: update
Num: 4
Den: 2
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135 = new uq112x112(TMP_134)
[i]Type for TMP_135

Name: TMP_135 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairData_3 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_2 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_39 (->pairData_3 (-> ['_pairs'])) := TMP_135(FixedPoint.uq112x112)
asgn
Finance type key: (-1, -1)
[i]Type for REF_39

Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_2 (-> ['_pairs']), Field: price1Average
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_39 Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1Average Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_22(TwapOracle.PairData[]) := ϕ(["pairData_3 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price0Cumulative_3, name: price0Cumulative

Name: price0Cumulative Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _pairs_23, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_4 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_4 (-> [', Num: pairs'])
Globalname: pairData_4 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_4 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_4 (-> [', Num: pairs'])
Globalname: pairData_4 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_23, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_42(uint256) -> pairData_3 (-> ['_pairs']).price0CumulativeLast
MEMBER
OUT KEY: update_pairData_price0CumulativeLast
OUT KEY: update_pairData_price0CumulativeLast
FTT: None
No field found
[i]Type for REF_42

Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_3 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0CumulativeLast Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
pairData_4 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_3 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_42 (->pairData_4 (-> ['_pairs'])) := price0Cumulative_3(uint256)
asgn
2
4
Finance type key: (-1, -1)
[i]Type for REF_42

Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_3 (-> ['_pairs']), Field: price0CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price0CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_42 Function: update
Num: 2
Den: 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price0CumulativeLast Function: update
Num: 2, 2
Den: 4, 4
Address: u
Norm: 12
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_23(TwapOracle.PairData[]) := ϕ(["pairData_4 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: price1Cumulative_3, name: price1Cumulative

Name: price1Cumulative Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: pairData_5 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_5 (-> [', Num: pairs'])
Globalname: pairData_5 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_24, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: pairData_5 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_5 (-> [', Num: pairs'])
Globalname: pairData_5 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_24, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_43(uint256) -> pairData_4 (-> ['_pairs']).price1CumulativeLast
MEMBER
OUT KEY: update_pairData_price1CumulativeLast
OUT KEY: update_pairData_price1CumulativeLast
FTT: None
No field found
[i]Type for REF_43

Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_4 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1CumulativeLast Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
pairData_5 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_4 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_43 (->pairData_5 (-> ['_pairs'])) := price1Cumulative_3(uint256)
asgn
4
2
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Root: pairData_4 (-> ['_pairs']), Field: price1CumulativeLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: price1CumulativeLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_43 Function: update
Num: 4
Den: 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: price1CumulativeLast Function: update
Num: 4, 4
Den: 2, 2
Address: u
Norm: -6
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_pairs_24(TwapOracle.PairData[]) := ϕ(["pairData_5 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] pairData cleared
Propogating parameters and globals to SSA variables...
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: blockTimestamp_3, name: blockTimestamp

Name: blockTimestamp Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pairs_25, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: pairData_6 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_6 (-> [', Num: pairs'])
Globalname: pairData_6 (-> [', contract_name: TwapOracle
End popogation
Ssa_name: pairData_6 (-> ['_pairs']), name: pairData

Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Name: pairData_6 (-> [', Num: pairs'])
Globalname: pairData_6 (-> [', contract_name: TwapOracle
Ssa_name: _pairs_25, name: _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(uint32) -> pairData_5 (-> ['_pairs']).blockTimestampLast
MEMBER
OUT KEY: update_pairData_blockTimestampLast
OUT KEY: update_pairData_blockTimestampLast
FTT: None
No field found
[i]Type for REF_44

Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_5 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: pairData Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, token0, token1, pair, blockTimestampLast, price0CumulativeLast, price1CumulativeLast
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: blockTimestampLast Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pairData_6 (-> ['_pairs'])(TwapOracle.PairData) := ϕ(["pairData_5 (-> ['_pairs'])"])
Phi

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef


END==================================
Source address: u
[i]Type for pairData

Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
XXXX
REF_44 (->pairData_6 (-> ['_pairs'])) := blockTimestamp_3(uint32)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: pairData_5 (-> ['_pairs']), Field: blockTimestampLast
#################
Member: 
Name: pairData Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: price1Average, price0Average, price1CumulativeLast, token0, token1, pair, blockTimestampLast, price0CumulativeLast
Finance Type: undef
Fieldf: 
Name: blockTimestampLast Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copy_ir: 
Name: REF_44 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Added: True
Source address: u
Finance type key: (-1, -1)
Added to member...

Name: blockTimestampLast Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_pairs_25(TwapOracle.PairData[]) := ϕ(["pairData_6 (-> ['_pairs'])"])
Phi
[i]Type for _pairs

Name: _pairs Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_136 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: update
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: TwapOracle
End popogation
TMP_136(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_136

Name: TMP_136 Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: update
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Address: 1, Label: global:_aggregators
Address: 2, Label: global:VADER
Address: 3, Label: global:_owner
Address: 4, Label: global:USDV
Address: -999, Label: pairExists:token0
Address: -998, Label: pairExists:token1
Address: -997, Label: consult:token
Address: -996, Label: initialize:_usdv
Address: -995, Label: initialize:_vader
Address: -994, Label: registerAggregator:asset
Address: -993, Label: registerAggregator:aggregator
Address: -992, Label: registerPair:factory
Address: -991, Label: registerPair:token0
Address: -990, Label: registerPair:token1
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 18
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: 6
    Set: {4}
    Fin: NULL
Head Addr: -999
    Norm: 18
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 6
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 18
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 6
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 18
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 6
    Set: {-990}
    Fin: NULL
Function count: 18
Currently Omitted (9)
Currently Omitted (3)
Executing Group 15
[*] Tested 17 warnings for Badger Dao p2
Group 15 complete
Testing complete
