Switched global version to 0.6.12
Checking Auction
Checking AuctionEscapeHatch
Checking Permissions
Checking IAuction
Checking IAuctionBurnReserveSkew
Checking IAuctionStartController
Checking IBurnMintableERC20
Checking IDexHandler
Checking IImpliedCollateralService
Checking ILiquidityExtension
Checking IMaltDataLab
Checking Context
Checking AccessControl
Checking Math
Checking SafeMath
Checking ERC20
Checking IERC20
Checking SafeERC20
Checking Address
Checking EnumerableSet
Checking Initializable
Add to address_to_label {'global:globalAdmin': 1}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996, 'initialize:_auction': -995}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996, 'initialize:_auction': -995, 'initialize:_handler': -994}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996, 'initialize:_auction': -995, 'initialize:_handler': -994, 'earlyExitReturn:account': -993}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996, 'initialize:_auction': -995, 'initialize:_handler': -994, 'earlyExitReturn:account': -993, 'accountAuctionExits:account': -992}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_collateralToken': -997, 'initialize:_malt': -996, 'initialize:_auction': -995, 'initialize:_handler': -994, 'earlyExitReturn:account': -993, 'accountAuctionExits:account': -992, 'setDexHandler:_handler': -991}
State_var: _roles
Finding type for _roles(mapping(bytes32 => AccessControl.RoleData) ... )
global
_roles
members
OUT KEY: global__roles_members
global
_roles
adminRole
OUT KEY: global__roles_adminRole
State_var: ADMIN_ROLE
Finding type for ADMIN_ROLE(bytes32 ... )
State_var: TIMELOCK_ROLE
Finding type for TIMELOCK_ROLE(bytes32 ... )
State_var: initialized
Finding type for initialized(bool ... )
State_var: initializing
Finding type for initializing(bool ... )
State_var: auctionEarlyExits
Finding type for auctionEarlyExits(mapping(uint256 => AuctionExits) ... )
global
auctionEarlyExits
exitedEarly
OUT KEY: global_auctionEarlyExits_exitedEarly
global
auctionEarlyExits
earlyExitReturn
OUT KEY: global_auctionEarlyExits_earlyExitReturn
global
auctionEarlyExits
maltUsed
OUT KEY: global_auctionEarlyExits_maltUsed
global
auctionEarlyExits
accountExits
OUT KEY: global_auctionEarlyExits_accountExits
State_var: AUCTION_ROLE
Finding type for AUCTION_ROLE(bytes32 ... )
State_var: GOVERNOR_ROLE
Finding type for GOVERNOR_ROLE(bytes32 ... )
State_var: LIQUIDITY_MINE_ROLE
Finding type for LIQUIDITY_MINE_ROLE(bytes32 ... )
State_var: MONETARY_BURNER_ROLE
Finding type for MONETARY_BURNER_ROLE(bytes32 ... )
State_var: MONETARY_MINTER_ROLE
Finding type for MONETARY_MINTER_ROLE(bytes32 ... )
State_var: REWARD_THROTTLE_ROLE
Finding type for REWARD_THROTTLE_ROLE(bytes32 ... )
State_var: STABILIZER_NODE_ROLE
Finding type for STABILIZER_NODE_ROLE(bytes32 ... )
State_var: globalAdmin
Finding type for globalAdmin(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
State_var: auction
Finding type for auction(IAuction ... )
State_var: collateralToken
Finding type for collateralToken(ERC20 ... )
State_var: dexHandler
Finding type for dexHandler(IDexHandler ... )
State_var: malt
Finding type for malt(IBurnMintableERC20 ... )
State_var: lastBlock
Finding type for lastBlock(mapping(address => uint256) ... )
State_var: cooloffPeriod
Finding type for cooloffPeriod(uint256 ... )
State_var: maxEarlyExitBps
Finding type for maxEarlyExitBps(uint256 ... )



initialize
Finding type for _timelock(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for initialAdmin(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _collateralToken(address ... )
prev address? u
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
Finding type for _malt(address ... )
prev address? u
Head Addr: -996
    Norm: 18
    Set: {-996}
    Fin: NULL
Finding type for _auction(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for _handler(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _timelock
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: initialAdmin
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _collateralToken
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: _malt
    fields: []
    fintype: -1
Param: 4
    num: []
    den: []
    norm: u
    link: _auction
    fields: []
    fintype: -1
Param: 5
    num: []
    den: []
    norm: u
    link: _handler
    fields: []
    fintype: -1


ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_13,initialAdmin_1)
TMP_467 = CONVERT _collateralToken_1 to ERC20
collateralToken_1(ERC20) := TMP_467(ERC20)
TMP_468 = CONVERT _malt_1 to IBurnMintableERC20
malt_1(IBurnMintableERC20) := TMP_468(IBurnMintableERC20)
TMP_469 = CONVERT _auction_1 to IAuction
auction_1(IAuction) := TMP_469(IAuction)
TMP_470 = CONVERT _handler_1 to IDexHandler
dexHandler_1(IDexHandler) := TMP_470(IDexHandler)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 11
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 13
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_13,initialAdmin_1)
Propogating parameters and globals to SSA variables...
Name: collateralToken, Num: 1
Globalname: collateralToken
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_467 = CONVERT _collateralToken_1 to ERC20
Converting _collateralToken_1

Name: _collateralToken_1 Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _collateralToken
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_467

Name: TMP_467 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_1(ERC20) := TMP_467(ERC20)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for collateralToken

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: malt, Num: 1
Globalname: malt
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_468 = CONVERT _malt_1 to IBurnMintableERC20
Converting _malt_1

Name: _malt_1 Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _malt
Value: u
Fields: 
Finance Type: undef
init
end
BurnMintableERC20
[i]Type for TMP_468

Name: TMP_468 Function: initialize
Num: 
Den: 
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
malt_1(IBurnMintableERC20) := TMP_468(IBurnMintableERC20)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for malt

Name: malt Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auction, Num: 1
Globalname: auction
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_469 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_469

Name: TMP_469 Function: initialize
Num: 
Den: 
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_1(IAuction) := TMP_469(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: dexHandler, Num: 1
Globalname: dexHandler
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_470 = CONVERT _handler_1 to IDexHandler
Converting _handler_1

Name: _handler_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _handler
Value: u
Fields: 
Finance Type: undef
init
end
DexHandler
[i]Type for TMP_470

Name: TMP_470 Function: initialize
Num: 
Den: 
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_1(IDexHandler) := TMP_470(IDexHandler)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for dexHandler

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_13,initialAdmin_1)
TMP_467 = CONVERT _collateralToken_1 to ERC20
collateralToken_1(ERC20) := TMP_467(ERC20)
TMP_468 = CONVERT _malt_1 to IBurnMintableERC20
malt_1(IBurnMintableERC20) := TMP_468(IBurnMintableERC20)
TMP_469 = CONVERT _auction_1 to IAuction
auction_1(IAuction) := TMP_469(IAuction)
TMP_470 = CONVERT _handler_1 to IDexHandler
dexHandler_1(IDexHandler) := TMP_470(IDexHandler)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_13,initialAdmin_1)
Propogating parameters and globals to SSA variables...
End popogation
TMP_467 = CONVERT _collateralToken_1 to ERC20
Converting _collateralToken_1

Name: _collateralToken Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _collateralToken
Value: u
Fields: 
Finance Type: undef
init
end
UNKNOWN
[i]Type for TMP_467

Name: TMP_467 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_1(ERC20) := TMP_467(ERC20)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for collateralToken

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_468 = CONVERT _malt_1 to IBurnMintableERC20
Converting _malt_1

Name: _malt Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _malt
Value: u
Fields: 
Finance Type: undef
init
end
BurnMintableERC20
[i]Type for TMP_468

Name: TMP_468 Function: initialize
Num: 
Den: 
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
malt_1(IBurnMintableERC20) := TMP_468(IBurnMintableERC20)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for malt

Name: malt Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_469 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_469

Name: TMP_469 Function: initialize
Num: 
Den: 
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_1(IAuction) := TMP_469(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_470 = CONVERT _handler_1 to IDexHandler
Converting _handler_1

Name: _handler Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _handler
Value: u
Fields: 
Finance Type: undef
init
end
DexHandler
[i]Type for TMP_470

Name: TMP_470 Function: initialize
Num: 
Den: 
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_1(IDexHandler) := TMP_470(IDexHandler)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for dexHandler

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



exitEarly
Finding type for _auctionId(uint256 ... )
Finding type for amount(uint256 ... )
Finding type for minOut(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


auction_2(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_2(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
collateralToken_2(ERC20) := ϕ(['collateralToken_1', 'collateralToken_0', 'collateralToken_7'])
malt_2(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_0'])
auctionEarlyExits_1(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
MODIFIER_CALL, Permissions.notSameBlock()()
TMP_472(uint256) = INTERNAL_CALL, AuctionEscapeHatch._calculateMaltRequiredForExit(uint256,uint256)(_auctionId_1,amount_1)
auction_4(IAuction) := ϕ(['auction_13'])
dexHandler_4(IDexHandler) := ϕ(['dexHandler_14'])
maltQuantity_1(uint256) := TMP_472(uint256)
TMP_473 = CONVERT dexHandler_4 to address
HIGH_LEVEL_CALL, dest:malt_4(IBurnMintableERC20), function:mint, arguments:['TMP_473', 'maltQuantity_1']  
auction_5(IAuction) := ϕ(['auction_1', 'auction_4', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_5(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_4', 'dexHandler_15'])
collateralToken_5(ERC20) := ϕ(['collateralToken_1', 'collateralToken_4', 'collateralToken_7'])
malt_5(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_4'])
auctionEarlyExits_4(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_3', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
TMP_475(uint256) = HIGH_LEVEL_CALL, dest:dexHandler_5(IDexHandler), function:sellMalt, arguments:[]  
auction_6(IAuction) := ϕ(['auction_1', 'auction_5', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_6(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_5'])
collateralToken_6(ERC20) := ϕ(['collateralToken_5', 'collateralToken_1', 'collateralToken_7'])
auctionEarlyExits_5(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_4', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
amountOut_1(uint256) := TMP_475(uint256)
TMP_476(bool) = amountOut_1 > minOut_1
TMP_477(None) = SOLIDITY_CALL require(bool,string)(TMP_476,EarlyExit: Insufficient output)
REF_408(AuctionExits) -> auctionEarlyExits_5[_auctionId_1]
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_408(AuctionExits)
REF_409(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_410(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
TMP_478(uint256) = REF_410 + amount_1
auctionExits_2 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_1 (-> ['auctionEarlyExits'])"])
REF_409 (->auctionExits_2 (-> ['auctionEarlyExits'])) := TMP_478(uint256)
auctionEarlyExits_6(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
REF_411(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
REF_412(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
TMP_479(uint256) = REF_412 + amountOut_1
auctionExits_3 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
REF_411 (->auctionExits_3 (-> ['auctionEarlyExits'])) := TMP_479(uint256)
auctionEarlyExits_7(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
REF_413(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
REF_414(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
TMP_480(uint256) = REF_414 + maltQuantity_1
auctionExits_4 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
REF_413 (->auctionExits_4 (-> ['auctionEarlyExits'])) := TMP_480(uint256)
auctionEarlyExits_8(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
REF_415(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
REF_416(EarlyExitData) -> REF_415[msg.sender]
REF_417(uint256) -> REF_416.exitedEarly
REF_418(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
REF_419(EarlyExitData) -> REF_418[msg.sender]
REF_420(uint256) -> REF_419.exitedEarly
TMP_481(uint256) = REF_420 + amount_1
auctionExits_5 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
REF_417 (->auctionExits_5 (-> ['auctionEarlyExits'])) := TMP_481(uint256)
auctionEarlyExits_9(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
REF_421(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
REF_422(EarlyExitData) -> REF_421[msg.sender]
REF_423(uint256) -> REF_422.earlyExitReturn
REF_424(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
REF_425(EarlyExitData) -> REF_424[msg.sender]
REF_426(uint256) -> REF_425.earlyExitReturn
TMP_482(uint256) = REF_426 + amountOut_1
auctionExits_6 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
REF_423 (->auctionExits_6 (-> ['auctionEarlyExits'])) := TMP_482(uint256)
auctionEarlyExits_10(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
REF_427(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
REF_428(EarlyExitData) -> REF_427[msg.sender]
REF_429(uint256) -> REF_428.maltUsed
REF_430(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
REF_431(EarlyExitData) -> REF_430[msg.sender]
REF_432(uint256) -> REF_431.maltUsed
TMP_483(uint256) = REF_432 + maltQuantity_1
auctionExits_7 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
REF_429 (->auctionExits_7 (-> ['auctionEarlyExits'])) := TMP_483(uint256)
auctionEarlyExits_11(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_7 (-> ['auctionEarlyExits'])"])
HIGH_LEVEL_CALL, dest:auction_6(IAuction), function:amendAccountParticipation, arguments:['msg.sender', '_auctionId_1', 'amount_1', 'maltQuantity_1']  
auction_7(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_6', 'auction_10'])
collateralToken_7(ERC20) := ϕ(['collateralToken_1', 'collateralToken_6', 'collateralToken_7'])
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['collateralToken_7', 'msg.sender', 'amountOut_1'] 
Emit EarlyExit(msg.sender,amount_1,amountOut_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: auction, Num: 2
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 2
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralToken, Num: 2
Globalname: collateralToken
global...

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid
Name: malt, Num: 2
Globalname: malt
global...

Name: malt Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
Phid
Name: auctionEarlyExits, Num: 1
Globalname: auctionEarlyExits
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auction_2(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_2(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_2(ERC20) := ϕ(['collateralToken_1', 'collateralToken_0', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
malt_2(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_0'])
Phi
[i]Type for malt

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_1(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.notSameBlock()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._notSameBlock()()
Propogating parameters and globals to SSA variables...
End popogation
Name: lastBlock, Num: 1
Globalname: lastBlock
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lastBlock_1(mapping(address => uint256)) := ϕ(['lastBlock_3', 'lastBlock_0'])
Phi
[i]Type for lastBlock

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lastBlock, Num: 2
Globalname: lastBlock
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_436(address) = INTERNAL_CALL, Context._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
[i]Type for TMP_436

Name: TMP_436 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_378(uint256) -> lastBlock_2[TMP_436]
INDEX
[i]Type for REF_378

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_437(bool) = block.number > REF_378
init
[i]Type for TMP_437

Name: TMP_437 Function: _notSameBlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_438(None) = SOLIDITY_CALL require(bool,string)(TMP_437,Can't carry out actions in the same block)
[i]Type for TMP_438

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: lastBlock, Num: 3
Globalname: lastBlock
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_439(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_439

Name: TMP_439 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_379(uint256) -> lastBlock_2[TMP_439]
INDEX
[i]Type for REF_379

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
lastBlock_3(mapping(address => uint256)) := ϕ(['lastBlock_2'])
Phi
[i]Type for lastBlock

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_379 (->lastBlock_3) := block.number(uint256)
asgn
init
[i]Type for REF_379

Name: REF_379 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
lastBlock_1(mapping(address => uint256)) := ϕ(['lastBlock_3', 'lastBlock_0'])
Phi
[i]Type for lastBlock

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_436(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_436

Name: TMP_436 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_378(uint256) -> lastBlock_2[TMP_436]
INDEX
[i]Type for REF_378

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_437(bool) = block.number > REF_378
init
[i]Type for TMP_437

Name: TMP_437 Function: _notSameBlock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_438(None) = SOLIDITY_CALL require(bool,string)(TMP_437,Can't carry out actions in the same block)
[i]Type for TMP_438

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_439(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_439

Name: TMP_439 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_379(uint256) -> lastBlock_2[TMP_439]
INDEX
[i]Type for REF_379

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
lastBlock_3(mapping(address => uint256)) := ϕ(['lastBlock_2'])
Phi
[i]Type for lastBlock

Name: lastBlock Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_379 (->lastBlock_3) := block.number(uint256)
asgn
init
[i]Type for REF_379

Name: REF_379 Function: _notSameBlock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._notSameBlock()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: amount, Num: 1
Globalname: amount
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation
Name: auction, Num: 4
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 4
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
TMP_472(uint256) = INTERNAL_CALL, AuctionEscapeHatch._calculateMaltRequiredForExit(uint256,uint256)(_auctionId_1,amount_1)
init
end
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _auctionId Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _auctionId, Num: 1
Globalname: _auctionId

Name: _auctionId_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: auction, Num: 11
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 11
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 5
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 5
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_auctionId_1(uint256) := ϕ(['_auctionId_1'])
Phi
[i]Type for _auctionId

Name: _auctionId Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_11(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_11(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_5(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_5(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: active, Num: 1
Globalname: active
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
End popogation
Name: auction, Num: 12
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 12
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 6
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 6
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_9(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_11(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
High Call: getAuctionCore
Running querryfc
Written func info: Auction, getAuctionCore
Handling balance function!
-995
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3430>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e35e0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3790>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3940>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3af0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3ca0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3e50>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea040>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea1f0>] ... )
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_12(IAuction) := ϕ(['auction_1', 'auction_11', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_12(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_11', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_6(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_5', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_6(uint256) := ϕ(['cooloffPeriod_5', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegPrice_1(uint256)= UNPACK TUPLE_9 index: 5 
Finding type for pegPrice(uint256 ... )
[i]Type for pegPrice

Name: pegPrice Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEndTime_1(uint256)= UNPACK TUPLE_9 index: 7 
Finding type for auctionEndTime(uint256 ... )
[i]Type for auctionEndTime

Name: auctionEndTime Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
active_1(bool)= UNPACK TUPLE_9 index: 8 
Finding type for active(bool ... )
[i]Type for active

Name: active Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_508 = ! active_1 
[i]Type for TMP_508

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_509(None) = SOLIDITY_CALL require(bool,string)(TMP_508,Cannot exit early on an active auction)
[i]Type for TMP_509

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_510(bool) = block.timestamp > auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_510

Name: TMP_510 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_511(None) = SOLIDITY_CALL require(bool,string)(TMP_510,Auction not over)
[i]Type for TMP_511

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
End popogation
Name: auction, Num: 13
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 13
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 7
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 7
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_10(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_12(IAuction), function:getAuctionParticipationForAccount, arguments:['msg.sender', '_auctionId_1']  
High Call: getAuctionParticipationForAccount
Running querryfc
Written func info: Auction, getAuctionParticipationForAccount
Handling balance function!
-995
Finding type for hlc_1([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eaac0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eac70>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eae20>] ... )
[i]Type for TUPLE_10

Name: TUPLE_10 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_13(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_12', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_13(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_12', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_7(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_6', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_7(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_6', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userCommitment_1(uint256)= UNPACK TUPLE_10 index: 0 
Finding type for userCommitment(uint256 ... )
[i]Type for userCommitment

Name: userCommitment Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userRedeemed_1(uint256)= UNPACK TUPLE_10 index: 1 
Finding type for userRedeemed(uint256 ... )
[i]Type for userRedeemed

Name: userRedeemed Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userMaltPurchased_1(uint256)= UNPACK TUPLE_10 index: 2 
Finding type for userMaltPurchased(uint256 ... )
[i]Type for userMaltPurchased

Name: userMaltPurchased Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_512(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_512

Name: TMP_512 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_513(bool) = amount_1 > TMP_512
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_513

Name: TMP_513 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: amount, Num: 3
Globalname: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
Phi
init
end
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 2
Globalname: amount
End popogation
TMP_514(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_514

Name: TMP_514 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_2(uint256) := TMP_514(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_515(bool) = amount_3 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_515

Name: TMP_515 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_516(None) = SOLIDITY_CALL require(bool,string)(TMP_515,Nothing to claim)
[i]Type for TMP_516

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: currentPrice, Num: 1
Globalname: currentPrice
End popogation
Name: dexHandler, Num: 14
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 8
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 8
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_11(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_13(IDexHandler), function:maltMarketPrice, arguments:[]  
High Call: maltMarketPrice
Running querryfc
Written func info: DexHandler, maltMarketPrice
Handling balance function!
-994
Finding type for hlc_2([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb19cda90>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb1618c10>] ... )
[i]Type for TUPLE_11

Name: TUPLE_11 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_14(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_13', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_8(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_7', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_8(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_7', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentPrice_1(uint256)= UNPACK TUPLE_11 index: 0 
Finding type for currentPrice(uint256 ... )
[i]Type for currentPrice

Name: currentPrice Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation
TMP_517(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
testing mul...
init
end
init
end

Name: userMaltPurchased Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_517

Name: TMP_517 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_518(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_517', 'userCommitment_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_518

Name: TMP_518 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_518(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fullReturn, Num: 1
Globalname: fullReturn
End popogation
TMP_519(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
testing mul...
init
end
init
end

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentPrice Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_519

Name: TMP_519 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_520(uint256) = TMP_519 / pegPrice_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_520

Name: TMP_520 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fullReturn_1(uint256) := TMP_520(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for fullReturn

Name: fullReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 1
Globalname: progressionBps
End popogation
TMP_521(uint256) = block.timestamp - auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_521

Name: TMP_521 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_522(uint256) = TMP_521 * 10000
testing mul...
init
end
init
end

Name: TMP_521 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_522

Name: TMP_522 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_523(uint256) = TMP_522 / cooloffPeriod_8
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_523

Name: TMP_523 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
progressionBps_1(uint256) := TMP_523(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_524(bool) = progressionBps_1 > 10000
init
end
init
end
lnorm: 4 rnorm: 4
[i]Type for TMP_524

Name: TMP_524 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 2
Globalname: progressionBps
End popogation
progressionBps_2(uint256) := 10000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: progressionBps, Num: 3
Globalname: progressionBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
progressionBps_3(uint256) := ϕ(['progressionBps_1', 'progressionBps_2'])
Phi
init
end
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_525(bool) = fullReturn_1 > amount_3
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_525

Name: TMP_525 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxProfit, Num: 1
Globalname: maxProfit
End popogation
TMP_526(uint256) = fullReturn_1 - amount_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_526

Name: TMP_526 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_527(uint256) = maxEarlyExitBps_8 * progressionBps_3
testing mul...
init
end
init
end

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_527

Name: TMP_527 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_528(uint256) = TMP_527 / 10000
init
end
init
end
lnorm: 4 rnorm: 4
init
end
init
end
init
end
lnorm: 4 rnorm: 4
init
end
[i]Type for TMP_528

Name: TMP_528 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_529(uint256) = TMP_526 * TMP_528
testing mul...
init
end
init
end

Name: TMP_526 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_528 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_529

Name: TMP_529 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_530(uint256) = TMP_529 / 1000
init
end
init
end
lnorm: 0 rnorm: 3
init
end
init
end
init
end
lnorm: 0 rnorm: 3
init
end
[i]Type for TMP_530

Name: TMP_530 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxProfit_1(uint256) := TMP_530(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxProfit

Name: maxProfit Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: maltQuantity, Num: 3
Globalname: maltQuantity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
maltQuantity_3(uint256) := ϕ(['maltQuantity_1', 'maltQuantity_2'])
Phi
init
end
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: desiredReturn, Num: 1
Globalname: desiredReturn
End popogation
TMP_531(uint256) = amount_3 + maxProfit_1
init
end
init
end
lnorm: u rnorm: -3
init
end
[i]Type for TMP_531

Name: TMP_531 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
desiredReturn_1(uint256) := TMP_531(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for desiredReturn

Name: desiredReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maltQuantity, Num: 2
Globalname: maltQuantity
End popogation
TMP_532(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['desiredReturn_1', 'pegPrice_1'] 
testing mul...
init
end
init
end

Name: desiredReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef

Name: pegPrice Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: -3 rnorm: u
init
end
[i]Type for TMP_532

Name: TMP_532 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_533(uint256) = TMP_532 / currentPrice_1
init
end
init
end
lnorm: -3 rnorm: u
init
end
init
end
init
end
lnorm: -3 rnorm: u
init
end
[i]Type for TMP_533

Name: TMP_533 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_2(uint256) := TMP_533(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN maltQuantity_3
RETURN
init
end

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: _auctionId, Num: 1
Globalname: _auctionId

Name: _auctionId_1 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: amount, Num: 1
Globalname: amount

Name: amount_1 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_auctionId_1(uint256) := ϕ(['_auctionId_1'])
Phi
[i]Type for _auctionId

Name: _auctionId Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_11(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_11(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_5(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_5(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: active, Num: 1
Globalname: active
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
End popogation

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_9(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_11(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
High Call: getAuctionCore
Running querryfc
Written func info: Auction, getAuctionCore
Handling balance function!
-995
Finding type for hlc_3([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3430>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e35e0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3790>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3940>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3af0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3ca0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3e50>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea040>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea1f0>] ... )
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_12(IAuction) := ϕ(['auction_1', 'auction_11', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_12(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_11', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_6(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_5', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_6(uint256) := ϕ(['cooloffPeriod_5', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegPrice_1(uint256)= UNPACK TUPLE_9 index: 5 
Finding type for pegPrice(uint256 ... )
[i]Type for pegPrice

Name: pegPrice Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEndTime_1(uint256)= UNPACK TUPLE_9 index: 7 
Finding type for auctionEndTime(uint256 ... )
[i]Type for auctionEndTime

Name: auctionEndTime Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
active_1(bool)= UNPACK TUPLE_9 index: 8 
Finding type for active(bool ... )
[i]Type for active

Name: active Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: active, Num: 1
Globalname: active
End popogation
TMP_508 = ! active_1 
[i]Type for TMP_508

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_509(None) = SOLIDITY_CALL require(bool,string)(TMP_508,Cannot exit early on an active auction)
[i]Type for TMP_509

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
End popogation
TMP_510(bool) = block.timestamp > auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_510

Name: TMP_510 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_511(None) = SOLIDITY_CALL require(bool,string)(TMP_510,Auction not over)
[i]Type for TMP_511

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
End popogation

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_10(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_12(IAuction), function:getAuctionParticipationForAccount, arguments:['msg.sender', '_auctionId_1']  
High Call: getAuctionParticipationForAccount
Running querryfc
Written func info: Auction, getAuctionParticipationForAccount
Handling balance function!
-995
Finding type for hlc_4([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eaac0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eac70>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eae20>] ... )
[i]Type for TUPLE_10

Name: TUPLE_10 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_13(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_12', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_13(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_12', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_7(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_6', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_7(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_6', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userCommitment_1(uint256)= UNPACK TUPLE_10 index: 0 
Finding type for userCommitment(uint256 ... )
[i]Type for userCommitment

Name: userCommitment Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userRedeemed_1(uint256)= UNPACK TUPLE_10 index: 1 
Finding type for userRedeemed(uint256 ... )
[i]Type for userRedeemed

Name: userRedeemed Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userMaltPurchased_1(uint256)= UNPACK TUPLE_10 index: 2 
Finding type for userMaltPurchased(uint256 ... )
[i]Type for userMaltPurchased

Name: userMaltPurchased Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_512(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_512

Name: TMP_512 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_513(bool) = amount_1 > TMP_512
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_513

Name: TMP_513 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: amount, Num: 3
Globalname: amount

Name: amount Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
Phi
init
end
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: amount, Num: 2
Globalname: amount
End popogation
TMP_514(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_514

Name: TMP_514 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount_2(uint256) := TMP_514(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_515(bool) = amount_3 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_515

Name: TMP_515 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_516(None) = SOLIDITY_CALL require(bool,string)(TMP_515,Nothing to claim)
[i]Type for TMP_516

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: currentPrice, Num: 1
Globalname: currentPrice
End popogation

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_11(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_13(IDexHandler), function:maltMarketPrice, arguments:[]  
High Call: maltMarketPrice
Running querryfc
Written func info: DexHandler, maltMarketPrice
Handling balance function!
-994
Finding type for hlc_5([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb19cda90>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb1618c10>] ... )
[i]Type for TUPLE_11

Name: TUPLE_11 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_14(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_13', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_8(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_7', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_8(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_7', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentPrice_1(uint256)= UNPACK TUPLE_11 index: 0 
Finding type for currentPrice(uint256 ... )
[i]Type for currentPrice

Name: currentPrice Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation
TMP_517(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
testing mul...
init
end
init
end

Name: userMaltPurchased Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_517

Name: TMP_517 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_518(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_517', 'userCommitment_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_518

Name: TMP_518 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_518(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: currentPrice, Num: 1
Globalname: currentPrice
Name: fullReturn, Num: 1
Globalname: fullReturn
End popogation
TMP_519(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
testing mul...
init
end
init
end

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentPrice Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_519

Name: TMP_519 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_520(uint256) = TMP_519 / pegPrice_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_520

Name: TMP_520 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fullReturn_1(uint256) := TMP_520(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for fullReturn

Name: fullReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 1
Globalname: progressionBps
End popogation
TMP_521(uint256) = block.timestamp - auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_521

Name: TMP_521 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_522(uint256) = TMP_521 * 10000
testing mul...
init
end
init
end

Name: TMP_521 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_522

Name: TMP_522 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_523(uint256) = TMP_522 / cooloffPeriod_8
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_523

Name: TMP_523 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
progressionBps_1(uint256) := TMP_523(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_524(bool) = progressionBps_1 > 10000
init
end
init
end
lnorm: 4 rnorm: 4
[i]Type for TMP_524

Name: TMP_524 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 2
Globalname: progressionBps
End popogation
progressionBps_2(uint256) := 10000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: progressionBps, Num: 3
Globalname: progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
progressionBps_3(uint256) := ϕ(['progressionBps_1', 'progressionBps_2'])
Phi
init
end
[i]Type for progressionBps

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_525(bool) = fullReturn_1 > amount_3
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_525

Name: TMP_525 Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxProfit, Num: 1
Globalname: maxProfit
End popogation
TMP_526(uint256) = fullReturn_1 - amount_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_526

Name: TMP_526 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_527(uint256) = maxEarlyExitBps_8 * progressionBps_3
testing mul...
init
end
init
end

Name: maxEarlyExitBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: progressionBps Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_527

Name: TMP_527 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_528(uint256) = TMP_527 / 10000
init
end
init
end
lnorm: 4 rnorm: 4
init
end
init
end
init
end
lnorm: 4 rnorm: 4
init
end
[i]Type for TMP_528

Name: TMP_528 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_529(uint256) = TMP_526 * TMP_528
testing mul...
init
end
init
end

Name: TMP_526 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_528 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_529

Name: TMP_529 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_530(uint256) = TMP_529 / 1000
init
end
init
end
lnorm: 0 rnorm: 3
init
end
init
end
init
end
lnorm: 0 rnorm: 3
init
end
[i]Type for TMP_530

Name: TMP_530 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxProfit_1(uint256) := TMP_530(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxProfit

Name: maxProfit Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: maltQuantity, Num: 3
Globalname: maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
maltQuantity_3(uint256) := ϕ(['maltQuantity_1', 'maltQuantity_2'])
Phi
init
end
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: desiredReturn, Num: 1
Globalname: desiredReturn
End popogation
TMP_531(uint256) = amount_3 + maxProfit_1
init
end
init
end
lnorm: u rnorm: -3
init
end
[i]Type for TMP_531

Name: TMP_531 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
desiredReturn_1(uint256) := TMP_531(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for desiredReturn

Name: desiredReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: currentPrice, Num: 1
Globalname: currentPrice
Name: maltQuantity, Num: 2
Globalname: maltQuantity
End popogation
TMP_532(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['desiredReturn_1', 'pegPrice_1'] 
testing mul...
init
end
init
end

Name: desiredReturn Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef

Name: pegPrice Function: _calculateMaltRequiredForExit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: -3 rnorm: u
init
end
[i]Type for TMP_532

Name: TMP_532 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_533(uint256) = TMP_532 / currentPrice_1
init
end
init
end
lnorm: -3 rnorm: u
init
end
init
end
init
end
lnorm: -3 rnorm: u
[i]Type for TMP_533

Name: TMP_533 Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_2(uint256) := TMP_533(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN maltQuantity_3
RETURN
init
end

Name: maltQuantity Function: _calculateMaltRequiredForExit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_472

Name: TMP_472 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_13'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_4(IDexHandler) := ϕ(['dexHandler_14'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_472(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: malt, Num: 4
Globalname: malt
global...

Name: malt Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
End popogation
Name: auction, Num: 5
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 5
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralToken, Num: 5
Globalname: collateralToken
global...

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid
Name: malt, Num: 5
Globalname: malt
global...

Name: malt Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
Phid
Name: auctionEarlyExits, Num: 4
Globalname: auctionEarlyExits
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_473 = CONVERT dexHandler_4 to address
Converting dexHandler_4

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_473

Name: TMP_473 Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:malt_4(IBurnMintableERC20), function:mint, arguments:['TMP_473', 'maltQuantity_1']  
High Call: mint
auction_5(IAuction) := ϕ(['auction_1', 'auction_4', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_5(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_4', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_5(ERC20) := ϕ(['collateralToken_1', 'collateralToken_4', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
malt_5(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_4'])
Phi
[i]Type for malt

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_4(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_3', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountOut, Num: 1
Globalname: amountOut
End popogation
Name: auction, Num: 6
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 6
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralToken, Num: 6
Globalname: collateralToken
global...

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid
Name: auctionEarlyExits, Num: 5
Globalname: auctionEarlyExits
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_475(uint256) = HIGH_LEVEL_CALL, dest:dexHandler_5(IDexHandler), function:sellMalt, arguments:[]  
High Call: sellMalt
Running querryfc
Written func info: DexHandler, sellMalt
Handling balance function!
-994
Finding type for hlc_6(uint256 ... )
[i]Type for TMP_475

Name: TMP_475 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_6(IAuction) := ϕ(['auction_1', 'auction_5', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_6(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_5'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_6(ERC20) := ϕ(['collateralToken_5', 'collateralToken_1', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_5(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_4', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_475(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: minOut, Num: 1
Globalname: minOut
End popogation
TMP_476(bool) = amountOut_1 > minOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_476

Name: TMP_476 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_477(None) = SOLIDITY_CALL require(bool,string)(TMP_476,EarlyExit: Insufficient output)
[i]Type for TMP_477

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: auctionExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
REF_408(AuctionExits) -> auctionEarlyExits_5[_auctionId_1]
INDEX
[i]Type for REF_408

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_408(AuctionExits)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
Name: auctionExits, Num: 2 (-> ['auctionEarlyExits'])
Globalname: auctionExits
Name: auctionEarlyExits, Num: 6
Globalname: auctionEarlyExits
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Name: auctionExits, Num: 2 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_409(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_exitedEarly
OUT KEY: exitEarly_auctionExits_exitedEarly
No field found
[i]Type for REF_409

Name: auctionExits.exitedEarly Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_410(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_exitedEarly
OUT KEY: exitEarly_auctionExits_exitedEarly
No field found
[i]Type for REF_410

Name: auctionExits.exitedEarly Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
TMP_478(uint256) = REF_410 + amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_478

Name: TMP_478 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_2 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_1 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly
Finance Type: undef
XXXX
REF_409 (->auctionExits_2 (-> ['auctionEarlyExits'])) := TMP_478(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_409

Name: REF_409 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_6(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionEarlyExits, Num: 7
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: auctionExits, Num: 3 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 3 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_411(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_earlyExitReturn
OUT KEY: exitEarly_auctionExits_earlyExitReturn
No field found
[i]Type for REF_411

Name: auctionExits.earlyExitReturn Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_412(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_earlyExitReturn
OUT KEY: exitEarly_auctionExits_earlyExitReturn
No field found
[i]Type for REF_412

Name: auctionExits.earlyExitReturn Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
TMP_479(uint256) = REF_412 + amountOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_479

Name: TMP_479 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_3 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn
Finance Type: undef
XXXX
REF_411 (->auctionExits_3 (-> ['auctionEarlyExits'])) := TMP_479(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_411

Name: REF_411 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_7(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 4 (-> ['auctionEarlyExits'])
Globalname: auctionExits
Name: auctionEarlyExits, Num: 8
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Name: auctionExits, Num: 4 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_413(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_maltUsed
OUT KEY: exitEarly_auctionExits_maltUsed
No field found
[i]Type for REF_413

Name: auctionExits.maltUsed Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
REF_414(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_maltUsed
OUT KEY: exitEarly_auctionExits_maltUsed
No field found
[i]Type for REF_414

Name: auctionExits.maltUsed Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
TMP_480(uint256) = REF_414 + maltQuantity_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_480

Name: TMP_480 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_4 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed
Finance Type: undef
XXXX
REF_413 (->auctionExits_4 (-> ['auctionEarlyExits'])) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_413

Name: REF_413 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_8(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
Name: auctionEarlyExits, Num: 9
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: auctionExits, Num: 5 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 5 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_415(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_accountExits
OUT KEY: exitEarly_auctionExits_accountExits
No field found
[i]Type for REF_415

Name: auctionExits.accountExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_4 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_416(EarlyExitData) -> REF_415[msg.sender]
INDEX
[i]Type for REF_416

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_417(uint256) -> REF_416.exitedEarly
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_exitedEarly
OUT KEY: exitEarly_auctionExits.accountExits_exitedEarly
No field found
[i]Type for REF_417

Name: auctionExits.accountExits.exitedEarly Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_416, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_418(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits_accountExits
OUT KEY: exitEarly_auctionExits_accountExits
No field found
[i]Type for REF_418

Name: auctionExits.accountExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_4 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_419(EarlyExitData) -> REF_418[msg.sender]
INDEX
[i]Type for REF_419

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_420(uint256) -> REF_419.exitedEarly
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_exitedEarly
OUT KEY: exitEarly_auctionExits.accountExits_exitedEarly
No field found
[i]Type for REF_420

Name: auctionExits.accountExits.exitedEarly Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_419, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
TMP_481(uint256) = REF_420 + amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_481

Name: TMP_481 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_5 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
XXXX
REF_417 (->auctionExits_5 (-> ['auctionEarlyExits'])) := TMP_481(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_417

Name: REF_417 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_416, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_9(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 6 (-> ['auctionEarlyExits'])
Globalname: auctionExits
Name: auctionEarlyExits, Num: 10
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Name: auctionExits, Num: 6 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_421(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
[i]Type for REF_421

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_5 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_422(EarlyExitData) -> REF_421[msg.sender]
INDEX
[i]Type for REF_422

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_423(uint256) -> REF_422.earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_earlyExitReturn
OUT KEY: exitEarly_auctionExits.accountExits_earlyExitReturn
No field found
[i]Type for REF_423

Name: auctionExits.accountExits.earlyExitReturn Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_422, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_424(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
[i]Type for REF_424

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_5 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_425(EarlyExitData) -> REF_424[msg.sender]
INDEX
[i]Type for REF_425

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_426(uint256) -> REF_425.earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_earlyExitReturn
OUT KEY: exitEarly_auctionExits.accountExits_earlyExitReturn
No field found
[i]Type for REF_426

Name: auctionExits.accountExits.earlyExitReturn Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_425, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
TMP_482(uint256) = REF_426 + amountOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_482

Name: TMP_482 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_6 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
XXXX
REF_423 (->auctionExits_6 (-> ['auctionEarlyExits'])) := TMP_482(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_423

Name: REF_423 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_422, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_10(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 7 (-> ['auctionEarlyExits'])
Globalname: auctionExits
Name: auctionEarlyExits, Num: 11
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Name: auctionExits, Num: 7 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_427(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
[i]Type for REF_427

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_6 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_428(EarlyExitData) -> REF_427[msg.sender]
INDEX
[i]Type for REF_428

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_429(uint256) -> REF_428.maltUsed
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_maltUsed
OUT KEY: exitEarly_auctionExits.accountExits_maltUsed
No field found
[i]Type for REF_429

Name: auctionExits.accountExits.maltUsed Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_428, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
REF_430(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
[i]Type for REF_430

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_6 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_431(EarlyExitData) -> REF_430[msg.sender]
INDEX
[i]Type for REF_431

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_432(uint256) -> REF_431.maltUsed
MEMBER
init
end
init
end
OUT KEY: exitEarly_auctionExits.accountExits_maltUsed
OUT KEY: exitEarly_auctionExits.accountExits_maltUsed
No field found
[i]Type for REF_432

Name: auctionExits.accountExits.maltUsed Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_431, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
TMP_483(uint256) = REF_432 + maltQuantity_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_483

Name: TMP_483 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_7 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
XXXX
REF_429 (->auctionExits_7 (-> ['auctionEarlyExits'])) := TMP_483(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_429

Name: REF_429 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_428, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_11(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_7 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: amount, Num: 1
Globalname: amount
End popogation
Name: auction, Num: 7
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: collateralToken, Num: 7
Globalname: collateralToken
global...

Name: collateralToken Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:auction_6(IAuction), function:amendAccountParticipation, arguments:['msg.sender', '_auctionId_1', 'amount_1', 'maltQuantity_1']  
High Call: amendAccountParticipation
auction_7(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_6', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_7(ERC20) := ϕ(['collateralToken_1', 'collateralToken_6', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['collateralToken_7', 'msg.sender', 'amountOut_1'] 
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation


auction_2(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_2(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
collateralToken_2(ERC20) := ϕ(['collateralToken_1', 'collateralToken_0', 'collateralToken_7'])
malt_2(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_0'])
auctionEarlyExits_1(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
MODIFIER_CALL, Permissions.notSameBlock()()
TMP_472(uint256) = INTERNAL_CALL, AuctionEscapeHatch._calculateMaltRequiredForExit(uint256,uint256)(_auctionId_1,amount_1)
auction_4(IAuction) := ϕ(['auction_13'])
dexHandler_4(IDexHandler) := ϕ(['dexHandler_14'])
maltQuantity_1(uint256) := TMP_472(uint256)
TMP_473 = CONVERT dexHandler_4 to address
HIGH_LEVEL_CALL, dest:malt_4(IBurnMintableERC20), function:mint, arguments:['TMP_473', 'maltQuantity_1']  
auction_5(IAuction) := ϕ(['auction_1', 'auction_4', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_5(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_4', 'dexHandler_15'])
collateralToken_5(ERC20) := ϕ(['collateralToken_1', 'collateralToken_4', 'collateralToken_7'])
malt_5(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_4'])
auctionEarlyExits_4(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_3', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
TMP_475(uint256) = HIGH_LEVEL_CALL, dest:dexHandler_5(IDexHandler), function:sellMalt, arguments:[]  
auction_6(IAuction) := ϕ(['auction_1', 'auction_5', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_6(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_5'])
collateralToken_6(ERC20) := ϕ(['collateralToken_5', 'collateralToken_1', 'collateralToken_7'])
auctionEarlyExits_5(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_4', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
amountOut_1(uint256) := TMP_475(uint256)
TMP_476(bool) = amountOut_1 > minOut_1
TMP_477(None) = SOLIDITY_CALL require(bool,string)(TMP_476,EarlyExit: Insufficient output)
REF_408(AuctionExits) -> auctionEarlyExits_5[_auctionId_1]
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_408(AuctionExits)
REF_409(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_410(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
TMP_478(uint256) = REF_410 + amount_1
auctionExits_2 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_1 (-> ['auctionEarlyExits'])"])
REF_409 (->auctionExits_2 (-> ['auctionEarlyExits'])) := TMP_478(uint256)
auctionEarlyExits_6(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
REF_411(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
REF_412(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
TMP_479(uint256) = REF_412 + amountOut_1
auctionExits_3 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
REF_411 (->auctionExits_3 (-> ['auctionEarlyExits'])) := TMP_479(uint256)
auctionEarlyExits_7(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
REF_413(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
REF_414(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
TMP_480(uint256) = REF_414 + maltQuantity_1
auctionExits_4 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
REF_413 (->auctionExits_4 (-> ['auctionEarlyExits'])) := TMP_480(uint256)
auctionEarlyExits_8(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
REF_415(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
REF_416(EarlyExitData) -> REF_415[msg.sender]
REF_417(uint256) -> REF_416.exitedEarly
REF_418(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
REF_419(EarlyExitData) -> REF_418[msg.sender]
REF_420(uint256) -> REF_419.exitedEarly
TMP_481(uint256) = REF_420 + amount_1
auctionExits_5 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
REF_417 (->auctionExits_5 (-> ['auctionEarlyExits'])) := TMP_481(uint256)
auctionEarlyExits_9(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
REF_421(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
REF_422(EarlyExitData) -> REF_421[msg.sender]
REF_423(uint256) -> REF_422.earlyExitReturn
REF_424(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
REF_425(EarlyExitData) -> REF_424[msg.sender]
REF_426(uint256) -> REF_425.earlyExitReturn
TMP_482(uint256) = REF_426 + amountOut_1
auctionExits_6 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
REF_423 (->auctionExits_6 (-> ['auctionEarlyExits'])) := TMP_482(uint256)
auctionEarlyExits_10(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
REF_427(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
REF_428(EarlyExitData) -> REF_427[msg.sender]
REF_429(uint256) -> REF_428.maltUsed
REF_430(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
REF_431(EarlyExitData) -> REF_430[msg.sender]
REF_432(uint256) -> REF_431.maltUsed
TMP_483(uint256) = REF_432 + maltQuantity_1
auctionExits_7 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
REF_429 (->auctionExits_7 (-> ['auctionEarlyExits'])) := TMP_483(uint256)
auctionEarlyExits_11(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_7 (-> ['auctionEarlyExits'])"])
HIGH_LEVEL_CALL, dest:auction_6(IAuction), function:amendAccountParticipation, arguments:['msg.sender', '_auctionId_1', 'amount_1', 'maltQuantity_1']  
auction_7(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_6', 'auction_10'])
collateralToken_7(ERC20) := ϕ(['collateralToken_1', 'collateralToken_6', 'collateralToken_7'])
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['collateralToken_7', 'msg.sender', 'amountOut_1'] 
Emit EarlyExit(msg.sender,amount_1,amountOut_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auction_2(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_2(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_2(ERC20) := ϕ(['collateralToken_1', 'collateralToken_0', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
malt_2(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_0'])
Phi
[i]Type for malt

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_1(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.notSameBlock()()
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: amount, Num: 1
Globalname: amount
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
TMP_472(uint256) = INTERNAL_CALL, AuctionEscapeHatch._calculateMaltRequiredForExit(uint256,uint256)(_auctionId_1,amount_1)
init
end
init
end
init
end
[i]Type for TMP_472

Name: TMP_472 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_13'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_4(IDexHandler) := ϕ(['dexHandler_14'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_472(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_473 = CONVERT dexHandler_4 to address
Converting dexHandler_4

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_473

Name: TMP_473 Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:malt_4(IBurnMintableERC20), function:mint, arguments:['TMP_473', 'maltQuantity_1']  
High Call: mint
auction_5(IAuction) := ϕ(['auction_1', 'auction_4', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_5(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_4', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_5(ERC20) := ϕ(['collateralToken_1', 'collateralToken_4', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
malt_5(IBurnMintableERC20) := ϕ(['malt_1', 'malt_5', 'malt_4'])
Phi
[i]Type for malt

Name: malt Function: exitEarly
Num: -1
Den: -1
Address: -996
Norm: u
LF: BurnMintableERC20
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_4(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_3', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountOut, Num: 1
Globalname: amountOut
End popogation

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TMP_475(uint256) = HIGH_LEVEL_CALL, dest:dexHandler_5(IDexHandler), function:sellMalt, arguments:[]  
High Call: sellMalt
Running querryfc
Written func info: DexHandler, sellMalt
Handling balance function!
-994
Finding type for hlc_7(uint256 ... )
[i]Type for TMP_475

Name: TMP_475 Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_6(IAuction) := ϕ(['auction_1', 'auction_5', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_6(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_5'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: exitEarly
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_6(ERC20) := ϕ(['collateralToken_5', 'collateralToken_1', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEarlyExits_5(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_4', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_475(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amountOut, Num: 1
Globalname: amountOut
End popogation
TMP_476(bool) = amountOut_1 > minOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_476

Name: TMP_476 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_477(None) = SOLIDITY_CALL require(bool,string)(TMP_476,EarlyExit: Insufficient output)
[i]Type for TMP_477

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: auctionExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
REF_408(AuctionExits) -> auctionEarlyExits_5[_auctionId_1]
INDEX
[i]Type for REF_408

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_408(AuctionExits)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
Name: auctionExits, Num: 2 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 2 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_409(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
init
end
[i]Type for REF_409

Name: auctionExits.exitedEarly Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_410(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
init
end
[i]Type for REF_410

Name: auctionExits.exitedEarly Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
TMP_478(uint256) = REF_410 + amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_478

Name: TMP_478 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_2 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_1 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_409 (->auctionExits_2 (-> ['auctionEarlyExits'])) := TMP_478(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_409

Name: REF_409 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_6(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 3 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 3 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_411(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
init
end
[i]Type for REF_411

Name: auctionExits.earlyExitReturn Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_412(uint256) -> auctionExits_2 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
init
end
[i]Type for REF_412

Name: auctionExits.earlyExitReturn Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
TMP_479(uint256) = REF_412 + amountOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_479

Name: TMP_479 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_3 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_2 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: maltUsed, earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_411 (->auctionExits_3 (-> ['auctionEarlyExits'])) := TMP_479(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_411

Name: REF_411 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_2 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_7(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 4 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 4 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_413(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
init
end
[i]Type for REF_413

Name: auctionExits.maltUsed Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
REF_414(uint256) -> auctionExits_3 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
init
end
[i]Type for REF_414

Name: auctionExits.maltUsed Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
TMP_480(uint256) = REF_414 + maltQuantity_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_480

Name: TMP_480 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_4 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_3 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits, maltUsed, earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_413 (->auctionExits_4 (-> ['auctionEarlyExits'])) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_413

Name: REF_413 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_3 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_8(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
Name: auctionExits, Num: 5 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 5 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_415(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_415

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_4 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_416(EarlyExitData) -> REF_415[msg.sender]
INDEX
[i]Type for REF_416

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_417(uint256) -> REF_416.exitedEarly
MEMBER
init
end
init
end
[i]Type for REF_417

Name: auctionExits.accountExits.exitedEarly Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_416, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_418(mapping(address => EarlyExitData)) -> auctionExits_4 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_418

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_4 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_419(EarlyExitData) -> REF_418[msg.sender]
INDEX
[i]Type for REF_419

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_420(uint256) -> REF_419.exitedEarly
MEMBER
init
end
init
end
[i]Type for REF_420

Name: auctionExits.accountExits.exitedEarly Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_419, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
TMP_481(uint256) = REF_420 + amount_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_481

Name: TMP_481 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_5 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_4 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits, maltUsed, earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_417 (->auctionExits_5 (-> ['auctionEarlyExits'])) := TMP_481(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_417

Name: REF_417 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_416, Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_9(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 6 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 6 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_421(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_421

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_5 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_422(EarlyExitData) -> REF_421[msg.sender]
INDEX
[i]Type for REF_422

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_423(uint256) -> REF_422.earlyExitReturn
MEMBER
init
end
init
end
[i]Type for REF_423

Name: auctionExits.accountExits.earlyExitReturn Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_422, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_424(mapping(address => EarlyExitData)) -> auctionExits_5 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_424

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_5 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_425(EarlyExitData) -> REF_424[msg.sender]
INDEX
[i]Type for REF_425

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_426(uint256) -> REF_425.earlyExitReturn
MEMBER
init
end
init
end
[i]Type for REF_426

Name: auctionExits.accountExits.earlyExitReturn Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_425, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
TMP_482(uint256) = REF_426 + amountOut_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_482

Name: TMP_482 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_6 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_5 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits, maltUsed, earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_423 (->auctionExits_6 (-> ['auctionEarlyExits'])) := TMP_482(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_423

Name: REF_423 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_422, Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_10(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionExits, Num: 7 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
Name: auctionExits, Num: 7 (-> ['auctionEarlyExits'])
Globalname: auctionExits

Name: auctionExits Function: exitEarly
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed, accountExits
Finance Type: undef
Phid

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_427(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_427

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_6 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_428(EarlyExitData) -> REF_427[msg.sender]
INDEX
[i]Type for REF_428

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_429(uint256) -> REF_428.maltUsed
MEMBER
init
end
init
end
[i]Type for REF_429

Name: auctionExits.accountExits.maltUsed Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_428, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
REF_430(mapping(address => EarlyExitData)) -> auctionExits_6 (-> ['auctionEarlyExits']).accountExits
MEMBER
init
end
init
end
init
end
[i]Type for REF_430

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_6 (-> ['auctionEarlyExits']), Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_431(EarlyExitData) -> REF_430[msg.sender]
INDEX
[i]Type for REF_431

Name: auctionExits.accountExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_432(uint256) -> REF_431.maltUsed
MEMBER
init
end
init
end
[i]Type for REF_432

Name: auctionExits.accountExits.maltUsed Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_431, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
TMP_483(uint256) = REF_432 + maltQuantity_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_483

Name: TMP_483 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionExits_7 (-> ['auctionEarlyExits'])(AuctionExits) := ϕ(["auctionExits_6 (-> ['auctionEarlyExits'])"])
Phi
init
end
[i]Type for auctionExits

Name: auctionExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits, maltUsed, earlyExitReturn, exitedEarly
Finance Type: undef
XXXX
REF_429 (->auctionExits_7 (-> ['auctionEarlyExits'])) := TMP_483(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_429

Name: REF_429 Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_428, Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
auctionEarlyExits_11(mapping(uint256 => AuctionExits)) := ϕ(["auctionExits_7 (-> ['auctionEarlyExits'])"])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: amount, Num: 1
Globalname: amount
End popogation

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
Phid
HIGH_LEVEL_CALL, dest:auction_6(IAuction), function:amendAccountParticipation, arguments:['msg.sender', '_auctionId_1', 'amount_1', 'maltQuantity_1']  
High Call: amendAccountParticipation
auction_7(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_6', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: exitEarly
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
collateralToken_7(ERC20) := ϕ(['collateralToken_1', 'collateralToken_6', 'collateralToken_7'])
Phi
[i]Type for collateralToken

Name: collateralToken Function: exitEarly
Num: -1
Den: -1
Address: -997
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['collateralToken_7', 'msg.sender', 'amountOut_1'] 
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



earlyExitReturn
Finding type for account(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for _auctionId(uint256 ... )
Finding type for amount(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


auction_8(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_7(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
maxEarlyExitBps_1(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_1(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
TUPLE_6(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_8(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
auction_9(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10', 'auction_8'])
dexHandler_8(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_7'])
maxEarlyExitBps_2(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_1', 'maxEarlyExitBps_8'])
cooloffPeriod_2(uint256) := ϕ(['cooloffPeriod_1', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
pegPrice_1(uint256)= UNPACK TUPLE_6 index: 5 
auctionEndTime_1(uint256)= UNPACK TUPLE_6 index: 7 
active_1(bool)= UNPACK TUPLE_6 index: 8 
TMP_488(bool) = block.timestamp < auctionEndTime_1
TMP_489(bool) = active_1 || TMP_488
CONDITION TMP_489
RETURN 0
TUPLE_7(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_9(IAuction), function:getAuctionParticipationForAccount, arguments:['account_1', '_auctionId_1']  
auction_10(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_9(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
maxEarlyExitBps_3(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_3(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
userCommitment_1(uint256)= UNPACK TUPLE_7 index: 0 
userRedeemed_1(uint256)= UNPACK TUPLE_7 index: 1 
userMaltPurchased_1(uint256)= UNPACK TUPLE_7 index: 2 
TMP_490(uint256) = userCommitment_1 - userRedeemed_1
userOutstanding_1(uint256) := TMP_490(uint256)
TMP_491(bool) = amount_1 > userOutstanding_1
CONDITION TMP_491
amount_2(uint256) := userOutstanding_1(uint256)
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
TMP_492(bool) = amount_3 == 0
CONDITION TMP_492
RETURN 0
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_9(IDexHandler), function:maltMarketPrice, arguments:[]  
dexHandler_10(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
maxEarlyExitBps_4(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_4(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
currentPrice_1(uint256)= UNPACK TUPLE_8 index: 0 
TMP_493(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
TMP_494(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_493', 'userCommitment_1'] 
maltQuantity_1(uint256) := TMP_494(uint256)
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
TMP_496(uint256) = TMP_495 / pegPrice_1
fullReturn_1(uint256) := TMP_496(uint256)
TMP_497(uint256) = block.timestamp - auctionEndTime_1
TMP_498(uint256) = TMP_497 * 10000
TMP_499(uint256) = TMP_498 / cooloffPeriod_4
progressionBps_1(uint256) := TMP_499(uint256)
TMP_500(bool) = progressionBps_1 > 10000
CONDITION TMP_500
progressionBps_3(uint256) := ϕ(['progressionBps_2', 'progressionBps_1'])
TMP_501(bool) = fullReturn_1 > amount_3
CONDITION TMP_501
progressionBps_2(uint256) := 10000(uint256)
TMP_502(uint256) = fullReturn_1 - amount_3
TMP_503(uint256) = maxEarlyExitBps_4 * progressionBps_3
TMP_504(uint256) = TMP_503 / 10000
TMP_505(uint256) = TMP_502 * TMP_504
TMP_506(uint256) = TMP_505 / 1000
maxProfit_1(uint256) := TMP_506(uint256)
RETURN fullReturn_1
TMP_507(uint256) = amount_3 + maxProfit_1
RETURN TMP_507


Propogating parameters and globals to SSA variables...
End popogation
Name: auction, Num: 8
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 7
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 1
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 1
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auction_8(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_7(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_1(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_1(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
Name: active, Num: 1
Globalname: active
End popogation
Name: auction, Num: 9
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 8
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 2
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 2
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_8(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
High Call: getAuctionCore
Running querryfc
Written func info: Auction, getAuctionCore
Handling balance function!
-995
Finding type for hlc_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3430>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e35e0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3790>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3940>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3af0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3ca0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3e50>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea040>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea1f0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_9(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10', 'auction_8'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_8(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_7'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_2(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_1', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_2(uint256) := ϕ(['cooloffPeriod_1', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegPrice_1(uint256)= UNPACK TUPLE_6 index: 5 
Finding type for pegPrice(uint256 ... )
[i]Type for pegPrice

Name: pegPrice Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEndTime_1(uint256)= UNPACK TUPLE_6 index: 7 
Finding type for auctionEndTime(uint256 ... )
[i]Type for auctionEndTime

Name: auctionEndTime Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
active_1(bool)= UNPACK TUPLE_6 index: 8 
Finding type for active(bool ... )
[i]Type for active

Name: active Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_488(bool) = block.timestamp < auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_488

Name: TMP_488 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_489(bool) = active_1 || TMP_488
[i]Type for TMP_489

Name: TMP_489 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
End popogation
Name: auction, Num: 10
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
Name: dexHandler, Num: 9
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 3
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 3
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_7(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_9(IAuction), function:getAuctionParticipationForAccount, arguments:['account_1', '_auctionId_1']  
High Call: getAuctionParticipationForAccount
Running querryfc
Written func info: Auction, getAuctionParticipationForAccount
Handling balance function!
-995
Finding type for hlc_1([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eaac0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eac70>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eae20>] ... )
[i]Type for TUPLE_7

Name: TUPLE_7 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_10(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_9(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_3(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_3(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userCommitment_1(uint256)= UNPACK TUPLE_7 index: 0 
Finding type for userCommitment(uint256 ... )
[i]Type for userCommitment

Name: userCommitment Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userRedeemed_1(uint256)= UNPACK TUPLE_7 index: 1 
Finding type for userRedeemed(uint256 ... )
[i]Type for userRedeemed

Name: userRedeemed Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userMaltPurchased_1(uint256)= UNPACK TUPLE_7 index: 2 
Finding type for userMaltPurchased(uint256 ... )
[i]Type for userMaltPurchased

Name: userMaltPurchased Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userOutstanding, Num: 1
Globalname: userOutstanding
End popogation
TMP_490(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userOutstanding_1(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for userOutstanding

Name: userOutstanding Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
TMP_491(bool) = amount_1 > userOutstanding_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_491

Name: TMP_491 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 2
Globalname: amount
End popogation
amount_2(uint256) := userOutstanding_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: amount, Num: 3
Globalname: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
Phi
init
end
[i]Type for amount

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_492(bool) = amount_3 == 0
[i]Type for TMP_492

Name: TMP_492 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: currentPrice, Num: 1
Globalname: currentPrice
End popogation
Name: dexHandler, Num: 10
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid
Name: maxEarlyExitBps, Num: 4
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: cooloffPeriod, Num: 4
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_9(IDexHandler), function:maltMarketPrice, arguments:[]  
High Call: maltMarketPrice
Running querryfc
Written func info: DexHandler, maltMarketPrice
Handling balance function!
-994
Finding type for hlc_2([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb19cda90>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb1618c10>] ... )
[i]Type for TUPLE_8

Name: TUPLE_8 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_10(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_4(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_4(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentPrice_1(uint256)= UNPACK TUPLE_8 index: 0 
Finding type for currentPrice(uint256 ... )
[i]Type for currentPrice

Name: currentPrice Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation
TMP_493(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
testing mul...
init
end
init
end

Name: userMaltPurchased Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_494(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_493', 'userCommitment_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_494

Name: TMP_494 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_494(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: fullReturn, Num: 1
Globalname: fullReturn
End popogation
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
testing mul...
init
end
init
end

Name: maltQuantity Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentPrice Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_495

Name: TMP_495 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_496(uint256) = TMP_495 / pegPrice_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_496

Name: TMP_496 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fullReturn_1(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for fullReturn

Name: fullReturn Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 1
Globalname: progressionBps
End popogation
TMP_497(uint256) = block.timestamp - auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_497

Name: TMP_497 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_498(uint256) = TMP_497 * 10000
testing mul...
init
end
init
end

Name: TMP_497 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_498

Name: TMP_498 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_499(uint256) = TMP_498 / cooloffPeriod_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_499

Name: TMP_499 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
progressionBps_1(uint256) := TMP_499(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_500(bool) = progressionBps_1 > 10000
init
end
init
end
lnorm: 4 rnorm: 4
[i]Type for TMP_500

Name: TMP_500 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: progressionBps, Num: 3
Globalname: progressionBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
progressionBps_3(uint256) := ϕ(['progressionBps_2', 'progressionBps_1'])
Phi
init
end
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_501(bool) = fullReturn_1 > amount_3
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_501

Name: TMP_501 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 2
Globalname: progressionBps
End popogation
progressionBps_2(uint256) := 10000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxProfit, Num: 1
Globalname: maxProfit
End popogation
TMP_502(uint256) = fullReturn_1 - amount_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_502

Name: TMP_502 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = maxEarlyExitBps_4 * progressionBps_3
testing mul...
init
end
init
end

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_503

Name: TMP_503 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_504(uint256) = TMP_503 / 10000
init
end
init
end
lnorm: 4 rnorm: 4
init
end
init
end
init
end
lnorm: 4 rnorm: 4
init
end
[i]Type for TMP_504

Name: TMP_504 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_505(uint256) = TMP_502 * TMP_504
testing mul...
init
end
init
end

Name: TMP_502 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_504 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_505

Name: TMP_505 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_506(uint256) = TMP_505 / 1000
init
end
init
end
lnorm: 0 rnorm: 3
init
end
init
end
init
end
lnorm: 0 rnorm: 3
init
end
[i]Type for TMP_506

Name: TMP_506 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxProfit_1(uint256) := TMP_506(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxProfit

Name: maxProfit Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN fullReturn_1
RETURN
init
end

Name: fullReturn Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_507(uint256) = amount_3 + maxProfit_1
init
end
init
end
lnorm: u rnorm: -3
init
end
[i]Type for TMP_507

Name: TMP_507 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_507
RETURN
init
end

Name: TMP_507 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef


auction_8(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_7(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
maxEarlyExitBps_1(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_1(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
TUPLE_6(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_8(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
auction_9(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10', 'auction_8'])
dexHandler_8(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_7'])
maxEarlyExitBps_2(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_1', 'maxEarlyExitBps_8'])
cooloffPeriod_2(uint256) := ϕ(['cooloffPeriod_1', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
pegPrice_1(uint256)= UNPACK TUPLE_6 index: 5 
auctionEndTime_1(uint256)= UNPACK TUPLE_6 index: 7 
active_1(bool)= UNPACK TUPLE_6 index: 8 
TMP_488(bool) = block.timestamp < auctionEndTime_1
TMP_489(bool) = active_1 || TMP_488
CONDITION TMP_489
RETURN 0
TUPLE_7(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_9(IAuction), function:getAuctionParticipationForAccount, arguments:['account_1', '_auctionId_1']  
auction_10(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
dexHandler_9(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
maxEarlyExitBps_3(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_3(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
userCommitment_1(uint256)= UNPACK TUPLE_7 index: 0 
userRedeemed_1(uint256)= UNPACK TUPLE_7 index: 1 
userMaltPurchased_1(uint256)= UNPACK TUPLE_7 index: 2 
TMP_490(uint256) = userCommitment_1 - userRedeemed_1
userOutstanding_1(uint256) := TMP_490(uint256)
TMP_491(bool) = amount_1 > userOutstanding_1
CONDITION TMP_491
amount_2(uint256) := userOutstanding_1(uint256)
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
TMP_492(bool) = amount_3 == 0
CONDITION TMP_492
RETURN 0
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_9(IDexHandler), function:maltMarketPrice, arguments:[]  
dexHandler_10(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
maxEarlyExitBps_4(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
cooloffPeriod_4(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
currentPrice_1(uint256)= UNPACK TUPLE_8 index: 0 
TMP_493(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
TMP_494(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_493', 'userCommitment_1'] 
maltQuantity_1(uint256) := TMP_494(uint256)
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
TMP_496(uint256) = TMP_495 / pegPrice_1
fullReturn_1(uint256) := TMP_496(uint256)
TMP_497(uint256) = block.timestamp - auctionEndTime_1
TMP_498(uint256) = TMP_497 * 10000
TMP_499(uint256) = TMP_498 / cooloffPeriod_4
progressionBps_1(uint256) := TMP_499(uint256)
TMP_500(bool) = progressionBps_1 > 10000
CONDITION TMP_500
progressionBps_3(uint256) := ϕ(['progressionBps_2', 'progressionBps_1'])
TMP_501(bool) = fullReturn_1 > amount_3
CONDITION TMP_501
progressionBps_2(uint256) := 10000(uint256)
TMP_502(uint256) = fullReturn_1 - amount_3
TMP_503(uint256) = maxEarlyExitBps_4 * progressionBps_3
TMP_504(uint256) = TMP_503 / 10000
TMP_505(uint256) = TMP_502 * TMP_504
TMP_506(uint256) = TMP_505 / 1000
maxProfit_1(uint256) := TMP_506(uint256)
RETURN fullReturn_1
TMP_507(uint256) = amount_3 + maxProfit_1
RETURN TMP_507


Propogating parameters and globals to SSA variables...
End popogation

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auction_8(IAuction) := ϕ(['auction_1', 'auction_0', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_7(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_0'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_1(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_0', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_1(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4', 'cooloffPeriod_0'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
Name: active, Num: 1
Globalname: active
End popogation

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) = HIGH_LEVEL_CALL, dest:auction_8(IAuction), function:getAuctionCore, arguments:['_auctionId_1']  
High Call: getAuctionCore
Running querryfc
Written func info: Auction, getAuctionCore
Handling balance function!
-995
Finding type for hlc_3([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3430>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e35e0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3790>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3940>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3af0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3ca0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15e3e50>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea040>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15ea1f0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_9(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10', 'auction_8'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_8(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15', 'dexHandler_7'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_2(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_1', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_2(uint256) := ϕ(['cooloffPeriod_1', 'cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegPrice_1(uint256)= UNPACK TUPLE_6 index: 5 
Finding type for pegPrice(uint256 ... )
[i]Type for pegPrice

Name: pegPrice Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionEndTime_1(uint256)= UNPACK TUPLE_6 index: 7 
Finding type for auctionEndTime(uint256 ... )
[i]Type for auctionEndTime

Name: auctionEndTime Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
active_1(bool)= UNPACK TUPLE_6 index: 8 
Finding type for active(bool ... )
[i]Type for active

Name: active Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionEndTime, Num: 1
Globalname: auctionEndTime
Name: active, Num: 1
Globalname: active
End popogation
TMP_488(bool) = block.timestamp < auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_488

Name: TMP_488 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_489(bool) = active_1 || TMP_488
[i]Type for TMP_489

Name: TMP_489 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _auctionId, Num: 1
Globalname: _auctionId
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
End popogation

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_7(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_9(IAuction), function:getAuctionParticipationForAccount, arguments:['account_1', '_auctionId_1']  
High Call: getAuctionParticipationForAccount
Running querryfc
Written func info: Auction, getAuctionParticipationForAccount
Handling balance function!
-995
Finding type for hlc_4([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eaac0>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eac70>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb15eae20>] ... )
[i]Type for TUPLE_7

Name: TUPLE_7 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_10(IAuction) := ϕ(['auction_1', 'auction_9', 'auction_7', 'auction_13', 'auction_10'])
Phi
[i]Type for auction

Name: auction Function: earlyExitReturn
Num: -1
Den: -1
Address: -995
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_9(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_3(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_3(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userCommitment_1(uint256)= UNPACK TUPLE_7 index: 0 
Finding type for userCommitment(uint256 ... )
[i]Type for userCommitment

Name: userCommitment Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userRedeemed_1(uint256)= UNPACK TUPLE_7 index: 1 
Finding type for userRedeemed(uint256 ... )
[i]Type for userRedeemed

Name: userRedeemed Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userMaltPurchased_1(uint256)= UNPACK TUPLE_7 index: 2 
Finding type for userMaltPurchased(uint256 ... )
[i]Type for userMaltPurchased

Name: userMaltPurchased Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userRedeemed, Num: 1
Globalname: userRedeemed
Name: userOutstanding, Num: 1
Globalname: userOutstanding
End popogation
TMP_490(uint256) = userCommitment_1 - userRedeemed_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
userOutstanding_1(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for userOutstanding

Name: userOutstanding Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userOutstanding, Num: 1
Globalname: userOutstanding
End popogation
TMP_491(bool) = amount_1 > userOutstanding_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_491

Name: TMP_491 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 2
Globalname: amount
End popogation
amount_2(uint256) := userOutstanding_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: amount, Num: 3
Globalname: amount

Name: amount Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
amount_3(uint256) := ϕ(['amount_2', 'amount_1'])
Phi
init
end
[i]Type for amount

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_492(bool) = amount_3 == 0
[i]Type for TMP_492

Name: TMP_492 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN
init
end

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: currentPrice, Num: 1
Globalname: currentPrice
End popogation

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
Phid

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:dexHandler_9(IDexHandler), function:maltMarketPrice, arguments:[]  
High Call: maltMarketPrice
Running querryfc
Written func info: DexHandler, maltMarketPrice
Handling balance function!
-994
Finding type for hlc_5([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb19cda90>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fcbb1618c10>] ... )
[i]Type for TUPLE_8

Name: TUPLE_8 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_10(IDexHandler) := ϕ(['dexHandler_8', 'dexHandler_1', 'dexHandler_14', 'dexHandler_6', 'dexHandler_9', 'dexHandler_10', 'dexHandler_15'])
Phi
[i]Type for dexHandler

Name: dexHandler Function: earlyExitReturn
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
maxEarlyExitBps_4(uint256) := ϕ(['maxEarlyExitBps_3', 'maxEarlyExitBps_9', 'maxEarlyExitBps_4', 'maxEarlyExitBps_2', 'maxEarlyExitBps_8'])
Phi
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
cooloffPeriod_4(uint256) := ϕ(['cooloffPeriod_2', 'cooloffPeriod_9', 'cooloffPeriod_8', 'cooloffPeriod_3', 'cooloffPeriod_4'])
Phi
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
currentPrice_1(uint256)= UNPACK TUPLE_8 index: 0 
Finding type for currentPrice(uint256 ... )
[i]Type for currentPrice

Name: currentPrice Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: userCommitment, Num: 1
Globalname: userCommitment
Name: userMaltPurchased, Num: 1
Globalname: userMaltPurchased
Name: maltQuantity, Num: 1
Globalname: maltQuantity
End popogation
TMP_493(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['userMaltPurchased_1', 'amount_3'] 
testing mul...
init
end
init
end

Name: userMaltPurchased Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_494(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_493', 'userCommitment_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_494

Name: TMP_494 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maltQuantity_1(uint256) := TMP_494(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maltQuantity

Name: maltQuantity Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pegPrice, Num: 1
Globalname: pegPrice
Name: currentPrice, Num: 1
Globalname: currentPrice
Name: fullReturn, Num: 1
Globalname: fullReturn
End popogation
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['maltQuantity_1', 'currentPrice_1'] 
testing mul...
init
end
init
end

Name: maltQuantity Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: currentPrice Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: u
init
end
[i]Type for TMP_495

Name: TMP_495 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_496(uint256) = TMP_495 / pegPrice_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_496

Name: TMP_496 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fullReturn_1(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for fullReturn

Name: fullReturn Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 1
Globalname: progressionBps
End popogation
TMP_497(uint256) = block.timestamp - auctionEndTime_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_497

Name: TMP_497 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_498(uint256) = TMP_497 * 10000
testing mul...
init
end
init
end

Name: TMP_497 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_498

Name: TMP_498 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_499(uint256) = TMP_498 / cooloffPeriod_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_499

Name: TMP_499 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
progressionBps_1(uint256) := TMP_499(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_500(bool) = progressionBps_1 > 10000
init
end
init
end
lnorm: 4 rnorm: 4
[i]Type for TMP_500

Name: TMP_500 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: progressionBps, Num: 3
Globalname: progressionBps

Name: progressionBps Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
progressionBps_3(uint256) := ϕ(['progressionBps_2', 'progressionBps_1'])
Phi
init
end
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_501(bool) = fullReturn_1 > amount_3
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_501

Name: TMP_501 Function: earlyExitReturn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: progressionBps, Num: 2
Globalname: progressionBps
End popogation
progressionBps_2(uint256) := 10000(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for progressionBps

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxProfit, Num: 1
Globalname: maxProfit
End popogation
TMP_502(uint256) = fullReturn_1 - amount_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_502

Name: TMP_502 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = maxEarlyExitBps_4 * progressionBps_3
testing mul...
init
end
init
end

Name: maxEarlyExitBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: progressionBps Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 10000
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_503

Name: TMP_503 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_504(uint256) = TMP_503 / 10000
init
end
init
end
lnorm: 4 rnorm: 4
init
end
init
end
init
end
lnorm: 4 rnorm: 4
init
end
[i]Type for TMP_504

Name: TMP_504 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_505(uint256) = TMP_502 * TMP_504
testing mul...
init
end
init
end

Name: TMP_502 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_504 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_505

Name: TMP_505 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_506(uint256) = TMP_505 / 1000
init
end
init
end
lnorm: 0 rnorm: 3
init
end
init
end
init
end
lnorm: 0 rnorm: 3
init
end
[i]Type for TMP_506

Name: TMP_506 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxProfit_1(uint256) := TMP_506(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxProfit

Name: maxProfit Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN fullReturn_1
RETURN
init
end

Name: fullReturn Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
TMP_507(uint256) = amount_3 + maxProfit_1
init
end
init
end
lnorm: u rnorm: -3
init
end
[i]Type for TMP_507

Name: TMP_507 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_507
RETURN
init
end

Name: TMP_507 Function: earlyExitReturn
Num: -1
Den: -1
Address: u
Norm: -3
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



accountAuctionExits
Finding type for account(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for auctionId(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


auctionEarlyExits_12(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
REF_441(AuctionExits) -> auctionEarlyExits_12[auctionId_1]
REF_442(mapping(address => EarlyExitData)) -> REF_441.accountExits
REF_443(EarlyExitData) -> REF_442[account_1]
accountExits_1 (-> ['auctionEarlyExits'])(EarlyExitData) := REF_443(EarlyExitData)
REF_444(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_445(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
REF_446(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).maltUsed
RETURN REF_444,REF_445,REF_446


Propogating parameters and globals to SSA variables...
End popogation
Name: auctionEarlyExits, Num: 12
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auctionEarlyExits_12(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionId, Num: 1
Globalname: auctionId
Name: accountExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: accountExits
End popogation
REF_441(AuctionExits) -> auctionEarlyExits_12[auctionId_1]
INDEX
[i]Type for REF_441

Name: REF_441 Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_442(mapping(address => EarlyExitData)) -> REF_441.accountExits
MEMBER
init
end
init
end
OUT KEY: accountAuctionExits_REF_441_accountExits
OUT KEY: accountAuctionExits_REF_accountExits
No field found
[i]Type for REF_442

Name: REF_441.accountExits Function: accountAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_441, Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_443(EarlyExitData) -> REF_442[account_1]
INDEX
[i]Type for REF_443

Name: REF_443 Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
accountExits_1 (-> ['auctionEarlyExits'])(EarlyExitData) := REF_443(EarlyExitData)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for accountExits

Name: accountExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_444(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
OUT KEY: accountAuctionExits_accountExits_exitedEarly
OUT KEY: accountAuctionExits_accountExits_exitedEarly
No field found
[i]Type for REF_444

Name: accountExits.exitedEarly Function: accountAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_445(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: accountAuctionExits_accountExits_earlyExitReturn
OUT KEY: accountAuctionExits_accountExits_earlyExitReturn
No field found
[i]Type for REF_445

Name: accountExits.earlyExitReturn Function: accountAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_446(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
OUT KEY: accountAuctionExits_accountExits_maltUsed
OUT KEY: accountAuctionExits_accountExits_maltUsed
No field found
[i]Type for REF_446

Name: accountExits.maltUsed Function: accountAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
RETURN REF_444,REF_445,REF_446
RETURN
init
end

Name: accountExits.exitedEarly Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: accountExits.earlyExitReturn Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: accountExits.maltUsed Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


auctionEarlyExits_12(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
REF_441(AuctionExits) -> auctionEarlyExits_12[auctionId_1]
REF_442(mapping(address => EarlyExitData)) -> REF_441.accountExits
REF_443(EarlyExitData) -> REF_442[account_1]
accountExits_1 (-> ['auctionEarlyExits'])(EarlyExitData) := REF_443(EarlyExitData)
REF_444(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_445(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
REF_446(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).maltUsed
RETURN REF_444,REF_445,REF_446


Propogating parameters and globals to SSA variables...
End popogation

Name: auctionEarlyExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits
Finance Type: undef
Phid
auctionEarlyExits_12(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: accountExits
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionId, Num: 1
Globalname: auctionId
Name: accountExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: accountExits
End popogation
REF_441(AuctionExits) -> auctionEarlyExits_12[auctionId_1]
INDEX
[i]Type for REF_441

Name: REF_441 Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_442(mapping(address => EarlyExitData)) -> REF_441.accountExits
MEMBER
init
end
init
end
[i]Type for REF_442

Name: REF_441.accountExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_441, Field: accountExits
init
end
Finance type key: (-1, -1)
XXXX
REF_443(EarlyExitData) -> REF_442[account_1]
INDEX
[i]Type for REF_443

Name: REF_443 Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
accountExits_1 (-> ['auctionEarlyExits'])(EarlyExitData) := REF_443(EarlyExitData)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for accountExits

Name: accountExits Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_444(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
init
end
[i]Type for REF_444

Name: accountExits.exitedEarly Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_445(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
init
end
[i]Type for REF_445

Name: accountExits.earlyExitReturn Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_446(uint256) -> accountExits_1 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
init
end
[i]Type for REF_446

Name: accountExits.maltUsed Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: accountExits_1 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
RETURN REF_444,REF_445,REF_446
RETURN
init
end

Name: accountExits.exitedEarly Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: accountExits.earlyExitReturn Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: accountExits.maltUsed Function: accountAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



globalAuctionExits
Finding type for auctionId(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


auctionEarlyExits_13(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
REF_447(AuctionExits) -> auctionEarlyExits_13[auctionId_1]
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_447(AuctionExits)
REF_448(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_449(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
REF_450(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).maltUsed
RETURN REF_448,REF_449,REF_450


Propogating parameters and globals to SSA variables...
End popogation
Name: auctionEarlyExits, Num: 13
Globalname: auctionEarlyExits
global...

Name: auctionEarlyExits Function: exitEarly
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auctionEarlyExits_13(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionId, Num: 1
Globalname: auctionId
Name: auctionExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
REF_447(AuctionExits) -> auctionEarlyExits_13[auctionId_1]
INDEX
[i]Type for REF_447

Name: REF_447 Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_447(AuctionExits)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionExits

Name: auctionExits Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_448(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
OUT KEY: globalAuctionExits_auctionExits_exitedEarly
OUT KEY: globalAuctionExits_auctionExits_exitedEarly
No field found
[i]Type for REF_448

Name: auctionExits.exitedEarly Function: globalAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_449(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
OUT KEY: globalAuctionExits_auctionExits_earlyExitReturn
OUT KEY: globalAuctionExits_auctionExits_earlyExitReturn
No field found
[i]Type for REF_449

Name: auctionExits.earlyExitReturn Function: globalAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_450(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
OUT KEY: globalAuctionExits_auctionExits_maltUsed
OUT KEY: globalAuctionExits_auctionExits_maltUsed
No field found
[i]Type for REF_450

Name: auctionExits.maltUsed Function: globalAuctionExits
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
RETURN REF_448,REF_449,REF_450
RETURN
init
end

Name: auctionExits.exitedEarly Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: auctionExits.earlyExitReturn Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: auctionExits.maltUsed Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


auctionEarlyExits_13(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
REF_447(AuctionExits) -> auctionEarlyExits_13[auctionId_1]
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_447(AuctionExits)
REF_448(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
REF_449(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
REF_450(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).maltUsed
RETURN REF_448,REF_449,REF_450


Propogating parameters and globals to SSA variables...
End popogation

Name: auctionEarlyExits Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
auctionEarlyExits_13(mapping(uint256 => AuctionExits)) := ϕ(['auctionEarlyExits_12', 'auctionEarlyExits_0', 'auctionEarlyExits_13', 'auctionEarlyExits_11'])
Phi
[i]Type for auctionEarlyExits

Name: auctionEarlyExits Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionId, Num: 1
Globalname: auctionId
Name: auctionExits, Num: 1 (-> ['auctionEarlyExits'])
Globalname: auctionExits
End popogation
REF_447(AuctionExits) -> auctionEarlyExits_13[auctionId_1]
INDEX
[i]Type for REF_447

Name: REF_447 Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
auctionExits_1 (-> ['auctionEarlyExits'])(AuctionExits) := REF_447(AuctionExits)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionExits

Name: auctionExits Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: exitedEarly, earlyExitReturn, maltUsed
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_448(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).exitedEarly
MEMBER
init
end
init
end
init
end
[i]Type for REF_448

Name: auctionExits.exitedEarly Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: exitedEarly
init
end
Finance type key: (-1, -1)
XXXX
REF_449(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).earlyExitReturn
MEMBER
init
end
init
end
init
end
[i]Type for REF_449

Name: auctionExits.earlyExitReturn Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: earlyExitReturn
init
end
Finance type key: (-1, -1)
XXXX
REF_450(uint256) -> auctionExits_1 (-> ['auctionEarlyExits']).maltUsed
MEMBER
init
end
init
end
init
end
[i]Type for REF_450

Name: auctionExits.maltUsed Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: auctionExits_1 (-> ['auctionEarlyExits']), Field: maltUsed
init
end
Finance type key: (-1, -1)
XXXX
RETURN REF_448,REF_449,REF_450
RETURN
init
end

Name: auctionExits.exitedEarly Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: auctionExits.earlyExitReturn Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end

Name: auctionExits.maltUsed Function: globalAuctionExits
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



_calculateMaltRequiredForExit
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



setEarlyExitBps
Finding type for _earlyExitBps(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
TMP_534(bool) = _earlyExitBps_1 > 0
TMP_535(bool) = _earlyExitBps_1 <= 1000
TMP_536(bool) = TMP_534 && TMP_535
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 15
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reason Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['ADMIN_ROLE_19', 'TIMELOCK_ROLE_10', 'TIMELOCK_ROLE_16', 'TIMELOCK_ROLE_3', 'ADMIN_ROLE_15', 'TIMELOCK_ROLE_5', 'TIMELOCK_ROLE_7', 'TIMELOCK_ROLE_12', 'TIMELOCK_ROLE_14', 'ADMIN_ROLE_17'])
Phi
[i]Type for role

Name: role Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._onlyRole(bytes32,string)(role_1,reason_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reason Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: reason_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reason_1(string) := ϕ(['reason_1'])
Phi
[i]Type for reason

Name: reason Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_433(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_433

Name: TMP_433 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_434(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(role_1,TMP_433)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 1
Globalname: _roles
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'REF_392', 'REF_394'])
Phi
[i]Type for role

Name: role Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['TMP_447', 'TMP_433', 'TMP_443'])
Phi
[i]Type for account

Name: account Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_1(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_10', '_roles_0', '_roles_12', '_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_13'])
Phi
[i]Type for _roles

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_380(AccessControl.RoleData) -> _roles_1[role_1]
INDEX
[i]Type for REF_380

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_381(EnumerableSet.AddressSet) -> REF_380.members
MEMBER
init
end
init
end
OUT KEY: hasRole__roles_members
OUT KEY: hasRole__members
No field found
[i]Type for REF_381

Name: _roles.members Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_380, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_440(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.contains(EnumerableSet.AddressSet,address), arguments:['REF_381', 'account_1'] 
[i]Type for TMP_440

Name: TMP_440 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_440
RETURN
init
end

Name: TMP_440 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'REF_392', 'REF_394'])
Phi
[i]Type for role

Name: role Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['TMP_447', 'TMP_433', 'TMP_443'])
Phi
[i]Type for account

Name: account Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_1(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_10', '_roles_0', '_roles_12', '_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_13'])
Phi
[i]Type for _roles

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_380(AccessControl.RoleData) -> _roles_1[role_1]
INDEX
[i]Type for REF_380

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_381(EnumerableSet.AddressSet) -> REF_380.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_381

Name: _roles.members Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_380, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_440(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.contains(EnumerableSet.AddressSet,address), arguments:['REF_381', 'account_1'] 
[i]Type for TMP_440

Name: TMP_440 Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_440
RETURN
init
end

Name: TMP_440 Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_434

Name: TMP_434 Function: _onlyRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_435(None) = SOLIDITY_CALL require(bool,string)(TMP_434,reason_1)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: reason_1 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reason_1(string) := ϕ(['reason_1'])
Phi
[i]Type for reason

Name: reason Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_433(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_433

Name: TMP_433 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_434(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(role_1,TMP_433)
init
end
init
end
init
end
[i]Type for TMP_434

Name: TMP_434 Function: _onlyRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_435(None) = SOLIDITY_CALL require(bool,string)(TMP_434,reason_1)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['ADMIN_ROLE_19', 'TIMELOCK_ROLE_10', 'TIMELOCK_ROLE_16', 'TIMELOCK_ROLE_3', 'ADMIN_ROLE_15', 'TIMELOCK_ROLE_5', 'TIMELOCK_ROLE_7', 'TIMELOCK_ROLE_12', 'TIMELOCK_ROLE_14', 'ADMIN_ROLE_17'])
Phi
[i]Type for role

Name: role Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._onlyRole(bytes32,string)(role_1,reason_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: _earlyExitBps, Num: 1
Globalname: _earlyExitBps
End popogation
TMP_534(bool) = _earlyExitBps_1 > 0
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
[i]Type for TMP_534

Name: TMP_534 Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_535(bool) = _earlyExitBps_1 <= 1000
init
end
init
end
lnorm: u rnorm: 3
[i]Type for TMP_535

Name: TMP_535 Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_536(bool) = TMP_534 && TMP_535
[i]Type for TMP_536

Name: TMP_536 Function: setEarlyExitBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
[i]Type for TMP_537

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: maxEarlyExitBps, Num: 9
Globalname: maxEarlyExitBps
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
TMP_534(bool) = _earlyExitBps_1 > 0
TMP_535(bool) = _earlyExitBps_1 <= 1000
TMP_536(bool) = TMP_534 && TMP_535
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_534(bool) = _earlyExitBps_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_534

Name: TMP_534 Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_535(bool) = _earlyExitBps_1 <= 1000
init
end
init
end
lnorm: u rnorm: 3
[i]Type for TMP_535

Name: TMP_535 Function: setEarlyExitBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_536(bool) = TMP_534 && TMP_535
[i]Type for TMP_536

Name: TMP_536 Function: setEarlyExitBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
[i]Type for TMP_537

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
TMP_534(bool) = _earlyExitBps_1 > 0
TMP_535(bool) = _earlyExitBps_1 <= 1000
TMP_536(bool) = TMP_534 && TMP_535
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_15(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_15,Must have admin privilege)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_534(bool) = _earlyExitBps_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_534

Name: TMP_534 Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_535(bool) = _earlyExitBps_1 <= 1000
init
end
init
end
lnorm: u rnorm: 3
[i]Type for TMP_535

Name: TMP_535 Function: setEarlyExitBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_536(bool) = TMP_534 && TMP_535
[i]Type for TMP_536

Name: TMP_536 Function: setEarlyExitBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_537(None) = SOLIDITY_CALL require(bool,string)(TMP_536,Must be between 0-100%)
[i]Type for TMP_537

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
maxEarlyExitBps_9(uint256) := _earlyExitBps_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for maxEarlyExitBps

Name: maxEarlyExitBps Function: setEarlyExitBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



setCooloffPeriod
Finding type for _period(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
TMP_539(bool) = _period_1 > 0
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
cooloffPeriod_9(uint256) := _period_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 17
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: _period, Num: 1
Globalname: _period
End popogation
TMP_539(bool) = _period_1 > 0
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
[i]Type for TMP_539

Name: TMP_539 Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
[i]Type for TMP_540

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: cooloffPeriod, Num: 9
Globalname: cooloffPeriod
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
cooloffPeriod_9(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
TMP_539(bool) = _period_1 > 0
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
cooloffPeriod_9(uint256) := _period_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_539(bool) = _period_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_539

Name: TMP_539 Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
[i]Type for TMP_540

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
cooloffPeriod_9(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
TMP_539(bool) = _period_1 > 0
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
cooloffPeriod_9(uint256) := _period_1(uint256)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_17(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_17,Must have admin privilege)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_539(bool) = _period_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_539

Name: TMP_539 Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_540(None) = SOLIDITY_CALL require(bool,string)(TMP_539,Cannot have 0 lookback period)
[i]Type for TMP_540

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
cooloffPeriod_9(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for cooloffPeriod

Name: cooloffPeriod Function: setCooloffPeriod
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



setDexHandler
Finding type for _handler(address ... )
prev address? u
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _handler
    fields: []
    fintype: -1


ADMIN_ROLE_19(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_19,Must have admin privilege)
TMP_542 = CONVERT _handler_1 to IDexHandler
dexHandler_15(IDexHandler) := TMP_542(IDexHandler)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 19
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_19(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setDexHandler
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_19,Must have admin privilege)
Propogating parameters and globals to SSA variables...
Name: dexHandler, Num: 15
Globalname: dexHandler
global...

Name: dexHandler Function: initialize
Num: -1
Den: -1
Address: -994
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_542 = CONVERT _handler_1 to IDexHandler
Converting _handler_1

Name: _handler_1 Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _handler
Value: u
Fields: 
Finance Type: undef
init
end
DexHandler
[i]Type for TMP_542

Name: TMP_542 Function: setDexHandler
Num: 
Den: 
Address: -991
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_15(IDexHandler) := TMP_542(IDexHandler)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for dexHandler

Name: dexHandler Function: setDexHandler
Num: -1
Den: -1
Address: -991
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_19(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_19,Must have admin privilege)
TMP_542 = CONVERT _handler_1 to IDexHandler
dexHandler_15(IDexHandler) := TMP_542(IDexHandler)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setDexHandler
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_19(bytes32) := ϕ(['ADMIN_ROLE_16', 'ADMIN_ROLE_10', 'ADMIN_ROLE_14', 'ADMIN_ROLE_0', 'ADMIN_ROLE_18', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_20'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setDexHandler
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_19,Must have admin privilege)
Propogating parameters and globals to SSA variables...
End popogation
TMP_542 = CONVERT _handler_1 to IDexHandler
Converting _handler_1

Name: _handler Function: None
Num: 
Den: 
Address: -991
Norm: u
LF: _handler
Value: u
Fields: 
Finance Type: undef
init
end
DexHandler
[i]Type for TMP_542

Name: TMP_542 Function: setDexHandler
Num: 
Den: 
Address: -991
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
dexHandler_15(IDexHandler) := TMP_542(IDexHandler)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for dexHandler

Name: dexHandler Function: setDexHandler
Num: -1
Den: -1
Address: -991
Norm: u
LF: DexHandler
Value: u
Fields: 
Finance Type: undef
XXXX
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



slitherConstructorVariables
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps



slitherConstructorConstantVariables
State_var: _roles
State_var: ADMIN_ROLE
State_var: TIMELOCK_ROLE
State_var: initialized
State_var: initializing
State_var: auctionEarlyExits
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: globalAdmin
State_var: auction
State_var: collateralToken
State_var: dexHandler
State_var: malt
State_var: lastBlock
State_var: cooloffPeriod
State_var: maxEarlyExitBps
Address: 1, Label: global:globalAdmin
Address: -999, Label: initialize:_timelock
Address: -998, Label: initialize:initialAdmin
Address: -997, Label: initialize:_collateralToken
Address: -996, Label: initialize:_malt
Address: -995, Label: initialize:_auction
Address: -994, Label: initialize:_handler
Address: -993, Label: earlyExitReturn:account
Address: -992, Label: accountAuctionExits:account
Address: -991, Label: setDexHandler:_handler
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 6
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 18
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Function count: 15
Checking Auction
Checking AuctionBurnReserveSkew
Checking Permissions
Checking IAuction
Checking IAuctionBurnReserveSkew
Checking IAuctionStartController
Checking IBurnMintableERC20
Checking IDexHandler
Checking IImpliedCollateralService
Checking ILiquidityExtension
Checking IMaltDataLab
Checking IStabilizerNode
Checking Context
Checking AccessControl
Checking Math
Checking SafeMath
Checking ERC20
Checking IERC20
Checking SafeERC20
Checking Address
Checking EnumerableSet
Checking Initializable
Add to address_to_label {'global:globalAdmin': 1}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_stabilizerNode': -997}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_stabilizerNode': -997, 'initialize:_auction': -996}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_stabilizerNode': -997, 'initialize:_auction': -996, 'setNewStabilizerNode:_node': -995}
Add to address_to_label {'global:globalAdmin': 1, 'initialize:_timelock': -999, 'initialize:initialAdmin': -998, 'initialize:_stabilizerNode': -997, 'initialize:_auction': -996, 'setNewStabilizerNode:_node': -995, 'setNewAuction:_auction': -994}
State_var: TIMELOCK_ROLE
Finding type for TIMELOCK_ROLE(bytes32 ... )
State_var: ADMIN_ROLE
Finding type for ADMIN_ROLE(bytes32 ... )
State_var: STABILIZER_NODE_ROLE
Finding type for STABILIZER_NODE_ROLE(bytes32 ... )
State_var: stabilizerNode
Finding type for stabilizerNode(IStabilizerNode ... )
State_var: _roles
Finding type for _roles(mapping(bytes32 => AccessControl.RoleData) ... )
global
_roles
members
OUT KEY: global__roles_members
global
_roles
adminRole
OUT KEY: global__roles_adminRole
State_var: initialized
Finding type for initialized(bool ... )
State_var: initializing
Finding type for initializing(bool ... )
State_var: pegObservations
Finding type for pegObservations(uint256[] ... )
State_var: auctionAverageLookback
Finding type for auctionAverageLookback(uint256 ... )
State_var: AUCTION_ROLE
Finding type for AUCTION_ROLE(bytes32 ... )
State_var: GOVERNOR_ROLE
Finding type for GOVERNOR_ROLE(bytes32 ... )
State_var: LIQUIDITY_MINE_ROLE
Finding type for LIQUIDITY_MINE_ROLE(bytes32 ... )
State_var: MONETARY_BURNER_ROLE
Finding type for MONETARY_BURNER_ROLE(bytes32 ... )
State_var: MONETARY_MINTER_ROLE
Finding type for MONETARY_MINTER_ROLE(bytes32 ... )
State_var: REWARD_THROTTLE_ROLE
Finding type for REWARD_THROTTLE_ROLE(bytes32 ... )
State_var: globalAdmin
Finding type for globalAdmin(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
State_var: count
Finding type for count(uint256 ... )
State_var: auction
Finding type for auction(IAuction ... )
State_var: lastBlock
Finding type for lastBlock(mapping(address => uint256) ... )



initialize
Finding type for _timelock(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Finding type for initialAdmin(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _stabilizerNode(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Finding type for _auction(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for _period(uint256 ... )
Param: 0
    num: []
    den: []
    norm: u
    link: _timelock
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: initialAdmin
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: _stabilizerNode
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: _auction
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
TMP_469 = CONVERT _auction_1 to IAuction
auction_1(IAuction) := TMP_469(IAuction)
auctionAverageLookback_1(uint256) := _period_1(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_470(bool) = i_2 < _period_1
CONDITION TMP_470
REF_407 -> LENGTH pegObservations_5
TMP_472(uint256) := REF_407(uint256)
TMP_473(uint256) = TMP_472 + 1
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
REF_407 (->pegObservations_6) := TMP_473(uint256)
REF_408(uint256) -> pegObservations_6[TMP_472]
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
REF_408 (->pegObservations_7) := 0(uint256)
TMP_474(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 11
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: STABILIZER_NODE_ROLE, Num: 16
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: pegObservations, Num: 1
Globalname: pegObservations
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation
Name: initialized, Num: 1
Globalname: initialized
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: initializing, Num: 1
Globalname: initializing
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialized_1(bool) := ϕ(['initialized_0', 'initialized_2', 'initialized_3'])
Phi
[i]Type for initialized

Name: initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initializing_1(bool) := ϕ(['initializing_3', 'initializing_4', 'initializing_2', 'initializing_0'])
Phi
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialized, Num: 2
Globalname: initialized
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: initializing, Num: 2
Globalname: initializing
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_548(bool) = INTERNAL_CALL, Initializable.isConstructor()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: self, Num: 1
Globalname: self
End popogation
TMP_463 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 2
2
2
[i]Type for TMP_463

Name: TMP_463 Function: isConstructor
Num: -1
Den: -1
Address: 2
Norm: u
LF: AuctionBurnReserveSkew
Value: u
Fields: 
Finance Type: undef
XXXX
self_1(address) := TMP_463(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for self

Name: self Function: isConstructor
Num: -1
Den: -1
Address: 2
Norm: u
LF: AuctionBurnReserveSkew
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: cs, Num: 1
Globalname: cs
End popogation
REF_405 -> CODESIZE self_1
[i]Type for REF_405

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
cs_1(uint256) := REF_405(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for cs

Name: cs Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: cs, Num: 1
Globalname: cs
End popogation
TMP_464(bool) = cs_1 == 0
[i]Type for TMP_464

Name: TMP_464 Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_464
RETURN
init
end

Name: TMP_464 Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: self, Num: 1
Globalname: self
End popogation
TMP_463 = CONVERT this to address
Converting this
2
[i]Type for TMP_463

Name: TMP_463 Function: isConstructor
Num: 
Den: 
Address: 2
Norm: u
LF: AuctionBurnReserveSkew
Value: u
Fields: 
Finance Type: undef
XXXX
self_1(address) := TMP_463(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for self

Name: self Function: isConstructor
Num: 
Den: 
Address: 2
Norm: u
LF: AuctionBurnReserveSkew
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: cs, Num: 1
Globalname: cs
End popogation
REF_405 -> CODESIZE self_1
[i]Type for REF_405

Name: REF_405 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
cs_1(uint256) := REF_405(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for cs

Name: cs Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: cs, Num: 1
Globalname: cs
End popogation
TMP_464(bool) = cs_1 == 0
[i]Type for TMP_464

Name: TMP_464 Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_464
RETURN
init
end

Name: TMP_464 Function: isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_548

Name: TMP_548 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_549(bool) = initializing_2 || TMP_548
[i]Type for TMP_549

Name: TMP_549 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_550 = ! initialized_2 
[i]Type for TMP_550

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_551(bool) = TMP_549 || TMP_550
[i]Type for TMP_551

Name: TMP_551 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_552(None) = SOLIDITY_CALL require(bool,string)(TMP_551,Contract instance has already been initialized)
[i]Type for TMP_552

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
TMP_553 = ! initializing_2 
[i]Type for TMP_553

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_553(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: initializing, Num: 3
Globalname: initializing
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
initializing_3(bool) := True(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialized, Num: 3
Globalname: initialized
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
initialized_3(bool) := True(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialized

Name: initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: initializing, Num: 4
Globalname: initializing
global...

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
initializing_4(bool) := False(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialized_1(bool) := ϕ(['initialized_0', 'initialized_2', 'initialized_3'])
Phi
[i]Type for initialized

Name: initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initializing_1(bool) := ϕ(['initializing_3', 'initializing_4', 'initializing_2', 'initializing_0'])
Phi
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_548(bool) = INTERNAL_CALL, Initializable.isConstructor()()
init
end
[i]Type for TMP_548

Name: TMP_548 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_549(bool) = initializing_2 || TMP_548
[i]Type for TMP_549

Name: TMP_549 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_550 = ! initialized_2 
[i]Type for TMP_550

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_551(bool) = TMP_549 || TMP_550
[i]Type for TMP_551

Name: TMP_551 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_552(None) = SOLIDITY_CALL require(bool,string)(TMP_551,Contract instance has already been initialized)
[i]Type for TMP_552

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
TMP_553 = ! initializing_2 
[i]Type for TMP_553

Name: TMP_553 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_553(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
initializing_3(bool) := True(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
initialized_3(bool) := True(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialized

Name: initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
initializing_4(bool) := False(bool)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initializing

Name: initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 13
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
init
end
[[], [], 'u', '_timelock', [], -1, -999, 'u']

Name: _timelock Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _timelock_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid
Name: TIMELOCK_ROLE, Num: 1
Globalname: TIMELOCK_ROLE
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: ADMIN_ROLE, Num: 1
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: GOVERNOR_ROLE, Num: 1
Globalname: GOVERNOR_ROLE
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: MONETARY_BURNER_ROLE, Num: 1
Globalname: MONETARY_BURNER_ROLE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: MONETARY_MINTER_ROLE, Num: 1
Globalname: MONETARY_MINTER_ROLE
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: STABILIZER_NODE_ROLE, Num: 1
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: LIQUIDITY_MINE_ROLE, Num: 1
Globalname: LIQUIDITY_MINE_ROLE
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: AUCTION_ROLE, Num: 1
Globalname: AUCTION_ROLE
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: REWARD_THROTTLE_ROLE, Num: 1
Globalname: REWARD_THROTTLE_ROLE
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_timelock_1(address) := ϕ(['_timelock_1'])
Phi
[i]Type for _timelock

Name: _timelock Function: _adminSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
TIMELOCK_ROLE_1(bytes32) := ϕ(['TIMELOCK_ROLE_15', 'TIMELOCK_ROLE_17', 'TIMELOCK_ROLE_6', 'TIMELOCK_ROLE_9', 'TIMELOCK_ROLE_2', 'TIMELOCK_ROLE_11', 'TIMELOCK_ROLE_13', 'TIMELOCK_ROLE_0', 'TIMELOCK_ROLE_4'])
Phi
[i]Type for TIMELOCK_ROLE

Name: TIMELOCK_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ADMIN_ROLE_1(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
GOVERNOR_ROLE_1(bytes32) := ϕ(['GOVERNOR_ROLE_9', 'GOVERNOR_ROLE_0', 'GOVERNOR_ROLE_4'])
Phi
[i]Type for GOVERNOR_ROLE

Name: GOVERNOR_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MONETARY_BURNER_ROLE_1(bytes32) := ϕ(['MONETARY_BURNER_ROLE_5', 'MONETARY_BURNER_ROLE_0', 'MONETARY_BURNER_ROLE_11'])
Phi
[i]Type for MONETARY_BURNER_ROLE

Name: MONETARY_BURNER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MONETARY_MINTER_ROLE_1(bytes32) := ϕ(['MONETARY_MINTER_ROLE_6', 'MONETARY_MINTER_ROLE_0', 'MONETARY_MINTER_ROLE_13'])
Phi
[i]Type for MONETARY_MINTER_ROLE

Name: MONETARY_MINTER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIQUIDITY_MINE_ROLE_1(bytes32) := ϕ(['LIQUIDITY_MINE_ROLE_17', 'LIQUIDITY_MINE_ROLE_8', 'LIQUIDITY_MINE_ROLE_0'])
Phi
[i]Type for LIQUIDITY_MINE_ROLE

Name: LIQUIDITY_MINE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
AUCTION_ROLE_1(bytes32) := ϕ(['AUCTION_ROLE_9', 'AUCTION_ROLE_19', 'AUCTION_ROLE_0'])
Phi
[i]Type for AUCTION_ROLE

Name: AUCTION_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REWARD_THROTTLE_ROLE_1(bytes32) := ϕ(['REWARD_THROTTLE_ROLE_10', 'REWARD_THROTTLE_ROLE_0', 'REWARD_THROTTLE_ROLE_21'])
Phi
[i]Type for REWARD_THROTTLE_ROLE

Name: REWARD_THROTTLE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 2
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(TIMELOCK_ROLE_1,_timelock_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_timelock', [], -1, -999, 'u']

Name: account Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid
Name: ADMIN_ROLE, Num: 8
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['REWARD_THROTTLE_ROLE_9', 'AUCTION_ROLE_8', 'LIQUIDITY_MINE_ROLE_7', 'STABILIZER_NODE_ROLE_6', 'TIMELOCK_ROLE_1', 'ADMIN_ROLE_2', 'MONETARY_BURNER_ROLE_4', 'MONETARY_MINTER_ROLE_5', 'GOVERNOR_ROLE_3'])
Phi
[i]Type for role

Name: role Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['_timelock_1'])
Phi
[i]Type for account

Name: account Function: _roleSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
ADMIN_ROLE_8(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_timelock', [], -1, -999, 'u']

Name: account Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_timelock', [], -1, -999, 'u']

Name: account Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 13
Globalname: _roles
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
OUT KEY: _grantRole__roles_members
OUT KEY: _grantRole__members
No field found
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
RETURN msg.sender
RETURN
init
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: ADMIN_ROLE, Num: 9
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, AccessControl._setRoleAdmin(bytes32,bytes32)(role_1,ADMIN_ROLE_9)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: adminRole Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: adminRole_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 11
Globalname: _roles
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
adminRole_1(bytes32) := ϕ(['ADMIN_ROLE_9'])
Phi
[i]Type for adminRole

Name: adminRole Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_11(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_395(AccessControl.RoleData) -> _roles_11[role_1]
INDEX
[i]Type for REF_395

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_396(bytes32) -> REF_395.adminRole
MEMBER
init
end
init
end
OUT KEY: _setRoleAdmin__roles_adminRole
OUT KEY: _setRoleAdmin__adminRole
No field found
[i]Type for REF_396

Name: _roles.adminRole Function: _setRoleAdmin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_395, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: _roles, Num: 12
Globalname: _roles
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_397(AccessControl.RoleData) -> _roles_11[role_1]
INDEX
[i]Type for REF_397

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_398(bytes32) -> REF_397.adminRole
MEMBER
init
end
init
end
[i]Type for REF_398

Name: _roles.adminRole Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_397, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
_roles_12(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_11'])
Phi
[i]Type for _roles

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
REF_398 (->_roles_12) := adminRole_1(bytes32)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_398

Name: REF_398 Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_397, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: adminRole_1 Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
adminRole_1(bytes32) := ϕ(['ADMIN_ROLE_9'])
Phi
[i]Type for adminRole

Name: adminRole Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_11(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_395(AccessControl.RoleData) -> _roles_11[role_1]
INDEX
[i]Type for REF_395

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_396(bytes32) -> REF_395.adminRole
MEMBER
init
end
init
end
init
end
[i]Type for REF_396

Name: _roles.adminRole Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_395, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
REF_397(AccessControl.RoleData) -> _roles_11[role_1]
INDEX
[i]Type for REF_397

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_398(bytes32) -> REF_397.adminRole
MEMBER
init
end
init
end
init
end
[i]Type for REF_398

Name: _roles.adminRole Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_397, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
_roles_12(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_11'])
Phi
[i]Type for _roles

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
REF_398 (->_roles_12) := adminRole_1(bytes32)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_398

Name: REF_398 Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_397, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _roleSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid

Name: ADMIN_ROLE Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['REWARD_THROTTLE_ROLE_9', 'AUCTION_ROLE_8', 'LIQUIDITY_MINE_ROLE_7', 'STABILIZER_NODE_ROLE_6', 'TIMELOCK_ROLE_1', 'ADMIN_ROLE_2', 'MONETARY_BURNER_ROLE_4', 'MONETARY_MINTER_ROLE_5', 'GOVERNOR_ROLE_3'])
Phi
[i]Type for role

Name: role Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['_timelock_1'])
Phi
[i]Type for account

Name: account Function: _roleSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
ADMIN_ROLE_8(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _roleSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(role_1,account_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setRoleAdmin(bytes32,bytes32)(role_1,ADMIN_ROLE_9)
init
end
init
end
ADMIN_ROLE_2(bytes32) := ϕ(['ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 3
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(ADMIN_ROLE_2,_timelock_1)
init
end
init
end
ADMIN_ROLE_3(bytes32) := ϕ(['ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: GOVERNOR_ROLE, Num: 3
Globalname: GOVERNOR_ROLE
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(GOVERNOR_ROLE_3,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: MONETARY_BURNER_ROLE, Num: 4
Globalname: MONETARY_BURNER_ROLE
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(MONETARY_BURNER_ROLE_4,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: MONETARY_MINTER_ROLE, Num: 5
Globalname: MONETARY_MINTER_ROLE
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(MONETARY_MINTER_ROLE_5,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: STABILIZER_NODE_ROLE, Num: 6
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(STABILIZER_NODE_ROLE_6,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: LIQUIDITY_MINE_ROLE, Num: 7
Globalname: LIQUIDITY_MINE_ROLE
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(LIQUIDITY_MINE_ROLE_7,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: AUCTION_ROLE, Num: 8
Globalname: AUCTION_ROLE
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(AUCTION_ROLE_8,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: REWARD_THROTTLE_ROLE, Num: 9
Globalname: REWARD_THROTTLE_ROLE
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(REWARD_THROTTLE_ROLE_9,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: globalAdmin, Num: 1
Globalname: globalAdmin
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: 1
Norm: u
LF: globalAdmin
Value: u
Fields: 
Finance Type: undef
End popogation
globalAdmin_1(address) := _timelock_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for globalAdmin

Name: globalAdmin Function: _adminSetup
Num: -1
Den: -1
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _timelock_1 Function: _adminSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
Phid

Name: TIMELOCK_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: GOVERNOR_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: MONETARY_BURNER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: MONETARY_MINTER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: STABILIZER_NODE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: LIQUIDITY_MINE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: AUCTION_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: REWARD_THROTTLE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
_timelock_1(address) := ϕ(['_timelock_1'])
Phi
[i]Type for _timelock

Name: _timelock Function: _adminSetup
Num: 
Den: 
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
TIMELOCK_ROLE_1(bytes32) := ϕ(['TIMELOCK_ROLE_15', 'TIMELOCK_ROLE_17', 'TIMELOCK_ROLE_6', 'TIMELOCK_ROLE_9', 'TIMELOCK_ROLE_2', 'TIMELOCK_ROLE_11', 'TIMELOCK_ROLE_13', 'TIMELOCK_ROLE_0', 'TIMELOCK_ROLE_4'])
Phi
[i]Type for TIMELOCK_ROLE

Name: TIMELOCK_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
ADMIN_ROLE_1(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
GOVERNOR_ROLE_1(bytes32) := ϕ(['GOVERNOR_ROLE_9', 'GOVERNOR_ROLE_0', 'GOVERNOR_ROLE_4'])
Phi
[i]Type for GOVERNOR_ROLE

Name: GOVERNOR_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MONETARY_BURNER_ROLE_1(bytes32) := ϕ(['MONETARY_BURNER_ROLE_5', 'MONETARY_BURNER_ROLE_0', 'MONETARY_BURNER_ROLE_11'])
Phi
[i]Type for MONETARY_BURNER_ROLE

Name: MONETARY_BURNER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MONETARY_MINTER_ROLE_1(bytes32) := ϕ(['MONETARY_MINTER_ROLE_6', 'MONETARY_MINTER_ROLE_0', 'MONETARY_MINTER_ROLE_13'])
Phi
[i]Type for MONETARY_MINTER_ROLE

Name: MONETARY_MINTER_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
LIQUIDITY_MINE_ROLE_1(bytes32) := ϕ(['LIQUIDITY_MINE_ROLE_17', 'LIQUIDITY_MINE_ROLE_8', 'LIQUIDITY_MINE_ROLE_0'])
Phi
[i]Type for LIQUIDITY_MINE_ROLE

Name: LIQUIDITY_MINE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
AUCTION_ROLE_1(bytes32) := ϕ(['AUCTION_ROLE_9', 'AUCTION_ROLE_19', 'AUCTION_ROLE_0'])
Phi
[i]Type for AUCTION_ROLE

Name: AUCTION_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REWARD_THROTTLE_ROLE_1(bytes32) := ϕ(['REWARD_THROTTLE_ROLE_10', 'REWARD_THROTTLE_ROLE_0', 'REWARD_THROTTLE_ROLE_21'])
Phi
[i]Type for REWARD_THROTTLE_ROLE

Name: REWARD_THROTTLE_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(TIMELOCK_ROLE_1,_timelock_1)
init
end
init
end
ADMIN_ROLE_2(bytes32) := ϕ(['ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(ADMIN_ROLE_2,_timelock_1)
init
end
init
end
ADMIN_ROLE_3(bytes32) := ϕ(['ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: _adminSetup
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(GOVERNOR_ROLE_3,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(MONETARY_BURNER_ROLE_4,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(MONETARY_MINTER_ROLE_5,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(STABILIZER_NODE_ROLE_6,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(LIQUIDITY_MINE_ROLE_7,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(AUCTION_ROLE_8,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._roleSetup(bytes32,address)(REWARD_THROTTLE_ROLE_9,_timelock_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
globalAdmin_1(address) := _timelock_1(address)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for globalAdmin

Name: globalAdmin Function: _adminSetup
Num: -1
Den: -1
Address: -999
Norm: u
LF: _timelock
Value: u
Fields: 
Finance Type: undef
XXXX
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: STABILIZER_NODE_ROLE, Num: 18
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: ADMIN_ROLE, Num: 14
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: stabilizerNode, Num: 1
Globalname: stabilizerNode
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
Converting _stabilizerNode_1

Name: _stabilizerNode Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
init
end
StabilizerNode
[i]Type for TMP_468

Name: TMP_468 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for stabilizerNode

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auction, Num: 1
Globalname: auction
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_469 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction_1 Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_469

Name: TMP_469 Function: initialize
Num: 
Den: 
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_1(IAuction) := TMP_469(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: _period, Num: 1
Globalname: _period
Name: auctionAverageLookback, Num: 1
Globalname: auctionAverageLookback
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
auctionAverageLookback_1(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: _period, Num: 1
Globalname: _period
Name: i, Num: 2
Globalname: i
End popogation
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_470(bool) = i_2 < _period_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_470

Name: TMP_470 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: pegObservations, Num: 5
Globalname: pegObservations
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pegObservations, Num: 6
Globalname: pegObservations
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pegObservations, Num: 7
Globalname: pegObservations
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_407 -> LENGTH pegObservations_5
[i]Type for REF_407

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_472(uint256) := REF_407(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_472

Name: TMP_472 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_473(uint256) = TMP_472 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_473

Name: TMP_473 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_407 (->pegObservations_6) := TMP_473(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_407

Name: REF_407 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_408(uint256) -> pegObservations_6[TMP_472]
INDEX
[i]Type for REF_408

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_408 (->pegObservations_7) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_408

Name: REF_408 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
TMP_474(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_474

Name: TMP_474 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
TMP_469 = CONVERT _auction_1 to IAuction
auction_1(IAuction) := TMP_469(IAuction)
auctionAverageLookback_1(uint256) := _period_1(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_470(bool) = i_2 < _period_1
CONDITION TMP_470
REF_407 -> LENGTH pegObservations_5
TMP_472(uint256) := REF_407(uint256)
TMP_473(uint256) = TMP_472 + 1
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
REF_407 (->pegObservations_6) := TMP_473(uint256)
REF_408(uint256) -> pegObservations_6[TMP_472]
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
REF_408 (->pegObservations_7) := 0(uint256)
TMP_474(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: STABILIZER_NODE_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
init
end
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
Converting _stabilizerNode_1

Name: _stabilizerNode Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
init
end
StabilizerNode
[i]Type for TMP_468

Name: TMP_468 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for stabilizerNode

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_469 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_469

Name: TMP_469 Function: initialize
Num: 
Den: 
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_1(IAuction) := TMP_469(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
auctionAverageLookback_1(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: i, Num: 2
Globalname: i
End popogation
Name: i, Num: 2
Globalname: i

Name: i Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_470(bool) = i_2 < _period_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_470

Name: TMP_470 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_407 -> LENGTH pegObservations_5
[i]Type for REF_407

Name: REF_407 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_472(uint256) := REF_407(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_472

Name: TMP_472 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_473(uint256) = TMP_472 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for TMP_473

Name: TMP_473 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_407 (->pegObservations_6) := TMP_473(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_407

Name: REF_407 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_408(uint256) -> pegObservations_6[TMP_472]
INDEX
[i]Type for REF_408

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_408 (->pegObservations_7) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_408

Name: REF_408 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
TMP_474(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_474

Name: TMP_474 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
MODIFIER_CALL, Initializable.initializer()()
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
TMP_469 = CONVERT _auction_1 to IAuction
auction_1(IAuction) := TMP_469(IAuction)
auctionAverageLookback_1(uint256) := _period_1(uint256)
i_1(uint256) := 0(uint256)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_470(bool) = i_2 < _period_1
CONDITION TMP_470
REF_407 -> LENGTH pegObservations_5
TMP_472(uint256) := REF_407(uint256)
TMP_473(uint256) = TMP_472 + 1
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
REF_407 (->pegObservations_6) := TMP_473(uint256)
REF_408(uint256) -> pegObservations_6[TMP_472]
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
REF_408 (->pegObservations_7) := 0(uint256)
TMP_474(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: STABILIZER_NODE_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_11(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_16(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_1(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
INTERNAL_CALL, Permissions._adminSetup(address)(_timelock_1)
init
end
ADMIN_ROLE_13(bytes32) := ϕ(['ADMIN_ROLE_3'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(STABILIZER_NODE_ROLE_18,_stabilizerNode_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_stabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(ADMIN_ROLE_14,initialAdmin_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', 'initialAdmin', [], -1, -998, 'u']

Name: account Function: None
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -998
Norm: u
LF: initialAdmin
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_468 = CONVERT _stabilizerNode_1 to IStabilizerNode
Converting _stabilizerNode_1

Name: _stabilizerNode Function: None
Num: 
Den: 
Address: -997
Norm: u
LF: _stabilizerNode
Value: u
Fields: 
Finance Type: undef
init
end
StabilizerNode
[i]Type for TMP_468

Name: TMP_468 Function: initialize
Num: 
Den: 
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_1(IStabilizerNode) := TMP_468(IStabilizerNode)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for stabilizerNode

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_469 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction Function: None
Num: 
Den: 
Address: -996
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_469

Name: TMP_469 Function: initialize
Num: 
Den: 
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_1(IAuction) := TMP_469(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
auctionAverageLookback_1(uint256) := _period_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
i_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_470(bool) = i_2 < _period_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_470

Name: TMP_470 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_407 -> LENGTH pegObservations_5
[i]Type for REF_407

Name: REF_407 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_472(uint256) := REF_407(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_472

Name: TMP_472 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_473(uint256) = TMP_472 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for TMP_473

Name: TMP_473 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_6(uint256[]) := ϕ(['pegObservations_5'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_407 (->pegObservations_6) := TMP_473(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_407

Name: REF_407 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_408(uint256) -> pegObservations_6[TMP_472]
INDEX
[i]Type for REF_408

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_7(uint256[]) := ϕ(['pegObservations_6'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_408 (->pegObservations_7) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_408

Name: REF_408 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_474(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_474

Name: TMP_474 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



consult
Finding type for excess(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


excess_1(uint256) := ϕ(['usableExcess_1'])
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
frequency_1(uint256) := TMP_476(uint256)
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
participation_1(uint256) := TMP_477(uint256)
TMP_478(uint256) = participation_1 * 2
TMP_479(uint256) = frequency_1 + TMP_478
TMP_480(uint256) = TMP_479 / 3
skew_1(uint256) := TMP_480(uint256)
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
RETURN TMP_482


Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
Propogating parameters and globals to SSA variables...
End popogation
Name: pegObservations, Num: 8
Globalname: pegObservations
global...

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: auctionAverageLookback, Num: 4
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: count, Num: 1
Globalname: count
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 1
Globalname: initialIndex
End popogation
initialIndex_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_497(bool) = count_1 > auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_497

Name: TMP_497 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialIndex, Num: 3
Globalname: initialIndex

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
Phi
init
end
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 2
Globalname: initialIndex
End popogation
TMP_498(uint256) = count_1 - auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_498

Name: TMP_498 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialIndex_2(uint256) := TMP_498(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialIndex_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
Name: i, Num: 2
Globalname: i
End popogation
Name: total, Num: 2
Globalname: total

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_1', 'total_3'])
Phi
init
end
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_499(bool) = i_2 < count_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_499

Name: TMP_499 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: _index Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: auctionAverageLookback, Num: 6
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_500

Name: TMP_500 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pegObservations, Num: 9
Globalname: pegObservations
global...

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: index, Num: 1
Globalname: index
Name: total, Num: 3
Globalname: total
End popogation
REF_423(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_423

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_501(uint256) = total_2 + REF_423
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_501

Name: TMP_501 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_3(uint256) := TMP_501(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_502(uint256) = total_2 * 10000
testing mul...
init
end
init
end

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_502

Name: TMP_502 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_503

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
RETURN TMP_503
RETURN
init
end

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 1
Globalname: initialIndex
End popogation
initialIndex_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_497(bool) = count_1 > auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_497

Name: TMP_497 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialIndex, Num: 3
Globalname: initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
Phi
init
end
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 2
Globalname: initialIndex
End popogation
TMP_498(uint256) = count_1 - auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_498

Name: TMP_498 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialIndex_2(uint256) := TMP_498(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialIndex_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
Name: i, Num: 2
Globalname: i
End popogation
Name: total, Num: 2
Globalname: total

Name: total Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_1', 'total_3'])
Phi
init
end
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_499(bool) = i_2 < count_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_499

Name: TMP_499 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
init
end
[[-1], [-1], 0, None, [], -1, 'u', 1]

Name: _index Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_500

Name: TMP_500 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
Name: total, Num: 3
Globalname: total
End popogation
REF_423(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_423

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_501(uint256) = total_2 + REF_423
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_501

Name: TMP_501 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_3(uint256) := TMP_501(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_502(uint256) = total_2 * 10000
testing mul...
init
end
init
end

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_502

Name: TMP_502 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_503

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
RETURN TMP_503
RETURN
init
end

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
Propogating parameters and globals to SSA variables...
End popogation
Name: auctionAverageLookback, Num: 2
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: auction, Num: 2
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 1
Globalname: initialAuction
End popogation
initialAuction_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation
Name: auctionAverageLookback, Num: 3
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: auction, Num: 3
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
High Call: currentAuctionId
Running querryfc
Written func info: Auction, currentAuctionId
Handling balance function!
-996
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_488

Name: TMP_488 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
currentAuctionId_1(uint256) := TMP_488(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for currentAuctionId

Name: currentAuctionId Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_489

Name: TMP_489 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialAuction, Num: 3
Globalname: initialAuction

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
Phi
init
end
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 2
Globalname: initialAuction
End popogation
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialAuction_2(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialAuction_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: aggregate, Num: 1
Globalname: aggregate
Name: i, Num: 2
Globalname: i
End popogation
Name: aggregate, Num: 1
Globalname: aggregate

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_491(bool) = i_2 < currentAuctionId_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_491

Name: TMP_491 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
participation_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
End popogation
REF_418(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
OUT KEY: getAverageParticipation_aggregate_maxCommitments
OUT KEY: getAverageParticipation_aggregate_maxCommitments
No field found
[i]Type for REF_418

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_494(bool) = REF_418 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_494

Name: TMP_494 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: maxCommitments, Num: 1
Globalname: maxCommitments
End popogation
Name: auction, Num: 4
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
High Call: getAuctionCommitments
Running querryfc
Written func info: Auction, getAuctionCommitments
Handling balance function!
-996
Finding type for hlc_1([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784a00>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784bb0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
Finding type for commitments(uint256 ... )
[i]Type for commitments

Name: commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
Finding type for maxCommitments(uint256 ... )
[i]Type for maxCommitments

Name: maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: participation, Num: 3
Globalname: participation

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
Phi
init
end
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: participation, Num: 2
Globalname: participation
End popogation
REF_419(uint256) -> aggregate_1.commitments
MEMBER
init
end
init
end
OUT KEY: getAverageParticipation_aggregate_commitments
OUT KEY: getAverageParticipation_aggregate_commitments
No field found
[i]Type for REF_419

Name: aggregate.commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
testing mul...
init
end
init
end

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_495

Name: TMP_495 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_422(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
[i]Type for REF_422

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_496

Name: TMP_496 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
participation_2(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: aggregate, Num: 2
Globalname: aggregate
End popogation
Name: aggregate, Num: 2
Globalname: aggregate

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_414(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
[i]Type for REF_414

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
REF_415(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
[i]Type for REF_415

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_492(uint256) = REF_415 + maxCommitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_492

Name: TMP_492 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments
Finance Type: undef
XXXX
REF_414 (->aggregate_2) := TMP_492(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_414

Name: REF_414 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 2
Globalname: aggregate
Name: aggregate, Num: 3
Globalname: aggregate
End popogation
Name: aggregate, Num: 3
Globalname: aggregate

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_416(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
OUT KEY: getAverageParticipation_aggregate_commitments
OUT KEY: getAverageParticipation_aggregate_commitments
No field found
[i]Type for REF_416

Name: aggregate.commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
REF_417(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
OUT KEY: getAverageParticipation_aggregate_commitments
OUT KEY: getAverageParticipation_aggregate_commitments
No field found
[i]Type for REF_417

Name: aggregate.commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_493(uint256) = REF_417 + commitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
XXXX
REF_416 (->aggregate_3) := TMP_493(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_416

Name: REF_416 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN participation_3
RETURN
init
end

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 1
Globalname: initialAuction
End popogation
initialAuction_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
High Call: currentAuctionId
Running querryfc
Written func info: Auction, currentAuctionId
Handling balance function!
-996
Finding type for hlc_2(uint256 ... )
[i]Type for TMP_488

Name: TMP_488 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
currentAuctionId_1(uint256) := TMP_488(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for currentAuctionId

Name: currentAuctionId Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_489

Name: TMP_489 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialAuction, Num: 3
Globalname: initialAuction

Name: initialAuction Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
Phi
init
end
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 2
Globalname: initialAuction
End popogation
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
initialAuction_2(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialAuction_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: aggregate, Num: 1
Globalname: aggregate
Name: i, Num: 2
Globalname: i
End popogation
Name: aggregate, Num: 1
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_491(bool) = i_2 < currentAuctionId_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_491

Name: TMP_491 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
participation_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
End popogation
REF_418(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_418

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_494(bool) = REF_418 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_494

Name: TMP_494 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: maxCommitments, Num: 1
Globalname: maxCommitments
End popogation

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
High Call: getAuctionCommitments
Running querryfc
Written func info: Auction, getAuctionCommitments
Handling balance function!
-996
Finding type for hlc_3([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784a00>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784bb0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
Finding type for commitments(uint256 ... )
[i]Type for commitments

Name: commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
Finding type for maxCommitments(uint256 ... )
[i]Type for maxCommitments

Name: maxCommitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: participation, Num: 3
Globalname: participation

Name: participation Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
Phi
init
end
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: participation, Num: 2
Globalname: participation
End popogation
REF_419(uint256) -> aggregate_1.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_419

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
testing mul...
init
end
init
end

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_495

Name: TMP_495 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_422(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_422

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_496

Name: TMP_496 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
participation_2(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: maxCommitments, Num: 1
Globalname: maxCommitments
Name: aggregate, Num: 2
Globalname: aggregate
End popogation
Name: aggregate, Num: 2
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
REF_414(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_414

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
REF_415(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_415

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_492(uint256) = REF_415 + maxCommitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_492

Name: TMP_492 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
REF_414 (->aggregate_2) := TMP_492(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_414

Name: REF_414 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: aggregate, Num: 2
Globalname: aggregate
Name: aggregate, Num: 3
Globalname: aggregate
End popogation
Name: aggregate, Num: 3
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
Phid
REF_416(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_416

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
REF_417(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_417

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_493(uint256) = REF_417 + commitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
XXXX
REF_416 (->aggregate_3) := TMP_493(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_416

Name: REF_416 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN participation_3
RETURN
init
end

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
Error with TMP_479 in function consult
Error with: TMP_479 in function consult
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef


excess_1(uint256) := ϕ(['usableExcess_1'])
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
frequency_1(uint256) := TMP_476(uint256)
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
participation_1(uint256) := TMP_477(uint256)
TMP_478(uint256) = participation_1 * 2
TMP_479(uint256) = frequency_1 + TMP_478
TMP_480(uint256) = TMP_479 / 3
skew_1(uint256) := TMP_480(uint256)
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
RETURN TMP_482


Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
init
end
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
init
end
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



getRealBurnBudget
Finding type for maxBurnSpend(uint256 ... )
Finding type for premiumExcess(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


TMP_483(bool) = premiumExcess_1 > maxBurnSpend_1
CONDITION TMP_483
RETURN premiumExcess_1
TMP_484(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['maxBurnSpend_1', 'premiumExcess_1'] 
usableExcess_1(uint256) := TMP_484(uint256)
TMP_485(bool) = usableExcess_1 == 0
CONDITION TMP_485
RETURN premiumExcess_1
TMP_486(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.consult(uint256)(usableExcess_1)
burnable_1(uint256) := TMP_486(uint256)
TMP_487(uint256) = premiumExcess_1 + burnable_1
RETURN TMP_487


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
Name: maxBurnSpend, Num: 1
Globalname: maxBurnSpend
End popogation
TMP_483(bool) = premiumExcess_1 > maxBurnSpend_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_483

Name: TMP_483 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
RETURN premiumExcess_1
RETURN
init
end

Name: premiumExcess Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
Name: maxBurnSpend, Num: 1
Globalname: maxBurnSpend
Name: usableExcess, Num: 1
Globalname: usableExcess
End popogation
TMP_484(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['maxBurnSpend_1', 'premiumExcess_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_484

Name: TMP_484 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
usableExcess_1(uint256) := TMP_484(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for usableExcess

Name: usableExcess Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: usableExcess, Num: 1
Globalname: usableExcess
End popogation
TMP_485(bool) = usableExcess_1 == 0
[i]Type for TMP_485

Name: TMP_485 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
RETURN premiumExcess_1
RETURN
init
end

Name: premiumExcess Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: usableExcess, Num: 1
Globalname: usableExcess
Name: burnable, Num: 1
Globalname: burnable
End popogation
TMP_486(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.consult(uint256)(usableExcess_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
init
end
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
init
end
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
init
end
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
init
end
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_486

Name: TMP_486 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
burnable_1(uint256) := TMP_486(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for burnable

Name: burnable Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
TMP_487(uint256) = premiumExcess_1 + burnable_1
init
end
init
end
lnorm: u rnorm: -4
init
end
[i]Type for TMP_487

Name: TMP_487 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_487
RETURN
init
end

Name: TMP_487 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef


TMP_483(bool) = premiumExcess_1 > maxBurnSpend_1
CONDITION TMP_483
RETURN premiumExcess_1
TMP_484(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['maxBurnSpend_1', 'premiumExcess_1'] 
usableExcess_1(uint256) := TMP_484(uint256)
TMP_485(bool) = usableExcess_1 == 0
CONDITION TMP_485
RETURN premiumExcess_1
TMP_486(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.consult(uint256)(usableExcess_1)
burnable_1(uint256) := TMP_486(uint256)
TMP_487(uint256) = premiumExcess_1 + burnable_1
RETURN TMP_487


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
Name: maxBurnSpend, Num: 1
Globalname: maxBurnSpend
End popogation
TMP_483(bool) = premiumExcess_1 > maxBurnSpend_1
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_483

Name: TMP_483 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
RETURN premiumExcess_1
RETURN
init
end

Name: premiumExcess Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
Name: maxBurnSpend, Num: 1
Globalname: maxBurnSpend
Name: usableExcess, Num: 1
Globalname: usableExcess
End popogation
TMP_484(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['maxBurnSpend_1', 'premiumExcess_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_484

Name: TMP_484 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
usableExcess_1(uint256) := TMP_484(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for usableExcess

Name: usableExcess Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: usableExcess, Num: 1
Globalname: usableExcess
End popogation
TMP_485(bool) = usableExcess_1 == 0
[i]Type for TMP_485

Name: TMP_485 Function: getRealBurnBudget
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
RETURN premiumExcess_1
RETURN
init
end

Name: premiumExcess Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: usableExcess, Num: 1
Globalname: usableExcess
Name: burnable, Num: 1
Globalname: burnable
End popogation
TMP_486(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.consult(uint256)(usableExcess_1)
init
end
[[], [], 'u', None, [], -1, 'u', 'u']

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
init
end
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
init
end
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Name: excess, Num: 1
Globalname: excess

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
excess_1(uint256) := ϕ(['usableExcess_1'])
Phi
[i]Type for excess

Name: excess Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: frequency, Num: 1
Globalname: frequency
End popogation
TMP_476(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getPegDeltaFrequency()()
init
end
[i]Type for TMP_476

Name: TMP_476 Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
frequency_1(uint256) := TMP_476(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for frequency

Name: frequency Function: consult
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
TMP_477(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew.getAverageParticipation()()
init
end
[i]Type for TMP_477

Name: TMP_477 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
participation_1(uint256) := TMP_477(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: skew, Num: 1
Globalname: skew
End popogation
TMP_478(uint256) = participation_1 * 2
testing mul...
init
end
init
end

Name: participation Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 2 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_478

Name: TMP_478 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_479(uint256) = frequency_1 + TMP_478
init
end
init
end
lnorm: 4 rnorm: 0
init
end
[i]Type for TMP_479

Name: TMP_479 Function: consult
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_480(uint256) = TMP_479 / 3
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_480

Name: TMP_480 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
skew_1(uint256) := TMP_480(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for skew

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: excess, Num: 1
Globalname: excess
End popogation
TMP_481(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['excess_1', 'skew_1'] 
testing mul...
init
end
init
end

Name: excess_1 Function: consult
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: skew Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 0
Fields: 
Finance Type: undef
lnorm: u rnorm: 0
init
end
[i]Type for TMP_481

Name: TMP_481 Function: consult
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_482(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_481', '10000'] 
init
end
init
end
lnorm: 0 rnorm: 4
init
end
[i]Type for TMP_482

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_482
RETURN
init
end

Name: TMP_482 Function: consult
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_486

Name: TMP_486 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
burnable_1(uint256) := TMP_486(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for burnable

Name: burnable Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: premiumExcess, Num: 1
Globalname: premiumExcess
End popogation
TMP_487(uint256) = premiumExcess_1 + burnable_1
init
end
init
end
lnorm: u rnorm: -4
init
end
[i]Type for TMP_487

Name: TMP_487 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_487
RETURN
init
end

Name: TMP_487 Function: getRealBurnBudget
Num: -1
Den: -1
Address: u
Norm: -4
LF: None
Value: u
Fields: 
Finance Type: undef
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



getAverageParticipation


auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
initialAuction_1(uint256) := 0(uint256)
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
currentAuctionId_1(uint256) := TMP_488(uint256)
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
CONDITION TMP_489
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
initialAuction_2(uint256) := TMP_490(uint256)
i_1(uint256) := initialAuction_3(uint256)
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_491(bool) = i_2 < currentAuctionId_1
CONDITION TMP_491
participation_1(uint256) := 0(uint256)
REF_418(uint256) -> aggregate_1.maxCommitments
TMP_494(bool) = REF_418 > 0
CONDITION TMP_494
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
RETURN participation_3
REF_419(uint256) -> aggregate_1.commitments
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
REF_422(uint256) -> aggregate_1.maxCommitments
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
participation_2(uint256) := TMP_496(uint256)
REF_414(uint256) -> aggregate_1.maxCommitments
REF_415(uint256) -> aggregate_1.maxCommitments
TMP_492(uint256) = REF_415 + maxCommitments_1
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
REF_414 (->aggregate_2) := TMP_492(uint256)
REF_416(uint256) -> aggregate_2.commitments
REF_417(uint256) -> aggregate_2.commitments
TMP_493(uint256) = REF_417 + commitments_1
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
REF_416 (->aggregate_3) := TMP_493(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 1
Globalname: initialAuction
End popogation
initialAuction_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
High Call: currentAuctionId
Running querryfc
Written func info: Auction, currentAuctionId
Handling balance function!
-996
Finding type for hlc_0(uint256 ... )
[i]Type for TMP_488

Name: TMP_488 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
currentAuctionId_1(uint256) := TMP_488(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for currentAuctionId

Name: currentAuctionId Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_489

Name: TMP_489 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialAuction, Num: 3
Globalname: initialAuction

Name: initialAuction Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
Phi
init
end
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 2
Globalname: initialAuction
End popogation
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
initialAuction_2(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialAuction_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: aggregate, Num: 1
Globalname: aggregate
Name: i, Num: 2
Globalname: i
End popogation
Name: aggregate, Num: 1
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_491(bool) = i_2 < currentAuctionId_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_491

Name: TMP_491 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
participation_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
End popogation
REF_418(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_418

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_494(bool) = REF_418 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_494

Name: TMP_494 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: maxCommitments, Num: 1
Globalname: maxCommitments
End popogation

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
High Call: getAuctionCommitments
Running querryfc
Written func info: Auction, getAuctionCommitments
Handling balance function!
-996
Finding type for hlc_1([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784a00>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784bb0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
Finding type for commitments(uint256 ... )
[i]Type for commitments

Name: commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
Finding type for maxCommitments(uint256 ... )
[i]Type for maxCommitments

Name: maxCommitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: participation, Num: 3
Globalname: participation

Name: participation Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
Phi
init
end
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN participation_3
RETURN
init
end

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: participation, Num: 2
Globalname: participation
End popogation
REF_419(uint256) -> aggregate_1.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_419

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
testing mul...
init
end
init
end

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_495

Name: TMP_495 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_422(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_422

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_496

Name: TMP_496 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
participation_2(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: maxCommitments, Num: 1
Globalname: maxCommitments
Name: aggregate, Num: 2
Globalname: aggregate
End popogation
Name: aggregate, Num: 2
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
REF_414(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_414

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
REF_415(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_415

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_492(uint256) = REF_415 + maxCommitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_492

Name: TMP_492 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
REF_414 (->aggregate_2) := TMP_492(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_414

Name: REF_414 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: aggregate, Num: 2
Globalname: aggregate
Name: aggregate, Num: 3
Globalname: aggregate
End popogation
Name: aggregate, Num: 3
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
Phid
REF_416(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_416

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
REF_417(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_417

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_493(uint256) = REF_417 + commitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
XXXX
REF_416 (->aggregate_3) := TMP_493(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_416

Name: REF_416 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX


auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
initialAuction_1(uint256) := 0(uint256)
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
currentAuctionId_1(uint256) := TMP_488(uint256)
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
CONDITION TMP_489
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
initialAuction_2(uint256) := TMP_490(uint256)
i_1(uint256) := initialAuction_3(uint256)
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_491(bool) = i_2 < currentAuctionId_1
CONDITION TMP_491
participation_1(uint256) := 0(uint256)
REF_418(uint256) -> aggregate_1.maxCommitments
TMP_494(bool) = REF_418 > 0
CONDITION TMP_494
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
RETURN participation_3
REF_419(uint256) -> aggregate_1.commitments
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
REF_422(uint256) -> aggregate_1.maxCommitments
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
participation_2(uint256) := TMP_496(uint256)
REF_414(uint256) -> aggregate_1.maxCommitments
REF_415(uint256) -> aggregate_1.maxCommitments
TMP_492(uint256) = REF_415 + maxCommitments_1
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
REF_414 (->aggregate_2) := TMP_492(uint256)
REF_416(uint256) -> aggregate_2.commitments
REF_417(uint256) -> aggregate_2.commitments
TMP_493(uint256) = REF_417 + commitments_1
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
REF_416 (->aggregate_3) := TMP_493(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
auctionAverageLookback_2(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_2(IAuction) := ϕ(['auction_5', 'auction_0', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 1
Globalname: initialAuction
End popogation
initialAuction_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TMP_488(uint256) = HIGH_LEVEL_CALL, dest:auction_2(IAuction), function:currentAuctionId, arguments:[]  
High Call: currentAuctionId
Running querryfc
Written func info: Auction, currentAuctionId
Handling balance function!
-996
Finding type for hlc_2(uint256 ... )
[i]Type for TMP_488

Name: TMP_488 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_3(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_2', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
auction_3(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1', 'auction_2'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
currentAuctionId_1(uint256) := TMP_488(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for currentAuctionId

Name: currentAuctionId Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: currentAuctionId, Num: 1
Globalname: currentAuctionId
End popogation
TMP_489(bool) = currentAuctionId_1 > auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
init
end
[i]Type for TMP_489

Name: TMP_489 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialAuction, Num: 3
Globalname: initialAuction

Name: initialAuction Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
initialAuction_3(uint256) := ϕ(['initialAuction_1', 'initialAuction_2'])
Phi
init
end
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialAuction, Num: 2
Globalname: initialAuction
End popogation
TMP_490(uint256) = currentAuctionId_1 - auctionAverageLookback_3
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_490

Name: TMP_490 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
initialAuction_2(uint256) := TMP_490(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialAuction

Name: initialAuction Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialAuction_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: aggregate, Num: 1
Globalname: aggregate
Name: i, Num: 2
Globalname: i
End popogation
Name: aggregate, Num: 1
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Phid
aggregate_1(AuctionData) := ϕ(['aggregate_0', 'aggregate_3'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_491(bool) = i_2 < currentAuctionId_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_491

Name: TMP_491 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: participation, Num: 1
Globalname: participation
End popogation
participation_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
End popogation
REF_418(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_418

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_494(bool) = REF_418 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_494

Name: TMP_494 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: maxCommitments, Num: 1
Globalname: maxCommitments
End popogation

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
Phid
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:auction_3(IAuction), function:getAuctionCommitments, arguments:['i_2']  
High Call: getAuctionCommitments
Running querryfc
Written func info: Auction, getAuctionCommitments
Handling balance function!
-996
Finding type for hlc_3([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784a00>, <slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f9d0d784bb0>] ... )
[i]Type for TUPLE_6

Name: TUPLE_6 Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auction_4(IAuction) := ϕ(['auction_5', 'auction_3', 'auction_1'])
Phi
[i]Type for auction

Name: auction Function: getAverageParticipation
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
commitments_1(uint256)= UNPACK TUPLE_6 index: 0 
Finding type for commitments(uint256 ... )
[i]Type for commitments

Name: commitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
maxCommitments_1(uint256)= UNPACK TUPLE_6 index: 1 
Finding type for maxCommitments(uint256 ... )
[i]Type for maxCommitments

Name: maxCommitments Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: participation, Num: 3
Globalname: participation

Name: participation Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
participation_3(uint256) := ϕ(['participation_1', 'participation_2'])
Phi
init
end
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
RETURN participation_3
RETURN
init
end

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: participation, Num: 2
Globalname: participation
End popogation
REF_419(uint256) -> aggregate_1.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_419

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_495(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_419', '10000'] 
testing mul...
init
end
init
end

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_495

Name: TMP_495 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_422(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_422

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_496(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_495', 'REF_422'] 
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_496

Name: TMP_496 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
participation_2(uint256) := TMP_496(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for participation

Name: participation Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: aggregate, Num: 1
Globalname: aggregate
Name: maxCommitments, Num: 1
Globalname: maxCommitments
Name: aggregate, Num: 2
Globalname: aggregate
End popogation
Name: aggregate, Num: 2
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
Phid
REF_414(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_414

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
REF_415(uint256) -> aggregate_1.maxCommitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_415

Name: aggregate.maxCommitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_492(uint256) = REF_415 + maxCommitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_492

Name: TMP_492 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_2(AuctionData) := ϕ(['aggregate_1'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: maxCommitments, commitments
Finance Type: undef
XXXX
REF_414 (->aggregate_2) := TMP_492(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_414

Name: REF_414 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_1, Field: maxCommitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: commitments, Num: 1
Globalname: commitments
Name: aggregate, Num: 2
Globalname: aggregate
Name: aggregate, Num: 3
Globalname: aggregate
End popogation
Name: aggregate, Num: 3
Globalname: aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
Phid
REF_416(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_416

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
REF_417(uint256) -> aggregate_2.commitments
MEMBER
init
end
init
end
init
end
[i]Type for REF_417

Name: aggregate.commitments Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
TMP_493(uint256) = REF_417 + commitments_1
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_493

Name: TMP_493 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
aggregate_3(AuctionData) := ϕ(['aggregate_2'])
Phi
[i]Type for aggregate

Name: aggregate Function: getAverageParticipation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: commitments
Finance Type: undef
XXXX
REF_416 (->aggregate_3) := TMP_493(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_416

Name: REF_416 Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: aggregate_2, Field: commitments
init
end
Finance type key: (-1, -1)
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getAverageParticipation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



getPegDeltaFrequency


pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
initialIndex_1(uint256) := 0(uint256)
TMP_497(bool) = count_1 > auctionAverageLookback_4
CONDITION TMP_497
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
TMP_498(uint256) = count_1 - auctionAverageLookback_4
initialIndex_2(uint256) := TMP_498(uint256)
total_1(uint256) := 0(uint256)
i_1(uint256) := initialIndex_3(uint256)
total_2(uint256) := ϕ(['total_1', 'total_3'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_499(bool) = i_2 < count_1
CONDITION TMP_499
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
index_1(uint256) := TMP_500(uint256)
REF_423(uint256) -> pegObservations_9[index_1]
TMP_501(uint256) = total_2 + REF_423
total_3(uint256) := TMP_501(uint256)
i_3(uint256) = i_2 + 1
TMP_502(uint256) = total_2 * 10000
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
RETURN TMP_503


Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 1
Globalname: initialIndex
End popogation
initialIndex_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_497(bool) = count_1 > auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_497

Name: TMP_497 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialIndex, Num: 3
Globalname: initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
Phi
init
end
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 2
Globalname: initialIndex
End popogation
TMP_498(uint256) = count_1 - auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_498

Name: TMP_498 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialIndex_2(uint256) := TMP_498(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialIndex_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
Name: i, Num: 2
Globalname: i
End popogation
Name: total, Num: 2
Globalname: total

Name: total Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_1', 'total_3'])
Phi
init
end
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_499(bool) = i_2 < count_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_499

Name: TMP_499 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
init
end
[[-1], [-1], 0, None, [], -1, 'u', 2]

Name: _index Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_500

Name: TMP_500 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
Name: total, Num: 3
Globalname: total
End popogation
REF_423(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_423

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_501(uint256) = total_2 + REF_423
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_501

Name: TMP_501 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_3(uint256) := TMP_501(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_502(uint256) = total_2 * 10000
testing mul...
init
end
init
end

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_502

Name: TMP_502 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_503

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
RETURN TMP_503
RETURN
init
end

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef


pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
initialIndex_1(uint256) := 0(uint256)
TMP_497(bool) = count_1 > auctionAverageLookback_4
CONDITION TMP_497
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
TMP_498(uint256) = count_1 - auctionAverageLookback_4
initialIndex_2(uint256) := TMP_498(uint256)
total_1(uint256) := 0(uint256)
i_1(uint256) := initialIndex_3(uint256)
total_2(uint256) := ϕ(['total_1', 'total_3'])
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_499(bool) = i_2 < count_1
CONDITION TMP_499
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
index_1(uint256) := TMP_500(uint256)
REF_423(uint256) -> pegObservations_9[index_1]
TMP_501(uint256) = total_2 + REF_423
total_3(uint256) := TMP_501(uint256)
i_3(uint256) = i_2 + 1
TMP_502(uint256) = total_2 * 10000
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
RETURN TMP_503


Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
pegObservations_8(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_4(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
count_1(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 1
Globalname: initialIndex
End popogation
initialIndex_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_497(bool) = count_1 > auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_497

Name: TMP_497 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: initialIndex, Num: 3
Globalname: initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
initialIndex_3(uint256) := ϕ(['initialIndex_2', 'initialIndex_1'])
Phi
init
end
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: initialIndex, Num: 2
Globalname: initialIndex
End popogation
TMP_498(uint256) = count_1 - auctionAverageLookback_4
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_498

Name: TMP_498 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
initialIndex_2(uint256) := TMP_498(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for initialIndex

Name: initialIndex Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: total, Num: 1
Globalname: total
End popogation
total_1(uint256) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := initialIndex_3(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: total, Num: 2
Globalname: total
Name: i, Num: 2
Globalname: i
End popogation
Name: total, Num: 2
Globalname: total

Name: total Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
Name: i, Num: 2
Globalname: i

Name: i Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Phid
total_2(uint256) := ϕ(['total_1', 'total_3'])
Phi
init
end
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_499(bool) = i_2 < count_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_499

Name: TMP_499 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_500(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(i_2)
init
end
[[-1], [-1], 0, None, [], -1, 'u', 3]

Name: _index Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: _index_1 Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
_index_1(uint256) := ϕ(['count_4', 'i_2', 'count_8'])
Phi
[i]Type for _index

Name: _index Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_6(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: _getIndexOfObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_504(uint256) = _index_1 % auctionAverageLookback_6
[i]Type for TMP_504

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_504
RETURN
init
end

Name: TMP_504 Function: _getIndexOfObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_500

Name: TMP_500 Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_500(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: getPegDeltaFrequency
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
Name: total, Num: 3
Globalname: total
End popogation
REF_423(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_423

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_501(uint256) = total_2 + REF_423
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_501

Name: TMP_501 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
total_3(uint256) := TMP_501(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for total

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_502(uint256) = total_2 * 10000
testing mul...
init
end
init
end

Name: total Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: 10000 Function: None
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: u
Fields: 
Finance Type: undef
lnorm: u rnorm: 4
init
end
[i]Type for TMP_502

Name: TMP_502 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_503(uint256) = TMP_502 / auctionAverageLookback_4
init
end
init
end
lnorm: 4 rnorm: u
init
end
init
end
init
end
lnorm: 4 rnorm: u
init
end
[i]Type for TMP_503

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
RETURN TMP_503
RETURN
init
end

Name: TMP_503 Function: getPegDeltaFrequency
Num: -1
Den: -1
Address: u
Norm: 4
LF: None
Value: 0
Fields: 
Finance Type: undef
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



_getIndexOfObservation
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



addAbovePegObservation
Finding type for amount(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


STABILIZER_NODE_ROLE_20(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
count_3(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_20,Must be a stabilizer node to call this method)
TMP_505(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_4)
index_1(uint256) := TMP_505(uint256)
REF_424(uint256) -> pegObservations_9[index_1]
pegObservations_10(uint256[]) := ϕ(['pegObservations_9'])
REF_424 (->pegObservations_10) := 1(uint256)
TMP_506(uint256) = count_5 + 1
count_6(uint256) := TMP_506(uint256)
Emit AbovePegObservation(amount_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: STABILIZER_NODE_ROLE, Num: 20
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: count, Num: 3
Globalname: count
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
STABILIZER_NODE_ROLE_20(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_3(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_20,Must be a stabilizer node to call this method)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reason Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['TIMELOCK_ROLE_3', 'ADMIN_ROLE_18', 'TIMELOCK_ROLE_12', 'STABILIZER_NODE_ROLE_22', 'TIMELOCK_ROLE_14', 'STABILIZER_NODE_ROLE_20', 'ADMIN_ROLE_16', 'ADMIN_ROLE_20', 'TIMELOCK_ROLE_10', 'TIMELOCK_ROLE_16', 'TIMELOCK_ROLE_5', 'TIMELOCK_ROLE_7'])
Phi
[i]Type for role

Name: role Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._onlyRole(bytes32,string)(role_1,reason_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: reason Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: reason_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reason_1(string) := ϕ(['reason_1'])
Phi
[i]Type for reason

Name: reason Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_433(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_433

Name: TMP_433 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_434(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(role_1,TMP_433)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: account Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 1
Globalname: _roles
global...

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'REF_392', 'REF_394'])
Phi
[i]Type for role

Name: role Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['TMP_443', 'TMP_447', 'TMP_433'])
Phi
[i]Type for account

Name: account Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_1(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_380(AccessControl.RoleData) -> _roles_1[role_1]
INDEX
[i]Type for REF_380

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_381(EnumerableSet.AddressSet) -> REF_380.members
MEMBER
init
end
init
end
OUT KEY: hasRole__roles_members
OUT KEY: hasRole__members
No field found
[i]Type for REF_381

Name: _roles.members Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_380, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_440(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.contains(EnumerableSet.AddressSet,address), arguments:['REF_381', 'account_1'] 
[i]Type for TMP_440

Name: TMP_440 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_440
RETURN
init
end

Name: TMP_440 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'REF_392', 'REF_394'])
Phi
[i]Type for role

Name: role Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['TMP_443', 'TMP_447', 'TMP_433'])
Phi
[i]Type for account

Name: account Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_1(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_380(AccessControl.RoleData) -> _roles_1[role_1]
INDEX
[i]Type for REF_380

Name: _roles Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
Root: None, Field: None
XXXX
REF_381(EnumerableSet.AddressSet) -> REF_380.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_381

Name: _roles.members Function: hasRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_380, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_440(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.contains(EnumerableSet.AddressSet,address), arguments:['REF_381', 'account_1'] 
[i]Type for TMP_440

Name: TMP_440 Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_440
RETURN
init
end

Name: TMP_440 Function: hasRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_434

Name: TMP_434 Function: _onlyRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_435(None) = SOLIDITY_CALL require(bool,string)(TMP_434,reason_1)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: reason_1 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1'])
Phi
[i]Type for role

Name: role Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
reason_1(string) := ϕ(['reason_1'])
Phi
[i]Type for reason

Name: reason Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_433(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_433

Name: TMP_433 Function: _onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_434(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(role_1,TMP_433)
init
end
init
end
init
end
[i]Type for TMP_434

Name: TMP_434 Function: _onlyRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_435(None) = SOLIDITY_CALL require(bool,string)(TMP_434,reason_1)
[i]Type for TMP_435

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['TIMELOCK_ROLE_3', 'ADMIN_ROLE_18', 'TIMELOCK_ROLE_12', 'STABILIZER_NODE_ROLE_22', 'TIMELOCK_ROLE_14', 'STABILIZER_NODE_ROLE_20', 'ADMIN_ROLE_16', 'ADMIN_ROLE_20', 'TIMELOCK_ROLE_10', 'TIMELOCK_ROLE_16', 'TIMELOCK_ROLE_5', 'TIMELOCK_ROLE_7'])
Phi
[i]Type for role

Name: role Function: onlyRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, Permissions._onlyRole(bytes32,string)(role_1,reason_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: count, Num: 4
Globalname: count
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: index, Num: 1
Globalname: index
End popogation
TMP_505(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_4)
init
end
init
end
[i]Type for TMP_505

Name: TMP_505 Function: addAbovePegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_505(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: addAbovePegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
Name: pegObservations, Num: 10
Globalname: pegObservations
global...

Name: pegObservations Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_424(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_424

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_10(uint256[]) := ϕ(['pegObservations_9'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_424 (->pegObservations_10) := 1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_424

Name: REF_424 Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: count, Num: 5
Globalname: count
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: count, Num: 6
Globalname: count
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_506(uint256) = count_5 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_506

Name: TMP_506 Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_6(uint256) := TMP_506(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for count

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation


STABILIZER_NODE_ROLE_20(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
count_3(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_20,Must be a stabilizer node to call this method)
TMP_505(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_4)
index_1(uint256) := TMP_505(uint256)
REF_424(uint256) -> pegObservations_9[index_1]
pegObservations_10(uint256[]) := ϕ(['pegObservations_9'])
REF_424 (->pegObservations_10) := 1(uint256)
TMP_506(uint256) = count_5 + 1
count_6(uint256) := TMP_506(uint256)
Emit AbovePegObservation(amount_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: STABILIZER_NODE_ROLE Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
STABILIZER_NODE_ROLE_20(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_3(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_20,Must be a stabilizer node to call this method)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_505(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_4)
init
end
init
end
[i]Type for TMP_505

Name: TMP_505 Function: addAbovePegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_505(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: addAbovePegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_424(uint256) -> pegObservations_9[index_1]
INDEX
[i]Type for REF_424

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_10(uint256[]) := ϕ(['pegObservations_9'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_424 (->pegObservations_10) := 1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_424

Name: REF_424 Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_506(uint256) = count_5 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_506

Name: TMP_506 Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_6(uint256) := TMP_506(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for count

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



addBelowPegObservation
Finding type for amount(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


STABILIZER_NODE_ROLE_22(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
count_7(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_22,Must be a stabilizer node to call this method)
TMP_509(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_8)
index_1(uint256) := TMP_509(uint256)
REF_425(uint256) -> pegObservations_10[index_1]
pegObservations_11(uint256[]) := ϕ(['pegObservations_10'])
REF_425 (->pegObservations_11) := 0(uint256)
TMP_510(uint256) = count_9 + 1
count_10(uint256) := TMP_510(uint256)
Emit BelowPegObservation(amount_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: STABILIZER_NODE_ROLE, Num: 22
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: count, Num: 7
Globalname: count
global...

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
STABILIZER_NODE_ROLE_22(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_7(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_22,Must be a stabilizer node to call this method)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: count, Num: 8
Globalname: count
global...

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: index, Num: 1
Globalname: index
End popogation
TMP_509(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_8)
init
end
init
end
[i]Type for TMP_509

Name: TMP_509 Function: addBelowPegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_509(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: addBelowPegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
Name: pegObservations, Num: 11
Globalname: pegObservations
global...

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_425(uint256) -> pegObservations_10[index_1]
INDEX
[i]Type for REF_425

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_11(uint256[]) := ϕ(['pegObservations_10'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_425 (->pegObservations_11) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_425

Name: REF_425 Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Name: count, Num: 9
Globalname: count
global...

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: count, Num: 10
Globalname: count
global...

Name: count Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_510(uint256) = count_9 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_510

Name: TMP_510 Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_10(uint256) := TMP_510(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for count

Name: count Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation


STABILIZER_NODE_ROLE_22(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
count_7(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_22,Must be a stabilizer node to call this method)
TMP_509(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_8)
index_1(uint256) := TMP_509(uint256)
REF_425(uint256) -> pegObservations_10[index_1]
pegObservations_11(uint256[]) := ϕ(['pegObservations_10'])
REF_425 (->pegObservations_11) := 0(uint256)
TMP_510(uint256) = count_9 + 1
count_10(uint256) := TMP_510(uint256)
Emit BelowPegObservation(amount_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: STABILIZER_NODE_ROLE Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: count Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
STABILIZER_NODE_ROLE_22(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_7(uint256) := ϕ(['count_0', 'count_10', 'count_2', 'count_6'])
Phi
[i]Type for count

Name: count Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(STABILIZER_NODE_ROLE_22,Must be a stabilizer node to call this method)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation
TMP_509(uint256) = INTERNAL_CALL, AuctionBurnReserveSkew._getIndexOfObservation(uint256)(count_8)
init
end
init
end
[i]Type for TMP_509

Name: TMP_509 Function: addBelowPegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
index_1(uint256) := TMP_509(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: addBelowPegObservation
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: index, Num: 1
Globalname: index
End popogation

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_425(uint256) -> pegObservations_10[index_1]
INDEX
[i]Type for REF_425

Name: pegObservations Function: addAbovePegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_11(uint256[]) := ϕ(['pegObservations_10'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_425 (->pegObservations_11) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_425

Name: REF_425 Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_510(uint256) = count_9 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_510

Name: TMP_510 Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
count_10(uint256) := TMP_510(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for count

Name: count Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: amount, Num: 1
Globalname: amount
End popogation
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



setNewStabilizerNode
Finding type for _node(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _node
    fields: []
    fintype: -1


ADMIN_ROLE_16(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
STABILIZER_NODE_ROLE_24(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
stabilizerNode_2(IStabilizerNode) := ϕ(['stabilizerNode_5', 'stabilizerNode_0', 'stabilizerNode_1'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_16,Must have admin role)
TMP_513 = CONVERT 0 to address
TMP_514(bool) = _node_1 != TMP_513
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,Cannot set 0 address)
TMP_516 = CONVERT stabilizerNode_3 to address
INTERNAL_CALL, Permissions._swapRole(address,address,bytes32)(_node_1,TMP_516,STABILIZER_NODE_ROLE_25)
TMP_518 = CONVERT _node_1 to IStabilizerNode
stabilizerNode_5(IStabilizerNode) := TMP_518(IStabilizerNode)
Emit SetStabilizerNode(_node_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 16
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: STABILIZER_NODE_ROLE, Num: 24
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: stabilizerNode, Num: 2
Globalname: stabilizerNode
global...

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_16(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_24(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_2(IStabilizerNode) := ϕ(['stabilizerNode_5', 'stabilizerNode_0', 'stabilizerNode_1'])
Phi
[i]Type for stabilizerNode

Name: stabilizerNode Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_16,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_513 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_513

Name: TMP_513 Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_514(bool) = _node_1 != TMP_513
[i]Type for TMP_514

Name: TMP_514 Function: setNewStabilizerNode
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,Cannot set 0 address)
[i]Type for TMP_515

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: stabilizerNode, Num: 3
Globalname: stabilizerNode
global...

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Name: STABILIZER_NODE_ROLE, Num: 25
Globalname: STABILIZER_NODE_ROLE
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_516 = CONVERT stabilizerNode_3 to address
Converting stabilizerNode_3

Name: None Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_516

Name: TMP_516 Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Permissions._swapRole(address,address,bytes32)(_node_1,TMP_516,STABILIZER_NODE_ROLE_25)
init
end
init
end
init
end
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: newAccount Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', 'StabilizerNode', [], -1, -997, 'u']

Name: oldAccount Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: newAccount_1 Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: oldAccount_1 Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newAccount_1(address) := ϕ(['_node_1', '_admin_1'])
Phi
[i]Type for newAccount

Name: newAccount Function: _swapRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
oldAccount_1(address) := ϕ(['globalAdmin_7', 'globalAdmin_11', 'globalAdmin_5', 'globalAdmin_10', 'globalAdmin_9', 'globalAdmin_6', 'TMP_516', 'globalAdmin_8', 'globalAdmin_4', 'globalAdmin_3'])
Phi
[i]Type for oldAccount

Name: oldAccount Function: _swapRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
role_1(bytes32) := ϕ(['LIQUIDITY_MINE_ROLE_16', 'AUCTION_ROLE_18', 'GOVERNOR_ROLE_8', 'ADMIN_ROLE_6', 'MONETARY_MINTER_ROLE_12', 'STABILIZER_NODE_ROLE_25', 'STABILIZER_NODE_ROLE_14', 'TIMELOCK_ROLE_8', 'MONETARY_BURNER_ROLE_10', 'REWARD_THROTTLE_ROLE_20'])
Phi
[i]Type for role

Name: role Function: _swapRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl.revokeRole(bytes32,address)(role_1,oldAccount_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', 'StabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 8
Globalname: _roles
global...

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['oldAccount_1', '_entity_1'])
Phi
[i]Type for account

Name: account Function: revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_8(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Name: _roles, Num: 10
Globalname: _roles
global...

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
REF_393(AccessControl.RoleData) -> _roles_8[role_1]
INDEX
[i]Type for REF_393

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_394(bytes32) -> REF_393.adminRole
MEMBER
init
end
init
end
[i]Type for REF_394

Name: _roles.adminRole Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_393, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
TMP_447(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_447

Name: TMP_447 Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_448(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(REF_394,TMP_447)
init
end
init
end
init
end
[i]Type for TMP_448

Name: TMP_448 Function: revokeRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_10(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_1'])
Phi
[i]Type for _roles

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
TMP_449(None) = SOLIDITY_CALL require(bool,string)(TMP_448,AccessControl: sender must be an admin to revoke)
[i]Type for TMP_449

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._revokeRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', 'StabilizerNode', [], -1, -997, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
Name: _roles, Num: 14
Globalname: _roles
global...

Name: _roles Function: _setRoleAdmin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_14(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_402(AccessControl.RoleData) -> _roles_14[role_1]
INDEX
[i]Type for REF_402

Name: _roles Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_403(EnumerableSet.AddressSet) -> REF_402.members
MEMBER
init
end
init
end
OUT KEY: _revokeRole__roles_members
OUT KEY: _revokeRole__members
No field found
[i]Type for REF_403

Name: _roles.members Function: _revokeRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_402, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_460(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.remove(EnumerableSet.AddressSet,address), arguments:['REF_403', 'account_1'] 
[i]Type for TMP_460

Name: TMP_460 Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_461(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_461

Name: TMP_461 Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_14(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_402(AccessControl.RoleData) -> _roles_14[role_1]
INDEX
[i]Type for REF_402

Name: _roles Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole, members
Finance Type: undef
Root: None, Field: None
XXXX
REF_403(EnumerableSet.AddressSet) -> REF_402.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_403

Name: _roles.members Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_402, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_460(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.remove(EnumerableSet.AddressSet,address), arguments:['REF_403', 'account_1'] 
[i]Type for TMP_460

Name: TMP_460 Function: _revokeRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_461(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_461

Name: TMP_461 Function: _revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['oldAccount_1', '_entity_1'])
Phi
[i]Type for account

Name: account Function: revokeRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_8(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Phid
REF_393(AccessControl.RoleData) -> _roles_8[role_1]
INDEX
[i]Type for REF_393

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
Root: None, Field: None
XXXX
REF_394(bytes32) -> REF_393.adminRole
MEMBER
init
end
init
end
init
end
[i]Type for REF_394

Name: _roles.adminRole Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_393, Field: adminRole
init
end
Finance type key: (-1, -1)
XXXX
TMP_447(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_447

Name: TMP_447 Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_448(bool) = INTERNAL_CALL, AccessControl.hasRole(bytes32,address)(REF_394,TMP_447)
init
end
init
end
init
end
[i]Type for TMP_448

Name: TMP_448 Function: revokeRole
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_10(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_1'])
Phi
[i]Type for _roles

Name: _roles Function: revokeRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: adminRole
Finance Type: undef
XXXX
TMP_449(None) = SOLIDITY_CALL require(bool,string)(TMP_448,AccessControl: sender must be an admin to revoke)
[i]Type for TMP_449

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._revokeRole(bytes32,address)(role_1,account_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(role_1,newAccount_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: newAccount_1 Function: _swapRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: oldAccount_1 Function: _swapRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid

Name: role_1 Function: _swapRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
newAccount_1(address) := ϕ(['_node_1', '_admin_1'])
Phi
[i]Type for newAccount

Name: newAccount Function: _swapRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
oldAccount_1(address) := ϕ(['globalAdmin_7', 'globalAdmin_11', 'globalAdmin_5', 'globalAdmin_10', 'globalAdmin_9', 'globalAdmin_6', 'TMP_516', 'globalAdmin_8', 'globalAdmin_4', 'globalAdmin_3'])
Phi
[i]Type for oldAccount

Name: oldAccount Function: _swapRole
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
role_1(bytes32) := ϕ(['LIQUIDITY_MINE_ROLE_16', 'AUCTION_ROLE_18', 'GOVERNOR_ROLE_8', 'ADMIN_ROLE_6', 'MONETARY_MINTER_ROLE_12', 'STABILIZER_NODE_ROLE_25', 'STABILIZER_NODE_ROLE_14', 'TIMELOCK_ROLE_8', 'MONETARY_BURNER_ROLE_10', 'REWARD_THROTTLE_ROLE_20'])
Phi
[i]Type for role

Name: role Function: _swapRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl.revokeRole(bytes32,address)(role_1,oldAccount_1)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._setupRole(bytes32,address)(role_1,newAccount_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['STABILIZER_NODE_ROLE_18', 'role_1', 'ADMIN_ROLE_14', 'role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _setupRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['newAccount_1', '_stabilizerNode_1', 'initialAdmin_1', '_assignee_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _setupRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, AccessControl._grantRole(bytes32,address)(role_1,account_1)
init
end
init
end
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: role Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', '_node', [], -1, -995, 'u']

Name: account Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: role_1 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: account_1 Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
Phid

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Phid
role_1(bytes32) := ϕ(['role_1', 'role_1'])
Phi
[i]Type for role

Name: role Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
account_1(address) := ϕ(['account_1', 'account_1'])
Phi
[i]Type for account

Name: account Function: _grantRole
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
XXXX
_roles_13(mapping(bytes32 => AccessControl.RoleData)) := ϕ(['_roles_7', '_roles_14', '_roles_1', '_roles_2', '_roles_3', '_roles_4', '_roles_10', '_roles_13', '_roles_0', '_roles_12'])
Phi
[i]Type for _roles

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
REF_399(AccessControl.RoleData) -> _roles_13[role_1]
INDEX
[i]Type for REF_399

Name: _roles Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: members
Finance Type: undef
Root: None, Field: None
XXXX
REF_400(EnumerableSet.AddressSet) -> REF_399.members
MEMBER
init
end
init
end
init
end
[i]Type for REF_400

Name: _roles.members Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: REF_399, Field: members
init
end
Finance type key: (-1, -1)
XXXX
TMP_457(bool) = LIBRARY_CALL, dest:EnumerableSet, function:EnumerableSet.add(EnumerableSet.AddressSet,address), arguments:['REF_400', 'account_1'] 
init
end
init
end
lnorm: u rnorm: u
init
end
[i]Type for TMP_457

Name: TMP_457 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_458(address) = INTERNAL_CALL, Context._msgSender()()
init
end
[i]Type for TMP_458

Name: TMP_458 Function: _grantRole
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: stabilizerNode, Num: 5
Globalname: stabilizerNode
global...

Name: stabilizerNode Function: initialize
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_518 = CONVERT _node_1 to IStabilizerNode
Converting _node_1

Name: _node Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
init
end
StabilizerNode
[i]Type for TMP_518

Name: TMP_518 Function: setNewStabilizerNode
Num: 
Den: 
Address: -995
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_5(IStabilizerNode) := TMP_518(IStabilizerNode)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for stabilizerNode

Name: stabilizerNode Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -995
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


ADMIN_ROLE_16(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
STABILIZER_NODE_ROLE_24(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
stabilizerNode_2(IStabilizerNode) := ϕ(['stabilizerNode_5', 'stabilizerNode_0', 'stabilizerNode_1'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_16,Must have admin role)
TMP_513 = CONVERT 0 to address
TMP_514(bool) = _node_1 != TMP_513
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,Cannot set 0 address)
TMP_516 = CONVERT stabilizerNode_3 to address
INTERNAL_CALL, Permissions._swapRole(address,address,bytes32)(_node_1,TMP_516,STABILIZER_NODE_ROLE_25)
TMP_518 = CONVERT _node_1 to IStabilizerNode
stabilizerNode_5(IStabilizerNode) := TMP_518(IStabilizerNode)
Emit SetStabilizerNode(_node_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: STABILIZER_NODE_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: stabilizerNode Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_16(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
STABILIZER_NODE_ROLE_24(bytes32) := ϕ(['STABILIZER_NODE_ROLE_0', 'STABILIZER_NODE_ROLE_19', 'STABILIZER_NODE_ROLE_7', 'STABILIZER_NODE_ROLE_21', 'STABILIZER_NODE_ROLE_26', 'STABILIZER_NODE_ROLE_15', 'STABILIZER_NODE_ROLE_23'])
Phi
[i]Type for STABILIZER_NODE_ROLE

Name: STABILIZER_NODE_ROLE Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_2(IStabilizerNode) := ϕ(['stabilizerNode_5', 'stabilizerNode_0', 'stabilizerNode_1'])
Phi
[i]Type for stabilizerNode

Name: stabilizerNode Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_16,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_513 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_513

Name: TMP_513 Function: setNewStabilizerNode
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_514(bool) = _node_1 != TMP_513
[i]Type for TMP_514

Name: TMP_514 Function: setNewStabilizerNode
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_515(None) = SOLIDITY_CALL require(bool,string)(TMP_514,Cannot set 0 address)
[i]Type for TMP_515

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_516 = CONVERT stabilizerNode_3 to address
Converting stabilizerNode_3

Name: stabilizerNode Function: None
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_516

Name: TMP_516 Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -997
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, Permissions._swapRole(address,address,bytes32)(_node_1,TMP_516,STABILIZER_NODE_ROLE_25)
init
end
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_518 = CONVERT _node_1 to IStabilizerNode
Converting _node_1

Name: _node Function: None
Num: 
Den: 
Address: -995
Norm: u
LF: _node
Value: u
Fields: 
Finance Type: undef
init
end
StabilizerNode
[i]Type for TMP_518

Name: TMP_518 Function: setNewStabilizerNode
Num: 
Den: 
Address: -995
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
stabilizerNode_5(IStabilizerNode) := TMP_518(IStabilizerNode)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for stabilizerNode

Name: stabilizerNode Function: setNewStabilizerNode
Num: -1
Den: -1
Address: -995
Norm: u
LF: StabilizerNode
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



setNewAuction
Finding type for _auction(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Param: 0
    num: []
    den: []
    norm: u
    link: _auction
    fields: []
    fintype: -1


ADMIN_ROLE_18(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_18,Must have admin role)
TMP_521 = CONVERT 0 to address
TMP_522(bool) = _auction_1 != TMP_521
TMP_523(None) = SOLIDITY_CALL require(bool,string)(TMP_522,Cannot set 0 address)
TMP_524 = CONVERT _auction_1 to IAuction
auction_5(IAuction) := TMP_524(IAuction)
Emit SetAuction(_auction_1)


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 18
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_18(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setNewAuction
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_18,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_521 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_521

Name: TMP_521 Function: setNewAuction
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_522(bool) = _auction_1 != TMP_521
[i]Type for TMP_522

Name: TMP_522 Function: setNewAuction
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_523(None) = SOLIDITY_CALL require(bool,string)(TMP_522,Cannot set 0 address)
[i]Type for TMP_523

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auction, Num: 5
Globalname: auction
global...

Name: auction Function: initialize
Num: -1
Den: -1
Address: -996
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_524 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction_1 Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_524

Name: TMP_524 Function: setNewAuction
Num: 
Den: 
Address: -994
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_5(IAuction) := TMP_524(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: setNewAuction
Num: -1
Den: -1
Address: -994
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


ADMIN_ROLE_18(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_18,Must have admin role)
TMP_521 = CONVERT 0 to address
TMP_522(bool) = _auction_1 != TMP_521
TMP_523(None) = SOLIDITY_CALL require(bool,string)(TMP_522,Cannot set 0 address)
TMP_524 = CONVERT _auction_1 to IAuction
auction_5(IAuction) := TMP_524(IAuction)
Emit SetAuction(_auction_1)


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setNewAuction
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_18(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setNewAuction
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_18,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_521 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
init
end
[i]Type for TMP_521

Name: TMP_521 Function: setNewAuction
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_522(bool) = _auction_1 != TMP_521
[i]Type for TMP_522

Name: TMP_522 Function: setNewAuction
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_523(None) = SOLIDITY_CALL require(bool,string)(TMP_522,Cannot set 0 address)
[i]Type for TMP_523

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_524 = CONVERT _auction_1 to IAuction
Converting _auction_1

Name: _auction Function: None
Num: 
Den: 
Address: -994
Norm: u
LF: _auction
Value: u
Fields: 
Finance Type: undef
init
end
Auction
[i]Type for TMP_524

Name: TMP_524 Function: setNewAuction
Num: 
Den: 
Address: -994
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
auction_5(IAuction) := TMP_524(IAuction)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auction

Name: auction Function: setNewAuction
Num: -1
Den: -1
Address: -994
Norm: u
LF: Auction
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



setAuctionAverageLookback
Finding type for _lookback(uint256 ... )
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1


ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
TMP_527(bool) = _lookback_1 > 0
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
CONDITION TMP_529
i_1(uint256) := auctionAverageLookback_8(uint256)
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
Emit SetAuctionAverageLookback(_lookback_1)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_530(bool) = i_2 < _lookback_1
CONDITION TMP_530
REF_427 -> LENGTH pegObservations_13
TMP_532(uint256) := REF_427(uint256)
TMP_533(uint256) = TMP_532 + 1
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
REF_427 (->pegObservations_14) := TMP_533(uint256)
REF_428(uint256) -> pegObservations_14[TMP_532]
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
REF_428 (->pegObservations_15) := 0(uint256)
TMP_534(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation
Name: ADMIN_ROLE, Num: 20
Globalname: ADMIN_ROLE
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: pegObservations, Num: 12
Globalname: pegObservations
global...

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
Name: auctionAverageLookback, Num: 7
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
Name: _lookback, Num: 1
Globalname: _lookback
End popogation
TMP_527(bool) = _lookback_1 > 0
init
end
init
end
lnorm: u rnorm: 0
init
end
init
end
[i]Type for TMP_527

Name: TMP_527 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
[i]Type for TMP_528

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionAverageLookback, Num: 8
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_529

Name: TMP_529 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := auctionAverageLookback_8(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: auctionAverageLookback, Num: 9
Globalname: auctionAverageLookback
global...

Name: auctionAverageLookback Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: i, Num: 2
Globalname: i
End popogation
Name: i, Num: 2
Globalname: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_530(bool) = i_2 < _lookback_1
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_530

Name: TMP_530 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Name: pegObservations, Num: 13
Globalname: pegObservations
global...

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pegObservations, Num: 14
Globalname: pegObservations
global...

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: pegObservations, Num: 15
Globalname: pegObservations
global...

Name: pegObservations Function: addBelowPegObservation
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_427 -> LENGTH pegObservations_13
[i]Type for REF_427

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_532(uint256) := REF_427(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_532

Name: TMP_532 Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_533(uint256) = TMP_532 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for TMP_533

Name: TMP_533 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_427 (->pegObservations_14) := TMP_533(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_427

Name: REF_427 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_428(uint256) -> pegObservations_14[TMP_532]
INDEX
[i]Type for REF_428

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_428 (->pegObservations_15) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_428

Name: REF_428 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
TMP_534(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_534

Name: TMP_534 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: u rnorm: 0
init
end
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
TMP_527(bool) = _lookback_1 > 0
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
CONDITION TMP_529
i_1(uint256) := auctionAverageLookback_8(uint256)
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
Emit SetAuctionAverageLookback(_lookback_1)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_530(bool) = i_2 < _lookback_1
CONDITION TMP_530
REF_427 -> LENGTH pegObservations_13
TMP_532(uint256) := REF_427(uint256)
TMP_533(uint256) = TMP_532 + 1
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
REF_427 (->pegObservations_14) := TMP_533(uint256)
REF_428(uint256) -> pegObservations_14[TMP_532]
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
REF_428 (->pegObservations_15) := 0(uint256)
TMP_534(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_527(bool) = _lookback_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_527

Name: TMP_527 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
[i]Type for TMP_528

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_529

Name: TMP_529 Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 1
Globalname: i
End popogation
i_1(uint256) := auctionAverageLookback_8(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 2
Globalname: i
Name: i, Num: 2
Globalname: i
End popogation
Name: i, Num: 2
Globalname: i

Name: i Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
init
end
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_530(bool) = i_2 < _lookback_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_530

Name: TMP_530 Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_427 -> LENGTH pegObservations_13
[i]Type for REF_427

Name: REF_427 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_532(uint256) := REF_427(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_532

Name: TMP_532 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_533(uint256) = TMP_532 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for TMP_533

Name: TMP_533 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_427 (->pegObservations_14) := TMP_533(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_427

Name: REF_427 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_428(uint256) -> pegObservations_14[TMP_532]
INDEX
[i]Type for REF_428

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_428 (->pegObservations_15) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_428

Name: REF_428 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Name: i, Num: 3
Globalname: i
End popogation
TMP_534(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_534

Name: TMP_534 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX


ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
TMP_527(bool) = _lookback_1 > 0
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
CONDITION TMP_529
i_1(uint256) := auctionAverageLookback_8(uint256)
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
Emit SetAuctionAverageLookback(_lookback_1)
i_2(uint256) := ϕ(['i_3', 'i_1'])
TMP_530(bool) = i_2 < _lookback_1
CONDITION TMP_530
REF_427 -> LENGTH pegObservations_13
TMP_532(uint256) := REF_427(uint256)
TMP_533(uint256) = TMP_532 + 1
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
REF_427 (->pegObservations_14) := TMP_533(uint256)
REF_428(uint256) -> pegObservations_14[TMP_532]
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
REF_428 (->pegObservations_15) := 0(uint256)
TMP_534(uint256) := i_2(uint256)
i_3(uint256) = i_2 + 1


Propogating parameters and globals to SSA variables...
End popogation

Name: ADMIN_ROLE Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Phid
ADMIN_ROLE_20(bytes32) := ϕ(['ADMIN_ROLE_21', 'ADMIN_ROLE_0', 'ADMIN_ROLE_19', 'ADMIN_ROLE_15', 'ADMIN_ROLE_17', 'ADMIN_ROLE_3', 'ADMIN_ROLE_7', 'ADMIN_ROLE_10'])
Phi
[i]Type for ADMIN_ROLE

Name: ADMIN_ROLE Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_12(uint256[]) := ϕ(['pegObservations_13', 'pegObservations_11', 'pegObservations_5', 'pegObservations_9', 'pegObservations_10', 'pegObservations_0'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
auctionAverageLookback_7(uint256) := ϕ(['auctionAverageLookback_1', 'auctionAverageLookback_5', 'auctionAverageLookback_3', 'auctionAverageLookback_0', 'auctionAverageLookback_9'])
Phi
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Permissions.onlyRole(bytes32,string)(ADMIN_ROLE_20,Must have admin role)
init
end
init
end
Propogating parameters and globals to SSA variables...
End popogation
TMP_527(bool) = _lookback_1 > 0
init
end
init
end
lnorm: u rnorm: 0
[i]Type for TMP_527

Name: TMP_527 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_528(None) = SOLIDITY_CALL require(bool,string)(TMP_527,Cannot have zero lookback period)
[i]Type for TMP_528

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
TMP_529(bool) = _lookback_1 > auctionAverageLookback_8
init
end
init
end
lnorm: u rnorm: u
[i]Type for TMP_529

Name: TMP_529 Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
i_1(uint256) := auctionAverageLookback_8(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
auctionAverageLookback_9(uint256) := _lookback_1(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for auctionAverageLookback

Name: auctionAverageLookback Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
Phid
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_530(bool) = i_2 < _lookback_1
init
end
init
end
lnorm: 0 rnorm: u
[i]Type for TMP_530

Name: TMP_530 Function: setAuctionAverageLookback
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Phid
REF_427 -> LENGTH pegObservations_13
[i]Type for REF_427

Name: REF_427 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_532(uint256) := REF_427(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_532

Name: TMP_532 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_533(uint256) = TMP_532 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for TMP_533

Name: TMP_533 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
pegObservations_14(uint256[]) := ϕ(['pegObservations_13'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_427 (->pegObservations_14) := TMP_533(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_427

Name: REF_427 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_428(uint256) -> pegObservations_14[TMP_532]
INDEX
[i]Type for REF_428

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
pegObservations_15(uint256[]) := ϕ(['pegObservations_14'])
Phi
[i]Type for pegObservations

Name: pegObservations Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_428 (->pegObservations_15) := 0(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for REF_428

Name: REF_428 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
TMP_534(uint256) := i_2(uint256)
asgn
init
end
Finance type key: (-1, -1)
[i]Type for TMP_534

Name: TMP_534 Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 + 1
init
end
init
end
lnorm: 0 rnorm: 0
init
end
[i]Type for i

Name: i Function: setAuctionAverageLookback
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



slitherConstructorVariables
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock



slitherConstructorConstantVariables
State_var: TIMELOCK_ROLE
State_var: ADMIN_ROLE
State_var: STABILIZER_NODE_ROLE
State_var: stabilizerNode
State_var: _roles
State_var: initialized
State_var: initializing
State_var: pegObservations
State_var: auctionAverageLookback
State_var: AUCTION_ROLE
State_var: GOVERNOR_ROLE
State_var: LIQUIDITY_MINE_ROLE
State_var: MONETARY_BURNER_ROLE
State_var: MONETARY_MINTER_ROLE
State_var: REWARD_THROTTLE_ROLE
State_var: globalAdmin
State_var: count
State_var: auction
State_var: lastBlock
Address: 1, Label: global:globalAdmin
Address: -999, Label: initialize:_timelock
Address: -998, Label: initialize:initialAdmin
Address: -997, Label: initialize:_stabilizerNode
Address: -996, Label: initialize:_auction
Address: -995, Label: setNewStabilizerNode:_node
Address: -994, Label: setNewAuction:_auction
Address: 2, Label: isConstructor:TMP_463
Address: 2, Label: global:this
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: 2
    Norm: *
    Set: {2}
    Fin: NULL
Function count: 56
Executing Group 17
[*] Tested 0 warnings for Malt Finance
Group 17 complete
Testing complete
