Switched global version to 0.6.12



setMin
MAX_1(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
manager_34(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_34', 'manager_26'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_34(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_220(bool) = HIGH_LEVEL_CALL, dest:manager_34(IManager), function:halted, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: notHalted
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_35(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_34', 'manager_26'])
[i]Type for manager

Name: manager Function: notHalted
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221 = ! TMP_220 
[i]Type for TMP_221

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_222(None) = SOLIDITY_CALL require(bool,string)(TMP_221,halted)
[i]Type for TMP_222

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.onlyStrategist()()
manager_38(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_38', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_38(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(address) = HIGH_LEVEL_CALL, dest:manager_38(IManager), function:strategist, arguments:[]  
[i]Type for TMP_226

Name: TMP_226 Function: onlyStrategist
Num: -1
Den: -1
Address: 1
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_39(IManager) := ϕ(['manager_38', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: onlyStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227(bool) = msg.sender == TMP_226
[i]Type for TMP_227

Name: TMP_227 Function: onlyStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_228(None) = SOLIDITY_CALL require(bool,string)(TMP_227,!strategist)
[i]Type for TMP_228

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_1(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
MODIFIER_CALL, Vault.onlyStrategist()()
TMP_70(bool) = _min_1 <= MAX_3
[i]Type for TMP_70

Name: TMP_70 Function: setMin
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,!_min)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_2(uint256) := _min_1(uint256)
[i]Type for min

Name: min Function: setMin
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



deposit
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
manager_21(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
manager_25(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184 = CONVERT this to address
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_185(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_184']  
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_25', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_185(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := 0(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_balance_2(uint256) := ϕ(['_balance_3', '_balance_1'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(bool) = i_1 < REF_73
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187 = CONVERT _token_1 to IERC20
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20), function:balanceOf, arguments:['TMP_188']  
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_190(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_189)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: 5
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: 5
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: 5
Norm: u
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_2', 'TMP_190'] 
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balance_3(uint256) := TMP_191(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_192(uint8) := i_1(uint8)
[i]Type for TMP_192

Name: TMP_192 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _balance_2
manager_25(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184 = CONVERT this to address
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_185(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_184']  
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_25', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_185(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := 0(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_balance_2(uint256) := ϕ(['_balance_3', '_balance_1'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(bool) = i_1 < REF_73
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187 = CONVERT _token_1 to IERC20
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20), function:balanceOf, arguments:['TMP_188']  
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_190(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_189)
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_2', 'TMP_190'] 
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000
Fields: 
Finance Type: raw balance
_balance_3(uint256) := TMP_191(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000
Fields: 
Finance Type: raw balance
TMP_192(uint8) := i_1(uint8)
[i]Type for TMP_192

Name: TMP_192 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _balance_2
manager_25(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184 = CONVERT this to address
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_185(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_184']  
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_25', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_185(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := 0(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_balance_2(uint256) := ϕ(['_balance_3', '_balance_1'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(bool) = i_1 < REF_73
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187 = CONVERT _token_1 to IERC20
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20), function:balanceOf, arguments:['TMP_188']  
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_190(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_189)
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_2', 'TMP_190'] 
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000
Fields: 
Finance Type: raw balance
_balance_3(uint256) := TMP_191(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000
Fields: 
Finance Type: raw balance
TMP_192(uint8) := i_1(uint8)
[i]Type for TMP_192

Name: TMP_192 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _balance_2
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_22', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_24(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_23', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
Handling trace

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
Error with TMP_182 in function balance
Error with: TMP_182 in function balance
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_182
manager_21(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_22', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_24(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_23', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
Handling trace

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_182
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
_totalSupply_1(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _totalSupply_1
_totalSupply_1(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _totalSupply_1
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -994
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -994
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



depositMultiple
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136(bool) = i_1 < REF_48
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> _tokens_1 (-> [])[i_1]
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: depositMultiple
Num: 
Den: 
Address: -996
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
Handling trace

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
Handling trace

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance

Name: _totalSupply Function: _mint
Num: -994
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
Error with _totalSupply in function _mint
Error with: _totalSupply in function _mint
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := TMP_138(uint256)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _shares_1
TMP_139(uint8) := i_1(uint8)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_46 -> LENGTH _tokens_1 (-> [])
[i]Type for REF_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = REF_46 == REF_47
[i]Type for TMP_134

Name: TMP_134 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,!length)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_1(uint256) := ϕ(['_shares_0', '_shares_2'])
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_48 -> LENGTH _amounts_1 (-> [])
[i]Type for REF_48

Name: REF_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_136(bool) = i_1 < REF_48
[i]Type for TMP_136

Name: TMP_136 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> _tokens_1 (-> [])[i_1]
[i]Type for REF_50

Name: _tokens_1 (-> []) Function: depositMultiple
Num: 
Den: 
Address: -996
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_51(uint256) -> _amounts_1 (-> [])[i_1]
[i]Type for REF_51

Name: _amounts_1 (-> []) Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_137(uint256) = INTERNAL_CALL, Vault.deposit(address,uint256)(REF_50,REF_51)
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['REF_50'])
[i]Type for _token

Name: _token Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['REF_51'])
[i]Type for _amount

Name: _amount Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalDepositCap_3(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_13', 'totalDepositCap_0', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_token_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.notHalted()()
TMP_106(bool) = _amount_1 > 0
[i]Type for TMP_106

Name: TMP_106 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,!_amount)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_108

Name: TMP_108 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_108(uint256)
[i]Type for _balance

Name: _balance Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT _token_1 to IERC20
[i]Type for TMP_109

Name: TMP_109 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_110 = CONVERT this to address
[i]Type for TMP_110

Name: TMP_110 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = HIGH_LEVEL_CALL, dest:TMP_109(IERC20), function:balanceOf, arguments:['TMP_110']  
[i]Type for TMP_111

Name: TMP_111 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_7(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_6', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_before_1(uint256) := TMP_111(uint256)
[i]Type for _before

Name: _before Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_112 = CONVERT _token_1 to IERC20
[i]Type for TMP_112

Name: TMP_112 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_113 = CONVERT this to address
[i]Type for TMP_113

Name: TMP_113 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_112', 'msg.sender', 'TMP_113', '_amount_1'] 
TMP_115 = CONVERT _token_1 to IERC20
[i]Type for TMP_115

Name: TMP_115 Function: deposit
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT this to address
[i]Type for TMP_116

Name: TMP_116 Function: deposit
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_117(uint256) = HIGH_LEVEL_CALL, dest:TMP_115(IERC20), function:balanceOf, arguments:['TMP_116']  
[i]Type for TMP_117

Name: TMP_117 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
totalDepositCap_8(uint256) := ϕ(['totalDepositCap_1', 'totalDepositCap_8', 'totalDepositCap_10', 'totalDepositCap_7', 'totalDepositCap_13', 'totalDepositCap_2', 'totalDepositCap_11'])
[i]Type for totalDepositCap

Name: totalDepositCap Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_117', '_before_1'] 
[i]Type for TMP_118

Name: TMP_118 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_118(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_119(bool) = _amount_2 > 0
[i]Type for TMP_119

Name: TMP_119 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := ϕ(['_shares_0', '_shares_1'])
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_120(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,_amount_2)
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
_token_1(address) := ϕ(['_token_1', '_token_1'])
[i]Type for _token

Name: _token Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_2', 'TMP_189'])
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205 = CONVERT _token_1 to ExtendedIERC20
[i]Type for TMP_205

Name: TMP_205 Function: _normalizeDecimals
Num: 
Den: 
Address: -996
Norm: 6
LF: UNKNOWN
Value: u
Fields: 
Finance Type: undef
TMP_206(uint8) = HIGH_LEVEL_CALL, dest:TMP_205(ExtendedIERC20), function:decimals, arguments:[]  
[i]Type for TMP_206

Name: TMP_206 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_207 = CONVERT TMP_206 to uint256
[i]Type for TMP_207

Name: TMP_207 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
_decimals_1(uint256) := TMP_207(uint256)
[i]Type for _decimals

Name: _decimals Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
TMP_208(uint256) = 18 - _decimals_1
[i]Type for TMP_208

Name: TMP_208 Function: _normalizeDecimals
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 12
Fields: 
Finance Type: undef
TMP_209(uint256) = 10 ** TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: _normalizeDecimals
Num: 
Den: 
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: undef
TMP_210(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', 'TMP_209'] 
[i]Type for TMP_210

Name: TMP_210 Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_2(uint256) := TMP_210(uint256)
[i]Type for _amount

Name: _amount Function: _normalizeDecimals
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN _amount_2
[i]Type for TMP_120

Name: TMP_120 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_3(uint256) := TMP_120(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_121(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_121

Name: TMP_121 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(bool) = TMP_121 > 0
[i]Type for TMP_122

Name: TMP_122 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(bool) = _shares_2 > 0
[i]Type for TMP_126

Name: TMP_126 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._mint(address,uint256)(msg.sender,_shares_2)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_2'])
[i]Type for amount

Name: amount Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_6(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_2(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_39 = CONVERT 0 to address
[i]Type for TMP_39

Name: TMP_39 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_40(bool) = account_1 != TMP_39
[i]Type for TMP_40

Name: TMP_40 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(None) = SOLIDITY_CALL require(bool,string)(TMP_40,ERC20: mint to the zero address)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42 = CONVERT 0 to address
[i]Type for TMP_42

Name: TMP_42 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(TMP_42,account_1,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_44(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_totalSupply_3', 'amount_1'] 
[i]Type for TMP_44

Name: TMP_44 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_4(uint256) := TMP_44(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
REF_21(uint256) -> _balances_7[account_1]
[i]Type for REF_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> _balances_7[account_1]
[i]Type for REF_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_22', 'amount_1'] 
[i]Type for TMP_45

Name: TMP_45 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21 (->_balances_8) := TMP_45(uint256)
[i]Type for REF_21

Name: REF_21 Function: _mint
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_46 = CONVERT 0 to address
[i]Type for TMP_46

Name: TMP_46 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_3'])
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_shares_1(uint256) := _amount_5(uint256)
[i]Type for _shares

Name: _shares Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_123(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_123

Name: TMP_123 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_3', 'TMP_123'] 
[i]Type for TMP_124

Name: TMP_124 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_125(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_124', '_balance_1'] 
[i]Type for TMP_125

Name: TMP_125 Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := TMP_125(uint256)
[i]Type for _amount

Name: _amount Function: deposit
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_128(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_128

Name: TMP_128 Function: deposit
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_129(bool) = TMP_128 <= totalDepositCap_13
[i]Type for TMP_129

Name: TMP_129 Function: deposit
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(None) = SOLIDITY_CALL require(bool,string)(TMP_129,>totalDepositCap)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_shares_1', 'TMP_137'] 
[i]Type for TMP_138

Name: TMP_138 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_shares_2(uint256) := TMP_138(uint256)
[i]Type for _shares

Name: _shares Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _shares_1
TMP_139(uint8) := i_1(uint8)
[i]Type for TMP_139

Name: TMP_139 Function: depositMultiple
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: depositMultiple
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



withdraw
_shares_1(uint256) := ϕ(['TMP_170'])
[i]Type for _shares

Name: _shares Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_output_1(address) := ϕ(['_output_1'])
[i]Type for _output

Name: _output Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
MAX_4(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_13(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_14(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_140(uint256) = INTERNAL_CALL, Vault.balance2()()
TMP_183(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_183

Name: TMP_183 Function: balance2
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN TMP_183
TMP_183(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_183

Name: TMP_183 Function: balance2
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
RETURN TMP_183
[i]Type for TMP_140

Name: TMP_140 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
[i]Type for TMP_141

Name: TMP_141 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_142

Name: TMP_142 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
[i]Type for TMP_143

Name: TMP_143 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_1(uint256) := TMP_143(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_1'])
[i]Type for amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_48 = CONVERT 0 to address
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51 = CONVERT 0 to address
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_24(uint256) -> _balances_10[account_1]
[i]Type for REF_24

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(uint256) -> _balances_10[account_1]
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24 (->_balances_11) := TMP_53(uint256)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_7(uint256) := TMP_54(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_55 = CONVERT 0 to address
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['msg.sender'])
[i]Type for account

Name: account Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_shares_1'])
[i]Type for amount

Name: amount Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balances_9(mapping(address => uint256)) := ϕ(['_balances_11', '_balances_1', '_balances_8', '_balances_0', '_balances_5'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_5(uint256) := ϕ(['_totalSupply_7', '_totalSupply_0', '_totalSupply_4'])
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_48 = CONVERT 0 to address
[i]Type for TMP_48

Name: TMP_48 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_49(bool) = account_1 != TMP_48
[i]Type for TMP_49

Name: TMP_49 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,ERC20: burn from the zero address)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51 = CONVERT 0 to address
[i]Type for TMP_51

Name: TMP_51 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, ERC20._beforeTokenTransfer(address,address,uint256)(account_1,TMP_51,amount_1)
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
from_1(address) := ϕ(['sender_1', 'TMP_42', 'account_1'])
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
to_1(address) := ϕ(['TMP_51', 'account_1', 'recipient_1'])
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: account
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
REF_24(uint256) -> _balances_10[account_1]
[i]Type for REF_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(uint256) -> _balances_10[account_1]
[i]Type for REF_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['REF_25', 'amount_1', 'ERC20: burn amount exceeds balance'] 
[i]Type for TMP_53

Name: TMP_53 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_balances_11(mapping(address => uint256)) := ϕ(['_balances_10'])
[i]Type for _balances

Name: _balances Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24 (->_balances_11) := TMP_53(uint256)
[i]Type for REF_24

Name: REF_24 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_54(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply_6', 'amount_1'] 
[i]Type for TMP_54

Name: TMP_54 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_totalSupply_7(uint256) := TMP_54(uint256)
[i]Type for _totalSupply

Name: _totalSupply Function: _burn
Num: -996
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_55 = CONVERT 0 to address
[i]Type for TMP_55

Name: TMP_55 Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
[i]Type for TMP_145

Name: TMP_145 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
MAX_9(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_8'])
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_18(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_17', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
[i]Type for _withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
[i]Type for TMP_146

Name: TMP_146 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
[i]Type for TMP_147

Name: TMP_147 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
[i]Type for TMP_148

Name: TMP_148 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
_withdrawalProtection_1(uint256) := TMP_148(uint256)
[i]Type for _withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_150 = CONVERT _output_1 to IERC20
[i]Type for TMP_150

Name: TMP_150 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT this to address
[i]Type for TMP_151

Name: TMP_151 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
[i]Type for TMP_152

Name: TMP_152 Function: withdraw
Num: -995
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_19(IManager) := ϕ(['manager_39', 'manager_37', 'manager_18', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_152(uint256)
[i]Type for _balance

Name: _balance Function: withdraw
Num: -995
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_153(bool) = _balance_1 < _amount_3
Handling trace

Name: _balance Function: withdraw
Num: -995
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
[i]Type for TMP_153

Name: TMP_153 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT this to address
[i]Type for TMP_154

Name: TMP_154 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
[i]Type for TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_20(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT TMP_155 to IController
[i]Type for TMP_156

Name: TMP_156 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_156(IController)
[i]Type for _controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
[i]Type for TMP_149

Name: TMP_149 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 0
Fields: 
Finance Type: net balance
_amount_2(uint256) := TMP_149(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 0
Fields: 
Finance Type: net balance
TMP_166 = CONVERT _output_1 to IERC20
[i]Type for TMP_166

Name: TMP_166 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
Handling trace

Name: _balance Function: withdraw
Num: -995
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
Error with TMP_157 in function withdraw
Error with: TMP_157 in function withdraw
[i]Type for TMP_157

Name: TMP_157 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toWithdraw_1(uint256) := TMP_157(uint256)
[i]Type for _toWithdraw

Name: _toWithdraw Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
[i]Type for TMP_158

Name: TMP_158 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(bool) = TMP_158 > 0
[i]Type for TMP_159

Name: TMP_159 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
TMP_161 = CONVERT _output_1 to IERC20
[i]Type for TMP_161

Name: TMP_161 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT this to address
[i]Type for TMP_162

Name: TMP_162 Function: withdraw
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
[i]Type for TMP_163

Name: TMP_163 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_after_1(uint256) := TMP_163(uint256)
[i]Type for _after

Name: _after Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
Handling trace

Name: _balance Function: withdraw
Num: -995
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: _after Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
{}
Error with TMP_164 in function withdraw
Error with: TMP_164 in function withdraw
[i]Type for TMP_164

Name: TMP_164 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_diff_1(uint256) := TMP_164(uint256)
[i]Type for _diff

Name: _diff Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(bool) = _diff_1 < _toWithdraw_1
[i]Type for TMP_165

Name: TMP_165 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := _after_1(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_shares_1(uint256) := ϕ(['TMP_170'])
[i]Type for _shares

Name: _shares Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_output_1(address) := ϕ(['_output_1'])
[i]Type for _output

Name: _output Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
MAX_4(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_13(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, Vault.checkToken(address)(_output_1)
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := ϕ(['_token_1', '_token_1', '_output_1'])
[i]Type for _token

Name: _token Function: checkToken
Num: 
Den: 
Address: -995
Norm: 6
LF: _output
Value: u
Fields: 
Finance Type: undef
manager_31(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214(bool) = HIGH_LEVEL_CALL, dest:manager_31(IManager), function:allowedTokens, arguments:['_token_1']  
[i]Type for TMP_214

Name: TMP_214 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_32(IManager) := ϕ(['manager_31', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_215(address) = HIGH_LEVEL_CALL, dest:manager_32(IManager), function:vaults, arguments:['_token_1']  
[i]Type for TMP_215

Name: TMP_215 Function: checkToken
Num: -1
Den: -1
Address: 4
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_33(IManager) := ϕ(['manager_39', 'manager_37', 'manager_32', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: checkToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT this to address
[i]Type for TMP_216

Name: TMP_216 Function: checkToken
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_217(bool) = TMP_215 == TMP_216
[i]Type for TMP_217

Name: TMP_217 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_218(bool) = TMP_214 && TMP_217
[i]Type for TMP_218

Name: TMP_218 Function: checkToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_219(None) = SOLIDITY_CALL require(bool,string)(TMP_218,!_token)
[i]Type for TMP_219

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_14(IManager) := ϕ(['manager_33'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_140(uint256) = INTERNAL_CALL, Vault.balance2()()
[i]Type for TMP_140

Name: TMP_140 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_141(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_140', '_shares_1'] 
[i]Type for TMP_141

Name: TMP_141 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_142(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_142

Name: TMP_142 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_141', 'TMP_142'] 
[i]Type for TMP_143

Name: TMP_143 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_1(uint256) := TMP_143(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
INTERNAL_CALL, ERC20._burn(address,uint256)(msg.sender,_shares_1)
TMP_145(uint256) = HIGH_LEVEL_CALL, dest:manager_17(IManager), function:withdrawalProtectionFee, arguments:[]  
[i]Type for TMP_145

Name: TMP_145 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
MAX_9(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_8'])
[i]Type for MAX

Name: MAX Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_18(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_17', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_withdrawalProtectionFee_1(uint256) := TMP_145(uint256)
[i]Type for _withdrawalProtectionFee

Name: _withdrawalProtectionFee Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
TMP_146(bool) = _withdrawalProtectionFee_1 > 0
[i]Type for TMP_146

Name: TMP_146 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_amount_1', '_withdrawalProtectionFee_1'] 
[i]Type for TMP_147

Name: TMP_147 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_148(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_147', 'MAX_9'] 
[i]Type for TMP_148

Name: TMP_148 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
_withdrawalProtection_1(uint256) := TMP_148(uint256)
[i]Type for _withdrawalProtection

Name: _withdrawalProtection Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: transaction fee (n)
TMP_150 = CONVERT _output_1 to IERC20
[i]Type for TMP_150

Name: TMP_150 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT this to address
[i]Type for TMP_151

Name: TMP_151 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_152(uint256) = HIGH_LEVEL_CALL, dest:TMP_150(IERC20), function:balanceOf, arguments:['TMP_151']  
[i]Type for TMP_152

Name: TMP_152 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_19(IManager) := ϕ(['manager_39', 'manager_37', 'manager_18', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := TMP_152(uint256)
[i]Type for _balance

Name: _balance Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_153(bool) = _balance_1 < _amount_3
[i]Type for TMP_153

Name: TMP_153 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT this to address
[i]Type for TMP_154

Name: TMP_154 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_155(address) = HIGH_LEVEL_CALL, dest:manager_19(IManager), function:controllers, arguments:['TMP_154']  
[i]Type for TMP_155

Name: TMP_155 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_20(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT TMP_155 to IController
[i]Type for TMP_156

Name: TMP_156 Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
_controller_1(IController) := TMP_156(IController)
[i]Type for _controller

Name: _controller Function: withdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_withdrawalProtection_1'] 
[i]Type for TMP_149

Name: TMP_149 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 0
Fields: 
Finance Type: net balance
_amount_2(uint256) := TMP_149(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 0
Fields: 
Finance Type: net balance
TMP_166 = CONVERT _output_1 to IERC20
[i]Type for TMP_166

Name: TMP_166 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_166', 'msg.sender', '_amount_5'] 
TMP_157(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_balance_1'] 
[i]Type for TMP_157

Name: TMP_157 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_toWithdraw_1(uint256) := TMP_157(uint256)
[i]Type for _toWithdraw

Name: _toWithdraw Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 12
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_158(uint256) = HIGH_LEVEL_CALL, dest:_controller_1(IController), function:strategies, arguments:[]  
[i]Type for TMP_158

Name: TMP_158 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_159(bool) = TMP_158 > 0
[i]Type for TMP_159

Name: TMP_159 Function: withdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:_controller_1(IController), function:withdraw, arguments:['_output_1', '_toWithdraw_1']  
TMP_161 = CONVERT _output_1 to IERC20
[i]Type for TMP_161

Name: TMP_161 Function: withdraw
Num: 
Den: 
Address: -995
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_162 = CONVERT this to address
[i]Type for TMP_162

Name: TMP_162 Function: withdraw
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_163(uint256) = HIGH_LEVEL_CALL, dest:TMP_161(IERC20), function:balanceOf, arguments:['TMP_162']  
[i]Type for TMP_163

Name: TMP_163 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_after_1(uint256) := TMP_163(uint256)
[i]Type for _after

Name: _after Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_164(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_after_1', '_balance_1'] 
[i]Type for TMP_164

Name: TMP_164 Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
_diff_1(uint256) := TMP_164(uint256)
[i]Type for _diff

Name: _diff Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_165(bool) = _diff_1 < _toWithdraw_1
[i]Type for TMP_165

Name: TMP_165 Function: withdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_5(uint256) := ϕ(['_amount_4', '_amount_1'])
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
_amount_4(uint256) := _after_1(uint256)
[i]Type for _amount

Name: _amount Function: withdraw
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance



available
_token_1(address) := ϕ(['_token_1'])
[i]Type for _token

Name: _token Function: available
Num: 
Den: 
Address: -993
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_10(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_3(uint256) := ϕ(['min_0', 'min_2', 'min_4', 'min_1'])
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT _token_1 to IERC20
[i]Type for TMP_172

Name: TMP_172 Function: available
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_173 = CONVERT this to address
[i]Type for TMP_173

Name: TMP_173 Function: available
Num: -1
Den: -1
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
[i]Type for TMP_174

Name: TMP_174 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_11(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_10'])
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_4(uint256) := ϕ(['min_2', 'min_4', 'min_3', 'min_1'])
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
[i]Type for TMP_175

Name: TMP_175 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
[i]Type for TMP_176

Name: TMP_176 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_176
_token_1(address) := ϕ(['_token_1'])
[i]Type for _token

Name: _token Function: available
Num: 
Den: 
Address: -993
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
MAX_10(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_3(uint256) := ϕ(['min_0', 'min_2', 'min_4', 'min_1'])
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172 = CONVERT _token_1 to IERC20
[i]Type for TMP_172

Name: TMP_172 Function: available
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_173 = CONVERT this to address
[i]Type for TMP_173

Name: TMP_173 Function: available
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:TMP_172(IERC20), function:balanceOf, arguments:['TMP_173']  
[i]Type for TMP_174

Name: TMP_174 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
MAX_11(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_10'])
[i]Type for MAX

Name: MAX Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
min_4(uint256) := ϕ(['min_2', 'min_4', 'min_3', 'min_1'])
[i]Type for min

Name: min Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_174', 'min_4'] 
[i]Type for TMP_175

Name: TMP_175 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_175', 'MAX_11'] 
[i]Type for TMP_176

Name: TMP_176 Function: available
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
RETURN TMP_176



balance
manager_21(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_22', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_24(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_23', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
Handling trace

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_182
manager_21(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(uint256) = INTERNAL_CALL, Vault.balanceOfThis()()
[i]Type for TMP_177

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
manager_22(IManager) := ϕ(['manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178 = CONVERT this to address
[i]Type for TMP_178

Name: TMP_178 Function: balance
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_179(address) = HIGH_LEVEL_CALL, dest:manager_22(IManager), function:controllers, arguments:['TMP_178']  
[i]Type for TMP_179

Name: TMP_179 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_23(IManager) := ϕ(['manager_22', 'manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180 = CONVERT TMP_179 to IController
[i]Type for TMP_180

Name: TMP_180 Function: balance
Num: -1
Den: -1
Address: 2
Norm: u
LF: Controller
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = HIGH_LEVEL_CALL, dest:TMP_180(IController), function:balanceOf, arguments:[]  
[i]Type for TMP_181

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
manager_24(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_23', 'manager_26'])
[i]Type for manager

Name: manager Function: balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_177', 'TMP_181'] 
Handling trace

Name: TMP_181 Function: balance
Num: 2
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_177 Function: balance
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
{}
[i]Type for TMP_182

Name: TMP_182 Function: balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_182



balanceOfThis
manager_25(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184 = CONVERT this to address
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_185(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_184']  
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_25', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_185(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := 0(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_balance_2(uint256) := ϕ(['_balance_3', '_balance_1'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 2000000000000
Fields: 
Finance Type: raw balance
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(bool) = i_1 < REF_73
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187 = CONVERT _token_1 to IERC20
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20), function:balanceOf, arguments:['TMP_188']  
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_190(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_189)
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_2', 'TMP_190'] 
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000
Fields: 
Finance Type: raw balance
_balance_3(uint256) := TMP_191(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000
Fields: 
Finance Type: raw balance
RETURN _balance_2
TMP_192(uint8) := i_1(uint8)
[i]Type for TMP_192

Name: TMP_192 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
manager_25(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_184 = CONVERT this to address
[i]Type for TMP_184

Name: TMP_184 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_185(address[]) = HIGH_LEVEL_CALL, dest:manager_25(IManager), function:getTokens, arguments:['TMP_184']  
[i]Type for TMP_185

Name: TMP_185 Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
manager_26(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_25', 'manager_26'])
[i]Type for manager

Name: manager Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokens_1(address[]) := TMP_185(address[])
[i]Type for _tokens

Name: _tokens Function: balanceOfThis
Num: -1
Den: -1
Address: 5
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
_balance_1(uint256) := 0(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_balance_2(uint256) := ϕ(['_balance_3', '_balance_1'])
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 3000000000000
Fields: 
Finance Type: raw balance
i_1(uint8) := ϕ(['i_2', 'i_0'])
[i]Type for i

Name: i Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73 -> LENGTH _tokens_1
[i]Type for REF_73

Name: REF_73 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_186(bool) = i_1 < REF_73
[i]Type for TMP_186

Name: TMP_186 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_74(address) -> _tokens_1[i_1]
[i]Type for REF_74

Name: _tokens Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_token_1(address) := REF_74(address)
[i]Type for _token

Name: _token Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187 = CONVERT _token_1 to IERC20
[i]Type for TMP_187

Name: TMP_187 Function: balanceOfThis
Num: 
Den: 
Address: 5
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_188 = CONVERT this to address
[i]Type for TMP_188

Name: TMP_188 Function: balanceOfThis
Num: 
Den: 
Address: 6
Norm: u
LF: Vault
Value: u
Fields: 
Finance Type: undef
TMP_189(uint256) = HIGH_LEVEL_CALL, dest:TMP_187(IERC20), function:balanceOf, arguments:['TMP_188']  
[i]Type for TMP_189

Name: TMP_189 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_190(uint256) = INTERNAL_CALL, Vault._normalizeDecimals(address,uint256)(_token_1,TMP_189)
[i]Type for TMP_190

Name: TMP_190 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000
Fields: 
Finance Type: raw balance
TMP_191(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_balance_2', 'TMP_190'] 
[i]Type for TMP_191

Name: TMP_191 Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 4000000000000
Fields: 
Finance Type: raw balance
_balance_3(uint256) := TMP_191(uint256)
[i]Type for _balance

Name: _balance Function: balanceOfThis
Num: 5
Den: -1
Address: u
Norm: 18
LF: None
Value: 4000000000000
Fields: 
Finance Type: raw balance
RETURN _balance_2
TMP_192(uint8) := i_1(uint8)
[i]Type for TMP_192

Name: TMP_192 Function: balanceOfThis
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
i_2(uint8) = i_1 + 1
[i]Type for i

Name: i Function: balanceOfThis
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



getPricePerFullShare
TMP_193(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_193

Name: TMP_193 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = TMP_193 > 0
[i]Type for TMP_194

Name: TMP_194 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_195

Name: TMP_195 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_195', '1000000000000000000'] 
[i]Type for TMP_196

Name: TMP_196 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_197(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_197

Name: TMP_197 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_196', 'TMP_197'] 
[i]Type for TMP_198

Name: TMP_198 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN TMP_198
TMP_199(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_199

Name: TMP_199 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_199
TMP_193(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_193

Name: TMP_193 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_194(bool) = TMP_193 > 0
[i]Type for TMP_194

Name: TMP_194 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_195(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_195

Name: TMP_195 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_195', '1000000000000000000'] 
[i]Type for TMP_196

Name: TMP_196 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_197(uint256) = INTERNAL_CALL, ERC20.totalSupply()()
[i]Type for TMP_197

Name: TMP_197 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_196', 'TMP_197'] 
[i]Type for TMP_198

Name: TMP_198 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN TMP_198
TMP_199(uint256) = INTERNAL_CALL, Vault.balance()()
[i]Type for TMP_199

Name: TMP_199 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_199



withdrawFee
MAX_12(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
[i]Type for TMP_202

Name: TMP_202 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
MAX_13(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_12'])
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_30(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_29', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_202', '_amount_1'] 
[i]Type for TMP_203

Name: TMP_203 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_203', 'MAX_13'] 
[i]Type for TMP_204

Name: TMP_204 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN TMP_204
MAX_12(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_0'])
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_29(IManager) := ϕ(['manager_39', 'manager_0', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:manager_29(IManager), function:withdrawalProtectionFee, arguments:[]  
[i]Type for TMP_202

Name: TMP_202 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound fee ratio (t)
MAX_13(uint256) := ϕ(['MAX_11', 'MAX_13', 'MAX_3', 'MAX_9', 'MAX_12'])
[i]Type for MAX

Name: MAX Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
manager_30(IManager) := ϕ(['manager_39', 'manager_37', 'manager_33', 'manager_35', 'manager_24', 'manager_29', 'manager_6', 'manager_28', 'manager_12', 'manager_19', 'manager_30', 'manager_1', 'manager_26'])
[i]Type for manager

Name: manager Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_202', '_amount_1'] 
[i]Type for TMP_203

Name: TMP_203 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_203', 'MAX_13'] 
[i]Type for TMP_204

Name: TMP_204 Function: withdrawFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: updated compound fee ratio (t)
RETURN TMP_204
Function count: 59
Executing Group 7
[*] Tested 3 warnings for yAxis
Group 7 complete
Elapsed time: 12.252043596 seconds
Testing complete
